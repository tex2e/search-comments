" Can escape paths with spaces in OS X, Windows, and *nix
" doublequotes just for editor
"* The domain string is a suffix of the string"
"* The string is a host name (i.e., not an IP address)."
"**" a/**/b/**/c would match the following: a/b/x/y/z/c a/x/y/z/b/c a/b/x/b/x/c a/b/c To do this, take the rest of the pattern after the **, and see if it would match the file remainder.
", blockCommentEnd: "
", fromString(n.value, options), "
"/" Look at the end of the previous token to determine if the slash is actually division
"A Writable Stream that represents the child process's stdin.
"A request-path path-matches a given cookie-path if at least one of the following conditions holds:"
"Convert the cookie-domain to lower case."
"Deferred-Dispatched Events":  - The current event plugin system will traverse the list of injected plugins, in order, and extract events by collecting the plugin's return value of `extractEvents()`.
"Development" is defined as working from source - not packaged code.
"Either: The cookie's host-only-flag is true and the canonicalized request-host is identical to the cookie's domain.
"Hidden" options and subcmds are ones with the `hidden: true` attribute to exclude them from default help output.
"If delta-seconds is less than or equal to zero (0), let expiry-time be the earliest representable date and time."
"If the attribute-value failed to parse as a cookie date, ignore the cookie-av."
"If the cookie's http-only-flag is true, then exclude the cookie if the cookie-string is being generated for a "non-HTTP" API"
"If the cookie's secure-only-flag is true, then the request-uri's scheme must denote a "secure" protocol"
"If the unparsed-attributes string is empty, skip the rest of these steps."
"On-Demand-Dispatched Events":  - On-demand-dispatched events are not returned from `extractEvents`.
"Proprietary" Interface.
"The domain string and the string are identical.
"The request-uri's path path-matches the cookie's path."
"The user agent MUST use an algorithm equivalent to the following algorithm to compute the default-path of a cookie:"  Assumption: the path (and not query part or absolute uri) is passed in.
"Virtual elements" is an abstraction on top of the usual DOM API which understands the notion that comment nodes may be used to represent hierarchy (in addition to the DOM's natural hierarchy).
"actual" will be `true` or `false` whether the body is already a block statement.
"all" is not a device-specific media type.
"check" will be a function reporting appropriate problems depending on the other properties.
"child" events are for any and all children at all levels.
"clean" a getter/setter converted object into a plain object copy.
"default" command/ctrl key for platform, Command on Mac, Ctrl on other platforms
"entry" events are for direct entries in a specific dir.
"eslint-disable" disables rules after it.
"expected" will be `true` or `false` if the body should be a block statement or not, or `null` if it doesn't matter, depending on the rule options.
"foo":"http://blah" and "foo":"latest" are always presumed valid
"functions" enables reports for function nodes only
"name": intentionally not styling
"negative" y so we can replace sub with am later
"never" check properties
"nolint" is to suppress ArcanistPrivateKeyLinter errors
"o  The cookie-path and the request-path are identical."
"path" is a really common name, so "pathModule" is the collision escape hatch.
"push" and all the other navigation operations expect routes to be like this:
"resourcesPath" only exists in Atom.
"safe" mode corresponds to "global" if ecmaFeatures.globalReturn is true, otherwise "function"
"style" attribute might have changed.
"through" contains all references which definitions cannot be found.
"touch" every property so they are all tracked as dependencies for deep watching
"use strict" is *not* a directive prologue in these statements so is subject to the rule
' above to get type checking for the functions to be tested.
'--nodates' avoids appending dates to the file path line.
'--noprefix' omits the a/ and b/ prefixes from filenames.
'--others' means untracked files, and '--exclude-standard' excludes ignored files.
'--unified 0' gives us 0 lines of context around each change (we don't care about the context).
'/' is the top level itself
'123' (actor) is unreferenced and collected 'client:2' (viewer.newsFeed) is unreferenced and collected
'Consumes' ranges array (modifying it).
'No one's home right now, come back later'
'Project' the visible viewport to cover the area that is being scrolled into view (if we know enough to estimate it).
'Untracked' files are files that haven't been added to the repo, but haven't been explicitly git-ignored.
'Untracked' files are files that haven't been added to the repo, but haven't been explicitly hg-ignored.
'a' is enqueued twice
'all': all messages are cleared.
'build' (windows only)
'chunk' is an input chunk.
'file': The 'filePaths' option determines which files' messages to clear 'project': all 'project' scope messages are cleared.
'foo/bla/foo.js' does not match 'bba', but `bar.js` and `baz.js` do.
'init written successfully'
'json-parse-helpfulerror'
'msTransform' is correct, but the other prefixes should be capitalized
'no' - The view is not important for accessibility.
'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.
'nobody' typically doesn't have permission to write to /tmp even if it's never used, sh freaks out.
'python' should be set by now
'return' followed by a space and an identifier is very common.
'row' is a 3 element array of 3 component vectors
'shift-version': 'no-shift-version'
'split' removes the colon, but we want to underline the colon too.
'stretch': Scale width and height independently, This may change the aspect ratio of the src.
'touch' is the least permissive invalidation strategy: It will invalidate for changes that touch the marked region in any way.
'y' is "sticky" option in Mozilla
'y4vwv8m33hed9ety83jmv52f', Fallback api_key
'yes' - The view is important for accessibility.
( event )  dispatched jQuery.Event
( types, selector, fn )
( types-Object, data )
( types-Object, selector, data )
("Apple") nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
("Facebook") owns all right, title and interest, including all intellectual property and other proprietary rights, in and to the React Native CustomComponents software (the "Software").
(1986) Density Estimation.
(1992) Multivariate Density Estimation: Theory, Practice, and Visualization.
(2) Each feature's merged config.
(2) For writable targets (observables, or writable dependent observables), we throttle *writes* so the target cannot change value synchronously or faster than a certain rate
(2) If the LazyFileTreeNode for a path is re-created, this will still work.
(2) Recurse on each half.
(2) Shows the items that are added to it right away.
(A bit debatable in this case what ::isPathIgnored should return if the file doesn't exist.
(A line view might contain multiple lines when collapsed ranges are present.)
(All keys from `EventConstants.topLevelTypes`)  Note: Top level event types are a subset of the entire set of handler types (which include a broader set of "synthetic" events).
(All keys from event plugin `eventTypes` objects)
(Annex B.1.1 on Numeric Literals)
(As part of this: ensure existence of 'top' named anchor link (theoretically at doc's top).)
(At least, this functionality is not exposed in the libclang python bindings.) So we derive the location of a symbol using the symbol's 'spelling'.
(Atom looks for this.)
(Attribute names not specified use no namespace.)  DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
(BIT-MAX - (unsigned)val + 1) * -1  The astute observer, may think that this doesn't make sense for 8-bit numbers (really it isn't necessary for them).
(Concurs with S5.3 step 3)
(Currently all move have the same timeStamp, but later we should add some threshold for what is considered to be "moving").
(Duplicates occur because we add custom ignore patterns to the defaults as well, to allow unignoring default ignores)
(Even if this is the second active touch).
(Explicit aliases are only needed within a single component when it uses the same field multiple times, in order to differentiate these fields in the props).
(For example, RxJS will consider similar objects equal.)
(For example, only if you receive these callbacks after you had explicitly focused a node etc).
(For old IE.) Handles a propertychange event, sending a `change` event if the value of the active element has changed.
(For old IE.) Removes the event listeners from the currently-tracked element, if any exists.
(For old IE.) Replacement getter/setter for the `value` property that gets set on the active element.
(For old IE.) Starts tracking propertychange events on the passed-in element and override the value property so that we can distinguish user events from value changes in JS.
(Hack uses this as a marker.)
(Here, we expect the original child to stick around but test that no exception is thrown)
(Last child of the last child of the last child...) Or null, if none are found
(Less wasteful than consing up a hundred closures on every call.)
(MIT Licensed) https://github.com/chjj/marked
(Modern browsers have events that indicate IME taking place, but these are not widely supported or compatible enough yet to rely on.)
(MutationObserver does not help here.)
(Not child scopes though).
(Note that both the domain string and the string will have been canonicalized to lower case at this point)"
(Optional) size to scale the cropped image to.
(Optional) the resizing mode to use when scaling the image.
(Preferred mechanism is the require/define calls.)
(Previously, these function names were misleading because they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)
(Promise objects and Promise.all are very expensive operations in large numbers).
(Rendering will throw with a helpful message and as soon as the type is fixed, the key warnings will appear.)
(See diff summary of D2021498.) This line restricts this subscription to only return files.
(See the above note on `astralSubstitute` for more information.)
(Strictly speaking, unmounting won't cause a render but we still don't expect to be in a render call here.)
(That would be a valid example of a transform, of course.)
(The Firstname Lastname may not appear sometimes.) If `useShortName` is true, then the author portion will contain only the username.
(The Firstname Lastname may not appear sometimes.) The ChangeSetID will not be the full 40 digit hexadecimal number, but a prefix whose length is determined by CHANGE_SET_ID_PREFIX_LENGTH.
(This includes properties that mutate due to external factors.) mutationMethod: If non-null, used instead of the property or `setAttribute()` after initial render.
(This isn't necessary if the gadget's default location is at the top, but is if it was moved there.)
(This property can be omitted if there are no args.)  Note that both the args for the remote method, as well as the return type of the remote method, must be JSON-serializable.
(Though it doesn't quite work for the most negative value) Mainly: - invert all the bits - add one to the result  Of course, this doesn't quite work in Javascript.
(Truth: Nothing even uses the indices in this case, but let's make this describe the truth anyways).
(Used for performance optimization).
(Using `undefined` is not allowed by all browsers so we are careful to use `null`.)
(Usually, an undefined return value is an error in React).
(We do this here so we can pull in new versions of node-inspector without having to worry about what modifications we've made to the source.)
(We try 3 times because because Rx 3 and 4 have bugs with retrying shared observables that would give false negatives for this test if we only tried twice.)
(We're handling it above via the onDidError interface.)
(With old-style refs, it's impossible to get a ref to this div because Wrapper is the current owner when this function is called.)
(You can seed the arguments with an array of args, but this is only used internally.)
(a ruleConfigSet.ruleConfigs).
(bouncing/highlighting/unhighlighting).
(c) Steven Sanderson - http://knockoutjs.com/ License: MIT (http://www.opensource.org/licenses/mit-license.php)
(deleted by non-hg command, but still tracked)
(e.g. mismatched types, wrong number of arguments)
(https://github.com/atom/atom/issues/6627)
(https://github.com/eslint/eslint/issues/5992)
(i.e. if there was enough room already).
(it breaks older versions of IE)", W071: "This function has too many statements.
(it can always be set on a per-request basis or even using ajaxSetup) For same-domain requests, won't change header if already provided.
(no server-side mapping)
(numberActiveTouches) may not be totally accurate unless you are the responder.
(optional - defaults to parent prototype).
(protected) alternate constructor
(protected) clamp off excess high words
(protected) convert from radix string
(protected) convert to radix string
(protected) copy this to r
(protected) return x s.t.
(protected) set from string and radix
(protected) true if probably prime (HAC 4.24, Miller-Rabin)
(protected) true iff this is even
(public) convert to bigendian byte array
(public) gcd(this,a) (HAC 14.54)
(public) return number of set bits
(public) return string representation in given radix
(public) return the number of bits in "this"
(public) return value as byte
(public) return value as integer
(public) returns index of lowest 1-bit (or -1 if none)
(public) true iff nth bit is set
(re-)implement some things that are known busted or missing.
(see focus-related spec in AtomInput-spec.js)
(this array gets stored inside the closure, so it is only computed once)
** constant templates for mocks **
** dynamic mocks, cloned from templates and modified **
** swallows a segment, and continue.
** when dots are allowed.
**Always** check whether the `action` before reading the values.
**Reduce** builds up a single result from a list of values, aka `inject`, or `foldl`.
**`noConflict()` - (browser only) to reset global 'uuid' var**
**`parse()` - Parse a UUID into it's component bytes**
**`unparse()` - Convert UUID byte array (ala parse()) into a string**
**`v1()` - Generate time-based UUID**
**`v4()` - Generate random UUID** See https://github.com/broofa/node-uuid for API details
*always* use cmd on windows
+1 since we're humans and don't read lines numbers from zero
, additional arguments
, cb, thisArg, compareFn
-  NODE_DELETE provides configuration for deleting a node and the corresponding edge from a range.
-  RANGE_ADD provides configuration for adding a new edge to a range.
-  RANGE_DELETE provides configuration for deleting an edge from a range but doesn't delete the node.
-  REQUIRED_CHILDREN is used to append additional children (fragments or fields) to the mutation query.
- "indexArray" is an array of indexes in the "dominatedNodes" with the same positions as in the _nodeIndex.
- 'auto': The View can be the target of touch events.
- 'box-none': The View is never the target of touch events but it's subviews can be.
- 'none' (the default), drags do not dismiss the keyboard.
- 'none': The View is never the target of touch events.
- 'on-drag', the keyboard is dismissed when a drag begins.
- (Future use case): Layout calculations before and after DOM updates.
- (Future use case): Wrapping particular flushes of the `ReactWorker` queue to preserve the `scrollTop` (an automatic scroll aware DOM).
- A component created via React.createClass() - Has a single child subComponent - the return value from the .render() function.
- A configurable cache manager for persisting data between sessions.
- A configurable network layer for resolving queries/mutations.
- A configurable task scheduler to control when internal tasks are executed.
- A file or directory path that's a deep child of the root path.
- A literal except numbers.
- A primitive DOM component - which has many renderedChildren, each of which may have a name that is unique with respect to its siblings.
- Adds `false` paths to paths which are leaving from the loop.
- All previous 'project' scope messages are invalidated whenever projectMessages is populated.
- All remaining characters (including all printable ISO 8859-1 and WGL4 characters, Unicode control characters, etc.) have a column width of 1.
- An in-memory cache of fetched data.
- Attach handlers to the instrumented function.
- Automatically subscribe to data changes.
- Avoid unnecessary updates if data is unchanged.
- Called synchronously on `subscribe()`.
- Called whenever the results of the fragment change.
- Closed - No longer connected.
- Conditionals when the field is present.
- Consider building this on top of a `stopPropagation` model similar to `W3C` events.
- Consider caching this for the lifetime of the component, or possibly being able to share this cache between any `ScrollMap` view.
- Creates the next code path segment from `context.brokenForkContext`.
- DOM properties: `className`, `name`, `title`, etc.
- Deactivating events while rearranging the DOM, preventing blurs/focuses, while guaranteeing that afterwards, the event system is reactivated.
- Disposes all forking stack for `case` and `default`.
- Empty WorkingSet is essentially an empty filter - it accepts everything.
- Ensure that `onResponderTerminate` is called on touch cancels, whether or not `onResponderTerminationRequest` returns `true` or `false`.
- Event listeners: `onClick`, `onMouseDown`, etc.
- Fires after user input.
- Fires for collapsed selection.
- Flushing a queue of collected DOM mutations to the main UI thread after a reconciliation takes place in a worker thread.
- Forward these native events (with the associated top-level type used to trap it) to `EventPluginHub`, which in turn will ask plugins if they want to extract any synthetic events.
- Hangul Jamo medial vowels and final consonants (U+1160-U+11FF) have a column width of 0.
- If a node becomes the responder, it should convey visual feedback immediately to indicate so, either by highlighting or moving accordingly.
- If a view shouldn't "remain" the responder, any active touches should by default be considered "dead" and do not influence future negotiations or bubble paths.
- If aPath is a URL or a data URI, aPath is returned, unless aPath is a scheme-relative URL: Then the scheme of aRoot, if any, is prepended first.
- If aPath is absolute, the result is aPath.
- If all items are equal, returns previous array - If any items differ, returns new array
- If nothing is currently the responder, the "appropriate place" is the initiating event's `targetID`.
- If something *is* already the responder, the "appropriate place" is the first common ancestor of the event target and the current `responderInst`.
- If the last `SwitchCase` node is not a `default` part, creates a path to the `default` body.
- Implement the handlers on your component class in order to provide feedback to the user.
- Implement/integrate with customized constraint based layout system and keep track of which dimensions must be remeasured.
- Invoking any collected `componentDidUpdate` callbacks after rendering new content.
- It also allows to send the style only once through the bridge.
- It is *immutable* - It is created from a set of NuclideUris.
- Joining for example 'http://' and 'www.example.com' is also supported.
- Jumping to outline item locations works for new, unsaved files.
- Label consistency (no conflicts, break only to existing labels) is not enforced.
- Manipulate variables via methods on `this.props.relay`.
- May end in a trailing slash if it's a directory path.
- Naming the styles is a good way to add meaning to the low level components in the render function.
- Non-empty WorkingSet contains every file specified by the contained URIs or below.
- Non-spacing and enclosing combining characters (general category code Mn or Me in the Unicode database) have a column width of 0.
- Not allowed by options.
- On-demand-dispatched events are dispatched during the process of returning the deferred-dispatched events.
- Other C0/C1 control characters and DEL will lead to a return value of -1.
- Other format characters (general category code Cf in the Unicode database) and ZERO WIDTH SPACE (U+200B) have a column width of 0.
- Otherwise aPath is a path.
- Otherwise the two paths are joined with a slash.
- Previous 'file' scope messages are invalidated if and only if filePathToMessages contains their key as a path.
- Propagate the `route` via context (available on `this.props.relay`).
- Remember which deferred fragment/data pairs have been fetched.
- Removes unnecessary '.' parts.
- Report all the Use Strict Directives (in the other modes).
- Restores selection range.
- Return outside functions is allowed
- Run the code which triggers the handlers.
- SOFT HYPHEN (U+00AD) has a column width of 1.
- Scrolled views automatically become responder.
- Sets `true` paths to paths which go to the body.
- Some negotiation happens: See the timing diagram below.
- Stop a scroll mid-bounce at the top, continue pulling to have the outer view dismiss.
- Stop a scroll on the left edge, then turn that into an outer view's backswipe.
- TTY_OUTPUT set if the command should be run as if it were attached to a tty.
- Tapping anywhere that is not the focused input, while the keyboard is up (which should dismiss the keyboard).
- Text nodes cannot be assigned a React root ID.
- That input argument should contain a (string) "clientMutationId" property for the purposes of reconciling requests and responses (automatically added by the RelayGraphQLMutation API).
- The `EventPluginHub` then dispatches the events.
- The `EventPluginHub` will then process each event by annotating them with "dispatches", a sequence of listeners and IDs that care about that event.
- The body doesn't have any comments.
- The callback to be called on a text event.
- The earlier we find the match, the more likely it is to be what you're looking for.
- The exact `rootPath` in an exact or symlinked form.
- The function is not a callback of array methods (such as `.forEach()`) if `thisArg` is given.
- The location does not assign to a property.
- The location does not call its `bind`/`call`/`apply` method directly.
- The location is not on an ES2015 class.
- The location is not on an object literal.
- The more cases of the characters that match, the more likely it is to be what you want.
- The query should request "clientMutationId" as a subselection.
- The remote URIs are port-insensitive and the port part is stripped from when internal structures are built.
- The shallow dependencies each file on the dependency list has - Inverse shallow dependencies map
- The shorter the result, the closer the length is to what you searched for, so it's more likely.
- There may be a gap between a query response being processed and rendering the component that initiated the fetch.
- These deferred dispatches are accumulated/collected before they are returned, but processed at a later time by the `EventPluginHub` (hence the name deferred).
- These events that are returned from `extractEvents` are "deferred dispatched events".
- They should be avoided, and/or eventually be replaced with another abstraction that allows event plugins to perform multiple "rounds" of event extraction.
- They should not have side effects.
- To be the responder means, that touches are exclusively important to that responder view, and no other view.
- We capture/bubble `startShouldSetResponder`/`moveShouldSetResponder` to the "appropriate place".
- We normalize and de-duplicate events to account for browser quirks.
- When returned from `extractEvents`, deferred-dispatched events contain an "accumulation" of deferred dispatches.
- While touches are still occurring, the responder lock can be transferred to a new view, but only to increasingly "higher" views (meaning ancestors of the current responder).
- Without `renderFailure`, an error will render to null.
- Without `renderLoading`, the existing view will continue to render.
- WorkingSet aims to support queries for the hierarchical structures, such as TreeView.
- `ArrowFunctionExpression` - its parameters.
- `CatchClause` - variables of its exception.
- `ClassDeclaration`/`ClassExpression` - its class name.
- `DUMMY` -  Dummy data connection.
- `ETHERNET` - The Ethernet data connection.
- `FunctionDeclaration`/`FunctionExpression` - its function name and parameters.
- `ImportDeclaration` - variables of  its all specifiers.
- `ImportSpecifier`/`ImportDefaultSpecifier`/`ImportNamespaceSpecifier` - a variable.
- `MOBILE_DUN` - A DUN-specific Mobile data connection.
- `MOBILE_HIPRI` - A High Priority Mobile data connection.
- `MOBILE_MMS` - An MMS-specific Mobile data connection.
- `MOBILE_SUPL` -  A SUPL-specific Mobile data connection.
- `MOBILE` - The Mobile data connection.
- `NONE` - device is offline - `BLUETOOTH` - The Bluetooth data connection.
- `UNKNOWN` - Unknown data connection.
- `VPN` -  A virtual network using one or more native bearers.
- `VariableDeclarator` - variables.
- `WIMAX` -  The WiMAX data connection.
- `alertAction` : The "action" displayed beneath an actionable notification.
- `alertBody` : The message displayed in the notification alert.
- `black`, scroll indicator is black.
- `callCount`: number of times the method was called.
- `category`  : The category of this notification, required for actionable notifications (optional).
- `clobber`: The left `Array` is ignored.
- `controller.break()` - Skip all following segments.
- `controller.skip()` - Skip the following segments in this branch.
- `default` (the default), same as `black`.
- `diffCalls`: an array of calls describing the difference between the given `calls` and already fetched data.
- `filterCalls`: the subset of `calls` that are condition calls (`orderby`).
- `indexByIndex`: The result is achieved by recursively deep merging at each index.
- `localNotification` : Fired when a local notification is received.
- `measurements`: an object mapping names of profiled functions to profiling data including: - `aggregateTime`: total time spent in the method.
- `register`: Fired when the user registers for remote notifications.
- `totalTime`: the total time spent inside profiled Relay functions.
- `unrecognized`: one other process is running on the port ew expect the packager to be running.
- `userInfo`  : An optional object containing additional notification data.
- `userInfo` : An optional object containing additional notification data.
- `viewId`: `string` - A unique identifier for the view that can be used to later destroy the view.
- `visitFragment(fragment, state)`: Called for each fragment.
- `visitFragment(fragment, state)`: Returns the new value for the visited fragment, or `null` to remove it from the output.
- `visitQuery(fragment, state)`: Called for the top level query.
- `visitQuery(fragment, state)`: Returns the new value for the top-level query, or `null` to transform the entire query out of existence.
- `which` is the pressed key code, but a command combination is being used.
- `which` is the pressed key code, but no char is available.
- `white`, scroll indicator is white.
- allowed by options.
- and a `close` method that accepts the precomputation.
- animation: wait for animationend, remove class, then done if there's no explicit js callback.
- argsOrName: project name or full list of custom arguments to pass to the generator.
- argument size specifiers.
- bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or 'SourceMapConsumer.LEAST_UPPER_BOUND'.
- callbackOrButtons -- This optional argument should be either a single-argument function or an array of buttons.
- calledInEveryPaths: A flag of be called `super()` in all code paths.
- calledInSomePaths:  A flag of be called `super()` in some code paths.
- change React.podspec
- change ReactAndroid/gradle.properties
- characters: all characters, - words: first letter of each word - sentences: first letter of each sentence (default) - none: don't auto capitalize anything
- check that argument version matches branch e.g. 0.33.1 or 0.33.0-rc4
- check we are in release branch, e.g. 0.33-stable
- class (as className) - color - height - id - lang - max - media - method - min - name - style - target - type - width
- code (number) Presumably an error code.
- codePath:   The code path object of the constructor.
- codePath:   The code path of this constructor.
- column: The column number in the generated source, or null.
- column: The column number in the generated source.
- column: The column number in the original source, or null.
- column: The column number in the original source.
- currentTarget: Identifies the current target for the event, as the event traverses the navigation context tree.
- data is passed down via `scope`, which flows from a parent field down through intermediary fragments to the nearest child field.
- defaultValue: string -- the default value for the text field.
- descr (string) Description of the error.
- disposable: A Disposable which should be disposed when this function is no longer needed by the caller.
- doesn't exist inside a local function and after the border.
- dx/dy: Cumulative touch distance - not the same thing as sum of each touch distance.
- end (number) End column.
- endline (number) End line.
- file: The generated file this source map is associated with.
- format (string) - either 'png' or 'jpeg'.
- has any references which refers to an unsafe variable.
- hasExtends: A flag which shows whether own class has a valid `extends` part.
- hasExtends: A flag which shows whether the owner class has a valid `extends` part.
- headers: required header names (def: date or x-date) - algorithms: algorithms to support (default: all).
- invalidNodes: The array of invalid ThisExpression and Super nodes.
- line (number) Start line.
- line: The line number in the original source, or null.
- line: The line number in the original source.
- listen() is called indicating that all initial Breakpoints have been set and debugging may commence.
- located preceded by the variable (except in initializers).
- locked-closed, meaning that the drawer will stay closed and not respond to gestures.
- locked-open, meaning that the drawer will stay opened and not respond to gestures.
- map: A source map definition.
- mappings: A string of base64 VLQs which contain the actual mappings.
- message: string -- An optional message that appears above the text input.
- meta - A flag which shows there are one or more MethProperty.
- name: An optional original token name for this mapping.
- name: The original identifier, or null.
- names: An array of identifiers which can be referenced by individual mappings.
- names: An array of identifiers which can be referrenced by individual mappings.
- no css transition: done if there's no explicit js callback.
- no css transition: done now if there's no explicit js callback.
- original: An object with the original line and column positions.
- others - always an empty array.
- parse(code) -- returns an AST of the given JavaScript code.
- quality (number) - the quality when using jpeg.
- referring to a global environment variable (there're no identifiers).
- referring to an undefined variable.
- runAfterInteractions(): run code later, without delaying active animations.
- scope:      The scope of own class.
- scope:      The scope of the owner class.
- sections: A list of section definitions.
- setImmediate/setTimeout(): run code later, note this may delay animations.
- source: The original source file (relative to the sourceRoot).
- sourceRoot: A root for all relative URLs in this source map.
- sourceRoot: An optional root for all URLs in this source map.
- sourceRoot: Optional.
- sources: An array of URLs to the original source files.
- sourcesContent: Optional.
- start (number) Start column.
- strict: should enforce latest spec parsing (default: false).
- super - A flag which shows there are one or more Super.
- there is/isn't a space between given tokens.
- title: string -- The dialog's title.
- type: string -- This configures the text input.
- upper:      Information of the upper constructor.
- x0/y0: Centroid location (non-cumulative) at the time of becoming responder.
-- For multitouch: Usually a translate-z will choose to "remain" responder after one out of many touches ended.
--- "babel.js" is the wrapper around Babel used by Atom.
--- Ignores other things.
--- Welcome to debugging React --- This error was thrown as a convenience so that you can use this stack to find the callsite that caused this warning to fire.
---- ko.templateSources.anonymousTemplate ----- Anonymous templates are normally saved/retrieved as DOM nodes through "nodes".
---- ko.templateSources.domElement -----
----- FromFlowToTypechecks -----
----- Tracking which TypeVariables are in scope -----
-------- Generating Android Artifacts with JavaDoc Java -version outputs to stderr 0_o
----------------- Abstract functions that must be implemented by concrete resolvers
----------------- Abstract functions that should be implemented by concrete git resolvers
----------------- Override the checkout function to work with the local copy
----------------- Plugin Resolver is always considered potentially cacheable The "resolve" method decides whether to use cached or fetch new version.
--------------------- Available options: - mode: force final mode of dst (defaults to null) - copyMode: copy mode of src to dst, only if mode is not specified (defaults to true)
--nodedir was specified.
-1 for the replaced tab
-e: include all processes -o pid,comm: custom format the output to be two columns(pid and command name)
.*', EXAMPLES_PATH + '
...In the case of Object, if the left.value and state.tokens.curr.value are not equal, then safely assume that this not "new Object()"
...and finally use the default registry
...and otherwise set as attributes
...and runs the setState callback, which enqueues the log for asap-1.2.
...but is invisible to the component
...but, if used, it needs a line break
...except when executing function values
...intermediate processing is necessary
...or the next service...
...or the previous service...
...or when it's already visible and we hear a REFRESH_TASKS action.
...or wrap around to the very bottom
...or wrap around to the very top
...otherwise use results directly
...until we go too far.
...when the toolbar becomes visible
...which calls asap and enqueues a second update...
...which runs and enqueues the asap-2 log in its didUpdate...
...which we take until the process exits.
.js"), getFixturePath("glob-util", "one-js-file", "
.nud  Null denotation .fud  First null denotation .led  Left denotation lbp  Left binding power rbp  Right binding power They are elements of the parsing method called Top Down Operator Precedence.
.removeClass('zoomInDown')
/: Once the environment supports Proxies, we shoulds switch to them (so that we're not trampling on the component's namespace).
/Global_Objects/Math/imul
/blob/master/tests/tests.js
/deps/npm same test as above but make sure additional directory entries don't cause an issue
/lib/node_modules/npm or .../node_modules/npm depending on the patform
0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
0 is dummy port for v0.6
0 results yields missing 'property' member
0.x.y-pre versions are not published yet and cannot be installed.
1 - First mock all functions imported by the module under test
1 css pixel for splitter border.
1 minute CPU average.
1) If we are running in OS X, use `/usr/libexec/path_helper -s` to get the correct PATH and REPLACE the PATH.
1-based entry in the history stack.
1-character punctuators.
1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.
1/viewScale is 1:1 in terms of pixels, so allow zooming to 10x of native size
10MB is a very reasonable upper bound.
150ms is empirically long enough to let the stack clear from this blur event and for the click event to trigger.
16 combinations + 1 for severity only
2 - Do an uncachedRequire of the module to test Note the 'import typeof * as ...
2 for the banner borders
2 is the directory in which to run `apm test --one`.
2 lines were added in the middle and one at the end.
2 lines were removed in the middle and last new-line replaced.
2) If step 1 failed or we are not running in OS X, APPEND commonBinaryPaths to current PATH.
2) Other module's customization to Error.prepareStackTrace, no matter before or after the hook is added, will still work as expected.
2-character punctuators.
2009  All rights reserved.
21 isn't widely supported and 22 does the same thing
21.1.5.1 CreateStringIterator Abstract Operation
22.1.5.1 CreateArrayIterator Abstract Operation
23.1.3.1 Clears the map from all keys and values.
23.1.3.11 Returns an iterator over the values pairs in the collection.
23.1.3.3 Delete a key/value from the collection.
23.1.3.4 Returns an iterator over the key/value pairs (in the form of an Array) in the collection.
23.1.3.6 Gets a value associated with a key in the collection.
23.1.3.7 Check if a key exists in the collection.
23.1.3.8 Returns an iterator over the keys in the collection.
23.1.3.9 Adds a key/value pair to the collection.
23.2.3.1  If it doesn't already exist in the collection a `value` is added.
23.2.3.4  Deletes a `value` from the collection if it exists.
23.2.3.6  Iterate over the collection calling `callback` with (value, value, set).
23.2.3.7  Iterate over the collection calling `callback` with (value, value, set).
23.2.3.7  Returns an iterator over the colleciton of values.
26 - 51: abcdefghijklmnopqrstuvwxyz
2: there were intersections, and the first and last segments should be rejoined.
2D Value for driving 2D animations, such as pan gestures.
2D value class for driving 2D animations, such as pan gestures.
3 (expression literal)
3 - Perform your test
3 The ArrayBuffer Type
3 digits are only allowed when string starts with 0, 1, 2, 3
3-character punctuators.
360 is expressed as 0
4 - Reset the require cache so your mocks don't get used for other tests.
4 The ArrayBufferView Type
4-character punctuator.
404 responses aren't currently JSON.
4x4 matrix determinant.
5 The Typed Array View Types
5 seconds is enough for the restart.
6 The DataView View Type
7.3 If the expected value is a RegExp object, the actual value is equivalent if it is also a RegExp object with the same source and properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
7.4.7 createIterResultObject(value, done)
8 hours: heuristic for "current work day".
8/2/2015 in America/Los_Angeles
9 A B C D + whitespace characters from unicode, category Zs
900 day session cookie
@ReactInputSelection: React input selection module.
@TODO Handling all encodings inside a single object makes it very difficult to reason about this code, so it should be split up in the future.
@TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code points as used by CESU-8.
@abstract touchableGetHighlightDelayMS: function
@abstract touchableGetPressRectOffset: function
@abstract touchableHandleActivePressIn: function,
@abstract touchableHandleActivePressOut: function
@abstract touchableHandleLongPress: function
@abstract touchableHandlePress: function
@author Alberto Rodriguez
@author Aliaksei Shytkin
@author Borislav Zhivkov
@author Brandon Mills
@author Burak Yigit Kaya
@author Burak Yigit Kaya aka BYK
@author Christian Schuller
@author Christian Schulz
@author Dieter Oberkofler
@author Erik Arvidsson
@author George Zahariev
@author Gopal Venkatesan
@author Gyandeep Singh
@author Ian Christian Myers
@author Ian Christian Myers and Michael Paulukonis
@author Ian VanSchooten
@author James Allardice
@author James Allardice, Michael Paulukonis
@author Jamund Ferguson
@author Joel Feenstra
@author Jonathan Kingston
@author Jonathan Rajavuori
@author Keith Cirkel (http://keithcirkel.co.uk)
@author Kenneth Williams
@author Kevin Partington
@author Marcin Kumorek
@author Mark Macdonald
@author Mathias Schreck
@author Michael Ficarra
@author Michael Mclaughlin
@author Patrick Brosset
@author Rajendra Patil
@author Raphael Pigulla
@author Ronald Pijnacker
@author Seth McLaughlin
@author Simen Bekkhus
@author Sindre Sorhus
@author Toru Nagashima
@author Vignesh Anand
@author Vignesh Anand aka vegetableman
@author Vignesh Anand.
@author Vincent Lemeunier
@author Vitor Balocco
@author Wil Moore III
@class ReactNativeReconcileTransaction
@class ReactReconcileTransaction
@class ReactShallowRenderer
@class ReactTestUtils
@constructor BoundingDimensions
@constructor EventPropagators
@constructor FIXME: make SuggestBox work for multiple documents.
@deprecated  Method renamed to commitUpdate
@deprecated  Used temporarily by GraphQLStore, but all updates to this object are now handled through a `RelayRecordStore` instance.
@description A collection of general utility functions..
@description Core operations on curve 25519 required for the higher level modules.
@description Digital signature scheme based on Curve25519 (Ed25519 or EdDSA).
@description EC Diffie-Hellman (ECDH) based on Curve25519 and digital signatures (EdDSA) based on Ed25519.
@description EC Diffie-Hellman operations on Curve25519.
@description Legacy compatibility module for Michele Bini's previous curve255.js.
@emails oncall+jsinfra
@exports jodid25519 Curve 25519-based cryptography collection.
@exports jodid25519/core Core operations on curve 25519 required for the higher level modules.
@exports jodid25519/curve255 Legacy compatibility module for Michele Bini's previous curve255.js.
@exports jodid25519/dh EC Diffie-Hellman operations on Curve25519.
@exports jodid25519/eddsa Digital signature scheme based on Curve25519 (Ed25519 or EdDSA).
@exports jodid25519/utils A collection of general utility functions..
@fileOverview A collection of general utility functions..
@fileOverview Core operations on curve 25519 required for the higher level modules.
@fileOverview Digital signature scheme based on Curve25519 (Ed25519 or EdDSA).
@fileOverview EC Diffie-Hellman operations on Curve25519.
@fileoverview "table reporter.
@fileoverview A class of identifiers generator for code path segments.
@fileoverview A class of the code path analyzer.
@fileoverview A class of the code path segment.
@fileoverview A class of the code path.
@fileoverview A class to manage state of generating a code path.
@fileoverview A class to operate forking.
@fileoverview A rule to control the style of variable initializations.
@fileoverview A rule to control the use of single variable declarations.
@fileoverview A rule to disallow `this` keywords outside of classes or class-like objects.
@fileoverview A rule to disallow duplicate name in class members.
@fileoverview A rule to disallow or enforce spaces inside of single line blocks.
@fileoverview A rule to disallow the type conversions with shorter notations.
@fileoverview A rule to disallow unnecessary `.call()` and `.apply()`.
@fileoverview A rule to disallow using `this`/`super` before `super()`.
@fileoverview A rule to ensure blank lines within blocks.
@fileoverview A rule to ensure consistent quotes used in jsx syntax.
@fileoverview A rule to ensure whitespace before blocks.
@fileoverview A rule to set the maximum depth block can be nested in a function.
@fileoverview A rule to set the maximum number of statements in a function.
@fileoverview A rule to suggest using arrow functions as callbacks.
@fileoverview A rule to suggest using of const declaration for variables that are never reassigned after declared.
@fileoverview A rule to suggest using of the spread operator instead of `.apply()`.
@fileoverview A rule to suggest using template literals instead of string concatenation.
@fileoverview A rule to verify `super()` callings in constructor.
@fileoverview A shared list of ES3 keywords.
@fileoverview Abstraction of JavaScript source code.
@fileoverview An object that caches and applies source code fixes.
@fileoverview An object that creates fix commands for rules.
@fileoverview Check, that file is ended with newline, and there are no multiple empty lines at the end.
@fileoverview Checks for unreachable code due to return, throws, break, and continue.
@fileoverview Common utils for AST.
@fileoverview Config file operations.
@fileoverview Config initialization wizard.
@fileoverview Converts YAML file into JSON.
@fileoverview Counts the cyclomatic complexity of each function of the script.
@fileoverview Default CLIEngineOptions.
@fileoverview Defines a storage for rules.
@fileoverview Defines environment settings and globals.
@fileoverview Defining the hashing function in one place.
@fileoverview Definitions for ECMAScript 6.
@fileoverview Disallow parenthesesisng higher precedence subexpressions.
@fileoverview Disallow parenthesising higher precedence subexpressions.
@fileoverview Disallow reassignment of function parameters.
@fileoverview Disallow trailing spaces at the end of lines.
@fileoverview Disallow use of multiple spaces.
@fileoverview Disallows multiple blank lines.
@fileoverview Disallows or enforces spaces inside computed properties.
@fileoverview Disallows or enforces spaces inside of array brackets.
@fileoverview Disallows or enforces spaces inside of brackets.
@fileoverview Disallows or enforces spaces inside of object literals.
@fileoverview Disallows or enforces spaces inside of parentheses.
@fileoverview Enforce return after a callback.
@fileoverview Enforces empty lines around comments.
@fileoverview Enforces or disallows inline comments.
@fileoverview Ensure handling of errors when we know they exist.
@fileoverview Expose out ESLint and CLI to require.
@fileoverview Helper to locate and load configuration files.
@fileoverview Helpers to debug for code path analysis.
@fileoverview Helpers to test EventGenerator interface.
@fileoverview Main CLI object.
@fileoverview Main CLI that is run via the eslint command.
@fileoverview Main ESLint object.
@fileoverview Module for loading rules from files and directories.
@fileoverview Object to handle access and retrieval of tokens.
@fileoverview Options configuration for optionator.
@fileoverview Require file to end with single newline.
@fileoverview Restrict usage of duplicate imports.
@fileoverview Restrict usage of specified globals.
@fileoverview Restrict usage of specified node imports.
@fileoverview Restrict usage of specified node modules.
@fileoverview Rule that warns when identifier names are shorter or longer than the values provided in configuration.
@fileoverview Rule that warns when identifier names that are blacklisted in the configuration are used.
@fileoverview Rule to check for implicit global variables and functions.
@fileoverview Rule to check for jsdoc presence.
@fileoverview Rule to check for max length on a line.
@fileoverview Rule to check for the usage of var.
@fileoverview Rule to check the spacing around the * in generator functions.
@fileoverview Rule to check the spacing around the * in yield* expressions.
@fileoverview Rule to control usage of strict mode directives.
@fileoverview Rule to define spacing before/after arrow function's arrow.
@fileoverview Rule to disallow a duplicate case label.
@fileoverview Rule to disallow empty functions.
@fileoverview Rule to disallow unused labels.
@fileoverview Rule to disallow use of void operator.
@fileoverview Rule to enforce a maximum number of nested callbacks.
@fileoverview Rule to enforce a single linebreak style.
@fileoverview Rule to enforce concise object methods and properties.
@fileoverview Rule to enforce declarations in program or function body root.
@fileoverview Rule to enforce placing object properties on separate lines.
@fileoverview Rule to enforce spacing before and after keywords.
@fileoverview Rule to enforce var declarations are only at the top of a function.
@fileoverview Rule to flag adding properties to native object's prototypes.
@fileoverview Rule to flag comparison where left part is the same as the right part.
@fileoverview Rule to flag comparisons to null without a type-checking operator.
@fileoverview Rule to flag fall-through cases in switch statements.
@fileoverview Rule to flag missing semicolons.
@fileoverview Rule to flag non-quoted property names in object literals.
@fileoverview Rule to flag octal escape sequences in string literals.
@fileoverview Rule to flag references to the undefined variable.
@fileoverview Rule to flag references to undeclared variables.
@fileoverview Rule to flag the generator functions that does not have yield.
@fileoverview Rule to flag the use of redundant constructors in classes.
@fileoverview Rule to flag trailing underscores in variable declarations.
@fileoverview Rule to flag use of arguments.callee and arguments.caller.
@fileoverview Rule to flag use of duplicate keys in an object.
@fileoverview Rule to flag use of function declaration identifiers as variables.
@fileoverview Rule to flag use of ternary operators.
@fileoverview Rule to flag use of unary increment and decrement operators.
@fileoverview Rule to flag when the same variable is declared more then once.
@fileoverview Rule to forbid control charactes from regular expressions.
@fileoverview Rule to forbid or enforce dangling commas.
@fileoverview Rule to require braces in arrow function body.
@fileoverview Rule to require parens in arrow function arguments.
@fileoverview Rule to restrict what can be thrown as an exception.
@fileoverview Rule to spot scenarios where a newline looks like it is ending a statement, but is not.
@fileoverview Rule to validate spacing before function paren.
@fileoverview Rule to warn about using dot notation instead of square bracket notation when possible.
@fileoverview Rule to warn when a function expression does not have a name.
@fileoverview Rule which modifies AST.
@fileoverview Specify the maximum number of statements allowed per line.
@fileoverview Test enforcement of lines around comments.
@fileoverview Test enforcement of no inline comments rule.
@fileoverview Tests for "table" reporter.
@fileoverview Tests for CLIEngine.
@fileoverview Tests for CodePath.
@fileoverview Tests for CodePathAnalyzer.
@fileoverview Tests for CommentEventGenerator.
@fileoverview Tests for FileFinder class.
@fileoverview Tests for HTML reporter.
@fileoverview Tests for IgnoredPaths object.
@fileoverview Tests for JSLint XML reporter.
@fileoverview Tests for JSON reporter.
@fileoverview Tests for NodeEventGenerator.
@fileoverview Tests for RuleContext object.
@fileoverview Tests for SourceCodeFixer.
@fileoverview Tests for TokenStore class.
@fileoverview Tests for VisualStudio format.
@fileoverview Tests for api.
@fileoverview Tests for array-callback-return rule.
@fileoverview Tests for ast utils.
@fileoverview Tests for block-spacing rule.
@fileoverview Tests for callback return rule.
@fileoverview Tests for camelcase rule.
@fileoverview Tests for checkstyle reporter.
@fileoverview Tests for cli.
@fileoverview Tests for comma-dangle rule.
@fileoverview Tests for complexity rule.
@fileoverview Tests for config object.
@fileoverview Tests for config validator.
@fileoverview Tests for configInitializer.
@fileoverview Tests for consistent-return rule.
@fileoverview Tests for consistent-this rule.
@fileoverview Tests for constructor-super rule.
@fileoverview Tests for curly rule.
@fileoverview Tests for dot-location.
@fileoverview Tests for dot-notation rule.
@fileoverview Tests for eqeqeq rule.
@fileoverview Tests for eslint object.
@fileoverview Tests for func-names rule.
@fileoverview Tests for func-style rule.
@fileoverview Tests for generator-star-spacing rule.
@fileoverview Tests for guard-for-in rule.
@fileoverview Tests for id-blacklist rule.
@fileoverview Tests for id-length rule.
@fileoverview Tests for jUnit Formatter.
@fileoverview Tests for jsx-quotes rule.
@fileoverview Tests for key-spacing rule.
@fileoverview Tests for keyword-spacing rule.
@fileoverview Tests for max-depth.
@fileoverview Tests for max-len rule.
@fileoverview Tests for max-nested-callbacks rule.
@fileoverview Tests for max-params rule.
@fileoverview Tests for max-statements rule.
@fileoverview Tests for max-statements-per-line rule.
@fileoverview Tests for missing-err rule.
@fileoverview Tests for new-cap rule.
@fileoverview Tests for new-parens rule.
@fileoverview Tests for newline-after-var rule.
@fileoverview Tests for newline-per-chained-call rule.
@fileoverview Tests for no-alert rule.
@fileoverview Tests for no-bitwise rule.
@fileoverview Tests for no-caller rule.
@fileoverview Tests for no-case-declarations rule.
@fileoverview Tests for no-catch-shadow rule.
@fileoverview Tests for no-class-assign rule.
@fileoverview Tests for no-cond-assign rule.
@fileoverview Tests for no-confusing-arrow rule.
@fileoverview Tests for no-console rule.
@fileoverview Tests for no-const-assign rule.
@fileoverview Tests for no-constant-condition rule.
@fileoverview Tests for no-continue rule.
@fileoverview Tests for no-control-regex rule.
@fileoverview Tests for no-debugger rule.
@fileoverview Tests for no-delete-var rule.
@fileoverview Tests for no-div-regex rule.
@fileoverview Tests for no-dupe-class-members rule.
@fileoverview Tests for no-dupe-keys rule.
@fileoverview Tests for no-duplicate-case rule.
@fileoverview Tests for no-duplicate-imports.
@fileoverview Tests for no-else-return rule.
@fileoverview Tests for no-empty rule.
@fileoverview Tests for no-empty-class rule.
@fileoverview Tests for no-empty-function rule.
@fileoverview Tests for no-empty-pattern rule.
@fileoverview Tests for no-eq-null rule.
@fileoverview Tests for no-eval rule.
@fileoverview Tests for no-ex-assign rule.
@fileoverview Tests for no-extend-native rule.
@fileoverview Tests for no-extra-boolean-cast rule.
@fileoverview Tests for no-extra-label rule.
@fileoverview Tests for no-extra-semi rule.
@fileoverview Tests for no-fallthrough rule.
@fileoverview Tests for no-floating-decimal rule.
@fileoverview Tests for no-func-assign.
@fileoverview Tests for no-implicit-coercion rule.
@fileoverview Tests for no-implicit-globals rule.
@fileoverview Tests for no-implied-eval rule.
@fileoverview Tests for no-inner-declarations rule.
@fileoverview Tests for no-invalid-this rule.
@fileoverview Tests for no-irregular-whitespace rule.
@fileoverview Tests for no-iterator rule.
@fileoverview Tests for no-label-var rule.
@fileoverview Tests for no-lone-blocks rule.
@fileoverview Tests for no-lonely-if rule.
@fileoverview Tests for no-loop-func rule.
@fileoverview Tests for no-magic-numbers rule.
@fileoverview Tests for no-multi-str rule.
@fileoverview Tests for no-native-reassign rule.
@fileoverview Tests for no-negated-condition rule.
@fileoverview Tests for no-new rule.
@fileoverview Tests for no-new-func rule.
@fileoverview Tests for no-new-require rule.
@fileoverview Tests for no-new-wrappers rule.
@fileoverview Tests for no-obj-calls rule.
@fileoverview Tests for no-octal rule.
@fileoverview Tests for no-octal-escape rule.
@fileoverview Tests for no-plusplus.
@fileoverview Tests for no-process-env rule.
@fileoverview Tests for no-proto rule.
@fileoverview Tests for no-redeclare rule.
@fileoverview Tests for no-restricted-globals.
@fileoverview Tests for no-restricted-imports.
@fileoverview Tests for no-restricted-modules.
@fileoverview Tests for no-return-assign.
@fileoverview Tests for no-script-url rule.
@fileoverview Tests for no-self-assign rule.
@fileoverview Tests for no-self-compare rule.
@fileoverview Tests for no-sequences rule.
@fileoverview Tests for no-shadow rule.
@fileoverview Tests for no-spaced-func rule.
@fileoverview Tests for no-sync.
@fileoverview Tests for no-ternary.
@fileoverview Tests for no-this-before-super rule.
@fileoverview Tests for no-throw-literal rule.
@fileoverview Tests for no-undef rule.
@fileoverview Tests for no-undefined rule.
@fileoverview Tests for no-unexpected-multiline rule.
@fileoverview Tests for no-unmodified-loop-condition rule.
@fileoverview Tests for no-unneeded-ternary rule.
@fileoverview Tests for no-unreachable rule.
@fileoverview Tests for no-unused-expressions rule.
@fileoverview Tests for no-unused-labels rule.
@fileoverview Tests for no-unused-vars rule.
@fileoverview Tests for no-use-before-define rule.
@fileoverview Tests for no-useless-call rule.
@fileoverview Tests for no-useless-computed-key rule.
@fileoverview Tests for no-useless-constructor rule.
@fileoverview Tests for no-var rule.
@fileoverview Tests for no-warning-comments rule.
@fileoverview Tests for no-with rule.
@fileoverview Tests for one-true-brace rule.
@fileoverview Tests for one-var-declaration-per-line rule.
@fileoverview Tests for one-var.
@fileoverview Tests for operator-assignment rule.
@fileoverview Tests for options.
@fileoverview Tests for padded-blocks rule.
@fileoverview Tests for prefer-arrow-callback rule.
@fileoverview Tests for prefer-const rule.
@fileoverview Tests for prefer-reflect rule.
@fileoverview Tests for prefer-rest-params rule.
@fileoverview Tests for prefer-spread rule.
@fileoverview Tests for prefer-template rule.
@fileoverview Tests for quote-props rule.
@fileoverview Tests for quotes rule.
@fileoverview Tests for radix rule.
@fileoverview Tests for regex-spaces rule.
@fileoverview Tests for rule fixer.
@fileoverview Tests for rules.
@fileoverview Tests for semi rule.
@fileoverview Tests for semi-spacing.
@fileoverview Tests for sort-imports rule.
@fileoverview Tests for sort-vars rule.
@fileoverview Tests for source-code-util.
@fileoverview Tests for space-before-block rule.
@fileoverview Tests for space-before-function-paren.
@fileoverview Tests for strict rule.
@fileoverview Tests for template-curly-spacing rule.
@fileoverview Tests for the no-mixed-requires rule.
@fileoverview Tests for undefined rule.
@fileoverview Tests for unix-style formatter.
@fileoverview Tests for use-isnan rule.
@fileoverview Tests for vars-on-top rule.
@fileoverview Tests for wrap-iife rule.
@fileoverview Tests for wrap-regex rule.
@fileoverview Tests for yield-star-spacing rule.
@fileoverview Tests for yoda rule.
@fileoverview The event generator for AST nodes.
@fileoverview The event generator for comments.
@fileoverview This file contains small testing framework along with the test suite for the frontend.
@fileoverview This option sets a specific tab width for your code  This rule has been ported and modified from nodeca.
@fileoverview This rule shoud require or disallow spaces before or after unary operations.
@fileoverview Tools for obtaining SourceCode objects.
@fileoverview Tracks performance of individual rules.
@fileoverview Used for creating a suggested configuration based on project code.
@fileoverview Util class to find config files.
@fileoverview Utilities for working with globs and the filesystem.
@fileoverview Utility for executing npm commands.
@fileoverview Validates configs.
@fileoverview tests for checking multiple spaces.
@fileoverview tests to validate spacing before and after comma.
@fileoverview unix-style formatter.
@flowfixme animates layout update as one batch (step3: uncomment)
@flowfixme: shouldn't need `: any`
@getSelection: Gets the selection bounds of a focused textarea, input or contentEditable node.
@instance: Retrieves the backing instance.
@internal  A map from developer-friendly operation names ("append", "prepend", "remove") to internal book-keeping keys used to store metadata on records ("__rangeOperationAppend__" etc).
@internal  A range represents an ordered set of edges.
@internal  Abstract base class for mutations and subscriptions.
@internal  Applies the results of an update operation (mutation/subscription) to the store.
@internal  Base class for traversing a Relay Query.
@internal  Builds a static node representation using a supplied query or fragment builder.
@internal  Compares two query root nodes and returns true if the nodes fetched by `thisRoot` would be a superset of the nodes fetched by `thatRoot`.
@internal  Computes the difference between the data requested in `root` and the data available in `store`.
@internal  Constructs query fragments that are sent with mutations, which should ensure that any records changed as a result of mutations are brought up-to-date.
@internal  Converts GraphQL nodes to RelayQuery nodes.
@internal  Converts a RelayQuery.Node into a plain object representation.
@internal  Coordinates execution of concurrent mutations, including application and rollback of optimistic payloads and enqueueing mutations with the same collision key.
@internal  Data structure conforming to the `PendingTransaction` interface specified by `RelayMutationQueue`.
@internal  Defines logic relevant to the informal "Connection" GraphQL interface.
@internal  Defines logic relevant to the informal "Node" GraphQL interface.
@internal  Determine if the given fragment's type is compatible with the given record type.
@internal  Enqueues one or more callbacks that each represent a synchronous unit of work that can be scheduled to be executed at a later time.
@internal  Factory methods for constructing errors in Relay.
@internal  Given a record-like object, infers fields that could be used to fetch them.
@internal  Helper for checking if this is a React Component created with React.Component or React.createClass().
@internal  Helper for writing the result of one or more queries/operations into the store, updating tracked queries, and recording changed record IDs.
@internal  Helper functions to print mutation queries for debugging purposes.
@internal  Helper methods for constructing concrete query objects.
@internal  Instances of these are made available via `RelayNetworkLayer.sendMutation`.
@internal  Instances of these are made available via `RelayNetworkLayer.sendQueries`.
@internal  Iterates over the identifying arguments in the supplied root call.
@internal  Low-level API for modeling a GraphQL mutation.
@internal  Provides methods to track the number of references to registered records and remove un-referenced records from Relay's cache.
@internal  Queries in Relay are represented as trees.
@internal  Records the client ID and error status of mutations as well as maintaining a mapping of optimistic client IDs to server IDs.
@internal  Represents a GraphQL mutation.
@internal  Represents a GraphQL subscription.
@internal  Represents a node that will eventually become a "ref query".
@internal  Represents the path (root plus fields) within a query that fetched a particular node.
@internal  Resolves data from fragment pointers.
@internal  Retrieves data for queries or fragments from disk into `cachedRecords`.
@internal  Retrieves data from the `RelayStore`.
@internal  Returns a fragment "resolver" - a subscription to the results of a fragment and a means to access the latest results.
@internal  Sanitizes a stringified GraphQL field (including any calls and their values) to produce a valid alias.
@internal  Serializes a query "call" (a legacy combination of field and argument value).
@internal  Sets/clears the query tracker.
@internal  These are types shared across multiple files within Relay internals.
@internal  Tracks pending (in-flight) queries.
@internal  Transforms a query and "tree" payload into a GraphMode payload.
@internal  Traverses a query and data in the record store to determine if there are additional nodes that needs to be read from disk cache.
@internal  Traverses a query and data in the record store to determine whether we have enough data to satisfy the query.
@internal  Traverses a query and payload in parallel, writing the results into the store.
@internal  Types representing the transformed output of Relay.QL queries.
@internal  Wraps access to query fields.
@internal  Wraps access to query fragments.
@internal  Wraps access to query root nodes.
@internal  Wraps the data caches and associated metadata tracking objects used by GraphQLStore/RelayStore.
@internal  `RelayNetworkLayer` provides a method to inject custom network behavior.
@internal  `RelayQueryTransform` is a `RelayQueryVisitor` subclass that simplifies the process of traversing, filtering, or transforming a Relay Query.
@internal  `RelayRecordStore` is the central repository for all data fetched by the client.
@internal  `RelayRecordWriter` is the helper module to write data into RelayRecordStore.
@internal  `filterRelayQuery` filters query nodes for which `callback` returns false.
@internal  `flattenRelayQuery(query)` returns a clone of `query` with fields inside of fragments recursively flattened into the nearest ancestor field.
@internal  `getRelayQueries` retrieves all queries for a component given a route.
@internal  `intersectRelayQuery(subjectNode, patternNode)` returns a node with fields in `subjectNode` that also exist in `patternNode`.
@internal  `printRelayOSSQuery(query)` returns a string representation of the query.
@internal  `subtractRelayQuery(minuend, subtrahend)` returns a new query that matches the structure of `minuend`, minus any fields which also occur in `subtrahend`.
@internal  `validateRelayReadQuery` is a `__DEV__`-only validator that checks that a query used to read data from `RelayStore` is well-formed.
@lends ReactTestUtils
@lends Touchable.prototype
@license Copyright (c) 2014 The Polymer Project Authors.
@license Dual licensed under the MIT and GPL licenses.
@noflow - get/set properties not yet supported by flow.
@nolint These annotations are copy/pasted from the built-in Flow definitions for Native Map.
@nolint These annotations are copy/pasted from the built-in Flow definitions for Native Set.
@note If no `queryTracker` is provided, all tracking-related functionality is skipped.
@override WebInspector.OverridesSupport.PageResizer override.
@param  str  File contents as a string.
@param  str File contents as a string (with embedded token).
@param A callback that will be called immediately with any stored data, and called whenever the BufferedProcessStore has new data.
@param An Array of NuclideUri (absolute paths) for which to fetch diff info.
@param An array of absolute file paths for which to update the diff info.
@param Function aCallback The function that is called with each mapping.
@param Object aContext Optional.
@param Object aMapping
@param SourceMapGenerator aSourceMap The source map that will be consumed.
@param The expected result from the test.
@param The output from JsDiff.
@param The working directory (aka root directory) of the Hg repository.
@param URL the URL to open
@param `maximumTries` the number of times the `retryFunction` can fail to get a valid response before the `retryLimit` is terminated reporting an error.
@param `retryFunction` the async logic that's wanted to be retried.
@param `retryIntervalMs` optional, the number of milliseconds to wait between trials, if wanted.
@param `validationFunction` the validation function that decides whether a response is valid.
@param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or 'binarySearch.LEAST_UPPER_BOUND'.
@param aChunk A string snippet of generated JS code, another instance of SourceNode, or an array where each member is one of those things.
@param aChunks Optional.
@param aColumn The original column number.
@param aCompare Function which takes two elements and returns -1, 0, or 1.
@param aFn The traversal function.
@param aHaystack The array that is being searched.
@param aHaystack The non-empty array being searched.
@param aHigh Indices here and higher do not contain the needle.
@param aLine The original line number.
@param aLow Indices here and lower do not contain the needle.
@param aName The original identifier.
@param aNeedle The element being searched for.
@param aNeedle The element you are looking for.
@param aOrder Either `SourceMapConsumer.GENERATED_ORDER` or `SourceMapConsumer.ORIGINAL_ORDER`.
@param aPath The NuclideUri of a file or directory for which you want to find a Repository it belongs to.
@param aPath The path or URL to be joined with the root.
@param aPath The path or URL to be made relative to aRoot.
@param aPath The path or url to normalize.
@param aPattern The pattern to replace.
@param aReplacement The thing to replace the pattern with.
@param aRoot The root path or URL.
@param aSep The separator.
@param aSource The original source's filename.
@param aSourceFile Optional.
@param aSourceMapConsumer The source map to be applied.
@param aSourceMapPath Optional.
@param addedLines An array of buffer line numbers that should be highlighted as added.
@param allTouchHandles
@param appArgs If 'run' is set to 'true', these are passed as the command line arguments to the application being run.
@param argTypes - Types of arguments.
@param args - The serialized arguments to invoke the remote function with.
@param args - The serialized arguments to invoke the remote method with.
@param args Should be a list of build targets or aliases.
@param args The arguments to pass to the command.
@param argumentTypes - An array of the types of the function's arguments.
@param array the array of items for iteration.
@param basePath    Base path of the project.
@param blameProvider The BlameProvider that provides the appropriate blame information for this BlameGutter.
@param callback The function to message when any messages change.
@param callback The function to message when any of the filePaths' messages change.
@param callback The function to message when the project-scope messages change.
@param capacity is the maximum number of elements this CircularBuffer can hold.
@param className - The name of the interface.
@param cleanupFn This is called when a text editor no longer matches the grammars or is destroyed.
@param command The command to execute.
@param connectionDetails The connection details to validate.
@param constructorArgs - The types of the arguments to the constructor.
@param create Currently, this parameter is ignored.
@param debounceInterval The number of milliseconds to debounce.
@param declaration - The AST node.
@param def - The InterfaceDefinition object that encodes all if the interface's operations.
@param defaultRemoteServerCommand The default remote server command.
@param defaultValue An optional value to return if the property is missing from the object.
@param definitionPath - The path to the definition file, relative to the module of the caller.
@param defintion - The MethodDefinition AST node.
@param defs - The result of parsing the definition file.
@param diagnosticProvider The diagnostic provider that these messages come from.
@param directories The Map that will be modified by this function.
@param directory - The directory in which to perform a search.
@param directory Either a RemoteDirectory or Directory we are interested in.
@param dirname The calling function should call `__dirname` as this argument.
@param editor The TextEditor this BlameGutter should create UI for.
@param error A function that receives errors from the process.
@param eventName Name of the event to be tracked.
@param executor A function that takes resolve and reject callbacks, just like the Promise constructor.
@param exit A function that receives the exit code when the process exits.
@param extent The 'extent' of the symbol, as returned by libclang's Cursor.extent.
@param fetchChildren returns a Promise that resolves to an Immutable.List of LazyTreeNode objects.
@param fileChanges The latest changed watchman files.
@param fileName The name of the file to find.
@param filePath A file path.
@param filePath An absolute path to a file.
@param filePath The absolute file path of interest.
@param filePath The file to get blame information for.
@param filePath The filepath for which to get related files.
@param filePath Which file should be removed.
@param filePath Which file should be versioned.
@param filePath1 An abolute file path.
@param filePath2 An absolute file path.
@param filePath: The full path to the file of interest.
@param filePaths An array of file paths to update the status for.
@param fileUri a file path.
@param files The `files` field of an fb-watchman update.
@param filterFunction the async `filter` function that returns a Promise that resolves to a boolean.
@param finish: The answers for all prompts must be provided as an array of strings and passed to finish when you are ready to continue.
@param fixtureName The name of the subdirectory of the fixtures/ directory that should be copied.
@param fixtureName The name of the subdirectory of the fixtures/ directory within the nuclide-test-helpers package directory that should be copied.
@param fn This is called once for every text editor, and then again every time it changes to a grammar.
@param fn This is called once on every text editor that matches the grammars.
@param func - The FunctionDefinition object that represents the functions API.
@param funcType - The type information for the function.
@param function callback Callback to execute after shutdown completes
@param functionName - The name of the remote function to invoke.
@param getModel function always returning the latest singleton model.
@param grammarScopes The grammar scope names to watch for.
@param gutterName A name for this gutter.
@param hostname The connected server host name.
@param immediate Bypass batching.
@param interfaceName - The name of the remote class for which to construct an object.
@param items Array of elements that will be passed to test, one at a time.
@param key A single character key to be sent or a special token such as 'escape' or 'tab'.
@param key Name of config item
@param keystroke A String keystroke to humanize such as `ctrl-O`.
@param limit the configurable number of parallel async operations.
@param lineNumber A buffer line number to be highlighted.
@param localDirectory The directory for which we are interested in file changes.
@param localDirectory The full path to a directory.
@param mappingFunction the async Promise function that could return a useful result.
@param marshaller - Serialize the type.
@param message Commit message.
@param metaKeys An object denoting which meta keys are pressed for this keyboard event.
@param methodName - The name of the method to invoke.
@param methodName - The name of the method.
@param modifiedPath A file path (assumed to not have a trailing separator).
@param name - The name of the alias type.
@param name - The name of the interface.
@param name is generally what you'd use as a window title (for GUI apps).
@param newFilePath What should the file be renamed to.
@param newTab is actually a ProviderSpec plus the `name` and `tabContent` properties added by _renderTabs(), which created the tab object in the first place.
@param numberOfRevsBefore The number of revisions before the current revision that you want a revision expression for.
@param obj - The object to convert.
@param object - The remote object.
@param objectId - The id of the remote object.
@param oldFilePath Which file should be renamed.
@param onError Called on error.
@param optional service name (e.g. lldb) to filter resulting attachables.
@param options     See `FindReferencesOptions`.
@param options A set of options specifying methods that will be called with output from the process.
@param options An Object of the form: scope: Can be 'file', 'project', or 'all'.
@param options An object describing the desired buck build operation.
@param options Options for changing how to run the command.
@param options See definition of RunCommandOptions.
@param options The argument to the constructor of ScriptBufferedProcess.
@param options The same as the `options` passed to the atom.workspace.open() call that triggered this function.
@param options as specified by http://nodejs.org/api/child_process.html.
@param options.rootPath Absolute path to the directory that contains the .buckconfig file to configure the project.
@param output Raw output string from 'hg log' call in `fetchFilesChangedAtRevision`.
@param path The absolute file path to get the line diffs for.
@param path The absolute path that's has the prefix of cwd of the connection.
@param pathFromSubscriptionRootToSubscriptionPath The relative path from subscriptionRoot to subscriptionPath.
@param pathPrefixToSkip Optionally, a string that, if found at the beginning of the modifiedPath, will be skipped when computing the parent directories.
@param pathSet The PathSet that should be updated by this watchman update.
@param pathSet The PathSet to keep updated.
@param pathToDirectory Where to begin the search.
@param paths An array of file paths to get the status for.
@param platform An optional String platform to humanize for (default: `process.platform`).
@param prefix optinal prefix for the temp directory name.
@param profileName The profile name to validate.
@param projectPaths All the root directories in the Atom workspace.
@param promise will be awaited.
@param promiseExpression - An expression that will evaluate to a promise.
@param property Configuration option within the section.
@param props.processOutputHandler (optional) A function that acts on the output of the process.
@param props.processOutputStore The ProcessOutputStore that provides the output to display in this view.
@param references  A list of references to `symbolName`.
@param regex - The pattern to match.
@param remoteProjectConfig - The config with the clientKey we want encrypted.
@param removedLines An array of buffer line numbers that should be highlighted as removed.
@param repoPath The full path to the repository directory (.hg).
@param repository Either a GitRepository or HgRepositoryClient.
@param requestId - The id of the request who's result we are listening for.
@param returnType - Determines the type of messages we should subscribe to, and what this function should return.
@param returnType - The type of object that this function returns, so the the transport layer can register the appropriate listeners.
@param revision A string representation of the revision desired.
@param revision The revision expression of a revision of interest.
@param revision This could be a changeset ID, name of a bookmark, revision number, etc.
@param revision: An expression that hg can understand, specifying the revision at which we want to see the file content.
@param revisionExpression An expression that can be passed to hg as an argument to the '--rev' option.
@param revisionFrom The revision expression of the "start" (older) revision.
@param revisionTo The revision expression of the "end" (newer) revision.
@param run If set to 'true', appends the buck invocation with '--run' to run the installed application.
@param section Section in the configuration file.
@param set The set whose value to toggle.
@param someFunction the async `some` function that returns a Promise that resolves to a boolean.
@param source - The string source of the definition file.
@param spelling The whole name of the symbol, as reported by libclang.
@param stderr A function that receives output from stderr.
@param stdout A function that receives output from stdout.
@param subdirs - An array of subdirectories to search within `directory`.
@param symbolName  The name of the symbol we're finding references for.
@param target The DOM element to which this event will be sent.
@param test Will be called with each item and must return either: (1) A "thenable" (i.e, a Promise or promise-like object) that resolves to a derived value (that will be returned) or null.
@param text The word immediately under the cursor, as returned by Hyperclick.
@param textEditor The TextEditor that contains the symbol of interest.
@param textRange The range of `text` within `textEditor`.
@param thisArg - The newly created proxy object.
@param thisArg Receiver that will be used when test is called.
@param ttyOutput If true, return the output as if stdout were attached to a tty.
@param type - The type object (used to find the appropriate function).
@param type - The type the the alias represents.
@param type The type of highlight to be applied to the line.
@param typeName - The string name of the type that the provided marshallers convert.
@param unmarshalledArgs - Unmarshalled arguments to pass to the remote constructor.
@param unmarshaller - Deserialize the type.
@param update The changed file paths.
@param updates Set of updates to apply.
@param uri A String consisting of NUCLIDE_PROCESS_OUTPUT_VIEW_URI plus a tabTitle for the new pane.
@param uri should be of the form "nuclide://example.com:9090/path/to/directory".
@param value - The value to be marshalled.
@param value The value for the big integer.
@param value The value to toggle in the set.
@param values The object containing the data to track.
@param verify should confirm expectations about the Error produced by the rejection of `promise`.
@param workingDirectory The absolute path to the working directory of the hg repository.
@param workingDirectory The working directory of the Hg repository.
@private  Base class for all node types, must not be directly instantiated.
@private  Crudely transforms a query string into a "pretty" version (with whitespace) for human readability.
@private  Indents (potentially multiline) `string` by `indentSize` spaces.
@private  Indents and prettifies a JSON-stringifiable input.
@private  Returns the memoized printed query.
@private  Simulates sort key that existed when `getConcreteFragmentID` used to exist.
@private  This is required to support legacy versions of GraphQL.
@providesModule ARTSerializablePath
@providesModule ActivityIndicatorIOS
@providesModule AlgoliaDocSearch
@providesModule AutoFocusUtils
@providesModule AutodocsLayout
@providesModule BackAndroid
@providesModule BatchedBridge
@providesModule BeforeInputEventPlugin
@providesModule BlogPageLayout
@providesModule BlogPost
@providesModule BlogPostLayout
@providesModule BlogSidebar
@providesModule BoundingDimensions
@providesModule CSSProperty
@providesModule CSSPropertyOperations
@providesModule CallbackQueue
@providesModule ChangeEventPlugin
@providesModule ColorPropType
@providesModule DOMChildrenOperations
@providesModule DOMLazyTree
@providesModule DOMNamespaces
@providesModule DOMProperty
@providesModule DOMPropertyOperations
@providesModule Danger
@providesModule DatePickerIOS
@providesModule DefaultEventPluginOrder
@providesModule DisabledInputUtils
@providesModule DocsLayout
@providesModule DocsSidebar
@providesModule DrawerLayoutAndroid
@providesModule EnterLeaveEventPlugin
@providesModule ErrorUtils
@providesModule EventConstants
@providesModule EventPluginHub
@providesModule EventPluginRegistry
@providesModule EventPluginUtils
@providesModule EventPropagators
@providesModule ExecutionEnvironment
@providesModule FallbackCompositionState
@providesModule HTMLDOMPropertyConfig
@providesModule Header
@providesModule HeaderLinks
@providesModule HeaderWithGithub
@providesModule HgConstants
@providesModule InitializeJavaScriptAppEngine
@providesModule InspectorUtils
@providesModule IntentAndroid
@providesModule JSTimers
@providesModule JSTimersExecution
@providesModule KeyEscapeUtils
@providesModule LazyRenderer
@providesModule LinkedStateMixin
@providesModule LinkedValueUtils
@providesModule ListView
@providesModule LoggingTestModule
@providesModule MessageQueue
@providesModule MetaMatchers
@providesModule Navigator
@providesModule NavigatorBreadcrumbNavigationBar
@providesModule NavigatorBreadcrumbNavigationBarStyles
@providesModule NavigatorExample
@providesModule NavigatorIOS
@providesModule NavigatorNavigationBar
@providesModule NavigatorNavigationBarStylesAndroid
@providesModule NavigatorNavigationBarStylesIOS
@providesModule NavigatorSceneConfigs
@providesModule Object.assign
@providesModule PageLayout
@providesModule PanResponder
@providesModule PerformanceLogger
@providesModule PickerAndroid
@providesModule PickerAndroidTestModule
@providesModule PickerIOS  This is a controlled component version of RCTPickerIOS
@providesModule PooledClass
@providesModule Position
@providesModule Prism
@providesModule ProgressBarAndroid
@providesModule ProgressViewIOS
@providesModule PullToRefreshViewAndroid
@providesModule QuickPerformanceLogger
@providesModule RCTNetworking
@providesModule RCTRootViewIntegrationTestsApp
@providesModule React
@providesModule ReactBrowserComponentMixin
@providesModule ReactBrowserEventEmitter
@providesModule ReactCSSTransitionGroup
@providesModule ReactCSSTransitionGroupChild
@providesModule ReactChildReconciler
@providesModule ReactChildren
@providesModule ReactClass
@providesModule ReactComponent
@providesModule ReactComponentBrowserEnvironment
@providesModule ReactComponentEnvironment
@providesModule ReactComponentTreeDevtool
@providesModule ReactComponentWithPureRenderMixin
@providesModule ReactCompositeComponent
@providesModule ReactCurrentOwner
@providesModule ReactDOM
@providesModule ReactDOMButton
@providesModule ReactDOMComponent
@providesModule ReactDOMComponentFlags
@providesModule ReactDOMComponentTree
@providesModule ReactDOMContainerInfo
@providesModule ReactDOMDebugTool
@providesModule ReactDOMEmptyComponent
@providesModule ReactDOMFactories
@providesModule ReactDOMFeatureFlags
@providesModule ReactDOMIDOperations
@providesModule ReactDOMInput
@providesModule ReactDOMInstrumentation
@providesModule ReactDOMOption
@providesModule ReactDOMSelect
@providesModule ReactDOMSelection
@providesModule ReactDOMServer
@providesModule ReactDOMTextComponent
@providesModule ReactDOMTextarea
@providesModule ReactDOMTreeTraversal
@providesModule ReactDOMUnknownPropertyDevtool
@providesModule ReactDebugTool
@providesModule ReactDefaultBatchingStrategy
@providesModule ReactDefaultInjection
@providesModule ReactDefaultPerf
@providesModule ReactDefaultPerfAnalysis
@providesModule ReactElement
@providesModule ReactElementTestChild
@providesModule ReactElementValidator
@providesModule ReactEmptyComponent
@providesModule ReactEmptyComponentRegistry
@providesModule ReactErrorUtils
@providesModule ReactEventEmitterMixin
@providesModule ReactEventListener
@providesModule ReactFeatureFlags
@providesModule ReactFragment
@providesModule ReactInjection
@providesModule ReactInputSelection
@providesModule ReactInstanceHandles
@providesModule ReactInstanceMap
@providesModule ReactInstrumentation
@providesModule ReactInvalidSetStateWarningDevTool
@providesModule ReactIsomorphic
@providesModule ReactLink
@providesModule ReactMarkupChecksum
@providesModule ReactMockedComponentTestComponent
@providesModule ReactMount
@providesModule ReactMultiChild
@providesModule ReactMultiChildUpdateTypes
@providesModule ReactNativeART
@providesModule ReactNativeComponent
@providesModule ReactNativeComponentTree
@providesModule ReactNativeGlobalResponderHandler
@providesModule ReactNativeOperationHistoryDevtool
@providesModule ReactNativeTextComponent
@providesModule ReactNativeTreeTraversal
@providesModule ReactNodeTypes
@providesModule ReactNoopUpdateQueue
@providesModule ReactOwner
@providesModule ReactPerf
@providesModule ReactPerfAnalysis
@providesModule ReactPropTypeLocationNames
@providesModule ReactPropTypeLocations
@providesModule ReactPropTypes
@providesModule ReactReconcileTransaction
@providesModule ReactReconciler
@providesModule ReactRef
@providesModule ReactServerBatchingStrategy
@providesModule ReactServerRendering
@providesModule ReactServerRenderingTransaction
@providesModule ReactSimpleEmptyComponent
@providesModule ReactStateSetters
@providesModule ReactTestUtils
@providesModule ReactTransitionChildMapping
@providesModule ReactTransitionEvents
@providesModule ReactTransitionGroup
@providesModule ReactUMDEntry
@providesModule ReactUpdateQueue
@providesModule ReactUpdates
@providesModule ReactVersion
@providesModule ReactWithAddons
@providesModule ReactWithAddonsUMDEntry
@providesModule RecyclerViewBackedScrollView
@providesModule RelayConnectionInterface
@providesModule RelayContainerProxy
@providesModule RelayNodeInterface
@providesModule ResponderEventPlugin
@providesModule ResponderSyntheticEvent
@providesModule ResponderTouchHistoryStore
@providesModule SVGDOMPropertyConfig
@providesModule ScrollViewTestModule
@providesModule SegmentedControlIOS
@providesModule SelectEventPlugin
@providesModule SimpleEventPlugin
@providesModule SiteData
@providesModule SliderIOS
@providesModule SnapshotViewIOS
@providesModule SourceMapsCache
@providesModule SwitchAndroid
@providesModule SwitchIOS
@providesModule SyntheticAnimationEvent
@providesModule SyntheticClipboardEvent
@providesModule SyntheticCompositionEvent
@providesModule SyntheticDragEvent
@providesModule SyntheticEvent
@providesModule SyntheticFocusEvent
@providesModule SyntheticInputEvent
@providesModule SyntheticKeyboardEvent
@providesModule SyntheticMouseEvent
@providesModule SyntheticTouchEvent
@providesModule SyntheticTransitionEvent
@providesModule SyntheticUIEvent
@providesModule SyntheticWheelEvent
@providesModule TabBarIOS
@providesModule TabBarItemIOS
@providesModule TapEventPlugin
@providesModule ToastAndroid
@providesModule ToolbarAndroid
@providesModule TouchHistoryMath
@providesModule Touchable
@providesModule TouchableNativeFeedback
@providesModule Transaction
@providesModule UnimplementedView
@providesModule VibrationIOS
@providesModule ViewPagerAndroid
@providesModule ViewportMetrics
@providesModule WebSocketEvent
@providesModule WebView
@providesModule accumulate
@providesModule accumulateInto
@providesModule adler32
@providesModule buildStyleInterpolator
@providesModule canDefineProperty
@providesModule center
@providesModule clearImmediate
@providesModule createHierarchyRenderer
@providesModule createMicrosoftUnsafeLocalFunction
@providesModule dangerousStyleValue
@providesModule deprecated
@providesModule dismissKeyboard  This function dismisses the currently-open keyboard, if any
@providesModule emptyFunction
@providesModule emptyObject
@providesModule escapeTextContentForBrowser
@providesModule findDOMNode
@providesModule flattenChildren
@providesModule focusNode
@providesModule forEachAccumulated
@providesModule getEventCharCode
@providesModule getEventKey
@providesModule getEventModifierState
@providesModule getEventTarget
@providesModule getIteratorFn
@providesModule getMarkupWrap
@providesModule getNativeComponentFromComposite
@providesModule getNodeForCharacterOffset
@providesModule getTestDocument
@providesModule getTextContentAccessor
@providesModule getVendorPrefixedEventName
@providesModule inputValueTracking
@providesModule instantiateReactComponent
@providesModule invariant
@providesModule isEventSupported
@providesModule isTextInputElement
@providesModule keyOf
@providesModule mapObject
@providesModule mapWithSeparator
@providesModule matricesDiffer
@providesModule merge
@providesModule mergeHelpers  requiresPolyfills: Array.isArray
@providesModule onlyChild
@providesModule parseErrorStack
@providesModule printRelayQuery
@providesModule processColor
@providesModule processDecelerationRate
@providesModule quoteAttributeValueForBrowser
@providesModule relayUnstableBatchedUpdates
@providesModule renderApplication
@providesModule renderSubtreeIntoContainer
@providesModule setImmediate
@providesModule setInnerHTML
@providesModule setTextContent
@providesModule shallowCompare
@providesModule shouldUpdateReactComponent
@providesModule sizesDiffer
@providesModule sliceChildren
@providesModule slugify
@providesModule toIterator
@providesModule traverseAllChildren
@providesModule unindent
@providesModule update
@providesModule validateDOMNesting
@providesModule warning
@public  Gets a string name used to refer to this request for printing debug output.
@public  Gets a string representation of the GraphQL mutation.
@public  Gets a string representation of the GraphQL query.
@public  Gets a unique identifier for this query.
@public  Gets an optional map from name to File objects.
@public  Gets the variables used by the mutation.
@public  Gets the variables used by the query.
@public  Injects a scheduling function that is invoked with a callback that will execute the next unit of work.
@public  Instruments methods to allow profiling various parts of Relay.
@public  RelayContainer is a higher order component that provides the ability to:  - Encode data dependencies using query fragments that are parameterized by routes and variables.
@public  RelayMutation is the base class for modeling mutations of data.
@public  RelayReadyStateRenderer synchronously renders a container and query config given `readyState`.
@public  RelayRenderer renders a container and query config after fulfilling its data dependencies.
@public  RelayRootContainer sends requests for data required to render the supplied `Component` and `route`.
@public  This is a tag function used with template strings to provide the facade of a runtime GraphQL parser.
@public  `RelayEnvironment` is the public API for Relay core.
@relay(isConnectionWithoutNodeID: true) should silence the warning.
@relay(isStaticFragment: true)
@relay(pattern: true)
@restoreSelection: If any selection information was potentially lost, restore it.
@return      Returns SIGN_OK if the data contains a valid signature, SIGN_UNSIGNED if it contains no signature, or SIGN_INVALID if it contains an invalid signature.
@return A Disposable that should be disposed to stop updates.
@return A Git or Hg repository the path belongs to, if any.
@return A Map that maps a line number (0-indexed) to the name that line blames to.
@return A Map that maps line numbers (0-indexed) to the blame info for the line.
@return A Observable which client could subscribe to.
@return A Promise that resolves to an object on which 'kill' can be called to kill the process.
@return A Promise that resolves to the exit code when the process exits.
@return A Promise that resolves when testing has succesfully started.
@return A Promise that will be resolved/rejected in response to the execution of the executor.
@return A React component that this element call ReactDOM.render() on.
@return A RevisionFileChanges object where the paths are all absolute paths.
@return A ScriptBufferedProcess with common binary paths added to `options.env`.
@return A boolean indicating whether the file was created.
@return A map of each NuclideUri (absolute path) to its DiffInfo.
@return A map of each file path in the output (relative to the root of the repo) to its parsed DiffInfo.
@return A map of each path to its DiffInfo.
@return A promise that resolves to the current bookmark name, if it exists, or else an empty string.
@return A summary of the test run including its name, its duration, and whether it passed, failed, skipped, etc.
@return A wrapper around the methods on DiagnosticStore that allow reading data.
@return An Object with some details about the output of the command: pid: The process id of the running app, if 'run' was true.
@return An Observable that returns output from buck, as described by the docblocks for `buildWithOutput` and `installWithOutput`.
@return An Observable with the following implementations: onNext: Calls the Observer with successive strings from stdout and stderr.
@return An array of strings that can be passed as `args` to spawn a process to run the `buck` command.
@return An expression for the 'numberOfRevsBefore'th revision before the given revision.
@return An expression for the common ancestor of the revision of interest and the current Hg head.
@return Array of additional watch expressions to apply to the primary watchman subscription.
@return Disposable that can be disposed to stop listening for changes.
@return Disposable that can be disposed to stop updating the PathSet.
@return FuzzyFileSearchService for the specified directory if it is part of a Hack project.
@return HackService for the specified directory if it is part of a Hack project.
@return HyperclickMatch if (textEditor, position) identifies a build target.
@return HyperclickMatch if (textEditor, position) identifies a file path that resolves to a file under the specified directory.
@return If the directory is part of a Mercurial repository, returns an object with the following field: originURL The string URL of the repository origin.
@return If the validation fails: an error object.
@return Promise resolves to absolute path to output file
@return Promise that resolves on process.nextTick().
@return Promise that resolves to a build report.
@return Promise that resolves to an array of build targets.
@return Promise that resolves to an asynchronously derived value or null.
@return Promise that resolves to an object with the properties: stdout string The contents of the process's output stream.
@return Promise that resolves to buck project or null if the specified filePath is not part of a Buck project.
@return Promise that resolves to the value, if it is set, else `null`.
@return The absolute path to the log file for the specified date.
@return The absolute path to the log file for today.
@return The content of the filePath at the given revision.
@return The current Hg bookmark.
@return The file path with a trailing separator, if it doesn't already have one.
@return The input value.
@return The name of the current bookmark.
@return The output from running the command.
@return The path of the root project folder in Atom that this HgRepositoryClient provides information about.
@return The path to Flow on the user's machine.
@return The path to buck and set of options to be used to run a `buck` command.
@return The path to ocamlmerlin on the user's machine.
@return The path to the JSON file on disk where the workspace state is stored.
@return The related files and the given path's index into it.
@return The set of arguments to pass to ocamlmerlin.
@return The true range of the symbol, which may extend beyond the `text` word.
@return Whether the file paths are equal, accounting for trailing slashes.
@return `null` if there are no test classes to run, otherwise 0 - 100 indicating percent completion of this test suite.
@return a RunCommandFunctionAndCleanup, which has the fields: - runCommandInNewPane: The function which can be used to create a new pane with the output of a process.
@return a function that asserts the rng produces values fitting the distribution
@return a humanized representation of the keystroke.
@return a space-delimited string of flags or null if nothing is known about the src file.
@return an Array where Scores will be sorted in ascending order.
@return an array with the revision info (`title`, `author`, `date` and `id`) or `null` if no common ancestor was found.
@return array Array of host/port strings for each mongos
@return bool True if the file has a signature.
@return boolean Whether the file path exists within the working directory (aka root directory) of the repository, or is the working directory.
@return directory that contains the nearest file or null.
@return list of nodes against which "Toggle Blame" is an appropriate action.
@return object where each arg in args will be a key.
@return object whose dispose() method can be used to remove the menu item from this object.
@return object whose dispose() method can be used to remove the submenu from this object.
@return on success: a cursor position pointed at the end of the buffer
@return path to a temporary directory.
@return path to a temporary file.
@return returns the passed in config with the clientKey encrypted.
@return str  to be embedded in to-be-signed file
@return str Signed data.
@return string Host/port of mongobridge
@return text and a boolean indicating whether it is plaintext or HTML.
@return the interval handler.
@return the string that the tree UI should display for the node
@return true only if we are sure directoryPath is on NFS.
@return whether the extension was registered or not.
@return whether the file represented by fileUri is inside of a Hack project.
@return whether this service can perform Hack symbol queries on the specified directory.
@return whether this service can perform fuzzy file queries on the specified directory.
@returns - A proxy module that exports the API specified by the definition
@returns - The Definitions that represents the API of the definiition file.
@returns A BigInteger object.
@returns A MethodDefinition node that can be added to a ClassBody
@returns A MethodDefinition node that can be added to a ClassBody.
@returns A MethodDefinition node that can be attached to a class body.
@returns A Promise that resolves when the object disposal has completed.
@returns A babel AST node.
@returns A decorator.
@returns A promise that resolves to an array of strings, which are the names of all the packages that this function activates.
@returns A record containing the name of the method, and a FunctionType object encoding the arguments and return type of the method.
@returns An anonymous ClassExpression node that can be assigned to a module property.
@returns An expression representing a promise that resolves to an array of the arguments.
@returns An instance of classObject.
@returns An observable that emits match events.
@returns BasicSourceMapConsumer
@returns Depending on the expected return type, this function either returns undefined, a Promise, or an Observable.
@returns On object containing the number of changes (added or removed parts), and a string containing the colored diff output.
@returns SourceMapConsumer
@returns The proxy factory method.
@returns The proxy function (as an arrow function) that should be assigned to a property of the remote module.
@returns True if the Ranges are equal.
@returns True if the array of Ranges are equal.
@returns True if the objects are identical.
@returns True if the strings are identical.
@returns `true` if the value was added to the set, otherwise `false`.
@returns the path to the temporary directory that this function creates.
@see K-S test in Knuth's AoCP vol.2
@see Map module for more on this.
@see RelayQueryTransform
@see RelayQueryVisitor
@see executeDispatchesInOrderStopAtTrueImpl
@see http://facebook.github.io/graphql/.
@see http://jsperf.com/extract-nodename
@see http://reactivex.io/documentation/observable.html
@see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
@see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html  Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but they bubble to document.
@see http://www.quirksmode.org/dom/events/scroll.html
@see http://www.quirksmode.org/dom/events/tests/scroll.html
@see http://www.quirksmode.org/js/events_properties.html
@see splitDeferredRelayQueries
@setSelection: Sets the selection bounds of a textarea or input and focuses the input.
@side-effect related to garbage collection
@suppressGlobalPropertiesCheck
@this A JasmineMatcher object.
@throws Error If file contents is invalid JSON.
@throws Error if invalid state transition or unrecognized signal.
@type WebInspector.CSSLocation
@type function(new:Object)
@typechecks static-only
@warning Do not use this unless your application uses only `RelayGraphQLMutation` for mutations.
A "measurement" is a set of metrics recorded for each flush.
A "session" for the purpose of analytics.
A .leading comment comes before the node, whereas a .trailing comment comes after it.
A BasicSourceMapConsumer instance represents a parsed source map which we can query for information about the original file positions by giving it a file position in the generated source.
A Boolean value that indicates whether the navigation bar is hidden
A Boolean value that indicates whether the navigation bar is hidden by default
A Boolean value that indicates whether the navigation bar is translucent
A Boolean value that indicates whether the navigation bar is translucent by default
A Boolean value that indicates whether the tab bar is translucent
A Boolean value that indicates whether to hide the 1px hairline shadow
A Boolean value that indicates whether to hide the 1px hairline shadow by default
A ClassBody is always strict code.
A Def type can only match an object value.
A DiagnosticProvider will typically subscribe to only one, depending on whether it wants to be notified whenever a file changes or only when it is saved.
A FixedDataTable must specify its own width.
A JS representation of the eslintrc files.
A JavaScript tokenizer / parser / beautifier / compressor.
A LineView may correspond to multiple logical lines, if those are connected by collapsed ranges.
A Modal component covers the native view (e.g. UIViewController, Activity) that contains the React Native root.
A Progressbar for showing deterministic progress.
A Promise utility that runs a maximum of limit async operations at a time iterating over an array and returning the result of executions.
A Queue which will process elements at intervals, only if the queue contains any elements.
A React component for displaying different types of images, including network images, static resources, temporary local images, and images from local disk, such as the camera roll.
A React component for displaying text which supports nesting, styling, and touch handling.
A RefreshControl component, used to provide pull-to-refresh functionality for the ScrollView.
A RemoteConnection represents a directory which has been opened in Nuclide on a remote machine.
A ServerConnection keeps a list of RemoteConnections - one for each open directory on the remote machine.
A SourceMapConsumer instance represents a parsed source map which we can query for information about the original file positions by giving it a file position in the generated source.
A TextEditor whose creation is announced via atom.workspace.observeTextEditors() will be observed by default by hyperclick.
A TextEventDispatcher will be subscribed to text events if and only if it has subscribers of its own.
A TextMarker is a handle that can be used to clear or find a marked position in the document.
A Transition object that encapsulates the state and logic of the transition.
A URI is needed by this point, emit error if we haven't been able to get one
A `ListViewDataSource` is created with functions for extracting data from the input blob, and comparing elements (with default implementations for convenience).
A basis for animatins.
A better solution would be to have fs.symlink be supported on windows in some nice fashion.
A bit simpler than readable streams.
A bit too dangerous to mutate `next`.
A block comment inline after code
A block comment inline before code
A block is a sequence of statements wrapped in braces.
A boolean indicating whether or not the tests are running headless.
A break doesn't have to happen here but whenever we choose to break at a scopeBreak we must also break at all other scopeBreaks within the same scope.
A bug in IE8 can cause this value to be negative, so guard it.
A cached object to use.
A callback to verify that multiple callbacks are allowed.
A callback when the Snapshot view is ready to be compared
A callback which captures arguments and context.
A catch clause establishes a new scope but the only variable bound in that scope is the catch parameter.
A checkbox component with an input checkbox and a label.
A class to hold information about the Codewalk Viewer.
A class to manage forking.
A class which manages state to analyze code paths.
A comma signals the end of a key/value pair if depth is zero
A comma-separated list of Atom grammars understood by the provider, e.g. 'source.js.jsx'
A comment here with a require('call') that should not be extracted
A comment inline with code",
A common use case is to set the backgroundColor for every page
A common way to use this API is to call `LayoutAnimation.configureNext` before calling `setState`.
A completely generic pooler is easy to implement, but would require accessing the `arguments` object.
A component class is created for each of the supplied render methods.
A component that is created with React.createClass.
A component that is merely "constructed" (as in "constructor") but not yet initialized, or rendered.
A component used to select a single value from a range of values.
A composite linker function to be called on a already compiled piece of DOM, which instantiates all directive instances.
A configuration can be a single number (severity), or an array where the first element in the array is the severity, and is the only required element.
A consistent shared value representing "not set" which equals nothing other than itself, and nothing that could be provided externally.
A constant value for implied strict mode.
A constant value for modules environment.
A constant value for non strict mode environment.
A constant value for strict mode environment.
A consumer of a diagnostics provider will subscribe to these events.
A container for centralizing the logic for making panels scrollable, resizeable, dockable, etc.
A context string for the "local cmd*" vars in the spec.
A controlled navigation view that renders a stack of cards.
A convenient way to reason about plugins, without having to package every one of them.
A counter to track how many items to wait for before the ready event fires.
A couple of cases aside (see scanUnexpectedChars) we don't really care whether the resulting expression is valid or not.
A cross-domain request is in order when we have a protocol:host:port mismatch
A custom icon for the tab.
A custom icon when the tab is selected.
A custom version of node-inspector's Session that ignores commands that we don't support.
A data structure to provide a sorted view of accumulated mappings in a performance conscious manner.
A data structure which is a combination of an array and a set.
A date has been selected.
A decorator factory (https://github.com/wycats/javascript-decorators) who measures the execution time of an asynchronous/synchronous function which belongs to either a Class or an Object.
A decorator for adding Atom-style observation methods to a React component class whose whose subscribers are invoked whenever the component updates.
A deep dependency of yeoman spams console.log with giant json objects.
A default connection profile is a combination of the user's last inputs to the connection dialog and the default settings, plus the update logic we use to change the remote server command.
A default import and an ImportNamespaceSpecifier can only occur when a ImportDefaultSpecifier is followed by a ImportNamespaceSpecifier:
A dep is an observable that can have multiple directives subscribing to it.
A destructive slice always unlocks indentation.
A directive links a DOM element with a piece of data, which is the result of evaluating an expression.
A directory is revertable if it contains changed files.
A dismissible heartbeat notification with this code is already active.
A distinct key value may only occur in one key/value pair within the Map's collection.
A double-colon is used to distinguish between client ids and static ids that happen to hash to `:client`.
A doubly linked list-based Least Recently Used (LRU) cache.
A dumb traversal method.
A factory that can be used to create instances of a fragment.
A failed call can result from an async thrown exception, or invalid result.
A fallback for creating "custom" events.
A fallback to window.onload, that will always work
A few possibilities:  - `which` is `0`.
A file in the file cache.
A file is added that meets the criteria under .hgignore.
A file is revertable if it's changed.
A file path will not appear in the returned Map if it is not in the repo, if it has no changes, or if there is a pending `hg diff` call for it already.
A file that was previously ignored, has been deleted.
A file watch event can also be considered a directry change for the parent directory if a file was created or deleted.
A flag that debug dumping is enabled or not.
A flag which shows empty.
A flag which shows reachable.
A flag which shows this is reachable.
A floating-point number that determines how quickly the scroll view decelerates after the user lifts their finger.
A form that is used to create a new connection profile.
A formatter which may shorten hostnames.
A foundational component for inputting text into the app via a keyboard.
A function called when the "Cancel" button is clicked.
A function called when the "Save" button is clicked.
A function can be passed as `onComment` option, which will cause Acorn to call that function with `(block, text, start, end)` parameters whenever a comment is skipped.
A function can be passed as `onToken` option, which will cause Acorn to call that function with object in the same format as tokenize() returns.
A function declaration creates a symbol in the current scope
A function following one of those tokens is an expression.
A function that can be optionally passed to ProcessOutputView to override ProcessOutputView's default behavior for handling new data from the process.
A function that gets called with the new selected index on change.
A function that kicks off a process.
A function that returns a sub-class constructor with the given name.
A function that returns the scrollable component in which the list rows are rendered.
A function that takes a single image as a parameter and renders it.
A function that will output the latest navigation state as a function of the (optional) previous state, and an action
A function which returns a value representing an "owner" for transient writes to tries.
A generator for unique ids.
A generic component that displays selectable list items, and offers the ability to add and remove items.
A global GUID counter for objects
A good blog post to understand how it works: http://gafferongames.com/game-physics/integration-basics/
A good rule of thumb is to multiply the size of the image you display by the pixel ratio.
A good tap interaction isn't as simple as you might think.
A guarded error in mounting might prevent initialization of resolvers.
A hack around the fact that files with "php" extension might be either standalone or html embedded php scripts.
A helper function for this class that lets us quickly determine if the view is currently animating.
A helper function that checks if an object is an Observable.
A helper function that checks if an object is thenable (Promise-like).
A helper function that let's us 'apply' an array of arguments to a constructor.
A helper function to scroll to a specific page in the ViewPager.
A helper function to scroll to a specific point  in the scrollview.
A helper function to zoom to a specific rect in the scrollview.
A helper method for the store, to deal with navigating the tree.
A heuristic for named variables in Hack.
A hierarchical equivalent of forEach.
A higher order component that wraps the provided gadget to adapt it to Atom's expectations for pane items.
A hint tree to display.
A home-made flex function so that we can read the message column width easily.
A length of a jump, after we're done parsing this character.
A lineView may contain multiple logical lines (when merged by collapsed spans).
A linearization of the inheritance hierarchy.
A linked list to keep track of recently-used-ness
A linting warning or error.
A list of all gestures that are enabled on this scene
A list of event names to a configurable list of vendor prefixes.
A list of offsets in the buffer where we need to insert sequence tag/len pairs.
A little extra validation when the old range spans only one line.
A location which can be navigated to.
A lock file is a more reliable signal, so defer to it.
A lot of modules rely on these two functions.
A lower number means `needle` is more relevant to `haystack`.
A lower number yields better accuracy for code that is tracking the scroll position, but can lead to scroll performance problems due to the volume of information being send over the bridge.
A macro that that takes a RNG and performs a Kolmogorov-Smirnov test: asserts that the values generated by the RNG could be generated by the distribution with cumulative distribution function `cdf'.
A managed radio group component.
A map from a key (in most cases, a file path), to a related Disposable.
A map from each diagnostic provider to the array of project messages from it.
A map from each diagnostic provider to: a map from each file it has messages for to the array of messages for that file.
A map from each file that has messages from any diagnostic provider to the set of diagnostic providers that have messages for it.
A map of NuclideUri to the number of listeners registered for changes to messages for that file.
A map to check whether or not segments had been done.
A mapping can have one of the three levels of data:  1.
A method assignment helper for hierarchy subclasses.
A method for quickly swapping in/out CSS properties to get correct calculations.
A more correct, but more complex, solution would be to symlink the deeper thing into the new location.
A mouse down can be a single click, double click, triple click, start of selection drag, start of text drag, new cursor (ctrl-click), rectangle drag (alt-drag), or xwin middle-click-paste.
A name to identify the individual instance to the SnapshotView
A named AMD is safest and most robust way to register.
A named function: "function f...".
A nasty hack since Atom doesn't export this module.
A network is classified as metered when the user is sensitive to heavy data usage on that connection due to monetary costs, data limitations or battery/performance issues.
A new event is started when the previous origin does not match the current, or the origins don't allow matching.
A new force index can be used to overwrite previous ranges.
A new line literal is okay.
A new one is created every time the selection changes.
A no-op function to act as placeholder for comment accumulation when the `skipComments` option is `false`.
A no-operation function that returns `undefined` regardless of the arguments it receives.
A node ID is only generated if the node does not have an id and there is no existing edge.
A node can be "kept" (opened permanently) by double clicking it.
A node is "valid" if it is contained by a currently mounted container.
A non-nullable buffer property.
A normalized type used internally to represent all possible kinds of messages.
A note about event ordering in the `EventPluginHub`.
A notification stream to communicate events to atom's notification system.
A nullable string property.
A part of a file/extended header 3.
A path URI is either a local path, such as: /aaa/bb/ccc or remote nuclide://sandbox.com/aaa/bb/ccc - The URIs can point either to files or to directories.
A path is defined as 'relevant' if it is within the project directory opened within the repo.
A path relative to the folder that contains `service-config.json`.
A path which is failed in all case test should be connected to path of `default` chunk.
A pattern of the next token to check.
A pattern of the previous token to check.
A pending query is resolvable if it is already resolved or will be resolved imminently (i.e. its subtracted query and the subtracted queries of all its pending dependencies have been fetched).
A performance optimization for improving scroll perf of large lists, used in conjunction with overflow: 'hidden' on the row containers.
A pool that executes Promise executors in parallel given the poolSize, in order.
A port of the native Python `range()` function.
A positive number will use setTimeout to schedule any tasks after the eventLoopRunningTime hits the deadline value, otherwise all tasks will be executed in one setImmediate batch (default).
A possible fix would be to trim the dependencies in MessageQueue to its minimal features and embed that in the native runtime.
A pound sign (for Node shebangs)
A prefix of generated ids.
A previous serialized cache has the most recent items first
A previously `stale` scene is now part of the nextState, so we revive it by removing it from the stale scene map.
A primary use-case for this is Objective-C methods.
A project can customize, rename or alias any of these functions as desired, provided the implementation remains unchanged.
A proper, supported way to preload images will be provided as a separate API.
A radial area is just a transformation of a Cartesian line.
A radial line is just a transformation of a Cartesian line.
A reasonable heuristic that prevents us from having to measure.
A recursive descent parser operates by defining functions for all syntactic elements, and recursively calling those, each function advancing the input stream and returning an AST node.
A recursive walk is one where your functions override the default walkers.
A reducer function to invert an array to an Object mapping the string form of the key, to `true`.
A region of untyped code.
A regular expression that was never closed is an error from which we cannot recover.
A regular message, emitted by output providers.
A reload basically indicates that an external program saved the file, so it should trigger a refresh.
A reload changes the text in the buffer, so it should trigger a refresh.
A request timeout is considered a network away event.
A restart is also required when compilation flags have changed.
A resusable polygon graph component
A route is an object that the navigator will use to identify each scene to render.
A rudimentary force layout using Gauss-Seidel.
A second optional argument can be given to further configure the parser process.
A sequence of European terminators adjacent to European numbers changes to all European numbers.
A sequence of neutrals takes the direction of the surrounding strong text if the text on both sides has the same direction.
A series of a non-extending char + any number of extending chars is treated as a single unit as far as editing and measuring is concerned.
A series of checks to make sure we actually have a signed 32-bit number
A server message stream to communicate events to the debugger UI.
A server socket close will trigger a client disconnect and a scheduled reconnect.
A set of functions for modifying `__status__` on records inside of RelayStore.
A set of slashes is initially matched as a regular expression, but could be division
A simple array of data blobs that are passed to the renderRow function in order.
A simple class for collecting bug report data.
A simple elastic interaction, similar to a spring.
A simple gt/lt/eq thing, or just "" to indicate "any version"
A simple heuristic for identifier names in JavaScript.
A simple mixin around ReactLink.forState().
A simple use would be
A simple view that will render a scene for the currently focused sub-state.
A simple walk is one where you simply specify callbacks to be called on specific nodes.
A single 4MB write could cause the system to run out of memory.
A single European separator between two European numbers changes to a European number.
A single `Animated.Value` can drive any number of properties, and each property can be run through an interpolation first.
A single base 64 digit can contain 6 bits of data.
A single benchmark has been passed in from the command line or shell.
A single common separator between two numbers of the same type changes to that type.
A single delegate which handles events from the object.
A singleton cache for search providers and results.
A singleton that listens to grammar changes in all text editors.
A socket operation failed because the network was down.
A space or an exception pattern sequence.
A special path that just echoes back the request headers.
A special, fast, case for the most common use of each
A specialized pseudo-event module to help keep track of components waiting to be notified when their DOM representations are available for use.
A specialized version of `_.forEach` for arrays without support for iteratee shorthands.
A specialized version of `_.includes` for arrays without support for specifying an index to search from.
A specialized version of `_.map` for arrays without support for iteratee shorthands.
A specialized version of `_.reduce` for arrays without support for iteratee shorthands.
A specialized version of `baseCallback` which only supports `this` binding and specifying the number of arguments to provide to `func`.
A stack of lone blocks to be checked for block-level bindings
A static HTML page to display in the WebView.
A static image to display while loading the image source.
A static method that takes a Counter object as an argument.
A stream of PIDs to debug, obtained by connecting to the packager via the DebuggerProxyClient.
A stream of all of the fragments.
A stretchable image to display as the progress bar.
A stretchable image to display behind the progress bar.
A string If matched as a plain string, we need to escape its newlines, since the string needs to be preserved when generating the function body.
A string key was specified, but no value provided
A string that a package can publish to the main part of the home panel.
A styles array always starts with a number identifying the mode/overlays that it is based on (for easy invalidation).
A tag for `c` exists, but the file has been deliberately removed.
A target of 100-200ms of total work per event loop on old/slow devices might be a reasonable place to start.
A task object implements `call`, just like a function.
A task queue that can be configured with an optional scheduler function.
A template source represents a read/write way of accessing a template.
A temporary record of which bindings are already in 'result'
A terminal link function terminates the current compilation recursion and handles compilation of the subtree in the directive.
A terminal type of component representing some virtual dom node.
A textInput should become responder iff the selection changes while there is a touch on the screen.
A time has been selected.
A title for the tab of the newly opened pane.
A top level function.
A trace object is very similar to an error object.
A transfer is a negotiation between a currently set responder and the next element to claim responder status.
A transition completed, but there is already another gesture happening.
A type hint string to display.
A type is an object with a .check method that takes a value and returns true or false according to whether the value matches the type.
A union of HTML4 and HTML5-Draft elements that explicitly or implicitly (for HTML5) forbid the closing tag.
A unique file name and/or restricting the search up to the workspace root (not /) would be better.
A unique identifier for this element to be used in UI Automation testing scripts.
A unique name for the provider to be used for analytics.
A unique name, used internally by quick-open to store cached results.
A utility for creating an Atom-style subscription function (`onDidChangeBlah`, `observeBlah`) with an associated notification mechanism.
A utility for tracking stalls in the JS event loop that prevent timers and other events from being processed in a timely manner.
A utility for writing packages that tail log sources.
A valid comment NOT starting with space
A valid comment starting with space
A valid owner object must be provided.
A value is considered array-like if it's not a function and has a `value.length` that's an integer greater than or equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
A value is object-like if it's not `null` and has a `typeof` result of "object".
A value of `null` means we have not received any confirmation, ever.
A version of processStream that never completes...
A visibility: hidden element used to find the size of things.
A visual line is a line as drawn on the screen.
A watcher parses an expression, collects dependencies, and fires callback when the expression value changes.
A widget might wrap, needs special care
A word is a sequence of any symbols except space and backslash or any symbols escaped with a backslash, that does not start with file:.
A word or several words separated by space(s).
A workaround before Atom 2.0: Atom's Project::setPaths currently uses ::repositoryForDirectorySync, so we need the repo information to already be available when the new path is added.
A workaround before Atom 2.0: see ::getHgRepoInfo of main.js.
A workaround before Atom 2.0: see ::getHgRepoInfo.
A wrapper for making views respond properly to touches (Android only).
A wrapper for making views respond properly to touches.
A wrapper of `scribe_cat` (https://github.com/facebookarchive/scribe/blob/master/examples/scribe_cat) command.
ALSO fails for local deps specified with relative URLs outside of the top level.
AND ITS CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
AND ITS CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
API UTILITIES Indent the given line.
API to setup an object or constructor to be able to emit data events.
APIs listed in this file are ones that should be built into Flow and need to be upstreamed.
APPORTION The core of the algorithm.
ART on the web allows for multiple font-families to be specified.
ASAP was originally a nextTick shim included in Q.
AST walker module for Mozilla Parser API compatible trees A simple walk is one where you simply specify callbacks to be called on specific nodes.
Abandon the binary search at this level.
Abort if no name specified
Abort if not done already and return
Abort if there are pending holds or we're already ready
Abort if we hit a combinator
Abort measurement, if in progress
Abort mouse wheel delta measurement, when scrolling explicitly
Abort traversal if result is false
Above handler holds on to the editor and its data structures.
Absolute + relative path to file
Absolute + relative path to folder
Absolute path that ends with a / See: https://github.com/bower/bower/issues/898
Absolute path to file
Absolute path to folder
Absolute path to folder with .git file
Absolute paths to tests to run.
Abstract (non-buildable) comment supertype.
Abstract class that defines the common interface of PanResponder that handles the gesture actions.
Abstract functions that can be re-implemented by concrete resolvers as necessary
Abstract supertype of all syntactic entities that are allowed to have a .loc field.
Abstraction for a partially-compiled fragment.
Abstracts away all functionality of the reconciler that requires knowledge of the browser context.
Accent color of the control.
Accept flags from any source file in the target.
Accept quoted arguments as-is
Accepts CSS color codes for use with ANSI escape codes.
Accepts a few additional arguments specifically for vue-router.
Accepts a mapping from field names to data IDs.
Accepts a printf-style message.
Accepts any node Stream instance and hijacks its "write()" function, so that it can count any newlines that get written to the output.
Accepts arbitrary React elements as labels.
Accepts only: - Node - Node.ELEMENT_NODE - Node.DOCUMENT_NODE - Object - Any
Accepts the object to check, and an array of allowed property names (strings).
Access rule handler by id (file name).
Accessing Active Themes
Accessing Loaded Themes
Accessing active packages
Accessing available packages
Accessing loaded packages
Accessing the git repository
Accessing this property makes selected-by-default options in Safari work properly
According to the spec for indexed source maps, they have the following attributes:  - version: Which version of the source map spec this map is following.
According to the spec, if the line length is 1, it may be omitted.
According to the spec, source maps have the following attributes:  - version: Which version of the source map spec this map is following.
Account for deferred require load times.
Account for out-of-bounds indices:
Accounts for touch moves that are clustered together in time, moving the same direction.
Accumulate the nanosecond component.
Accumulate the seconds component.
Accumulated changes, for firing change events
Accumulates dispatches on an `SyntheticEvent`, but only for the `dispatchMarker`.
Accumulates items that must not be null or undefined into the first one.
Accumulates items that must not be null or undefined.
Accumulates without regard to direction, does not look for phased registration names.
Accuracy determines how many tokens we look for to guess the position.
Acorn is a tiny, fast JavaScript parser written in JavaScript.
Acorn is organized as a tokenizer and a recursive-descent parser.
Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and various contributors and released under an MIT license.
Actions in this function could also add dependencies to this binding context.
Activate all of the loaded features.
Activate all packages.
Activate atom packages.
Activate nuclide packages.
Activate packages for this iteration.
Activates all nuclide and fb atom packages that do not defer their own activation until a certain command or hook is executed.
Activating and deactivating packages
Acts as an abstraction layer between rules and the main eslint object.
Actual Callbacks object
Actual scrollable element.
Actually bundle it up
Actually doesn't even look at the native event.
Actually it is array that maps node ordinal number to dominator node ordinal number.
Actually pull the requested chunks out of the buffer and return.
Actually spawn the process and compile the module.
Actually swap the components, depending on the transition mode.
Adapt the sometimes-Async api of tough.CookieJar to our requirements
Adapted from String.prototype.endsWith polyfill.
Adb requires us to have at least one (`-T`) but (for now at least) we only want to show live logs.
Add --one option to `apm test` to ensure no deprecated APIs are used: http://blog.atom.io/2015/05/01/removing-deprecated-apis.html.
Add Atom commands idempotently...
Add a "chain" function, which will delegate to the wrapper.
Add a "disposeWhen" callback that, on each evaluation, disposes if the node was removed without using ko.removeNode.
Add a .def to the core to export symbols
Add a callback or a collection of callbacks to the list
Add a chunk of generated JS to the beginning of this source node.
Add a chunk of generated JS to this source node.
Add a dependency on another extension, so that the dependencies are built before extname
Add a dependency to this directive.
Add a directive subscriber.
Add a handler to AppState changes by listening to the `change` event type and providing the handler
Add a list of args to tree's top level dependencies
Add a loading spinner while we fetch the blame.
Add a new file, 'bar.baz', for which the store will not get a notification because the subscription failed.
Add a new option type.
Add a persistent warning message to make sure the user sees it before dismissing.
Add a progress sentinel to prevent the fx queue from being automatically dequeued
Add a remote project to nuclide.
Add a rule configuration from the registry to the ruleSets  This is broken out into its own function so that it doesn't need to be created inside of the while loop.
Add a separate exclamation mark IMG element with a tooltip.
Add a severity level to the front of all configs in the instance.
Add a single config at the beginning consisting of only the severity
Add a single mapping from original source line and column to the generated source's line and column for this source map being created.
Add a span to a line.
Add a task to the queue.
Add a tracked file, ignored file, and untracked file.
Add a trailing offset block at the end of the shorter file.
Add a user to replTestAuth.
Add a user to standaloneTestAuth.
Add a user to the database.
Add a way to keep track of ignored files.
Add additional proxy information to the error if necessary
Add all accessor Array functions to the wrapper.
Add all builtin types
Add all elements to measure into this._tabsElement
Add all mutator Array functions to the wrapper.
Add all nodes that have only weak retainers to traverse their subgraphs.
Add all of the Jasmine global/public interface to the proper global, so a project can use the public interface directly.
Add all of the Underscore functions to the wrapper object.
Add all remaining properties.
Add all the properties of the array.
Add an alias for nodes and links, for convenience.
Add an empty error handler to avoid the "Unhandled Error" message.
Add an event listener an return a disposable for removing it.
Add an explicit substitution for eslint:recommended to conf/eslint.json this lets us use the eslint.json file as the recommended rules
Add an extra line break if the previous object property had a multi-line value.
Add an extra timestamp used to calculate the last sample duration.
Add an observation method for each item in the map.
Add anti-cache in url if needed
Add any previously-created (saved) connection profiles.
Add attribute-related actions.
Add button/input type pseudos
Add checksum (handle both parent tags and self-closing tags)
Add checksum (handle both parent tags, comments and self-closing tags)
Add click listeners into line number gutter for setting breakpoints.
Add compiler and link flags if PGO options are selected
Add customization and verify it works.
Add debbuging-related actions
Add decomposed endpoints as targets
Add dependencies to the queue
Add each property of the leaf.
Add edges into the range based on the query calls.
Add edges' data into the static queries map for the query calls, overwriting any previously existing data for these calls.
Add elements to results, through postFinder if defined
Add empty first edges
Add eslint to list in case user does not have it installed locally
Add event listener shorthand.
Add extraneous as dependencies
Add file and project messages from a second provider.
Add file and project messages from one provider.
Add free-form node-related actions.
Add functions to the `MapCache`.
Add functions to the `SetCache`.
Add functions to the `Set` cache.
Add functions to the `Stack` cache.
Add in properties whose names you wish to fix before setting or getting the value
Add in style property hooks for overriding the default behavior of getting and setting a style property
Add internal properties to preview.
Add it to make this package's modals styleable the same as Atom's tree-view.
Add it to the in memory cache and sort the versions afterwards
Add items into the correct segment with the cursor.
Add leading zero when needed to not care about the next character.
Add list-specific methods
Add listener for local notifications
Add listener for push notifications
Add mappings one character at a time for maximum resolution.
Add markers for the given range(s), or clears them if `ranges` is null.
Add matches to results
Add message for each line ending in a new line.
Add message for the last string which does not end in a new line.
Add methods that should not appear in the components documentation.
Add missing JSX requires.
Add more to the ReactClass base class.
Add new markers for breakpoints without corresponding markers.
Add new messages from ProviderA.
Add observe methods for title and icon by default.
Add offsetParent borders
Add on and off methods to a constructor's prototype, to make registering events on such objects more convenient.
Add other categories.
Add packages whose names are specified to be updated
Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates
Add resource-related actions.
Add rules in reverse order to match the cascade order.
Add self as a dependency to the target watcher.
Add some extra space past the right boundary as the rightmost divider label text may be partially shown rather than just pop up when a new rightmost divider gets into the view.
Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.
Add spaces and `truncationChar` between words of `str` which are longer than `max`.
Add specific method handlers.
Add the "Nuclide" menu, if it's not there already.
Add the DOM element as the "element" property of the instance.
Add the callback to the tail of the queue.
Add the element as a property of the mounted component.
Add the factory function to a cache.
Add the file path to the cache of each directory searched.
Add the first object to the stack of traversed objects.
Add the given source mapping.
Add the given string to this set.
Add the hyperclick markers if there's a new suggestion and it's under the mouse.
Add the listener to keydown.
Add the missing requires.
Add the missing slash, if removed through a path.normalize() call.
Add the new project repositories, if any.
Add the old object onto the stack (as a reference)
Add the ones that don't.
Add the record to the store with a concrete type
Add the remaining (directly-bound) handlers
Add the source content to the _sourcesContents map.
Add the specified value to the counter's count.
Add the the cached results (always will be 0 error and 0 warnings).
Add the writer into the destructuring group.
Add these paths to the arcConfigDirectoryMap as a roundabout way to mock findArcConfigDirectory.
Add this counter to global list.
Add this directory as a new project in atom.
Add this directory as an atom project.
Add to _fileToMessages
Add to the element's handler list, delegates in front
Add to the failed list
Add to the resolved list If there's an exact equal endpoint, replace instead of adding This can happen because the name might not be known from the start
Add trackTiming decorator to instance method that returns a promise.
Add tracker constructors to the top level log object
Add two hrtime readings A and B, overwriting A with the result of the addition.
Add two hrtime readings A and B, returning the result as a new hrtime array.
Add use-strict TODO: implement this, make it configurable Requires
Add verbose displayName to the function, which helps when looking at profiling tools.
Add what has been cached previously to the cache of each directory searched.
Add which for key events
Add your own custom functions to the Underscore object.
Added breakpoints are given a unique id and are added to all available connections.
Added by nuclide-atom-script.
Adding a new member is O(1), testing for membership is O(1), and finding the index of an element is O(1).
Adding and Removing Bindings
Adding the filename to the processed hashmap so the reporting is not affected (showing a warning about .eslintignore being used when it is not really used)
Adding the other cases is misleading and incorrect since it's actually delegating to `fsPromise` here.
Adding the second element, need to change to array.
Adding this assertion here ensures that all of the values are valid ServerStatus options, while yielding better Flow behavior at use sites.
Addiotionally, since this is a function it will not show up in `JSON.stringify` which is what we want.
Additional HTTP headers to send with the request.
Additional `0.4` so the 5th row can peek into view.
Additional example is the .containsSelection property - having it allows efficient selection removal from the entire tree or one of its branches.
Additional methods outside the PendingTransaction interface.
Additionally calculates the properties derived from children and assigns them to this instance
Additionally, an EPERM or EACCES can happen on win32 if it's trying to make a link to a directory.
Additionally, each element is expected to be an object with configuration options for the node (e.g. tags).
Additionally, on Windows ampersand needs to be escaped when passed to "start"
Addressed by retained node index.
Adds "Select all" to context menu in FF
Adds ANSI color escape codes if enabled.
Adds `value` to `set`.
Adds `value` to the cache.
Adds `value` to the set cache.
Adds a component by ref to an owner component.
Adds a default Date header, returning its value.
Adds a deprecation warning when the prop is used.
Adds a header to be signed, with its value, into this signer.
Adds a listener to be invoked when events of the specified type are emitted.
Adds a new rule test to execute.
Adds a scope info to the stack.
Adds a scope information object to the stack.
Adds a self-disposing Atom's tooltip to a react element.
Adds a subscription keyed by an event type.
Adds all segments of a given fork context into this context.
Adds an 'Authorization' header to an http.ClientRequest object.
Adds an Atom notification for the detected heartbeat network status The function makes sure not to add many notifications for the same event and prioritize new events.
Adds an `event` listener that will be invoked a single time then automatically removed.
Adds an additional builder for Expression subtypes that wraps the built Expression in an ExpressionStatements.
Adds an asynchronous listener to the value so you can observe updates from animations.
Adds an end-of-line character to `text` and appends the resulting string to this controller's text buffer.
Adds an option 'styleSelectedText' which, when enabled, gives selected text the CSS class given as option value, or "CodeMirror-selectedtext" when the value is not a string.
Adds an update to the store and commits it immediately.
Adds an update to the store without committing it.
Adds given segments into the `dest` array.
Adds information of a constructor into the stack.
Adds multiple items to the tail of an array.
Adds newly fetched edges to a range.
Adds null elements of the given ArrayExpression or ArrayPattern node to the ignore list.
Adds or removes paths from the pathSet based on the files in the update.
Adds parenthesis and the appropriate markers to a set of lines.
Adds segments into this context.
Adds the edge to the end of the range.
Adds the edge to the front of the range.
Adds the key-value `pair` to `map`.
Adds the new property and triggers change notification if the property doesn't already exist.
Adds the request target line to be signed.
Adds the specified item to this contenxt menu.
Adds the specified submenu to this contenxt menu.
Adds this into `childCodePaths` of `upper`.
Adjacent blocks (including context) should get merged into a single group.
Adjust a location and a message.
Adjust a position to refer to the post-change position of the same text, or the end of the change if the change covers it.
Adjust column if needed.
Adjust frontier, schedule worker
Adjust the line structure
Admittedly, this is a little gross, but it seems better than setting style.width on every item that we create and having to give it a special flexbox layout.
Advance the heartbeat interval.
Advance the index before calling the task.
Advance the previous points.
Advanced - rgba(), hsla()
After DOM is flushed, invoke all registered `onDOMReady` callbacks.
After a Nav move, any non-nav moves or scroll changes update the current nav location.
After a span has been chosen make grid lines at multiples of the span.
After a spread element, those indices are unknown.
After a suitable version has been elected for every package
After adding the existing files to git, add an ignored file to prove we're using git to populate the list.
After adding the existing files to hg, add an ignored file to prove we're using hg to populate the list.
After batch of packages has been fetched, the results are stored in _resolved hash.
After clicking the reset, there should still only be one click log ref.
After editing is committed updateTitle will be called.
After file: prefix: any symbol except space and backslash or any symbol escaped with a backslash.
After initialization all newly added DataIDs will be registered in the created garbage collector.
After loading a test Buck project, this tests:  1.
After node 0.12.0 this function serves to allocate Debug Context like a persistent value, that saves all our changes.
After printing the AST parts and all appropriate markers this will join the parts based on options and the markers that are available.
After setting up the mocks, you must invalidate the require cache and then re-require the module under test so that it picks up the mocked dependencies.
After spacing out the children by calling EXECUTE SHIFTS, the node v is placed to the midpoint of its outermost children.
After starting this script, run start-hhvm-client.sh to launch hhvm with xdebug enabled.
After the directory specified by fixtureName is copied, its .hg-rename folder will be renamed to .hg, so that it can act as a mercurial repository.
After the initial mount, we control selected-ness manually so don't pass the context value down
After the initial mount, we control selected-ness manually so don't pass this value down
After the promise returned by debug() is resolved, call sendCommand() to send Chrome Commands, and be prepared to receive notifications via the server notifications observable.
After the remote connection is reestablished, nuclide-remote-projects will convert the TextBuffer to NuclideTextBuffer.
After the update, the text nodes should have stayed in place (as opposed to getting unmounted and remounted)
After the variable name there may appear array or object operator.
After these have been cleaned up, we'll let them throw.
Aggregate and count blank lines
Aggregate those arrays.
Aggregates on the first column, averaging the other columns.
Aggregates the buffered stats up by suffixing avg, min, max to their names.
Alias a module definition.
Aliased as `head` and `take`.
Aliased as `include`.
Aliased as `tail` and `drop`.
Aliases may be return types, or non-return types.
Align gridSliceTime to a nearest round value.
All **ECMAScript 5** native function implementations that we hope to use are declared here.
All Arcanist services take a file.
All Buck commands for a project should be done through an instance of this class.
All DOM nodes support `getAttributeNode` but this can also get called on other objects so just return '' if we're given something other than a DOM node (such as window).
All Parser API node types can be used to identify node types, as well as Expression, Statement, and ScopeBody, which denote categories of nodes.
All ScrollView-like components should implement this method so that they can be composed while providing access to the underlying scroll responder's methods.
All `gestureState` accounts for timeStamps up until:
All alternates must be unique.
All are flag-free, unless they were created above with a flag.
All arguments will be passed to each listener.
All assertion methods provide both the actual and expected values to the assertion error for display purposes.
All attributes are lowercase Grab necessary hook if one is defined
All calls relating to the keyboard should be funneled through here
All children that haven't already been validated are required to have a "key" property assigned to it.
All comparisons are done based on these tokens directly, so they are always valid regardless of an undefined item.
All components are capable of //being// referenced by owner components, but only ReactOwner components are capable of //referencing// owned components.
All even indices of this array are one line of the generated code, while all odd indices are the newlines between two adjacent lines (since `REGEX_NEWLINE` captures its match).
All fields present, nothing to diff.
All functionality available through `AlertIOS.alert` is also available in the cross-platform `Alert.alert`, which we recommend you use if you don't need iOS-specific functionality.
All functions expected to have less arguments than 5.
All functions will have 5 or fewer parameters.
All handlers of that particular type will be notified.
All in the name of speed.
All keys and values are on the same line
All major browsers except Firefox resets selectedIndex with value -1 to 0 when the element is appended to a new parent, therefore we have to force a DOM update whenever that happens...
All messages from ProviderB should be removed.
All nodes except the root have dominators.
All nodes have parent links.
All non-blocking requests should instantly fail.
All of the PEM file types start with a sequence tag, so chop it off here
All of the above are perceived as null.
All of the following functions must throw an AssertionError when a corresponding condition is not met, with a message that may be undefined if not provided.
All of the isCustomAttribute() functions that have been injected.
All of the other arguments are multiplied together.
All of these matrix transforms are not general purpose utilities, and are only suitable for being inlined for the use of building up interpolators.
All of these methods may return the original node in order to leave it intact.
All of this will happen after all of the specs are loaded.
All options are optional
All other modules go into a 'js-modules' folder that in the same parent directory as the startup file.
All paths are presumed to be within the repo.
All previous navigation items are in the left stage.
All properties (except metadata keys) of `actual` should be in `expected`.
All properties except for `generatedLine` and `generatedColumn` can be `null`.
All properties in `expected` should be in `actual`.
All properties, including accessors
All property derivation and links set-up is done with one traversal only over the children.
All remotable objects have some set of named functions, and they also have a dispose method.
All rows but the first one should be indented at least 2 extra levels.
All scenes after it will be unmounted.
All spies expect spy_fileA should be called immediately because there is relevant data in the store.
All spies should be called immediately because there is relevant data in the store.
All state for the file tree will be kept in FileTreeStore and the only way to update the store is through methods on FileTreeActions.
All subsequent arguments will be forwarded to the function exported by the JavaScript file to run.
All subsequent uses are going to refer an id (not implemented yet).
All the actual chunk generation logic needs to be below* the call to _read.
All the elements that respond to press should have a visual feedback when touched.
All the native tags are negative numbers, to avoid collisions, but in the JS we keep track of them as positive integers to store them effectively in Arrays.
All the scenes of the containing view's.
All this logic will automatically be available in application.js.
All token type variables start with an underscore, to make them easy to recognize.
All transactions in the collision queue, including this one, have been failed as well.
All transform components needed to recompose matrix
All upcoming navigation items are in the right stage.
All values are 'true'.
All view changes should be pushed from the model/store through subscriptions.
All we need is an object that represents the packager server.
All you have to do is push changes to remote and CI will make a new build.
Allocate `nextResults` if and only if results have changed.
Allow "beforeChange" event handlers to influence a change
Allow all language-specific providers to take priority.
Allow both individual event names, and arrays of event names
Allow code injection via the URL OR load code from localStorage OR prime the playground with some default 'hello world' code
Allow custom headers/mimetypes and early abort
Allow for MSIE11 msCrypto
Allow for deprecating things in the process of starting up.
Allow for good error messages
Allow instantiation without the 'new' keyword
Allow interspersed arguments (true by default).
Allow jasmine to interact with the DOM.
Allow mock data to pass through without modification.
Allow other node type for tolerant parsing.
Allow running the command as root
Allow runtime properties query for objects accessible from Window objects via regular properties, and for DOM wrappers.
Allow scrolling to proceed as usual.
Allow sidebar to be less than preferred by explicit user action.
Allow special events to draw outside the lines
Allow the panel to show itself when handling the event.
Allow the user to override this setting.
Allow touchable or props.onResponderTerminationRequest to deny the request
Allow unknown options on the command line.
Allow us to introduce you to the four elements.
Allowed attribute value characters
Allows a caller to ensure that the results it receives from consecutive promise resolutions are never outdated.
Allows avoiding binding callbacks.
Allows completions to immediately appear when we are completing off of object properties.
Allows custom handling of any webview requests by a JS handler.
Allows extraction of a minified key.
Allows for debugging when the hook is injected on the page.
Allows registered plugins an opportunity to extract events from top-level native browser events.
Allows tests to use the non-fake setTimeout and clearTimeout functions.
Almost always Script scope will be empty, so just filter out that noise.
Almost identical API to normal `Animated.Value`, but multiplexed.
Alow for failure for coverage report
Already a node handle
Already has this active route.
Already have more edges than the input.
Already in the tree, we just got an extra update.
Already removed by the for-loop above.
Also adjust the label size for subsequent logs
Also builds up a 'line map', which points at the DOM nodes that represent specific stretches of text, and is used by the measuring code.
Also check after the comment
Also check for hosts that have been checked in a previous request and have been found to support shallow cloning.
Also clear any immediate-child comment nodes, as these wouldn't have been found by node.getElementsByTagName("*") in cleanNode() (comment nodes aren't elements)
Also consider perusing the already-written tests in the top-level `spec/` directory.
Also do so recursively for all child fragments.
Also drop empty Block scopes, should we get any.
Also enables stack trace for warnings.
Also erase the DOM data
Also figure out max cell width for each column
Also filter out any prototype objects using the circular check.
Also iterate through all the previous props to catch any that have been removed and make sure native gets the signal so it can reset them to the default.
Also jump by 10 for page up and down, or by 100 if shift is held with a page key.
Also known as the sample variance, where the denominator is n - 1.
Also makes sure all path separators are POSIX style for `glob` compatibility.
Also note that this expects the qw value to be last, not first.
Also remember the case of the header name because lots of broken servers expect Host instead of host and we want the caller to be able to specify this.
Also the ("" + obj) expression may throw.
Also the other way round should work
Also unregister that callback if it was a one time timer (setTimeout), and not unregister it if it was recurring (setInterval).
Also, an important relationship between these methods must be upheld: if two values are equal, they *must* return the same hashCode.
Also, any write operation will update them.
Also, dev/ino values differ across machines, so that's not included.
Also, if a special data "abort" (with quote) is received, it will crash itself.
Also, if the push() triggered a readable event, and the user called read(largeNumber) such that needReadable was set, then we ought to push more, so that another 'readable' event will be triggered.
Also, if we have no data yet, we can stand some more bytes.
Also, invoking `executeTask` more than once is an error.
Also, it deelegates the language feature request to the correct HackLanguage instance.
Also, it provides a relatively simple matcher so that if it thinks that you likely mistyped the event name it will suggest what you might have meant to type in the error message.
Also, need to copy if we've already done some copying, since buffers can't be joined like cons strings.
Also, no instanceof check will work.
Also, set the origin to the opposite side.
Also, since we're automatically retrying, displaying it would mean users would get an inexplicable old entry.
Also, sometimes we want to have a fallback Pass in a callback to wait for the fallback on failures After the first lookup, always returns the same thing.
Also, the length of `resultList` and `markupList` should be the same.
Also, there may previously have been leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.
Also, these events are not triggered in older browsers so we should be A-OK here.
Alternately existing connections can be queried with getByHostname().
Alternately, set max digit bits to 28 since some browsers slow down when dealing with 32-bit numbers.
Alternatively, this method can be used to lookup IDs, returned by StyleSheet.register.
Alternatively, we can disallow componentWillMount during server-side rendering.
Although Node is single-threaded, there could be multiple Node processes running simultaneously that are using the cache.
Although `baz` is enqueued before `bar`, `bar` should execute first.
Although it could return a Promise, it returns void to be consistent with the original implementation of console.log().
Although message channels yield to any queued rendering and IO tasks, they would be better than imposing the 4ms delay of timers.
Although parentheses wouldn't hurt around sequence expressions in the head of for loops, traditional style dictates that e.g. i++, j++ should not be wrapped with parentheses.
Although resultList was populated out of order, it should now be a dense array.
Although setImmediate yields to the browser's renderer, it would be preferrable to falling back to setTimeout since it does not have the minimum 4ms penalty.
Although the Toolbar supports remote images for the logo, navigation and action icons, this should only be used in DEV mode where `require('./some_icon.png')` translates into a packager URL.
Although we could make up a name or generate an anonymous source map, instead we assume that any consumer who does not provide a name does not actually want a source map.
Always allow sequences in for statement update
Always append ourselves to the end of the arguments, to make sure we match the number of arguments the user expects
Always check object names
Always ensure that absolute sources are internally stored relative to the source root, if the source root is absolute.
Always have one single local connection.
Always include top-level record for a visible nested record.
Always patch fs.close/closeSync, because we want to retry() whenever a close happens *anywhere* in the program.
Always render it, even if removed, so that we can get the height right away and don't waste time creating/ destroying it.
Always rendered at the bottom of all the rows.
Always report underscored object names
Always return the key for a frozen object.
Always set children to the same thing.
Always skip document fragments
Always tab to the next field.
Always test the cmd itself first.
Always use first control as a time converter.
Always use the current scope.
Always use this or `setState` to mutate state.
Always use this to mutate state.
Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
Always write to ensure data is stored in the correct recordStore.
Amend code changes to the latest commit.
Amend the revisions state with the latest selected valid compare commit id.
Among cookies that have equal-length path fields, cookies with earlier creation-times are listed before cookies with later creation-times."
Amount to sum when the label exceeds
Amplitude of release velocity that is considered still
An Array of Calls to be used with rangeBehavior config functions.
An ElementRange identifies a range of child elements of a data value.
An IndexedSourceMapConsumer instance represents a parsed source map which we can query for information.
An Rx Observable representing the results of a fragment in the local cache.
An `egal` comparison is performed for other numeric values.
An added property, remove the last property in the style.
An additional 4 px is needed to make it look the same way it does when it shows up below.
An additional grant of patent rights can be found in the PATENTS file in the same directory.
An additional grant', ' * of patent rights can be found in the PATENTS file in the same directory.', ' *', '
An alias for `getAlert` to get the notification's main message string
An alternative interface for `track` that accepts a single event object.
An alternative is to implement `equals` and `hashCode`.
An ancestor walk builds up an array of ancestor nodes (including the current node) and passes them to the callback as the state parameter.
An area is just two lines, with one reversed.
An arg and interspersed args are not allowed, so done options.
An array of Mixin objects to include when defining your component.
An array of bytes the size of the pool will be passed to init()
An array of child indices determining which children get docked to the top of the screen when scrolling.
An array of contents of the original source files.
An array of ranges of lines that have to be updated.
An array of strings which are snippets of generated JS, or other SourceNodes.
An array of the next segments.
An array of the previous segments.
An asynchronous traversal that knows how to read roots and nodes from a `CacheManager`.
An easy way to perform CSS transitions and animations when a React component enters or leaves the DOM.
An empty string is returned for `null` and `undefined` values.
An error should be thrown only if the specified targets are invalid.
An error thrown from an event will not interrupt, nor even substantially slow down the processing of other events, but will be rather postponed to a lower priority event.
An error will return non-JSON.
An event cycle that was previously created hasn't finished yet.
An example of constructing a new type with arbitrary constraints from an existing type.
An exception thrown by a task will permanently interrupt the processing of subsequent tasks.
An exception thrown in a task can be handled by `process.on("uncaughtException") or `domain.on("error")`, but will otherwise crash the process.
An exit signal from SIGUSR1 doesn't actually exit the process, so skip that.
An experimental ListView implementation designed for efficient memory usage when rendering huge/infinite lists.
An explicit value of undefined is treated as a null because it overrides any other preceeding value.
An exported function that can be directly called by a client.
An exported type alias.
An extra second should be enough for this test not to be flakey.
An iOS-specific component used to select a single value from a range of values.
An implementation of ProcessOutputHandler that parses and applies the behavior of ANSI escape characters that Buck uses.
An incoming prop transition may cause a state change, but the opposite is not true.
An incrementing ID assigned to each component when it is mounted.
An indent/prefix to use for each option line.
An index past all the properties adds a new property to the style.
An initial attempt to mock the clock was unsuccessful, probably because of problems clearing the require cache thoroughly enough that the debounce function picks up the mocked clock.
An initial notification will be available if the app was cold-launched from a notification.
An injected scheduler using `setImmediate` can alter this behavior.
An instance can either be created by calling the constructor which accepts multiple options and the configuration, or by calling a `createChild()` method.
An instance of the SourceMapGenerator represents a source map which is being built incrementally.
An internal function to generate lookup iterators.
An internal function used for aggregate "group by" operations.
An interpolation maps input ranges to output ranges, typically using a linear interpolation but also supports easing functions.
An invalid URI might cause an exception to be thrown
An invisible, mouseable area for starting a new brush.
An object containing properties and methods that should be defined on the component's constructor instead of its prototype (static methods).
An object of properties 2.
An object specifying methods that will be called with output from a process.
An opening object literal 2.
An optimization is to attach the new elements and THEN detach the old ones instead of detaching and THEN attaching.
An optional ProcessOutputHandler that is appropriate for the expected output.
An optional React component that will be placed at the top of the process output view.
An optional `thisArg` can be passed to set the context when `callback` is called.
An optional calling context may be provided.
An optional collision key allows a mutation to identify itself with other mutations that affect the same fields.
An optional number property.
An optional path to a log file to which test output should be logged.
An optional second argument can be supplied to override the component's default variables.
An output window stream to communicate events to the client's output window.
An update here will schedule an update but immediately set _pendingStateQueue which will ensure that any state updates gets immediately reconciled instead of waiting for the next batch.
And adds a repeat flag.
And allows empty cases and the last case.
And any existing localAddress is part of the connection name.
And emits onCodePathStart/onCodePathSegmentStart events.
And failing that, we error out
And if you have more than a few hundred you probably have bigger problems.
And if your browser doesn't support __proto__, we'll use direct extension.
And node 0.10 lacks the .equals() method on Buffers.
And none of the connections is enabled.
And propagate it to other series.
And reports if `super()` lacked.
And reports the previous fallthrough node if that does not exist.
And test that completion status filters up
And the offline flag is passed, error out
And then calculate the module map.
And there needn't be a 1:1 relationship between RemoteConnections and hg repos.
And this function registers the segment into the previous segments as a next.
And this treverses all segments of this code path then reports every invalid node.
Android Chrome doesn't give us keycodes, so we need to blacklist it.
Android Connectivity Types.
Android Material Design
Android Types (not yet implemented)
Android doesn't trigger composition events for language input methods e.g. Chinese, but instead triggers them for spelling suggestions...
Android-Specific styles
Animate the touchable to a new opacity.
Animated toValue's are tracked
Animated value passed in.
Animated works by building a directed acyclic graph of dependencies transparently when you render your Animated components.
Animates a value along a timed easing curve.
Animates a value from an initial velocity to zero based on a decay coefficient.
Animating *into* the center stage from the right
Animating out of the center stage, to the left
Animation interpolators for horizontal transitioning:
Animations are an important part of modern UX, and the `Animated` library is designed to make them fluid, powerful, and easy to build and maintain.
Animations are heavily configurable.
Animations created synchronously will run synchronously
Annotate the "checkFile" error.
Annotate the "stat" error with what we were doing.
Annotation title/subtile.
Anonymous divs do not seem to expose properties, triggering a "Permission denied error" if any of its properties are accessed.
Anonymous templates can't be rewritten.
Another DebuggerInstnace is alive.
Another approach is to implicitly close a string on EOL but it generates too many false positives.
Another common pattern for atom.commands.add.
Another way to think of the stages is in terms of transitions.
Any "resolved precise dependency" things that aren't already on this object get added, and then that's passed to the next generation of installation.
Any CopyConstructor you give this may have a `poolSize` property, and will look for a prototypical `destructor` on instances (optional).
Any JSX elements will get transpiled to use React.
Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts, or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
Any arguments to pass to the function must be specified via the `args` property as an Array.
Any attribute removal or modification can affect the styles of "related" nodes.
Any data fetched for these children is not written to the client store, but you can add code to process it in the `onSuccess` callback passed to the `RelayEnvironment` `applyUpdate` method.
Any data that previously satisfied the queries will be overwritten.
Any declarations that occur inside the catch body that do not have the same name as the catch parameter should count as bindings in the outer scope.
Any error other than ENOTDIR means it's not readable, or doesn't exist.
Any errors or warnings that happened on the current line, make them go away.
Any is required here as otherwise we get a flow error in core.js
Any lines that weren't in the new blameForEditor are outdated.
Any move event could trigger a transfer.
Any non-remote NuclideUri will do.
Any null children will not be included in the resulting object.
Any older version that we don't support
Any other declarations create bindings in the outer scope.
Any other events can be tracked normally using the interfaces provided by nuclide-analytics.
Any other headers in the options.headers array MUST be present, or this will throw.
Any other literal is not.
Any other non-undefined value returned from the visitor method is interpreted as a replacement value.
Any other properties and methods in the class specification will be available on the prototype.
Any partial character found at the end of the buffer is buffered up, and will be returned when calling write again with the remaining bytes.
Any prior content inside `container` is destroyed in the process.
Any problems will surface later.
Any remaining neutrals take the embedding direction.
Any start event could trigger a transfer of responderInst.
Any time npm installs itself globally, it puts its builtin config file there
Any updates enqueued while reconciling must be performed after this entire batch.
Anything else beginning with a digit is an integer, octal number, or float.
Anything else is a record.
Anything goes, except ..
Anything included at this point will be checked again later once we know what it is.
Anything left with an `order` of `NA` will be required to never be invoked (the test runner will make sure it throws if ever invoked).
Apart from that: Searching for package.json up to the root is kind of non-deterministic for testing purposes.
AppState is frequently used to determine the intent and proper behavior when handling push notifications.
AppStateIOS is frequently used to determine the intent and proper behavior when handling push notifications.
Apparently String.prototype.localeCompare() is not i18n-aware in Node 0.10.x.
Apparently copyHtml() is exposed as an export of markdown-preview.
Apparently it can sometimes include a `code` property.
Apparently not the version we were looking for
Apparently sometimes Atom supplies an invalid directory, or a directory with an invalid paths.
Apparently the arguments for waitsFor() can be specified in any order.
Append a "px" unit if the user input was just a number.
Append a PASS/FAIL message depending on whether the class has test failures.
Append a break element instead of setting textContent to make sure the selection is inside the prompt.
Append a comma so that we don't need a separate code block to deal with the last item
Append a space to prevent the anchor text from being glued to the console message when the user selects and copies the console messages.
Append an empty space before.
Append args on the end of our commands.
Append first version of ESLint rule was added at.
Append its entirety to the console.
Append on new segment
Append on range that already has an edge
Append on segment that already has item
Append operation that takes a callback.
Append the interval itself.
Append the processed text to a new line.
Append with transition.
Appends and prepends new edges
Appends the elements of `values` to `array`.
AppleScript brush by David Chambers http://davidchambersdesign.com/
Application page one component.
Application page two component.
Application popup page component.
Applies the fixes specified by the messages to the given text.
Applies the mappings of a sub-source-map for a specific source file to the source map being generated.
Applies the transaction to the local store (ie.
Applies to all files except .hgignore files.
Applies to both maps and entries array.
Applies to both standard pins and custom pin images.
Applies values from the "extends" field in a configuration file.
Apply 'meta' style to '.' connected identifiers when appropriate.
Apply a change to a document, and add it to the document's history, and propagating it to all linked documents.
Apply a global mixin by merging it into the default options.
Apply a linker to a vm/element pair and capture the directives created during the process.
Apply a list of filter (descriptors) to a value.
Apply a value to the option element
Apply an update to the state.
Apply and save package meta
Apply as global transform so that we also envify fbjs and any other deps
Apply converter (if not an equivalence)
Apply custom fields if provided
Apply default values.
Apply options to a copy of the defaults
Apply options to defaults except for the listed keys which are shallow copied from option without merging
Apply server configuration options, if available
Apply set filters to unmatched elements
Apply some text to the option element
Apply the dataFilter if provided
Apply the scale, computing it from the value's exponent for si format.
Apply transitions with an operation callback.
Apply unix properties to request
Applying the SourceMap can add and remove items from the sources and the names array.
Approximations of internal ECMAScript conversion functions
Apps unregistered through this method can always re-register.
Arc lint outputs multiple JSON objects on mutliple lines.
Are we in a legit ES5 environment.
Argument `name` is missing.
Arithmetic mean of Cartesian vectors.
Array Functions --------------- Get the first element of an array.
Array and Object children may be paged.
Array below contains pseudo id names for corresponding enum indexes.
Array comparator for ReactComponents by mount ordering.
Array index check according to the ES5-15.4.
Array might not be iterable in this environment, so we need a fallback to our wrapped type.
Array of animations may run in parallel (overlap), but are started in sequence with successive delays.
Array of completion types for positional args (i.e. non-options).
Array-as-queue is good enough here, since we are just dealing with exceptions.
Array.mergeOrdered coalesces objects if comparator returns 0.
Arrays of change events and selections.
Arrays of history events.
Arrow function bodies are allowed to be expressions.
Arrow keys, Esc key, etc.
Arrows don't have "arguments".,
As "clean" as that solution is, watchers require setting up, and are a departure from how the Atom development ecosystem works.
As ImportDefaultSpecifier nodes, or as ImportSpecifier nodes with a "default" imported name:
As a convenience we allow the whole radial gradient to cover the bounding box.
As a fallback, make the tmpdir() be the dev dir for this installation.
As a result of this call, you can call `Reader.length`, until the next thing called that does a readLength.
As a result, `touchableHandlePress` will be called when lifting up, even if `touchableHandleLongPress` has also been called.
As a shorthand, "text/plain" can be omitted but the charset parameter supplied.
As all we actually test ARE directories, this is a bit of a problem.
As always, to obtain a native node handle for a component, you can use `React.findNodeHandle(component)`.
As an optimization, line widget aligning is skipped when this is false.
As an optimization, widget aligning is skipped when d is false.
As below, benefit from jQuery's optimisations where possible
As data becomes ready, the component will be updated.
As defined in com.facebook.buck.cli.Command, some of Buck's subcommands are read-only.
As efficiently as possible, decorate the comment object with .precedingNode, .enclosingNode, and/or .followingNode properties, at least one of which is guaranteed to be defined.
As it is, the package has already been normalized and thus some errors are suppressed.
As it works out, escaping an even number of slashes can be done by simply repeating it exactly after itself.
As last check, we compare both commit hashes
As last resort, we try the registry
As long as we have it in a tracked query.
As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there isn't a whole lot we can do.
As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.
As of the introduction of atom.workspace.buildTextEditor(), it is no longer possible to subclass TextEditor to create a ReadOnlyTextEditor.
As of v27, Firefox may fire keypress events even when no character will be inserted.
As only the latest one it was assigned to is considered its parent from the node's perspective.
As opposed to the ios version, here it render `null` when no source or source.uri...
As soon as `ReactMount` is refactored to not rely on the DOM, we can share code between the two.
As such, `GraphQLSegment` offers both a `getCount` method (returning the number of non-deleted edges) and a `getLength` method (which returns the total number, including deleted edges).
As such, any tests for it that need to use Atom's built-in test runner need to live elsewhere, which is why they are in the top-level spec/ directory.
As such, only keys that correspond to printable characters produce a valid `charCode`, the only exception to this is Enter.
As such, this class serves as an adapter between the numeric priority model and ContextMenuManager's model.
As such, we default this to false and encourage your users to override it via config if appropriate.
As such, we employ a hack inspired by http://stackoverflow.com/a/20888342/396304.
As such, we have to perform a second check to make sure that the specified directory belongs to a Hack project.
As such, we must override createdCallback() instead:
As we can easily fire warnings for all white space issues with all the source its simpler to fire them here.
As well, disconnected nodes are said to be in a document fragment in IE 9
As you can imagine, the way that we are getting this path is not documented and is therefore unstable.
Ascend the current node's parents
Ask frontend to add a new log into console window.
Ask watchman to watch the directory.
Aspirational for now.
Assert `eslint.getDeclaredVariables(node)` is empty.
Assert `eslint.getDeclaredVariables(node)` is valid.
Assert mutation and markup correctness for v-for on an Array of Objects
Assert mutation and markup correctness for v-for on an Array of primitive values
Assert mutation and markup correctness for v-for on an Object of Objects
Assert mutation and markup correctness for v-for on an Object of primitive values
Assert the length of the array.
Assert whether a prop is valid.
Asserts that following token is given contextual keyword.
Asserts that two configs are equal.
Assets  When a vm is present (instance creation), we need to do a three-way merge between constructor options, instance options and parent options.
Assign `value` only when needed so a null/undefined value will show an indeterminate progress bar.
Assign a trasparent color if the flow is small enough or if the previous color was a transparent color.
Assign an unique key to element so that react treats it as a new element.
Assign local variables to preserve Flow type refinement.
Assign parent directory to directory.
Assign to newCache so results back-propagate to previous elements
Assigning to a non-nullable value after checking placates flow in this regard.
AssignmentExpression 2.
AssignmentPattern nodes may appear wherever a Pattern is allowed, and the right-hand side represents a default value to be destructured against the left-hand side, if no value is otherwise provided.
Assigns `value` to the property of `state.data` identified by `key`.
Assigns a maximum track image.
Assigns a minimum track image.
Assigns a new global property, replacing the existing one if there is one.
Assigns a single image for the track.
Assigns to a property.
Associate a data ID with a storage key (and optionally an identifying argument value) for a root query.
Associate first line with "lastMapping"
Associate full lines with "lastMapping"
Associate the code between "lastGeneratedColumn" and "mapping.generatedColumn" with "lastMapping"
Associate the remaining code in the current line with "lastMapping"
Associate the remaining code in the current line with "lastMapping" and add the remaining lines without any mapping
Association is done by ways of keeping a non-enumerable property on the object.
Assume equality for cyclic structures.
Assume identity mapping if no targetLoc specified.
Assume inputs without method will throw during the slice call and skip straight to the fallback.
Assume it's a directory.
Assume jQuery is ready without the ready module
Assume new contents if the request failed Note that we do not retry the request using the "request-replay" module because it would take too long
Assume node(12345) is a Story
Assume object is an array
Assume optimal parallelization.
Assume that all non-ASCII characters are letters and thus can be used as part of identifier.
Assume that all spreads exist via template substitution.
Assume that if `forceFetch` requests exist, they were last.
Assume that variables named like substitutions are substitutions.
Assume the hearbeat didn't happen.
Assumes everything on the item is a config except for the parameters used by this tester
Assuming our invariants hold, if this case fires, that means that there is more than one status bar provider, which is weird.
Assuming that it is a US keyboard layout provides a surprisingly accurate mapping for US and European users.
Assumption is that severity values have already been validated as correct.
Async handle parsing websocket address from the stdout of the child.
Async listener for state changes  (step1: uncomment)
Async tests use this one to report failures.
Async tests use this one to report that they are completed.
AsyncStorage is a simple, asynchronous, persistent, key-value storage system that is global to the app.
Asynchronous change emitter for nodes stored in the Relay cache.
Asynchronous mapping from preload query IDs to results.
Asynchronously fetch a boolean to determine internet connectivity.
Asynchronously returns the owner hierarchy as an array of strings.
Asynchronously run the extensions.
Asynchronously write the result to the cache.
At construction an extractor to get the interesting information was defined (or the default was used).
At each x, compute a local weighted linear regression
At first glance, one might be inclined to use the traditional formula to translate binary numbers between the positive and negative values in two's complement.
At first step we merge all plugins in one protocol.
At least for now HTML5 history is available for 'modern' browsers only
At least one space followed by a tab before non-tab/-space characters begin.
At least one space followed by a tab or the reverse before non-tab/-space characters begin.
At least, one hex digit is required.
At most three buttons (neutral, negative, positive).
At present only the three keys mentioned above are used and understood by the spec.
At second step we merge plugins with main protocol.
At the moment it only supports having a single View instance as a child node, as it's implemented by replacing that View with another instance of RCTView node with some additional properties set.
At the moment, "well-formed" means that the query does not contain duplicate aliases.
At the same time, this reports the function node if the function has `.bind()` and the `this` keywords found.
At the same time, this reports the label if it's never used.
At this point insertionIndex is always an index before button or between nodes.
At this point the negotiation events have been dispatched as part of the extraction process, but not the side effectful events.
At this point the parent folder should be deleted To test against the in-memory cache, we create a folder manually and request the versions
At this point the user needs to make a decision
At this point we couldn't get the IE `uniqueID` to use as a hash and we couldn't use a non-enumerable property to exploit the dontEnum bug so we simply add the `UID_HASH_KEY` on the node itself.
At this point we couldn't get the IE `uniqueID` to use as a hash and we couldn't use a non-enumerable property to exploit the dontEnum bug so we simply add the `hashProperty` on the node itself.
At this point, figure out what dependencies we NEED to get met
At this point, if shasum is set, it's something that we've already read and checked.
At this point, if they have a credentials object, it doesn't have a token or auth in it.
At this point, no pattern may contain "/" in it so we're going to return a 2d array, where each entry is the full pattern, split on '/', and then turned into a regular expression.
At this point, the binding context has been initialized, and the "subscribable" computed observable is subscribed to any observables that were accessed in the process.
At this point, the matrix (in rows) is orthonormal.
At this point, the range is completely trimmed and ready to be split into comparators.
At this point, there should be ProviderA project messages, and ProviderB file and project messages.
At this point, there should be no ProviderA messages, and ProviderB file and project messages.
At this point, there's a conflict
At this point, we can discard any views that are beyond the `requestedTopOfStack`.
At this point, we're already done writing whatever we've gotta write, adding files to the dir, etc.
Atom 1.4.0+ serializes TextBuffers with the ID generated by `getId`.
Atom UI notification.
Atom ViewProvider compatible model object.
Atom can't handle files of this scale anyway.
Atom doesn't accept in-command modification of the text editor contents.
Atom ensures that each pane only has one item per unique URI.
Atom is smart about only displaying a separator when there are items to separate, so there will never be a dangling separator at the end.
Atom issue: https://github.com/atom/atom/issues/6695
Atom prevents in-command modification to text editor content.
Atom takes the first button in the list as default option.
Atom tries to diff contents even for extremely large files, which can easily cause the editor to lock.
Atom watcher behavior compatability.
Atom's babel-core may already be in the require cache if a module before us needed "use babel" transpilation.
Atom's implementation will fail at this test case.
Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is removed using ko.removeNode.
Attach a bunch of functions for handling common AJAX events
Attach a document to an editor.
Attach a single capturing handler on the document while someone wants focusin/focusout
Attach and bind all the other handlers only the first time a touch actually happens.
Attach heavy component lazily
Attach the events object.
Attach the pathSetUpdater to the pathSet.
Attach the workspace to the DOM so focus can be determined in tests below.
Attach to the new worker set.
Attaches a WebSocket based connection to the Packager to expose Hot Module Replacement updates to the simulator.
Attaches a handler to all methods instrumented with the supplied name.
Attaches a handler to profiles with the supplied name.
Attaches a listener to remote or local notification events while the app is running in the foreground or the background.
Attempt to "discover" the data in HTML5 custom data-* attrs
Attempt to create an observer instance for a value, returns the new observer if successfully observed, or the existing observer if the value already has one.
Attempt to delete branch, ignoring the error
Attempt to delete tag, ignoring the error
Attempt to get data from the cache with the key as-is
Attempt to get data from the cache with the key camelized
Attempt to install the package from the archive
Attempt to reload previously open projects.
Attempt to resolve the package referenced by the URL to ensure everything is ok before registering
Attempt to try to load themes so that getMarkdownPreviewCSS() loads the right CSS.
Attempting to add edges 1 2 3 1.
Attempting to read large files just crashes node, so just fail.
Attempting to subscript a null reference will throw an error, even within the typeof and delete operators
Attempting to unload an active package is considered an exception.
Attempts to apply the patch to the given file.
Attempts to derive a Literal node from nodes that are treated like literals.
Attempts to determine the correct vendor prefixed event name.
Attempts to get a list of files relative to `localDirectory`, hopefully from a fast source control index.
Attribute names not specified use the **lowercase** normalized name.
Augment an target Object or Array by defining hidden properties.
Augment with identity matrix I to get AI.
Augments `CopyConstructor` to be a poolable class, augmenting only the class itself (statically) not adding any prototypical fields.
Auth must happen last in case signing is dependent on other headers
Authenticate payload hash - used when payload cannot be provided during authenticate()
Auto detect the appropriate prefix for a CSS property.
Auto enable upon the very first show.
Auto-require transform.
Automatically animates views to their new positions when the next layout happens.
Automatically invalidates cached information and tries to re-estimate the line's height.
Automatically replay the last step.
Automatically track and cleanup files at exit.
Available as NativeModules.MyCustomModule.processString
Available on android API level 21+.
Available only in __DEV__.
Available options: - keepArchive: true to keep the archive afterwards (defaults to false) - keepStructure: true to keep the extracted structure unchanged (defaults to false)
Availble launch/attach providers for current selected connection.
Avoid OOM crashes from getting all own property names of a large TypedArray.
Avoid adding functionality this component that you'd want to be available in both dev and prod modes.
Avoid an infinite loop by temporarily removing this function from the getter
Avoid counting a reference twice or more for default values of destructuring.
Avoid crashing on IE's "unspecified error" when in iframes
Avoid creating a datatip if the evaluation fails
Avoid direct writing.
Avoid doing this on valid arguments, walking the prototype chain can be quite slow.
Avoid duplicate anchor links If we are at an h3, go through the previous element siblings of this node, and find its h2 parent and append it to the href text.
Avoid duplicate updates and avoid moving the status away from FAILED, to let any existing work die out when the server fails.
Avoid expensive re-renders and use setNativeProps
Avoid exposing implementation details on user objects (eg.
Avoid gzip so we can actually show progress
Avoid having longhands under an invalid shorthand.
Avoid inheriting from `Object.prototype` when possible.
Avoid killing block comments completely outside the selection.
Avoid memory leaks caused in workers.
Avoid problems when linking to release libraries that use the release version of the libc
Avoid reading the package meta if already given
Avoid recursion with connector's onClose event.
Avoid reprinting a fragment that is identical to another fragment.
Avoid security warnings on getResponseHeader when not allowed by CORS
Avoid walking fragments if we have printed the same one before.
Avoids Array.slice arguments leak, allowing for V8 optimizations
Avoids a function call
Avoids settings null message
Await **internal-only** API because the public `expandNodeDeep` API does not return the promise that can be awaited on
B should resolve successfully
B will have scheduled an update but the batching should ensure that its update never fires.
B) Bottom Up phase When a view is flagged as needing an update, we recursively go back up in order to build the new value that it needs.
BLACK RIGHT-POINTING TRIANGLE
BOM was stripped from this text.
BROWSER SNIFFING Crude, but necessary to handle a number of hard-to-feature-detect bugs and behavior differences.
BROWSER SNIFFING Kludges for bugs and behavior differences that can't be feature detected are enabled based on userAgent etc sniffing.
BUG72018: Do not show suggest box if caret is followed by a non-stop character.
Babel Definitions TODO: Move these to external-interfaces package.
Babel does a constructor.name check for 'Plugin'.
Backend connection is closed.
Backfill param so that a call variable is created for it.
Background color for the switch round button.
Background color of the tab bar
Background color when the switch is turned off.
Background color when the switch is turned on.
Background drawable of native feedback touchable can be customized with `background` property.
Backlog -- the maximum length of the queue of pending connections.
Backpedal if it does not belong in this list.
Backslash (U+005C) starts an escaped character.
Backticks are also okay if allowTemplateLiterals
Backticks are only okay if they have substitutions, contain a line break, or are tagged
Backwards compatibility for request.debug
Backwards compatibility with graceful-fs.
Backwards compatibility.
Backwards-compat with node 0.10.x
Bad file should be silently hidden.
Bail out early since most nodes won't have directives
Bail out if the visible area is already rendered and nothing changed.
Bails out (returning false) when there is nothing to be done and forced is false.
Bandwidth selectors for Gaussian kernels.
Barnes-Hut criterion.
Barrett modular reduction
Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
Base class helpers for the updating state of a component.
Base class of all launch/attach providers.
Base constructor for all React elements.
Base constructor for all composite component.
Base inspection function for prefilters and transports
Base-64 stores 3 bytes in 4 chars, and pads the remainder.
Base64url (RFC 4648) decode
Base64url (RFC 4648) encode
Based off https://github.com/ForbesLindesay/umd/blob/master/template.js
Based off of the plugin by Clint Helfers, with permission.
Based on Jarno Elonen's Python version (public domain): http://elonen.iki.fi/code/misc-notes/python-gaussj/index.html
Based on R's implementations in `stats.bw`.
Based on Selection.js, but modified to be suitable for react and has a couple of bug fixes (doesn't assume buttons have range selections allowed).
Based on code in the Node.js 'path' core module.
Based on figue implementation by Jean-Yves Delort.
Based on implementation in http://picomath.org/.
Based on jQuery's "clean" function, but only accounting for table-related elements.
Based on org.apache.commons.math.analysis.interpolation.LoessInterpolator from http://commons.apache.org/math/
Based on: http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c
Based on: http://www.johndcook.com/blog/2010/06/02/whats-so-hard-about-finding-a-hypotenuse/
Based on: https://code.google.com/p/webgl-mjs/source/browse/mjs.js
Based on: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round
Baseline setup -------------- Establish the root object, `window` in the browser, or `global` on the server.
Bash completion-related exports
Basic JavaScript BN library - subset useful for RSA encryption.
Basic implementation: look at files in the same directory for paths with matching file names.
Basic support for `JSON.stringify()`.
Basically like safeSpawn, but runs the command with the `script` command.
Basically like spawn, except it handles and logs errors instead of crashing the process.
Basically the same as CC, but: 1.
Basically, a Trace does not need a filePath property, but a LinterTrace does.
Batch calls are handled separately
Batched update, no type change
Batched update, type change
Batcher job interface.
Batching is necessary here in order to ensure that all event handlers run before the next rerender (including event handlers attached to ancestor elements instead of directly on the input).
Batching reduces the number of updates here to 1.
Be a good stream and emit end when the response is finished.
Be careful with onStartShould* callbacks.
Be lazy and just get the string..
Be optimistic and let this.checkAllFields make the final decision.
Be sure to remove the subscription on the DiagnosticStore once the editor is closed.
Because * is AND-ed with everything else in the comparator, and '' means "any version", just remove the *s entirely.
Because JavaScript number are imprecise, we should guarantee the extremes are right.
Because JavaScript sucks at date handling :(
Because Node uses an event-loop, we do not have to worry about a call to write() coming in from another thread between our two calls here.
Because Nuclide is not invoked by Mercurial, Nuclide must mimic the same stripping.
Because RuleTester uses it() and describe() from Mocha, any failures would show up in the output of this test file.
Because Vue's internal modules reference the warn function from different modules (some from util and some from debug), we need to normalize the warn check into a few global utility functions.
Because behavior goes wacky when you set `__proto__` on objects, we have to prefix all the strings in our set with an arbitrary character.
Because directory names are required to be md5 of _source
Because each offset is encoded relative to the previous one, many segments often have the same encoding.
Because most functions don't have `this` keyword.
Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.
Because the `provider` is usually OmniSearch, also track the original provider.
Because the above copy overwrites our own properties, we need to reset them.
Because the buffer is of capacty 1, inserting one more element effectively overwrites the entire contents.
Because the container is flex, prevent this header from shrinking smaller than its contents.
Because the mappings are sorted, we can use binary search to find the best mapping.
Because the pending fetch is always canceled, we need to build a new set of queries that includes the updated variables and initiate a new fetch.
Because the value for the Initial Directory that the user supplied may have been a symlink that was resolved by the server, overwrite the original `cwd` value with the resolved value.
Because this gesture takes no action, we can stop here
Because this value will not change during run time, memoize the value to ensure the IPC call is performed only once.
Because we are modifying the entries (by converting string sources and names to indices into the sources and names ArraySets), we have to make a copy of the entry or else bad things happen.
Because we will never consider this node or any nodes after it again, this node must be the closest following node we have encountered so far.
Because we will never consider this node or any nodes before it again, this node must be the closest preceding node we have encountered so far.
Become the parent node
Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile them against what is in the DOM right now.
Before ending the request, we had to compute the length of the whole form, asyncly
Before multiplication, some bit operations are applied to the private key to ensure it is a valid Curve25519 secret key.
Before that, FIRST WALK is applied recursively to the children of v, as well as the function APPORTION.
Before we jump to the location, we want to close the popup.
Begin and end banners must match key type
Begin incrementing clicks (and therefore refs).
Behaves like an Array's method, not like a jQuery method.
Behavior of elts with overflow: auto and padding is inconsistent across browsers.
Being the "responder" means that the very next touch move/end event will result in an action/movement.
Below is a wrapper around a local object that implements the RemoteObject interface, which can be used by the UI code (primarily ObjectPropertiesSection).
Below is fatal errors.
Below, we dispatch side effectful events.
Benchmark add 100 items toggle them one by one then delete them one by one
Besides checking for the condition being in the loop, we want to check the function that this modifier is belonging to is called in the loop.
Better to just block all updates in initialization.
Between diff view and test runner
Beware, screenPositionForMouseEvent is not a public api and may change in future versions.
Beware, this will generate a very large file if you have a large user collection such as the production mongo db.
Bidirectional ordering algorithm See http://unicode.org/reports/tr9/tr9-13.html for the algorithm that this (partially) implements.
Big buffer, just alloc one.
Binary number in ES6 starts with '0b'.
Bind a function to a context, optionally partially applying any arguments.
Bind all of an object's methods to that object.
Bind event to NodeList items
Bind main events to this object.
Bind script tag hack transport
BindingIdentifier(opt)
Binds a list of properties to a function that verifies that the opening curly brace is on the same line as its controlling statement of a given node.
Binds a method to the component.
Binds all auto-bound methods in a component.
Bit 2 stores the dragging state, from mousedown to mouseup.
Bit 3 stores the hover state, from mouseover to mouseout.
Blackslash (U+005C) marks Unicode escape sequence.
Blank out non-multi-line-commented lines when ignoring linter errors
Blank space to show between pages.
Blindly use line numbers, if they're given.
Blinky cursor, and element used to ensure cursor fits at the end of a line
Block comment ends with '*/'.
Block the effects from any dirstate change, which is a fuzzier signal.
Body contains a JSON encoded array of objects with file: and stats: entries.
Boolean indicating whether this line can be reindented.
Boolean to enable/disable measurement.
Boolean value of the switch.
Bootstrap if a DOM exists.
Bootstrap the process
Bootstrap's modal class exposes a few events for hooking into modal functionality.
Borrows from Modernizr.
Both approach and unicodeLetterTable were borrowed from Google's Traceur.
Both are arrays, we can diff the arrays.
Both are leaves, we can diff the leaves.
Both arguments are elements.
Both below are called in parallel
Both calls return a command function.
Both clientHeight and scrollHeight are rounded to integer values, so we tolerate one pixel error.
Both close and finish should trigger unpipe, but only once.
Both flavors of default imports need an interop.
Both methods take two arguments: - An Iterable of grammars for which the DiagnosticProvider can provide diagnostics.
Both result in an extra syscall when you guess wrong.
Both should be removed.
Both stages (animating *past* the center stage)
Both the iframe and the host element for the React component are children of the root element that serves as the item for the panel.
Bound Functions for use as callbacks.
Bound function never has inner scope and doesn't need corresponding UI node.
Brand new subscription - add it
Break out of the loop.
Break relevant lines.
Break the value into the integer part (before) and decimal part (after).
Break-disabled state has at least one connection in break state.
Break-enabled state has a single connection which is in break-enabled state.
Breaking changes will probably happen a lot and will not be reliably announced.
Breakpoint element has it's own click handler.
BreakpointDisplayController is created for side-effects /:
Breakpoints may be added before any connections.
Briefly turn off draggability, to allow widgets to do normal dragging things.
Broadcast that this counter was created.
Brock, The Inertia Tensor for a Spherical Triangle, J.
Broswe mode shows all changes from all repositories.
Browser does not implement `key`, polyfill as much of it as we can.
Browser environment sniffing
Browser-compatible WebSockets implementation.
Browsers default to this behavior, but some test environments do not.
Browsers seem to always treat the boundaries of block elements as being L.
Browsers without "deltaMode" is reporting in raw wheel delta where one notch on the scroll is always +/- 120, roughly equivalent to pixels.
Bubble the change up.
BuckToolbarActions and BuckToolbarStore implement an older version of the Flux pattern which puts a lot of the async work into the store.
Buffer `write()` calls into memory.
Buffer incoming lines.
Buffer output, reporting progress
Buffers are fast, but strings work too.
Bug with Jest because we're going to the node_modules that is a sibling of what jest thinks our root (the dir with the package.json) should be.
Build (and watch) the prototyping tools
Build QSA regex Regex strategy adopted from Diego Perini
Build a config object merging the base config (conf/eslint.json), the environments config (conf/environments.js) and eventually the user config.
Build a function that applies props to a vm.
Build a function that processes a textNode.
Build a getter function.
Build a line's DOM representation from scratch
Build a link function for all directives on a single node.
Build a list of absolute filesnames on which ESLint will act.
Build a new jQuery matched element set
Build a node link function for a terminal directive.
Build all the nodes we want to insert, then add them
Build the "config" object.
Build the error instance
Build the new mapping result
Build the signingString
Build the syntax table by declaring the syntactic elements of the language.
Build the websocket url
Build up a portrait of your data universe using the object type.
Build up a reverse change object to add to the opposite history stack (redo when undoing, and vice versa).
Build up a set of ranges to kill first, merging overlapping ranges.
Build up the DOM representation for a single token, and add it to the line map.
Building a settings object
Builds a fix function that replaces text at the specified range in the source text.
Builds a temporary folder tree structure.
Builds headers hashtable if needed
Builds the app and runs it on a connected emulator / device.
Builds the bundle starting to look for dependencies at the given entry path.
Builds the edited working set from the partially-child-derived .checkedStatus property
Builds up two arrays: - "dominatedNodes" is a continuous array, where each node owns an interval (can be empty) with corresponding dominated nodes.
Built-in method references for those with the same name as other `lodash` methods.
Built-in method references that are verified to be native.
Built-in method references without a dependency on `root`.
Built-in properties that belong on the element
Built-in value references.
Bulk operations run against the entire set
Bump up to the next highest power of 2, to prevent increasing it excessively in tiny amounts.
Bundle was loaded from file
Bundle was loaded from network
Bundles created by react-packager `require` it before executing any application code.
But I could remove them if desired.
But allow more writes to happen in this tick.
But as it needs  the VS environment, checking the arch of cl.exe is correct.
But because it is a transient file, watchman may not pick up on it, especially if the Mercurial action is quick (e.g. a commit, as opposed to a rebase).
But currently the fileSearch is never torn down.
But either has no long handler
But first, we have to clean up this callback hell.
But for now we'll just add this hack and set the `readable` member to false.
But if we don't change the key, the component instance is reused
But in the case of object literals, it might be called at a position where there is in fact a short hand identifier pattern or a data property.
But it flew in the service of the rebels, so for the purposes of this demo it's a rebel ship.
But it is not responsible for recording the fact that its own `rootNodeID` is associated with a `nodeHandle`.
But it's good enough for how it is used in the parser.
But let's at least keep the local cache updated.) In this case, we just want to remove the deleted file if it is in the cache.
But maintain backwards compat.
But maintain support for old signatures
But not "className" or "style" because React has special rules for those.
But note that we at least distinguish different object types.
But refs rely on it -- so we check that we can find a ref at arbitrary points in the tree, even if other nodes don't have a ref.
But skip if isActive is false (there will never be any dependencies to dispose).
But that's okay because it's kinda icky boilerplate anyway.
But the PathSet expects paths relative to the localDirectory.
But the actual statistics from the "root" node (bottom of the callstack).
But the current lifecycle of the component is unmounted.
But the payload contains an `id` so the writer will attempt to store a `__typename`.
But the store should still remember the breakpoint
But these inherit the reachable flag from this context.
But this inherits `reachable` flag.
But this should be fine, because the client of LocalHgService should be reacting to the 'onHgRepoStateDidChange' event that follows the Mercurial event.
But until then, YAGNI.
But wait, according to Javascript that's perfectly correct.
But we increment the length without the trimming since the next time we view the length any trailing whitespace will have been important.
But we want to test concurrent transitions, so we use timeouts to avoid inheritance.
But we would rather have false positives (ignore some user-generated events that occur near a Mercurial event) than false negatives (register irrelevant Mercurial events).
But when it comes time for `ls` to show its output, it excludes the thing we just installed because that flag.
But, the rules regarding arguments with spaces, and escaping them with quotes, can get really arcane.
But, without this, `.
By contrast `npm install --production foo` installs `foo` and the `production` option is ignored.
By convention, each of the callback methods returns the visited node.
By default EventEmitters will print a warning if more than 10 listeners are added to it.
By default concat defers subscription until after the LHS completes.
By default hidden options and subcmds are "excluded".
By default it is the empty string.
By default it looks by start line.
By default scroll views will unfocus a textField if another touch occurs outside of it
By default the command will toggle the view's visibility.
By default the data is exactly what was put into the data source, but it's also possible to provide custom extractors.
By default the names are sorted to put the short opts first (i.e. '-h, --help' preferred to '--help, -h').
By default this is determined automatically.
By default will center the opened text editor.
By default, ProcessOutputView simply appends the `newText` to its `buffer`.
By default, Underscore uses ERB-style template delimiters, change the following template settings to use alternative delimiters.
By default, `PanResponder` holds an `InteractionManager handle to block long-running JS events from interrupting active gestures.
By default, a gray oval highlights the text on press down.
By default, a gutter will be destroyed when its editor is destroyed, so there is no need to register a callback via onDidDestroy().
By default, all the touchable elements are accessible.
By default, assume that GraphQL is served at `/graphql` on the same domain.
By default, don't measure anything, but we'll override this if we inject a measure function.
By default, if one of the animations is stopped, they will all be stopped.
By default, it will extrapolate the curve beyond the ranges given, but you can also have it clamp the output value.
By default, it will request all notification permissions, but a subset of these can be requested by passing a map of requested permissions.
By default, logs stall events to the console when installed.
By default, no context menu item will be displayed if the tree is empty.
By default, npm includes some proprietary attributes in the package tarball.
By default, queued tasks are executed together in a loop in one `setImmediate` batch.
By default, reserved words are not enforced.
By default, the date picker will use the device's timezone.
By default, the label is constructed by traversing all the children and accumulating all the Text nodes separated by space.
By default, the listener is simply invoked.
By default, the only button will be an 'OK' button.
By default, the warning box is enabled in `__DEV__`.
By default, this can scroll with negative offset, pulling the content down so that the target component's bottom meets the keyboard's top.
By default, this implements React's rendering and reconciliation algorithm.
By default, this is true (all tasks are cancelable).
By default, when a reactive property is set, the new value is also converted to become reactive.
By exploiting arrays returning `undefined` for an undefined index, we can rely exclusively on `insertBefore(node, null)` instead of also using `appendChild(node)`.
By handling mixins before any other properties, we ensure the same chaining order is applied to methods with DEFINE_MANY policy, whether mixins are listed before or after these methods in the spec.
By here, "options" is always non-null
By providing a specific response we can compute a non recursive one which is the least we need and improve performance.
By setting needle.originalColumn to 0, we thus find the last mapping for the given line, provided such a mapping exists.
By the time the function associated with the command is called, the state with which the menu item was created is lost.
By this point, it would be profoundly surprising if /tmp didn't already exist, since every other test makes things in there.
Bypass cache for local dependencies
CAUTION: This is an experimental component and should only be used together with javascript implementation of list view (see ListView.js).
CDATA becomes an array containing a string, or just a string.
CESU-8 is handled as part of the UTF-8 encoding.
CESU-8 represents each of Surrogate Pair by 3-bytes
CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
CFLAGS for building the PHP dll
CHILDREN HANDLING In order for the tree traversal and modifications to be efficient one often needs to find the parent of a node.
CI environment can be quite slow and we can't guarantee that it can consistently motice a file change so we change the file every few seconds just in case
CJK Compatibility Forms
CJK Compatibility Ideographs
CONTEXT MENU HANDLING To make the context menu work, we need to briefly unhide the textarea (making it as unobtrusive as possible) to let the right-click take effect on it.
CSS color specification match
CSS color specification type (e.g., rgb)
CSS properties which accept numbers but are not in units of "px".
Cache a fragment using track-by or the object key.
Cache a maximum of 20 nesting level indents.
Cache aliases for a project because invoking buck just to list aliases that are highly unlikely to change is wasteful.
Cache definitions by the resolved file path they were loaded from.
Cache for definitions.
Cache for remote proxies.
Cache is stored/retrieved statically to ensure singularity among instances
Cache of previously indexed folders for later use.
Cache proxy factory functions by the resolved definition file path.
Cache remote proxy modules by the (definition path, client object) tuple.
Cache response headers
Cache results of executing component-specific route query builders.
Cache results of executing fragment query builders.
Cache should have been updated
Cache starting and ending line numbers of comments for faster lookup
Cache the compiled function
Cache the flags-fetching promise so we don't end up invoking Buck twice.
Cache the index of each encountered element
Cache used to avoid operating on files that haven't changed since the last successful execution (e.g., file passed linting with no errors and no warnings).
Cached in the queue when disconnected.
Cached result of execution.
Caches the compiled linker if possible.
Calculate a new scroll position needed to scroll the given rectangle into view.
Calculate opacity with logarithmic falloff based on recency of the timestamp.
Calculate pageX/Y if missing and clientX/Y available
Calculate payload hash
Calculate position if both inputs belong to the same document
Calculate selection offset relative to the current element.
Calculate the amount of indentation the line should end up with.
Calculate the offset of the cursor from the beginning of the file.
Calculate the position of the end of the last range to be edited.
Calculate the request MAC
Calculate the value for the Authorization header on this request asynchronously.
Calculate the visible area.
Calculates a module map from the settings.
Calculates the blacklist from the settings.
Calculates the current options according to the Nuclide configuration object.
Calculates the keys to use for traversal.
Calculating quad plane normal
Call String.prototype.replace on the very right-most source snippet.
Call `callback` on every node in the subtree, including `rootNode`.
Call `cb(err)` when you are done with this chunk.
Call `dispose` to disable the feature.
Call `push(newChunk)` to pass along transformed output to the readable side.
Call `willFocus` when `diff` is small enough.
Call a function while guarding against errors that happens within it.
Call a method of a remote object, through the service framework.
Call a native DOM method on the target with the same name name as the event.
Call a remote constructor, returning an id that eventually resolves to a unique identifier for the object.
Call a remote function, through the service framework.
Call a static method that returns Counter instances.
Call a static method with a counter as an argument.
Call a user-provided synchronous hook function.
Call a user-provided, potentially-async hook function.
Call all callbacks with the given context and arguments
Call all the callbacks with the given arguments
Call an async function repeatedly with a maximum number of trials limit, until a valid result that's defined by a validation function.
Call attach hook for a Vue instance.
Call attach/detach for all components contained within this fragment.
Call back into native to remove all of the subviews from this container
Call beforeMove first before any changes have been made to the DOM
Call destroy for all contained instances, with remove:false and defer:true.
Call detach hook for a Vue instance.
Call didSearchPaths with the number of unique files we have seen matches in.
Call f for all linked documents.
Call getHackEnvironmentDetails instead.
Call given func if any
Call if it was a function and we have a response
Call in the context of a npmconf object
Call internalGetID here because getID calls isValid which calls findReactContainerForID (this function).
Call out to hack to get highlighting ranges.
Call recursively for each dependency but ordered by dependency names
Call render method for this log entry or the generic one
Call searchCanceled since it will reset everything we need before doing a new search.
Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).
Call the HgService and update our cache with the results.
Call the callback accordingly.
Call the callback on each line.
Call the callback when any messages change.
Call the callback when project-scope messages change.
Call the callback when the filePath's messages have changed.
Call the callback when the first time.
Call the component's `render` method and update the DOM accordingly.
Call the function again
Call the function again to keep it DRY
Call the object's local dispose function.
Call the postDispatch hook for the mapped type
Call the preDispatch hook for the mapped type, and let it bail if desired
Call the provided function in a context within which calls to `setState` and friends are batched such that components aren't updated unnecessarily.
Call the returned function to fetch the next token.
Call this function to define a new method to be shared by all AST nodes.
Call this function without `new` to use the cached object (good for single-threaded environments), or with `new` to create a new object.
Call this to optimistically apply an update to the store.
Call this to send the mutation to the server.
Call to `evaluate` from user-land creates a new script with undefined URL.
Call updateSiblings since their value might be based on the value that just changed.
Callback called when the icon is selected.
Callback called when the user finishes changing the value (e.g. when the slider is released).
Callback continuously called while the user is dragging the slider.
Callback for when an item is selected.
Callback for when everything is done
Callback that is called continuously when the user is dragging the map.
Callback that is called once, when the user is done moving the map.
Callback that is called when a key is pressed.
Callback that is called when an action is selected.
Callback that is called when text input ends.
Callback that is called when the text input is blurred
Callback that is called when the text input is focused
Callback that is called when the text input selection is changed
Callback that is called when the text input's submit button is pressed.
Callback that is called when the text input's text changes.
Callback that is called when the user toggles the switch.
Callback to navigation with an action.
Callback to recursively call attached hook on children
Callback to recursively call detached hook on children
Callback was subscribed after this particular broadcast.
Callbacks don't fire for optimistic updates.
Called after the response is received
Called at the end of every token.
Called at the start of the parse and after every token.
Called immediately after the underlay is hidden
Called immediately after the underlay is shown
Called only from within defaultDisplay
Called when a scrolling animation ends.
Called when all rows have been rendered and the list has been scrolled to within onEndReachedThreshold of the bottom.
Called when all the decendents have finished rendering and mounting recursively.
Called when rows will be mounted/unmounted.
Called when scrollable content view of the ScrollView changes.
Called when the `gyp` child process exits.
Called when the editor is attached to the DOM.
Called when the editor is detached from the DOM.
Called when the left header button is pressed
Called when the right header button is pressed
Called when the rows that are visible in the viewport change.
Called when the touch is released, but not if cancelled (e.g. by a scroll that steals the responder lock).
Called when the view starts refreshing.
Called when the viewability of rows changes, as defined by the `viewablePercentThreshold` prop.
Called when the window resizes
Called with the same arguments as .visit.
Called without a callback, because this interface should neither block nor error (by contrast with randomBytes which will throw an exception without enough entropy).
Caller can pass in a jQuery.Event object, Object, or just an event type string
Caller can pass in an object of custom data in lieu of the handler
Caller does the diffing so we don't have to.
Caller is responsible for disposing the results.
Caller is responsible for handling the actual error.
Caller must resolve named types.
Callers can extract the individual errors contained in this object, but may also just treat it as a normal single error, in which case a summary message will be printed.
Callers who want a string should call buffer.toString('utf8').
Calling 'hg status' with a path has two side-effects: 1.
Calling 'trackChanges' multiple times is the same as calling it once
Calling Def.prototype.build multiple times has the effect of merely redefining this property.
Calling `disablePackage` on a package first *loads* the package.
Calling `stop()` should never null the `_run` property.
Calling atom.project.repositoryForDirectory gets the real path of the directory, which is another round-trip and calls the repository providers to get an existing repository.
Calling atom.project.repositoryForDirectory gets the real path of the directory, which requires a round-trip to the server for remote paths.
Calling checkAllFields is too strict when deep is false, because then we only care about this.isSupertypeOf(vDef).
Calling dispose multiple times should not throw.
Calling ls-remote includes a call to the git-upload-pack service, which returns the content type in the response.
Calling path.get("child") multiple times always returns the same child Path object, for both performance and consistency reasons.
Calling this means that it's something we can't create.
Calling this method lets us exit that state and retry.
Calling this.checkAllFields for any other type of node is both bad for performance and way too forgiving.
Calls "ensureLength()", then sets the "length" Symbol.
Calls `callback` with either an Array of entries or an Error if there was a problem fetching those entries.
Calls `fn` when the mouse moves onto another text editor screen position, not pixel position.
Calls a function for each key-value pair found in object Optionally takes compareFn to iterate object in specific order
Calls a registered service with a name and arguments.
Calls a task as soon as possible after returning, in its own event, with priority over IO events.
Calls a task as soon as possible after returning, in its own event, with priority over other events like animation, reflow, and repaint.
Calls cb with list of cached pkgs matching show.
Calls delayed callbacks and cursorActivity handlers until no new ones appear
Calls out to asyncExecute using the 'hg' command.
Calls the callback associated with the ID.
Calls the callback when the saved connection profiles change.
Calls the given functions and returns the first non-null return value.
Calls to ContextMenu.addItem() and ContextMenu.addSubmenu() on the same turn of the event loop batch up their internal _sort() calls to run at the end of the current event loop.
Camelize a hyphen-delmited string.
Can add propHook for "elements" to filter or add form elements
Can also be queried with `getStats`.
Can be a local or remote file.
Can be a string or an integer.
Can be adjusted by the user
Can be called to simulate
Can be detached (64 bytes), or attached to be sliced off.
Can be either a file system object of some sort, or a pax/ustar metadata entry.
Can be in one of the following states: - Connected - everything healthy - Disconnected - Was connected, but connection died.
Can be null for stateless components.
Can be removed once we no longer want to support Flow versions under v0.20.0
Can be used to submit forms and file uploads to other web applications.
Can inherit from another Conf object, using it as the base.
Can mark variables as used via context.markVariableAsUsed()
Can not be merged, start a new event.
Can only be used in a Jasmine context.
Can only copy one entry at a time.
Can only rename one entry at a time.
Can optionally compile content with a child scope.
Can tell TextInput to automatically capitalize certain characters.
Can use an empty set, since event contains the info
Can't be in mountWrapper or else server rendering leaks.
Can't do this because several apps including ASP.NET trace the stack via arguments.caller.callee and Firefox dies if you try to trace through "use strict" call chains.
Can't handle this type of require yet.
Can't have same cursor twice
Can't have same id twice
Can't import View at the top because it depends on React to make its composite
Can't just do startsWith here.
Can't optimize arrays of integers longer than 65,535 elements.
Can't put extra new lines in here like BlockStatement since it may be used in a ClassExpression.
Can't rewrite control flow bindings
Can't trust NodeList.length
Can't use nuclide-logging here to not cause cycle dependency.
Can't use regexp literal here, MinJS chokes on it.
Can't user remote-uri.parse() here, as the (normzlized) URI might no longer conform
Can't validate at construction time because we haven't resolved props yet, and the config may depend on those.
Cancel any outstanding evaluation requests to the Bridge
Cancel any pending callbacks from a previously running but not finished transition.
Cancel any pre-empted transitions.
Cancel fail fast timeout
Cancel insert events to prevent typing in the text editor and disallow editing (read-only).
Cancel local notifications.
Cancel pending update.
Cancel the busy signal with this identifier.
Cancel the event with the given identifier.
Cancel the subscription, which should also kill the grep process.
Cancels all scheduled localNotifications
Cannot "use strict" because we must use eval in this file.
Cannot be resurected.
Cannot have negative delay
Cannot just convert the textual html into an element without a parent node.
Canvas contains grid and rulers.
Capture an image of the screen, window or an individual view.
Capture just text in quotes
Capture phase of bubbling to append separator before any of the bubbling happens.
Capture the local commit id and bookmark name from the `hg bookmarks` output.
Capture the view state before the update starts.
Captures all stdout and stderr
Captures the value of the PATH env variable returned by Darwin's (OS X) `path_helper` utility.
Care is taken to ensure that operations are atomic in the face of async turns.
Case 1 is covered by the response to WATCHMAN_SUBSCRIPTION_NAME_HGIGNORE firing.
Cases 2 and 3 are covered by the response to WATCHMAN_SUBSCRIPTION_NAME_PRIMARY firing.
Cases below taken from http://uva.onlinejudge.org/external/6/681.html
Cast `navigationState` as `RouteNode`.
Cast `value` to a string to ensure the value is set correctly.
Cast descendant combinators to space
Cast from HTMLElement down to WebviewElement without instanceof checking, as WebviewElement constructor is not exposed.
Cast here because we know that `clone` will never return `null` (because we always give it at least one child).
Cast through `any` because `map.get` can return null/undefined.
Cast to Object for use of code field below...
Cast to String because this can be a Number Could also be a String literal (e.g. "key") hence the value
Cast to a string so we can do equality checks.
Catch the very common case first: immediately a semicolon (U+003B).
Catches /* falls through */ comments (ft)
Catching keyup usually gets it and catching keydown lets us fire an event for the first keystroke if user does a key repeat (it'll be a little delayed: right before the second keystroke).
Causes the cache to forget about one React-specific ID.
Caution: if `circular` is false and `parent` contains circular references, your program may enter an infinite loop and crash.
Caution: setting it to nothing causes the page to jump to the top, hence /.
Caveat: Cache all stats and readdirs results to minimize syscall.
Certain browsers (Safari, IE 8, phantomjs) require this hack.
Certain characters need to be escaped so that they can be put into a string literal.
Chain conversions given the request and the original response Also sets the responseXXX fields on the jqXHR instance
Chalk protects its methods so we need to inherit from it for Sinon to work.
Change 'unused' to 'var', and reject labels.
Change dir if -C/--directory was passed.
Change error listener so it cleans up writeStream before exiting
Change set base data source only if main data source is already set.
Change svn+http or svn+https or svn+file to http(s), file respectively
Change tempSource dir to 0777
Change the className of theDog.
Change the content (text, markers) of a line.
Change the path to be relative to the root dir that was added to the tarball.
Change the props after the native props are set in case the props change removes the component
Change the query data that is stored by the container to `updatedQueryData`
Change the title as the active file changes.
Change this when you want to make sure the WindowedListView will re-render, for example when the result of `renderScrollComponent` might change.
Changed text is passed as an argument to the callback handler.
Changes are recorded for deferred fragments to ensure that parent components re-render with the new data.
Changes the color of all the non-transparent pixels to the tintColor.
Changes the side of the window on which the code is shown and saves the setting in a cookie.
Changing `defaultValue` should do nothing.
Changing children should do nothing, it functions like `defaultValue`.
Changing the `value` prop should change the selected option.
Changing these would trigger the text parser to re-compile the regular expressions.
Character to pad with.
Character types for codepoints 0 to 0xff
Character types for codepoints 0x600 to 0x6ff
Characters in strings that need escaping (nx and nxg)
Check .props.title to make sure we got the right elements back
Check `Number.parseInt()`
Check a GK but silently return false on error.
Check a conditional statement's test expression for top-level assignments that are not enclosed in parentheses.
Check a set of props are equal to a set of expected values - only works with scalars.
Check against accurate responseReceivedTime.
Check against all ancestor/preceding elements
Check against closest ancestor/preceding element
Check against the constraints
Check all expected names are asserted.
Check an element for terminal directives in fixed order.
Check an object for unexpected properties.
Check archive file size
Check autocomplete box renders.
Check each alias to ensure that is was assinged to the correct value.
Check for HTTP or HTTPS Proxy in environment Else default to null
Check for URL in inflight URLs.
Check for a coordinate system flip.
Check for absence of explicitly max-age or expiry date instead.
Check for an issue reference at end (unless it's a documentation commit)
Check for circular references and return its corresponding clone.
Check for cursor collision.
Check for dangling underscores.
Check for deprecated and missing properties.
Check for duplicated __proto__
Check for element directives (custom elements that should be resovled as terminal directives).
Check for existence for IE8
Check for headers option
Check for id collision.
Check for listener leak
Check for lonely setters if in the ES5 mode.
Check for more than one commit
Check for most common single-character punctuators.
Check for new versions
Check for new versions for each node
Check for newer version of Bower
Check for parsing errors first.
Check for properties named __iterator__.
Check for properties named __proto__.
Check for protocol - the remote check for hosts supporting shallow cloning is only required for HTTP or HTTPS, not for Git or SSH.
Check for range client IDs (eg.
Check for tag at start of message
Check for the fast path on GC events.
Check for the noBreak.
Check for transposed characters.
Check for unexpected properties.
Check getNodeForCharacterOffset return value matches expected result.
Check if PGO is enabled for given module.
Check if `arg` matches the short or long flag.
Check if `scribe_cat` exists in PATH.
Check if a compatible one is already resolved If there's one, we don't need to resolve it twice
Check if a compatible one is being fetched If there's one, we wait and reuse it to avoid resolving it twice
Check if a given callback is in the list.
Check if a node is a DocumentFragment.
Check if a node is a supported template node with a DocumentFragment content.
Check if a node is in a context where its value would be coerced to a boolean at runtime.
Check if a node is in the document.
Check if a node is wrapped in parens.
Check if a node is wrapped in two levels of parens.
Check if a specific template exists for the command
Check if additional details were provided
Check if all require declarations in the given list are of the same type.
Check if already compiled
Check if an argument is dynamic and strip quotes.
Check if an element is a component, if yes return its component id.
Check if an element is a component.
Check if an element is a template tag.
Check if an element is hidden - in that case we can just skip the transition alltogether.
Check if an expression is a literal value.
Check if an expression is a simple path.
Check if an input maintains its value after becoming a radio Support: IE9, IE10
Check if an interpolation string contains one-time tokens.
Check if an object can be extended.
Check if an object is Promise by testing if it has a `then` function property.
Check if bezier matches a preset
Check if destination directory exists to prevent issuing lock at all times
Check if entry exists first so array access doesn't throw for holes in the parent iteration.
Check if file is 0777
Check if getElementsByClassName can be trusted
Check if getElementsByTagName("*") returns only elements
Check if git is installed
Check if git status is empty
Check if is a shorthand and expand it
Check if it can be mapped by the source map, then update the mapping.
Check if it can fit into an existing row
Check if it is not installed
Check if it quacks like an element
Check if it resolver to the same array
Check if module is defined at `path`.
Check if module is in cache
Check if name defined in the json is different If so and if the name was "guessed", assume the json name
Check if name or source match the entry
Check if previous token is wrapped in parentheses
Check if property name clashes with already added.
Check if resolution types are different
Check if something is an object.
Check if source changed, marking as different if it did We only do this for direct root dependencies that are compatible
Check if source exists
Check if svn is installed
Check if targets are equal
Check if the ImageStore contains image data for the specified URI.
Check if the container itself is a React root node.
Check if the dependency is not installed
Check if the directive is a function caller and if the expression is a callable one.
Check if the entry entirely fits into an already drawn pixel, we can just skip drawing it.
Check if the given name is a restricted global name.
Check if the jsdoc comment is present or not.
Check if the last comment ends exactly where the first node starts.
Check if the list of variable declarations is mixed, i.e. whether it contains both require and other declarations.
Check if the matrix is square.
Check if the node being unmounted was rendered by React, but isn't a root node.
Check if the number is between 00 and 07.
Check if the original branch is still the master one
Check if the owner object already has a cache key
Check if the release already exists
Check if the remote buffer has already been initialized in editor.
Check if the source object has this key.
Check if the template is invalid or not all invalid cases go through this.
Check if the there is a style prop
Check if the type reference is a known internal type.
Check if the value is not already transparent to avoid an extra render.
Check if the whole file was downloaded In some unstable connections the ACK/FIN packet might be sent in the middle of the download See: https://github.com/joyent/node/issues/6143
Check if the whole process started to fail fast
Check if there are incompatibilities for this package name If there are, we need to fetch them
Check if there's a resolution that resolves the conflict Note that if one of them is marked as unresolvable, the resolution has no effect
Check if there's an exact branch/tag with this name as last resort
Check if this a "possible result".
Check if this depdendency should be skipped.
Check if variable name is allowed.
Check if we got a Content-Disposition header
Check if we should add a comma and space.
Check if we should close.
Check if we should open.
Check if we're actually ready to finish, but don't emit yet
Check if we're at the bottom of a multi-line method.
Check if we're dealing with a known content-type
Check if we're setting a value
Check if we're still in the same recording session.
Check in their general extra libs path
Check in their standard lib path
Check is required for testing.
Check key is null in case iterator isn't exhausted and done resolved synchronously.
Check out `Touchable.js`, `ScrollResponder.js` and `ResponderEventPlugin.js` for more discussion.
Check queued 'x is not defined' instances to see if they're still undefined.
Check randomness for v4 UUIDs
Check read/write filter stats.
Check regular expression for correctness.
Check stderr for content-type, ignore stdout
Check that `component` is still the current ref because we do not want to detach the ref if another component stole it.
Check that `component`'s owner is still alive and that `component` is still the current ref because we do not want to detach the ref if another component stole it.
Check that all identifiers are using camelCase notation.
Check that at least all the expected scripts are present.
Check that context menu has 'toggle blame'
Check that internal state values are equal to a state of expected values.
Check that the fake client has been cached.
Check that the first comment is adjacent to the end of the group, the last comment is adjacent to the candidate property, and that successive comments are adjacent to each other.
Check that the first point is between a and b.
Check that there are no new messages(command is not a message).
Check that this comment isn't an ESLint directive
Check that value is an object with an inspect function on it
Check that we didn't get one last unshift.
Check the algorithm against the official list
Check the conditions are modified.
Check the consequent/body node to make sure it is not a ReturnStatement or an IfStatement that returns on both code paths.
Check the node is at a prologue.
Check the packager produces a bundle (doesn't throw an error)
Check the presence of a bind attribute.
Check this is a real CSSRule, not a bogus object coming from WebInspector.BlankStylePropertiesSection.
Check timestamp staleness
Check to see if `processNext` should be called.
Check to see if a CallExpression is in our callback list.
Check to see if it's possible to do matchesSelector on a disconnected node (IE 9)
Check to see if the first element inside an array is an object and on the same line as the node If the node is not an array then it will return false.
Check to see if the node is part of the multi-line variable declaration.
Check to see if we have a response for the expected dataType
Check to see if we're handling the error object properly.
Check to see whether the popup is within the bounds of the TextEditor.
Check type annotations exist and are correct.
Check valid attribute names
Check whether a given record has received data for a deferred fragment.
Check whether a node returns in every codepath.
Check whether an AST node is the test expression for a conditional statement.
Check whether an assignment expression is descended from a conditional statement's test expression.
Check whether node modules are include in a project's package.json.
Check whether node modules are included in the dependencies of a project's package.json.
Check whether node modules are included in the devDependencies of a project's package.json.
Check whether the `error` argument passed to `callback` is `null` to determine if there was an error.
Check whether the code represented by an AST node is enclosed in parentheses.
Check whether the code represented by an AST node is enclosed in two sets of parentheses.
Check whether the node has any children that should be displayed.
Check whether the object has the property.
Check whether this function has been reached for a destructuring assign with undeclared values
Checkes whether or not a given node is a callback.
Checkmark Unicode symbol
Checkout `Animated.Value.addListener` as a way to work around some of these limitations, but use it sparingly since it might have performance implications in the future.
Checkout based on master
Checkout test package version 0.2.0
Checkout test package version 0.2.1
Checkout test package version 0.2.1 which has a bower.json with ignores
Checks `localStorage` for boolean values for the given `name`.
Checks a certain path for existence and returns 'true'/'false' accordingly
Checks a function to see if it has too many parameters.
Checks a given IfStatement node requires braces of the consequent chunk.
Checks a given code path segment is reachable.
Checks a given function node for too many callbacks.
Checks a given node is a Identifier node of the specified name.
Checks a given node is a Literal node of the specified string value.
Checks a given node is a MemberExpression node which has the specified name's property.
Checks a given previous segment has been visited.
Checks a given previous segment is coming from the end of a loop.
Checks a node to see if it's followed by a semicolon.
Checks a node to see if it's in a one-liner block statement.
Checks a object expression to see if it has setter and getter both present or none.
Checks and reports duplications.
Checks for a call of `super()`.
Checks for a part of a class body.
Checks for deprecatedPropType function and add deprecation info.
Checks for known protocols: http:, https:, ssh:, and git:, with optional git+ prefix.
Checks for the underscore library usage here
Checks if `needle` matches exactly the first character followed by all uppercase letters in `haystack`.
Checks if `value` is a buffer.
Checks if `value` is a flattenable `arguments` object or array.
Checks if `value` is a global object.
Checks if `value` is a native function.
Checks if `value` is a valid array-like index.
Checks if `value` is a valid array-like length.
Checks if `value` is array-like.
Checks if `value` is classified as a `Function` object.
Checks if `value` is classified as a `String` primitive or object.
Checks if `value` is classified as a `Symbol` primitive or object.
Checks if `value` is classified as an `Array` object.
Checks if `value` is in `cache` mimicking the return signature of `_.indexOf` by returning `0` if the value is found, else `-1`.
Checks if `value` is in `cache`.
Checks if `value` is likely a prototype object.
Checks if `value` is likely an `arguments` object.
Checks if `value` is object-like.
Checks if `value` is suitable for use as unique object key.
Checks if a RelayQuery.Node is `equals()` to another.
Checks if a RelayQuery.Root is `equals()` to another.
Checks if a character in the supplied ID is a separator or the end.
Checks if a given DOM node contains or is another DOM node.
Checks if a given filename is "valid" for this installation.
Checks if a given path is ignored by ESLint.
Checks if a given token has leading whitespace.
Checks if a given token has trailing whitespace.
Checks if a hash value for `key` exists.
Checks if a map value for `key` exists.
Checks if a node has a constant truthiness value.
Checks if a node has an escape.
Checks if a node should be padded, according to the rule config.
Checks if a provided path is a directory and returns a glob string matching all files under that directory if so, the path itself otherwise.
Checks if a query node contains a node that `equals()` another.
Checks if a stack value for `key` exists.
Checks if a variable is in TDZ of scopeVar.
Checks if a variable is inside the initializer of scopeVar.
Checks if a variable of the class name in the class scope of ClassDeclaration.
Checks if an associative array value for `key` exists.
Checks if an event is supported in the current execution environment.
Checks if an object has a property.
Checks if an override exists for a given operator.
Checks if data for a deferred fragment is ready.
Checks if listening for connections.
Checks if our parent is marked as part of an implied eval argument.
Checks if some endpoint is compatible with already resolved target.
Checks if the CaseBlock of an given SwitchStatement node has a preceding space.
Checks if the callee is the Function constructor, and if so, reports an issue.
Checks if the contents of two sets are identical
Checks if the escape character in given slice is unnecessary.
Checks if the first ID is an ancestor of or equal to the second ID.
Checks if the given MemberExpression node is a potentially implied eval identifier on window.
Checks if the given argument should be interpreted as a regexp pattern.
Checks if the given id represents an object only known on the client side or not.
Checks if the given identifier node is a ThisExpression in the global scope or the global window property.
Checks if the given identifier node is shadowed in the given scope.
Checks if the given name is a prohibited identifier.
Checks if the given name matches the configured error argument.
Checks if the given node has a bitwise operator.
Checks if the given node is the argument of a typeof operator.
Checks if the given path is within the repo directory (i.e. `.hg/`).
Checks if the given token has a blank line after it.
Checks if the given token is a semicolon.
Checks if the given token is preceeded by a blank line.
Checks if the given token is the last token in its line.
Checks if the name of the import or export exists in the given array, and reports if so.
Checks if the next token of a given token is a closing parenthesis.
Checks if the supplied string is a valid React DOM ID.
Checks if the two objects have equal properties.
Checks if this event should be released back into the pool.
Checks if two sets of calls have equal names and values.
Checks newlines around variable declarations.
Checks node is the first in its own start line.
Checks only direct calls to eval.
Checks parameters of a given function node.
Checks parents recursively.
Checks reference if is non initializer and writable.
Checks that `lib/` is up-to-date with `src/`.
Checks that `parent` either has range calls on it or does not contain either `page_info` or `edges` fields.
Checks that `warning` was invoked with a falsey condition with expected arguments the supplied number of times.
Checks that a given identifier node is a reference or not.
Checks that a merge was not given a circular object or an object that had too great of depth.
Checks that all expected scripts are present in the scripts list in the Scripts panel.
Checks that an assignment to an identifier only assigns 'this' to the appropriate alias, and the alias is only assigned to 'this'.
Checks that the parent is a direct descendent of an potential implied eval CallExpression, and if the parent is a CallExpression, that we're the first argument.
Checks that the supplied merge strategy is valid.
Checks the arguments of a given CallExpression node and reports it if it offends this rule.
Checks the content of the user's status message as well as the order of them.
Checks the current context for shadowed variables.
Checks the enclosing block of the current node for block-level bindings, and "marks it" as valid if any.
Checks the given BlockStatement node to be padded if the block is not empty.
Checks the return statement is valid.
Checks the spacing between two tokens before or after the star token.
Checks the spacing of the dot within a member expression.
Checks the spacing of the semicolon with the assumption that the last token is the semicolon.
Checks the specified comment for matches of the configured warning terms and returns the matches.
Checks the specified node for matching warning comments and reports them.
Checks the timer has not already been removed
Checks the values of tokens against an array of expected values.
Checks the writer is located in the same scope and can be modified to const.
Checks to see if there's a semicolon after a variable declaration.
Checks to see if we have a range client ID (eg.
Checks tokens from the head of this class body to the first MethodDefinition or the end of this class body.
Checks tokens from this MethodDefinition to the next MethodDefinition or the end of this class body.
Checks whether a call exists strictly to encode which parts of a connection to fetch.
Checks whether a collection name (e.g. "Map" or "Set") has a native polyfill that is safe to be used.
Checks whether a given Identifier node becomes a VariableDeclaration or not.
Checks whether a given array of expressions is `...arguments` or not.
Checks whether a given array of statements is a single call of `super`.
Checks whether a given code path segment is reachable or not.
Checks whether a given name is a label of a loop or not.
Checks whether a given node can be a constructor or not.
Checks whether a given node is a MemberExpression of `parseInt` method or not.
Checks whether a given node is a breakable statement or not.
Checks whether a given node is a default value of radix or not.
Checks whether a given node is a pattern which doesn't have any side effects.
Checks whether a given node is a valid value of radix or not.
Checks whether a given node is located at `ForStatement.init` or not.
Checks whether a given reference is safe or not.
Checks whether a given reference which refers to an upper scope's variable is safe or not.
Checks whether a given variable is shadowed or not.
Checks whether a node is a string literal.
Checks whether a node is contained on a single line.
Checks whether a path is relevant to this HgRepositoryClient.
Checks whether a point is on the curve.
Checks whether a property is a member of the property group it follows.
Checks whether a property name is a custom attribute.
Checks whether a set of calls on a connection supply enough information to fetch the range fields (i.e. `edges` and `page_info`).
Checks whether a token is a semicolon punctuator.
Checks whether an operator is commutative and has an operator assignment shorthand form.
Checks whether an operator is not commuatative and has an operator assignment shorthand form.
Checks whether given 2 nodes are a rest/spread pair which has the same values.
Checks whether given 2 nodes are identifiers which have the same name or not.
Checks whether given 2 nodes have the same value or not.
Checks whether of not the implicit returning is consistent if the last code path segment is reachable.
Checks whether or not `thisArg` is not changed by `.apply()`.
Checks whether or not `thisArg` is not changed by `.call()`/`.apply()`.
Checks whether or not a given MetaProperty node equals to a given value.
Checks whether or not a given binary expression has non string literals.
Checks whether or not a given code path segment is reachable.
Checks whether or not a given code path segment is unreachable.
Checks whether or not a given declarator node has its initializer.
Checks whether or not a given definition is a parameter's.
Checks whether or not a given function node is the callee of `.bind()` method.
Checks whether or not a given function node is the default `this` binding.
Checks whether or not a given group node has any dynamic elements.
Checks whether or not a given location is inside of the range of a given node.
Checks whether or not a given logical expression node goes different path between the `true` case and the `false` case.
Checks whether or not a given loop condition info does not have the modified flag and does not have the group this condition belongs to.
Checks whether or not a given loop condition info does not have the modified flag.
Checks whether or not a given node has a fallthrough comment.
Checks whether or not a given node is a `case` node (not `default` node).
Checks whether or not a given node is a concatenation.
Checks whether or not a given node is a constructor.
Checks whether or not a given node is a directive.
Checks whether or not a given node is a for loop.
Checks whether or not a given node is a function expression which is the callback of an array method.
Checks whether or not a given node is a part of directive prologues.
Checks whether or not a given node is a property descriptor.
Checks whether or not a given node is a string literal.
Checks whether or not a given node is allowed as non backtick.
Checks whether or not a given node is an `Identifier` node which was named a given name.
Checks whether or not a given node is an argument of a specified method call.
Checks whether or not a given node is located at the head of ExpressionStatement.
Checks whether or not a given node is multiline.
Checks whether or not a given reference is a write reference.
Checks whether or not a given reference is inside of a given node.
Checks whether or not a given reference is inside of a loop node's condition.
Checks whether or not a given reference is inside of the initializers of a given variable.
Checks whether or not a given segment is reachable.
Checks whether or not a given variable declarator has the initializer.
Checks whether or not a given variable is a class declaration in an upper function scope.
Checks whether or not a given variable is a function declaration or a class declaration in an upper function scope.
Checks whether or not a given variable is a function declaration.
Checks whether or not a given variable is a function name.
Checks whether or not a node is `Array.from`.
Checks whether or not a node is `Reclect.apply`.
Checks whether or not a node is `null` or `undefined`.
Checks whether or not a node is a `.apply()` for variadic.
Checks whether or not a node is a `.call()`/`.apply()`.
Checks whether or not a node is a binary negating of `.indexOf()` method calling.
Checks whether or not a node is a concatenating with an empty string.
Checks whether or not a node is a conditional expression.
Checks whether or not a node is a constructor.
Checks whether or not a node is a double logical nigating.
Checks whether or not a node is a lexical declaration.
Checks whether or not a node is a method which has `thisArg`.
Checks whether or not a node is a multiplying by one.
Checks whether or not a node is an `AssignmentExpression`.
Checks whether or not a node is appended with an empty string.
Checks whether or not a node is callee.
Checks whether or not a node is enclosed in parentheses.
Checks whether or not a trailing comma is allowed in a given node.
Checks whether or not the last code path segment is reachable.
Checks whether or not the reference modifies properties of its variable.
Checks whether or not the tokens of two given nodes are same.
Checks whether or not the value of `this` is the global object.
Checks whether or not there is a comment which has "eslint-env *" in a given text.
Checks whether or not there is a fallthrough comment.
Checks whether or not this composite component is mounted.
Checks whether or not this is before `super()` is called.
Checks whether or not this is in a constructor.
Checks whether or not this node had been checked already.
Checks whether or not: - given tokens are on same line.
Checks whether the 'typeof' operator is used with the correct value.
Checks whether the constructor body is a redundant super call.
Checks whether the given ID was created on the client, as opposed to an ID that's understood by the server as well.
Checks whether the label of a given kind is allowed or not.
Checks whether the node is a callback.
Checks whether the parameters of a constructor and the arguments of `super()` have the same values or not.
Checks whether the parent node is `.bind(this)` call.
Checks whether the possibly-unsafe statement is inside a finally block.
Checks whether two expressions reference the same value.
Child class should override this function to perform custom logic.
ChildWithContext, GrandChild x 2
Children can be more than one argument, and those are transferred onto the newly allocated props object.
Children of start comments must always have a parent and at least one following sibling (the end comment)
Children of the same category.
Children should load but the subscription should fail.
Choose the first element that is related to our preferred document
Chooses a checking function.
Chop off the first and last lines
Chrome and IE fire non-standard event when selection is changed (and sometimes when it hasn't).
Chrome console user messages.
Chrome expects `sourceURL` when eval'ing code
Chrome may call 'evaluate' for other purposes like auto-completion etc..
Chrome returns unknown for several HTML5 elements.
Chrome server messages.
Clamp the point (unless clamp set to false) so that the extent fits within the range extent.
Clang adds file-wide errors on line -1, so we put it on line 0 instead.
Clang emits one diagnostic saying "matching invocation of function f not found" with one or more child diagnostics listing the reasons.
Class Instance Methods.
Class Static methods.
Class that contains the info and methods for app navigation.
ClassDeclaration creates two variables of its name into its outer scope and its class scope.
Clean out non-shared uninstalled dependencies
Clean up -- kill nuclide server and deactivate packages.
Clean up any state changed after constructor.
Clean up for dependency collection.
Clean up references to private properties and other instances.
Clean up the div for other support tests.
Clean up the event in case it is being reused
Clean up to ensure garbage collection.
Clean up when pane items are destroyed.
Clean up when that happens.
Clean-up function (fires after converters)
Clean-up the animation after the specified delay
Cleanup empty props (null values, empty strings, objects and arrays)
Cleanup layers that don't exist anymore from tree.
Cleanup the old pane item on successful opening or when no connection could be established.
Cleanup unstaged files
Cleanup watch resources.
Clear all selected nodes under the node being collapsed and dispose their subscriptions
Clear all timeouts on unmount
Clear any subscriptions since there is no data.
Clear breakpoints whenever they are saved to localStorage.
Clear cached bundles in case user reloads
Clear current profile to avoid stopping backend.
Clear input after sorting to release objects See https://github.com/jquery/sizzle/pull/225
Clear intercepted tracking data.
Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders
Clear out all remaining properties.
Clear previous threads.
Clear the messages from the given provider, according to the options.
Clear the search on escape key
Clear the suggestion if the mouse moved out of the range.
Clear the text and trigger the `onSubmit` callback
Clear the text field.
Clear timeout if it exists
Clear timer at the end
Clear timers are set first because it's more likely to uncover bugs.
Clears all pending events.
Clears all pending query tracking.
Clears all secments in this context.
Clears any enqueued updates.
Clears the node's .isLoading property once the fetch is complete.
Clears the value of a field by setting it to null/undefined.
Click "Pause" button to pause it and wait for the result.
Clicking a collapsed crumb will expose the hidden crumbs.
Clicking on a 'profile' in the NuclideListSelector auto-fills the form with the information associated with that profile.
Clicking the search button or x clears the map
Client has an optimistic update applied if the mutation defined one.
Clients can call these methods to publish messages
Clients must call `disable()` once they're done with an instance.
Clients must call `dispose()` once they're done with an instance.
Clients should delegate to these
Clients should get a ServerConnection via ServerConnection.getOrCreate() and should never call the constructor directly.
Clip forced viewport to actual scrollable area
Clip forced viewport to actual scrollable area.
Clip off the parts that won't be visible
Clip the change to the size of this doc
Clone an object except for the listed keys which are shallow copied
Clone and apply the pattern environment.
Clone and return a new ReactElement using element as the starting point.
Clone any incoming data and prepend the event, creating the handler arg list
Clone because the root node will differ, but that's okay.
Clone before returning to avoid caller mutating the stack
Clone object or array
Clone passed in options so this function doesn't modify an object it doesn't own.
Clone path module, then override all functions with the Windows version
Clone the descendants list in case it changes during iteration
Clone the ordering so it cannot be dynamically mutated.
Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)
Clones (copies) an Object using deep copying.
Clones a given value deeply.
Clones this `ListViewDataSource` with the specified `dataBlob` and `rowIdentities`.
Close on failure to allow node to exit
Close the client socket and start a reconnect trial, send a message in between.
Close the inserted function.
Closing an Atom window calls `deactivate` on loaded packages.
Closing this stream via end() often causes the child process to terminate."
Code adapted from GeographicLib by Charles F.
CodeMirror, copyright (c) by Marijn Haverbeke and others Distributed under an MIT license: http://codemirror.net/LICENSE
Codes below are used to collect UMA histograms in the Chromium port.
CodexVarDef: modifiers, type, name, default, docblock
Coerce dates and booleans to numeric primitive values.
Coerce length to a number (possibly NaN), round up in case it's fractional (e.g. 123.456) then do a double negate to coerce a NaN to 0.
Coerce numbers to strings for backwards compatibility.
Coerce single value into array
Collapse ancestor crumbs, or from both sides if focused.
Collapse child crumbs.
Collapse template arguments for long types.
Collapse the node and clear its loading state on error so the user can retry expanding it.
Collapse the selected crumb as a last resort.
Collapse whitespace around ,
Collapse whitespace around : to make parsing easier
Collapsed markers have unique ids, in order to be able to order them, which is needed for uniquely determining an outer marker when they overlap (they may nest, but not partially overlap).
Collapses all selected directory nodes.
Collapsing and re-expanding a directory should forcibly fetch its children regardless of whether a subscription is possible.
Collect all the original child paths before invoking the callback.
Collect cache headers
Collect dispatches (must be entirely collected before dispatching - see unit tests).
Collect some analytics about gadget actions.
Collection Functions -------------------- The cornerstone, an `each` implementation, aka `forEach`.
Collection of methods that allow declaration and validation of props that are supplied to React components.
Collects all the necessary information from the docblock and inline comments that may be useful to a transform.
Collects any un-referenced records in the store.
Collects any un-referenced records reachable from the given record via graph traversal of fields.
Collects timing information from key Relay subsystems.
Colliding keys: only first transaction runs.
Collisions are highly unlikely, but this module is in the business of making guarantees rather than safe bets.
Color hex values are never negative, so clamp to 0.
Color of text on unselected tabs
Color of the currently selected tab icon
Color of the foreground switch grip.
Color of the progress bar.
Color of this item's text.
Color stderr output red in the console to distinguish it as error.
Colorize log arguments if enabled.
Combination of the tester configuration and the default configuration.
Combine configs in reverse priority order (later take precedence)
Combine delimiters into one regular expression via alternation.
Combine each of the sourcemaps multiple modules have into a single big one.
Combines 2 asynch calls.
Combines the result of computing the existing spans with the set of spans that existed in the history (so that deleting around a span and then undoing brings back the span).
Come a time when root fields support more than just identifying arguments, write a test to ensure that non-identifying args don't get stripped out.
Comma can be placed before declaration
Comma can be placed before property name
Command key on Mac, Win key on other platforms.
Command keys insert or clear IME input.
Command line configuration - --config with first level .eslintrc
Command line configuration - --config with second level .eslintrc
Command line configuration - --plugin
Command line configuration - --rule with --config and first level .eslintrc
Command to use to start server
Commands with these prefixes will be whitelisted.
Comment out the calls from their original positions
Comments are allowed to occupy lines before the global return, just no blank lines.
Comments are invalidated based on their starting position.
Comments are only left in the Program node comments array if there is no executable code.
Comments can't have .comments, so it doesn't matter whether we print with comments or without.
Comments must start either with // or /*
Commit and tag the repo
Commit code to version control.
Commit mode only shows the changes of the active repository.
Commits the transaction (ie.
Common IE-specific property prefix.
Common ancestor with grandparent is the grandparent.
Common ancestor with parent is the parent.
Common ancestor with self is self - even if topmost DOM.
Common ancestor with self is self.
Common implementation for a simple stubbed view.
Common transpositions of license identifier acronyms
Communicate our context to the combinators.
Compact ancestor crumbs, or from both sides if focused.
Compact child crumbs.
Compact new children *after* this check, for consistency.
Compact the selected crumb.
Compaction loop to remove array holes.
Compacts new children and compares them to the previous children.
Comparator between two mappings where the generated positions are compared.
Comparator between two mappings where the original positions are compared.
Comparator between two mappings with deflated source and name indices where the generated positions are compared.
Comparator between two mappings with inflated source and name strings where the generated positions are compared.
Comparator used to sort menu items by priority: lower priorities appear earlier.
Compare array lengths to determine if a deep comparison is necessary.
Compare function for sort
Compare name if both set Fallback to compare sources
Compare new headers with the old ones
Compare props and variables and reset the internal query variables if outside query variables change the component.
Compare targets if name/sources are equal
Compare the provided array against the previous one
Compare two positions, return 0 if they are the same, a negative number when a is less, and a positive number otherwise.
Compare two strings using fixed time algorithm (to prevent time-based analysis of MAC digest match)
Compare with the current highest version
Compares `objectA` and `objectB` using the provided `isEqual` function.
Compares a query path with another path.
Compares items in a messages array by line and column.
Comparing to log4js's console appender(https://fburl.com/69861669), you can expand and explore the object in console logged by this Appender.
Comparisons must never be yoda-style (default)
Compatibility for the old (timeouts, retryForever) signature
Compile a node and return a nodeLinkFn based on the node type.
Compile a node list and return a childLinkFn.
Compile a setter function for the expression.
Compile a template and return a reusable composite link function, which recursively contains more link functions inside.
Compile a textNode and return a nodeLinkFn.
Compile an element and return a nodeLinkFn.
Compile and execute a filtering function Provide `match` to avoid retokenization if we modified the selector above
Compile link props on an instance.
Compile props on a root element and return a props link function.
Compile the directives on an element and return a linker.
Compile the root element of an instance.
Compile the template source, escaping string literals appropriately.
Compile to actual regexp objects.
Compiles the specified source file (automatically determining the correct compilation flags).
Complete fully to folder if there is exactly one match and it is a folder containing a package.json file.
Completely flattens an array of arrays.
Completely locally implemented - no native hooks.
Completely removes the record identified by `dataID` from the store.
Completely unreasonable invalid garbage throws an error
Complex objects that are passed are expected to have a top-level `id` attribute, which is used for later lookup + inspection.
Complex printers -- meaning they require context.
Complex types can end up being super long.
Component doesn't want to update, RelayContainer does.
Component doesn't want to update, RelayContainer doesn't either.
Component that displays UI to create a new file.
Component that manages the state transitions as the user connects to a server.
Component that wraps platform ScrollView while providing integration with touch locking "responder" system.
Component to control the app status bar.
Component to entertain the user while he is waiting to hear back from the server.
Component to prompt the user for authentication information.
Component to prompt the user for connection details.
Component wants to update, RelayContainer does too.
Component wants to update, RelayContainer doesn't.
ComponentWillUnmount shall only be called once
Components can add sources that will be queried when a bug report is created via `collectExtraData`.
Components can pass what node to use by defining a `getScrollableNode` function otherwise `this` is used.
Components should also remember to call `remove()` on the object that is returned by `addSource` when they are unmounted.
Composite components are higher-level components that compose other composite or native components.
Composite/text components don't have any built-in ID: we have to make our own
Compress multiple dash
Compute X scale factor and normalize first row.
Compute XY shear factor and make 2nd row orthogonal to 1st.
Compute XZ and YZ shears, orthogonalize 3rd row
Compute `linePrefix` so that ocamlmerlin gets more context.
Compute `replacementPrefix` to make sure that the existing dot doesn't get clobbered when autocompleting.
Compute a least-squares linear fit weighted by the product of robustness weights and the tricube weight function.
Compute a style array (an array starting with a mode generation -- for invalidation -- followed by pairs of end positions and style strings), which is used to highlight the tokens on the line.
Compute a value for each scope.
Compute bounds, and cache points temporarily.
Compute exp(x) - 1 accurately for small x.
Compute perpendicular offset line of length rc.
Compute shear and make second row orthogonal to first.
Compute sign, exponent, fraction
Compute straight corners.
Compute the angle of the sector formed by the two sides of the arc.
Compute the base array of styles
Compute the character length of a line, taking into account collapsed ranges (see markText) that might hide parts, and join other lines onto it.
Compute the character position closest to the given coordinates.
Compute the default character width.
Compute the default text height.
Compute the depth of each scope.
Compute the diff and issue notifications, but only if someone is listening
Compute the inner corners.
Compute the last column for each generated mapping.
Compute the layout using Buchheim et al.'s algorithm.
Compute the left-most, right-most, and depth-most nodes for extents.
Compute the lines that are visible in a given viewport (defaults the the current scroll position).
Compute the min and max of the position and point.
Compute the new extent bounds.
Compute the normalized tangent vector from the slopes.
Compute the order of series, and permute them.
Compute the outer corners.
Compute the point of the bandwidth interval that is farthest from x
Compute the rounded corners.
Compute the slopes of the secant lines between successive points.
Compute the space at the start so any indents that don't cause a reset will not mess things up.
Compute the split point, and the quadrant in which to insert p.
Compute the start and end angle for each group and subgroup.
Compute the time elapsed between hrtime readings A and B, where A is later than B.
Compute the tricube weight function.
Compute the two inner corners.
Compute the two outer corners.
Compute this*j + x*k (simultaneous multiplication)
Compute three-point differences for the given points.
Compute unique fields in order of discovery.
Compute whether a line is hidden.
Compute x-scale and normalize the first row.
Compute y-scale and normalize the second row.
Computed unit is not pixels.
Computes a key through scalar multiplication of a point on the curve 25519.
Computes an EdDSA signature of a message.
Computes display.scroller.scrollLeft + display.gutters.offsetWidth, but using getBoundingClientRect to get a sub-pixel-accurate result.
Computes the EdDSA public key.
Computes the length of a line that may contain tabs.
Computes the public key to a private key on the curve 25519.
Computes the scalar product of a point on the curve 25519.
Computes the score for the specified row, as the worst aspect ratio.
Computes the slope from points p0 to p1.
Concatenate each main entry with the canonical dir
Concatenating empty segment
Concatenating from an empty segment
ConcreteCallVariable should flow into mixed
Condense equivalence converters
ConditionalExpression
ConditionalExpression (alternate)
ConditionalExpression (consequent)
Conditionally include one space before or after colon
Conditions for stopping the spring animation
Config information is extracted from data exported from the UIManager module.
Configs may also have one or more additional elements to specify rule configuration or options.
Configuration object for the `verify` API.
Configuration settings for a rule.
Configure and run animation
Configure some jasmine specific things for integration testing.
Configure the gutter.
Configure the manager and kick in the resolve process
Configure things so we can do a final run to update UI and reset state.
Configures the root queries and initial variables that define the context in which the top-level component's fragments are requested.
Confirm autocomplete.
Confirm if the user really wants to register
Confirm that partial data was read into the cache:
Confirm the json with the user
Confirm their initial value.
Conflicts trample with a warning.
Connect or disconnect spans from a line.
Connect to requested dbgp debuggee on given port.
Connection arguments can be stripped out.
Connections from the Chrome UI.
Connects the executor to the debugger.
Consider cleaning up these unused modules in a separate diff.
Consider detecting such cases (perhaps with a checksum included in the fix) and rejecting the fixes, since we can't accurately track their locations.
Consider enabling multi-line regions.
Consider style recalculation as a reason for layout invalidation, but only if we had no earlier layout invalidation records.
Consider supporting multiple cursors in the future.
Consider these as being member methods, but with an implied ordering while being isolated from each other.
Consider using this as a supplementary measure with `NavigationTypeDefinition`.
Consider warning here and deprecating this convenience.
Consistent way to clean up the final source before returning.
Console warnings that appear too far before this exception are probably not related to GraphQL.
Constant for empty modifiers set.
Constants describing the size of trie nodes.
Constants for encoding modifier key set as a bit mask.
Constants here represent enums with the same values got from hh_client and the Hack web worker.
Constrain the dragpoint to be within the containing div of the datagrid.
Constrain the dragpoint to be within the space made up by the column directly to the left and the column directly to the right.
Construct NTP message
Construct URL without bewit
Construct a loggingEvent following log4js event format.
Construct artifacts container
Construct authorization
Construct built in types.
Construct the actual binding handlers
Construct the aliases.
Construct the built ins.
Construct this object to enable Hyperclick in a text editor.
Construct this object to enable Hyperclick in the Atom workspace.
Construction and Destruction
Constructor(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long byteLength)
Constructor(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length)
Constructor(TypedArray array)
Constructor(unsigned long length)
Constructs a React ID by joining a root ID with a name.
Constructs a multi-dimensional array filled with zeroes.
Constructs an enumeration with keys equal to their value.
Consume a semicolon, or, failing that, see if we are allowed to pretend that there is a semicolon at this position.
Consumes contextual keyword if possible.
Container that allows to flip left and right between child views.
Containers break the layout chain as they may be empty.
Containers may be subscribed to "new" records in the case where they were previously garbage collected or where the link was incrementally loaded from cache prior to the linked record.
Contains a list of the names of parameters.
Contains a range of UTF-8 character offsets that identify the region of the source from which the AST derived.
Contains constants that are used in constructing both `StyleSheet`s and inline styles during transitions.
Contains diff method based on Javascript Diff Algorithm By John Resig http://ejohn.org/files/jsdiff.js (released under the MIT license).
Contains disposable items should be disposed by cleanup() method.
Contains internal static internal state in order to test that updates to existing children won't reinitialize components, when moving children - reusing existing DOM/memory resources.
Contains services that let us test marshalling of Errors.
Contains the `commandDisposable` Objects for all currently-registered views.
Contains two regular `Animated.Value`s under the hood.
Content editable or old IE textarea.
Contents of process.argv: 0 is "node" 1 is the path to this script.
Context for global events is callbackContext if it is a DOM node or jQuery collection
Context is not a document
Context is one of "line", "div" (display.lineDiv), "local"/null (editor), or "page"
Context may be "window", "page", "div", or "local"/null Result is in "div" coords
Context may be "window", "page", "div", or "local"/null.
Context may be one of "line", "div" (display.lineDiv), "local"/null (editor), "window", or "page".
Context menu is handled in onMouseDown for Gecko.
Context menu is handled in onMouseDown for these browsers.
ContextSpecific (choice)
Contexts are never paged - even with large numbers of variables.
Continually call clean until there is no more extraneous dependencies to remove
Continuation commands get a response, but that response is a status message which occurs after execution stops.
Continue fill actions dropdown for new provider.
Continue fill debugging types dropdown for new connection.
Continue from loader breakpoint to hit xdebug_break() which will load whole www repo for evaluation if possible.
Continue use new UI element for new provider + action.
Continue with just the slash
Continuing lines, if any
Contrary to `setAttribute`, object properties are properly `toString`ed by IE8/9.
Contributed audit categories should go into this namespace.
Contributed audit rules should go into this namespace.
Contributed by Andres Almiray http://jroller.com/aalmiray/entry/nice_source_code_syntax_highlighter
Contributed by David Simmons-Duffin and Marty Kube
Contributed by Erik Peterson.
Contributed by Gheorghe Milas and Ahmad Sherif
Contributed by Jen http://www.jensbits.com/2009/05/14/coldfusion-brush-for-syntaxhighlighter-plus
Contributed by Patrick Webster http://patrickwebster.blogspot.com/2009/04/javafx-brush-for-syntaxhighlighter.html
Contributed by Yegor Jbanov and David Bernard.
Contributes additional methods to a constructor
Contributes by B.v.Zanten, Getronics http://confluence.atlassian.com/display/CONFEXT/New+Code+Macro
Controls how view is important for accessibility which is if it fires accessibility events and if it is reported to accessibility services that query the screen.
Controls whether iOS should automatically adjust the content inset for scroll views that are placed behind a navigation bar or tab bar/ toolbar.
Controls whether the View can be the target of touch events.
Convenience converter                  (step1: uncomment)
Convenience method for turning `node` into a properly formed ref query.
Convenience method that attaches a DOM event listener to the directive element and autometically tears it down during unbind.
Convenience method to remove the element at given index or target element reference.
Convenience on-instance nextTick.
Convenience version of a common use case of `filter`: selecting only objects containing specific `key:value` pairs.
Convenience version of a common use case of `find`: getting the first object containing specific `key:value` pairs.
Convenience version of a common use case of `map`: fetching a property.
Convenience wrapper around `RelayTestUtils.writePayload`.
Convenience wrapper around `readRelayQueryData`.
Convenience wrapper around validateConnection that gracefully attempts to extract the connection identified by `connectionName` from the `parentField`.
Convenience wrapper for synchronously reading file contents.
Convenient command-line interface (see e.g. example/add-braces).
Convenient shorthand, because this is used so commonly
Conveniently, IE8 doesn't support SVG and so we can simply use the attribute in browsers that support SVG and the property in browsers that don't, regardless of whether the element is HTML or SVG.
Conveniently, `setImmediate` was introduced in the same version `process.nextTick` started throwing recursion errors.
Convert String-formatted options into Object-formatted ones and store in cache
Convert TemplateLiteral into a single template string with substitution names, a matching array of substituted values, and a set of substituted variable names.
Convert `ListType` and `NonNullType` into `NamedType`.
Convert a Date to a timestamp.
Convert a hrtime reading from the array format returned by Node's process.hrtime() into a scalar number of microseconds.
Convert a hrtime reading from the array format returned by Node's process.hrtime() into a scalar number of milliseconds.
Convert a hrtime reading from the array format returned by Node's process.hrtime() into a scalar number of nanoseconds.
Convert a property into getter/setter so we can emit the events when the property is accessed/changed.
Convert a stream of actions into a stream of application states.
Convert a string template to a DocumentFragment.
Convert a structured logcat entry into the format that nuclide-console wants.
Convert a style as returned by a mode (either null, or a string containing one or more styles) to a CSS style.
Convert a template node to a DocumentFragment.
Convert a value into the proper css writable value.
Convert a warning term into a RegExp which will match a comment containing that whole word in the specified location ("start" or "anywhere").
Convert all of the arguments into marshaled form.
Convert all of the elements through the correct marshaller.
Convert all of the elements through the correct unmarshaller.
Convert an Array-like object to a real Array.
Convert anything to text
Convert array into object
Convert array messages to Error Objects with Traces.
Convert array-like objects to arrays.
Convert contents to JSON if they are not a string
Convert data if not already a string
Convert each cell to a string.
Convert endpoints to decomposed endpoints
Convert existing expression atom to assignable pattern if possible.
Convert from Buffer to string.
Convert html into DOM nodes
Convert list of expression atoms to binding list.
Convert negative to positive, and record the sign prefix.
Convert no matter what (that way responseXXX fields are always set)
Convert node Http request object to a request configuration object
Convert node's  to request configuration object
Convert non-html into a text node
Convert non-object values to strings as per FormData.append() spec
Convert options from String-formatted to Object-formatted if needed (we check in cache first)
Convert relative paths to absolute ones.
Convert response if prev dataType is non-auto and differs from current
Convert samples from usec to msec
Convert series to canonical two-dimensional representation.
Convert string boolean literals into real booleans.
Convert the JSON string to an object.
Convert the `Immutable.Set` to a native `Array` for simpler use w/ Jasmine.
Convert the pattern into a regexp
Convert to an Observable for ease of manipulation
Convert to each sequential dataType
Convert to the desired precision.
Convert visible area to visible indexes.
Convert wildcard targets to semver range targets if they are newly Note that this can only be made if they can be targetable If they are not, the resolver is incapable of handling targets
Convert wrapped lines into rows with padded values.
Converting to array solves the problem.
Converts 0xrrggbbaa into 0xaarrggbb
Converts `map` to an array.
Converts `set` to an array.
Converts `string` to an array.
Converts `value` to a number.
Converts `value` to a string if it's not one.
Converts `value` to an integer.
Converts a DbgpProperty to a Chrome PropertyDescriptor.
Converts a byte string representation to an array of unsigned 8-bit integers.
Converts a dbgp value to a Chrome RemoteObject.
Converts a layout size (dp) to pixel size (px).
Converts an unsigned 8-bit integer array representation to a byte string.
Converts from a two-complement value to a value where the sign bit is is placed in the least significant bit.
Converts from a two-complement value to a value where the sign bit is placed in the least significant bit.
Converts hyphen/underscore/slash delimitered names into camelized classNames.
Converts lists into objects.
Converts local paths to file: URI's.
Converts new-style severity settings (off, warn, error) into old-style severity settings (0, 1, 2) for all rules.
Converts null/undefined values into empty object.
Converts old-style severity settings (0, 1, 2) into new-style severity settings (off, warn, error) for all rules.
Converts the old, object-based module structure to the new array-based structure.
Converts the template string into a valid GraphQL document string.
Converts this array class into a real JavaScript Array.
Converts to a two-complement value from a value where the sign bit is is placed in the least significant bit.
Converts to a two-complement value from a value where the sign bit is placed in the least significant bit.
Convienience wrapper around check().
CookieJar configuration:
Coordinates for the center of the map.
Coords must be lineSpace-local
Copied from `node/src/node.js`.
Copied from lib/utils/git, because we need to use it before calling npm.load and lib/utils/git uses npm.js which doesn't allow that.
Copies a file to a new path.
Copies a specified subdirectory of integration-test-helpers/spec/fixtures to a temporary location.
Copies over content of the input segment and add to the current segment.
Copies own symbol properties of `source` to `object`.
Copies properties of `source` to `object`.
Copies the ViewManager constants and commands into UIManager.
Copies the node.lib file for the current target architecture into the current proper dev dir location.
Copies the values of `source` to `array`.
Copy .git folder to the tempDir
Copy and paste this file into your (Chrome) browser console after changing the React root ID.
Copy bower.json to .bower.json and add some props
Copy bytes to buffer, if provided
Copy default methods.
Copy docs folder to a temporary directory
Copy files to the temporary directory first
Copy flow project to a temporary location.
Copy its contents to the temporary dir
Copy mercurial project to temp directory.
Copy mercurial project to temporary directory.
Copy metadata that is necessary to dirty records when recycling objects.
Copy npm-react/**/* to build/npm-react and build/modules/**/* to build/react-core/lib
Copy of the npm package: blocked, but without the unref, because that doesn't work in apm tests.
Copy options and fill in default values.
Copy over examples/ to build/starter/examples/ and starter/ to build/starter/
Copy over passthrough methods.
Copy private data: events, handlers, etc.
Copy properties from one or more objects (up to 5) into the first object.
Copy sourcesContent into SourceNode
Copy sourcesContents of applied map.
Copy temp package to temp package  2
Copy the contents of 'fixtures' into a temp directory ...
Copy the events from the original to the clone
Copy the metadata about the container from the placeholder.
Copy the props, except the mouse listeners
Copy to build/packages/react-dom
Copy to build/packages/react-native-renderer
Copying and editing the code allowed me to make invasive changes and simplifications without creating a complicated tangle.
Copyright (C) 2007 Apple Inc.
Copyright (C) 2008 Apple Inc.
Copyright (C) 2008 Nokia Inc.
Copyright (C) 2009 280 North Inc.
Copyright (C) 2009 Apple Inc.
Copyright (C) 2009 Google Inc.
Copyright (C) 2009 Joseph Pecoraro  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  1.
Copyright (C) 2009 Joseph Pecoraro  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1.
Copyright (C) 2009 Joseph Pecoraro Copyright (C) 2010 Google Inc.
Copyright (C) 2009 Joseph Pecoraro Copyright (C) 2011 Google Inc.
Copyright (C) 2009 Joseph Pecoraro Copyright (C) 2013 Samsung Electronics.
Copyright (C) 2010 Apple Inc.
Copyright (C) 2010 Google Inc.
Copyright (C) 2010 Joseph Pecoraro.
Copyright (C) 2010 Nikita Vasilyev.
Copyright (C) 2011 Brian Grinstead All rights reserved.
Copyright (C) 2011 Google Inc.
Copyright (C) 2012 Google Inc.
Copyright (C) 2012 Intel Inc.
Copyright (C) 2012 Research In Motion Limited.
Copyright (C) 2013 Google Inc.
Copyright (C) 2013 Samsung Electronics.
Copyright (C) 2014 Google Inc.
Copyright (C) IBM Corp.
Copyright (c) 2005  Tom Wu All Rights Reserved.
Copyright (c) 2005-2009  Tom Wu All Rights Reserved.
Copyright (c) 2007, 2013, 2014 Michele Bini Copyright (c) 2014 Mega Limited under the MIT License.
Copyright (c) 2010-2012 Robert Kieffer MIT License - http://opensource.org/licenses/mit-license.php
Copyright (c) 2011, 2012, 2014 Ron Garret Copyright (c) 2007, 2013, 2014 Michele Bini Copyright (c) 2014 Mega Limited under the MIT License.
Copyright (c) 2011, 2012, 2014 Ron Garret Copyright (c) 2014 Mega Limited under the MIT License.
Copyright (c) 2013 StrongLoop, Inc.
Copyright (c) 2013-present, Facebook, Inc.
Copyright (c) 2014 GitHub, Inc.
Copyright (c) 2014 Mega Limited under the MIT License.
Copyright (c) 2015 The Chromium Authors.
Copyright (c) 2015, Facebook, Inc.
Copyright (c) 2015-present, Facebook, Inc.
Copyright (c) 2016-present, Facebook, Inc.
Copyright (c) Microsoft Open Technologies, Inc.
Copyright (c) jQuery Foundation, Inc.
Copyright 2004-present Facebook.
Copyright 2006 Shin, YoungJin
Copyright 2009-2011 Mozilla Foundation and contributors Licensed under the New BSD license.
Copyright 2011 Mozilla Foundation and contributors Licensed under the New BSD license.
Copyright 2013-present Facebook, Inc.
Copyright 2013-present, Facebook, Inc.
Copyright 2014 Mozilla Foundation and contributors Licensed under the New BSD license.
Copyright 2014 The Chromium Authors.
Copyright 2014-present, Facebook, Inc.
Copyright 2015 Joyent, Inc.
Copyright 2015 The Chromium Authors.
Copyright 2015, Facebook, Inc.
Copyright 2015-present, Facebook, Inc.
Copyright 2016-present, Facebook, Inc.
Copyright Joyent, Inc.
Core utility used in both instantiation and inheritance.
Correct for dirPath, which is essentially a random string.
Corresponds roughly to RGB brighter/darker
Could be "ExperimentalSpreadProperty" or "SpreadProperty"
Could be paths to files or directories.
Could be publishing a URL or tarball, however, that means that we will not have automatically run the prepublish script, since that gets run when adding a folder to the cache.
Count digits for our randomness check
Count how many comments we need to transfer, treat negative counts as 0.
Count how many of each break we have.
Count leading zero bits on a buffer
Count of children found in the current subtree.
Count of current touches.
Count test target files.
Count the expected number of properties.
Count the invisible nodes beyond the bottom bound of the viewport.
Count the number of children that are typically specified as `props.children`.
Count the number of dominated nodes for each node.
Count the number of lines in the view whose DOM representation is out of date (or nonexistent).
Counter for holding the number of active queries
Counts clicks and has a renders an item for each click.
Counts how many scopes deep each type variable is
Counts instances of an object that group by a certain criterion.
Counts the column offset in a string, taking tabs into account.
Cover grammar support.
Covers bottom of gutter when coverGutterNextToScrollbar is on and h scrollbar is present.
Covers bottom-right square when both scrollbars are present.
Covers: 'use babel' and "use babel"
Coverts a box from "div" coords to another coordinate system.
CpuProfile is a virtual event created on frontend to support serialization of CPU Profiles within tracing timeline data.
Create "bubbling" focus and blur events Support: Firefox, Chrome, Safari
Create ENOENT error because Node.js v0.8 will not emit an `error` event if the command could not be found.
Create RegExp object for valid patterns.
Create a (shallow-cloned) duplicate of an object.
Create a BasicSourceMapConsumer from a SourceMapGenerator.
Create a HomePaneItem component class that's bound to the provided stream of home fragments.
Create a ReactLink that's linked to part of this component's state.
Create a SourceMapConsumer from a SourceMapGenerator.
Create a base64 sha1 HMAC for `options`.
Create a comment token object and make sure it has all the data JSHint needs to work with special comments.
Create a component for the extra UI in the Buck version of the toolbar.
Create a connection by reusing the configuration of last successful connection associated with given host.
Create a debugger with the given `namespace`.
Create a factory that creates HTML tag elements.
Create a file of the target size.
Create a file that is ignored.
Create a file that is tracked.
Create a file that is untracked.
Create a fragment instance with given host and scope.
Create a fresh copy of the test package into temp
Create a full Content-Type header given a MIME type or extension.
Create a function which has 'unsafe' privileges (required by windows8 apps)
Create a git repo in a temporary folder.
Create a higher-order component that automatically computes the `pointerEvents` property for a component whenever navigation position changes.
Create a history change event from an updateDoc-style change object.
Create a list of modules which should be installed based on config
Create a list of recommended rules, because we don't want to disable them
Create a local copy of items to defend against the caller modifying the array before this Promise is resolved.
Create a marker, wire it up to the right lines, and
Create a mock file watcher.
Create a new _sourcesContents map if the property is null.
Create a new attribute in this section (or move to next editable selector if possible).
Create a new counter with the given initial count.
Create a new fragment instance.
Create a new instance using the current constructor and replace the existing instance.
Create a new logger that pipes everything to ours that will be used to fetch
Create a new module (and put it into the cache)
Create a new object and put it in the registry.
Create a new object so we don't mutate the original one.
Create a parallel segment from merging returned and thrown.
Create a payload that contains all the updates between two sets of props.
Create a range array from given number.
Create a range of LineView objects for the given lines.
Create a range of theoretically intact lines, and punch holes in that using the change info.
Create a registry of rule configs
Create a require() shim to catch any imports.
Create a safe reference to the Underscore object for use below.
Create a second query that requests a different selection on the empty plural field.
Create a second query that requests a different selection on the null connection.
Create a second query that requests a different selection on the null linked field.
Create a second query that requests a different selection on the null plural field.
Create a separator menu item that displays if either the file or directory item displays.
Create a stream of tracking events from a stream of actions.
Create a subject that we can use to track search completion.
Create a temp directory with given prefix.
Create a temporary Git repository.
Create a temporary Hg repository.
Create a temporary directory and some test files.
Create a text buffer that's bound to the process.
Create a timestamp if incoming event doesn't have one
Create a wrapper that calls to structuredStackTraceHook first, then return the result of prepareStackTrace.
Create a writable copy of the event object and normalize some properties
Create access token for user
Create an "anchor" for performing dom insertion/removals.
Create an archive containing the main package
Create an empty record at `dataID` if a record does not already exist.
Create an eslint config for any rules which only have one configuration in the registry.
Create an initial response.
Create an invalid package meta
Create an iteration object.
Create an object suitable for use as an Atom pane item from a React element.
Create an object that provides commands ("action creators")
Create and bind a directive to an element.
Create and return a new ReactElement of the given type.
Create common nodes for printing.
Create converters map with lowercased keys
Create default container for tests
Create dummy `key` and `ref` property to `props` to warn users against its use
Create empty package.json to indicate project root
Create fake file contents.
Create gpu tasks containers.
Create grid in the records main area.
Create groups of requires from each config
Create helper data structures.
Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
Create intra-page links Requires that your headings already have an `id` attribute set (because that's what jekyll does).
Create invalid versions
Create it based on the metadata
Create listener for each media event
Create makefile build targets and dependencies.
Create missing directory and copy files there
Create mouseenter/leave events using mouseover/out and event-time checks Support: Chrome 15+
Create node from HTML string
Create or get a cached service.
Create quick reference variables for speed access to core prototypes.
Create readable "multipart/form-data" streams.
Create records list in the records sidebar.
Create scripts navigator
Create scrollLeft and scrollTop methods
Create some versions for different sources
Create stub UISourceCode for the time source mapping is being loaded.
Create subscriptions for addedRepos.
Create target subdirs if any and produce the compiler calls, /mp is respected if enabled.
Create temporary Hg repository.
Create the Jasmine environment.
Create the SourceNode.
Create the abort callback
Create the actual regular expression by or-ing the above strings.
Create the code path of this scope.
Create the config object from the tester config and this item specific configurations.
Create the final options object
Create the first query with a selection on a connection.
Create the first query with a selection on a linked field.
Create the first query with a selection on a plural field
Create the first query with a selection on a plural field.
Create the root node.
Create the script via .innerHTML so its "parser-inserted" flag is set to true and it does not execute
Create the wrapper root query.
Create third node and build chain.
Create top level properties splitter.
Create top overview component.
Create uses `verbatim` and `n` answer buffer and that implies that untracked files will be ignored.
Create valid rule configurations by combining two arrays, with each array containing multiple objects each with a single property/value pair and matching properties.
Create vertical box with stack.
Created by nathanleniz on 6/16/15.
Creates RegExp object for `always` mode.
Creates RegExp object for `never` mode.
Creates a Cursor instance based off the given `writable stream` instance.
Creates a DOM ID prefix to use when mounting React components.
Creates a PropType that enforces the ReactLink API and optionally checks the type of the value being passed inside the link.
Creates a RelayQuery.Mutation for the given config.
Creates a RelayQuery.Mutation used to fetch the given optimistic response.
Creates a SourceNode from generated code and a SourceMapConsumer.
Creates a StyleSheet style reference from the given object.
Creates a `Set` cache object to optimize linear searches of large arrays.
Creates a base function for methods like `_.forIn`.
Creates a bypass path.
Creates a cache object to store unique values.
Creates a child component.
Creates a clone of  `buffer`.
Creates a clone of `arrayBuffer`.
Creates a clone of `map`.
Creates a clone of `regexp`.
Creates a clone of `set`.
Creates a clone of `typedArray`.
Creates a clone of the `symbol` object.
Creates a composite component class given a class specification.
Creates a config file to use performance tests.
Creates a context for ConditionalExpression, LogicalExpression, IfStatement, WhileStatement, DoWhileStatement, or ForStatement.
Creates a context object of SwitchStatement and stacks it.
Creates a context object of TryStatement and stacks it.
Creates a context object of a loop statement and stacks it.
Creates a copy of the argument if it is already an array.
Creates a descriptor that overwrites itself on first access with a method for observing changes of a specific property.
Creates a dispatch context for the specified `thiz` (typically, the target DOM element that received the source event) and `argumentz` (typically, the data `d` and index `i` of the target element).
Creates a fix command that inserts text after the given node or token.
Creates a fix command that inserts text after the specified range in the source text.
Creates a fix command that inserts text at the specified index in the source text.
Creates a fix command that inserts text before the given node or token.
Creates a fix command that inserts text before the specified range in the source text.
Creates a fix command that removes the node or token from the source.
Creates a fix command that removes the specified range of text from the source.
Creates a fix command that replaces text at the node or token.
Creates a fix command that replaces text at the specified range in the source text.
Creates a fragment used to fetch data necessary to insert a new edge into an existing connection.
Creates a fragment used to fetch the given optimistic response.
Creates a fragment used to update any data as a result of a mutation that deletes an edge from a connection.
Creates a full fledged settings object into target with both ajaxSettings and settings fields.
Creates a function that invokes `func` with the `this` binding of the created function and arguments from `start` and beyond provided as an array.
Creates a function that invokes two functions and ignores their return vales.
Creates a function that invokes two functions and merges their return values.
Creates a function that returns `value`.
Creates a garbage collector for this instance.
Creates a highly specialized animation function that may be evaluated every frame.
Creates a lazy Relay container.
Creates a looped path.
Creates a map cache object to store key-value pairs.
Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
Creates a module path relative to the current working directory.
Creates a module path relative to the given directory.
Creates a module resolver that always resolves the given mappings.
Creates a new Animated value composed from two Animated values added together.
Creates a new Animated value composed from two Animated values multiplied together.
Creates a new Animated value that is the (non-negative) modulo of the provided Animated value
Creates a new React class that is idempotent and capable of containing other React components.
Creates a new VM in node, or an iframe in a browser in order to run the script
Creates a new directory with the given path.
Creates a new instance of RuleTester.
Creates a new instance of a rule configuration set  A rule configuration set is an array of configurations that are valid for a given rule.
Creates a new instance of the core CLI engine.
Creates a new native library with the given name
Creates a new pane item for the specified gadget.
Creates a new queue if none is passed and always returns the queue.
Creates a new scope with a breakable statement.
Creates a new scope with a labeled statement.
Creates a number encoding keyCode in the lower 8 bits and modifiers mask in the higher 8 bits.
Creates a path from all brokenForkContext paths.
Creates a per-global singleton value.
Creates a popup to alert the user.
Creates a prerelease version tag and pushes to origin.
Creates a query for each of the component's fragments using the given variables, and fragment pointers that can be used to resolve the results of those queries.
Creates a range at `dataID` with an optional `forceIndex`.
Creates a registry of rules which had no error-free configs.
Creates a release version tag and pushes to origin.
Creates a render method that makes it easier to create, render, and inspect a hierarchy of mock React component classes.
Creates a request signer, used to asynchronously build a signature for a request (does not have to be an http.ClientRequest).
Creates a segment that follows given segments.
Creates a set cache object to store unique values.
Creates a set of `values`.
Creates a stack cache object to store key-value pairs.
Creates a string representation of a member expression.
Creates a stubbed Config object that will bypass normal require() to load plugins by name from the objects specified.
Creates a temporary directory with the given name.
Creates an array containing the nodes rendered from the supplied markup.
Creates an array from array like objects.
Creates an array of index keys for `object` values of arrays, `arguments` objects, and strings, otherwise `null` is returned.
Creates an array of the own enumerable property names of `object`.
Creates an array of the own symbol properties of `object`.
Creates an asymmetric matcher that passes for values that are container props with an optionally constrained data ID and/or fragment.
Creates an empty configuration object suitable for merging as a base.
Creates an empty fork context preceded by a given context.
Creates an environment config based on the specified environments.
Creates an event and returns an identifier that can be used to cancel it, or null if the manager cannot accept events.
Creates an hash object.
Creates an input element under the parentElement with the given id and defaultText.
Creates an object in which to store rule configs and error counts  Unless a rulesConfig is provided at construction, the registry will not contain any rules, only methods.
Creates an object that represents ripple drawable with specified color (as a string).
Creates an object with the cap is new exceptions as its keys and true as their values.
Creates an observable for an Ajax request with either a settings object with url, headers, etc or a string for a URL.
Creates an observable sequence from an Ajax GET Request with the body.
Creates an observable sequence from an Ajax POST Request with the body.
Creates an observable with the following properties:  1.
Creates an opaque serialization of calls.
Creates an option object to test an "overrides" option.
Creates an unreachable segment that follows given segments.
Creates and stacks new forking context.
Creates code fixing commands for rules.
Creates groups of properties.
Creates looping path.
Creates markup for a custom property.
Creates markup for a property.
Creates markup for the ID property.
Creates markup for the content between the tags.
Creates markup for the open tag and all attributes.
Creates new context for BreakStatement.
Creates new path from the `false` case.
Creates new path from the `true` case.
Creates new segments from the specific range of `context.segmentsList`.
Creates new segments from this context.
Creates paths of `continue` statements.
Creates sets of rule configurations which can be used for linting and initializes registry errors to zero for those configurations (side effect).
Creates test data for touch events using environment agnostic "node handles".
Creates the `atom` global object.
Creates the correct location of a given variables.
Creates the loop condition information from a given reference.
Creates the markup for this text node.
Creates the next path from own true/false fork context.
Creates the padding for `string` based on `length`.
Creates the root fork context.
Creates the root segment.
Creates the template for a React Native project given the provided parameters: - projectDir: templates will be copied here.
Creates/updates a link between two records via the given field.
Creates/updates a one-to-many link between records via the given field.
Creating a new Session is actually side-effecty.
Creating the mutation does not send it.
Creating this function here, allows us to not have to bind or create functions for each event.
Credentials lookup function
Crop the image specified by the URI param.
Cross browser find the element that had the event
Cross domain only allowed if supported through XMLHttpRequest
Cross-browser xml parsing
Cross-domain detection vars
Crumbs are shrunk in order of descending distance from the signifcant crumb, with a tie going to child crumbs.
Crumbs are shrunk on only one side (based on direction) of the signifcant crumb.
Crypto is kind of old and crusty.
Ctrl/Cmd + 1-9 should show corresponding panel.
Curiously, list-style works too without any special prodding.
Current available Nuclide connections.
Current code path segments.
Current props are accessed via `this.props`.
Current rendered range (may be bigger than the view window).
Current serialization doesn't support internal properties refs Will be fixed after injecting InjectedScript.js
Current visible range (may be bigger than the view window).
Current window bounds.
Current word might go beyond the cursor, so we cut it.
Currently awaiting results from a provider (for longer than a certain delay).
Currently disabled due to false positives.
Currently it manages 3 streams: 1.
Currently it provides four callback channels: 1.
Currently may not span multiple lines.
Currently named "doGet" because "get" was created first.
Currently only dom components have arrays of children, but that will change soon.
Currently provides two methods, onFileChange and onFileSave.
Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.
Currently this still uses IDs for reconciliation so this can return null.
Currently undocumnted, but seemingly necessary to use buildAtomEnvironment().
Currently we have two different ways to config a service in service-config.json: 1.
Currently we rely on UIViews and style to figure that out.
Currently, `flow check-contents` returns all of the errors in the project.
Currently, a diagnostic from Flow is an object with a "message" property.
Currently, a diagnostic from Hack is an object with a "message" property.
Currently, all major browsers except Chrome seems to support Lock-keys.
Currently, all the caller cares about is that the Promise resolves to an object with a query() method.
Currently, if `aliasOrTarget` contains a flavor, this will fail.
Currently, the BuckToolbarStore's progress reporting is pretty useless so we omit `observeProgress` and just use the indeterminate progress bar.
Currently, the DiagnosticsPanel is designed to work with only one DiagnosticUpdater.
Currently, use cases only require a simple fire-and-forget interaction
Currently, we always inline scalar types.
Currently, we always send Enum and Object types as variables.
Currently, we only do anything useful with the first error.
Currently: - The order that these are listed in the transaction is critical: - Suppresses events.
Cursor Position Details Moving the Cursor Local Positions and Ranges
Cursor position was documented in a test and is retained here after changes to how text is set in the text editor.
Cursor.each will yield all doc from a batch in the same tick, or schedule getting next batch on nextTick
Custom Matchers from nuclide-atom-test-helpers
Custom Matchers from nuclide-test-helpers
Custom and pre-defined easing functions, delays, durations, decay factors, spring constants, and more can all be tweaked depending on the type of animation.
Custom attributes won't be added by React because "webview" isn't a valid custom element name (custom elements need a dash), so we set the attributes ourselves.
Customize the element containing the modal.
Customize this via `touchableGetPressRectOffset()`.
Customized launch/attach actions supported by this (connection + provider) combination.
Customized version of require("ast-types").
Cycle through the specified endpoints
D is needed because behavior of elts with overflow: auto and padding is inconsistent across browsers
D65 standard referent
DEPRECATED When we were normalizing all git URIs, git+https: was being automatically converted to ssh:.
DEPRECATED this is an invalid URL but we normalize it anyway.
DEPRECATED: Warning for users of the old Unix Sockets URL Scheme
DEPRECATED: this listener will be removed in a future version of react
DIRECTORY providers work in the context of a mounted directory (e.g. Hack symbol search).
DISPLAY CONSTRUCTOR The display handles the DOM integration, both for input reading and content drawing.
DIVs containing the selection and the actual code
DOCUMENT DATA STRUCTURE
DOMAttributeNames: object mapping React attribute name to the DOM attribute name.
DOMAttributeNamespaces: object mapping React attribute name to the DOM attribute namespace URL.
DOMMutationMethods: Properties that require special mutation methods.
DST breaks setMinutes
DST breaks setSeconds
Darwin is a real dick sometimes.
Dash special characters
Data converters Keys separate source (or catchall "*") and destination types with a single space
Data creation script for academic data pushes.
Data is stored as a map from IDs to Records.
Data structure design inspired by Traceur's Map implementation.
Datatips are pinnable by default, unless explicitly specified otherwise.
Dates are compared by their millisecond representations.
Dates have no keys, so we consider these equal.
Dates without properties can be shortcutted
Dbgp connections which do not match the scriptRegex will be ignored.
Dbgp documentation can be found at http://xdebug.org/docs-dbgp.php
Dbgp protocol does not seem to support uncaught exception handling so we only support 'all' and treat all other states as 'none'.
Deactivate nuclide packages.
Deactivating must come before unloading.
Deal with IE10/11 textarea placeholder bug by setting the correct value after cloning.
Deals with base64 correctly by aligning chunks
Debounce a function so it only gets called after the input stops arriving after the given wait period.
Debounce a handler function.
Debounce manually rather than using editor.onDidStopChanging so that the debounce time is configurable.
Debounce tab change events to limit unneeded scrolling when changing or closing tabs in quick succession.
Debounce this call to reduce churn at startup, and when new providers get activated or a new directory gets mounted.
Debugger domain types.
Debugger finished initializing and entered debug mode.
DebuggerInstance has been disposed.
Debugging React Native consists of the following:  1.
Debugging the node process.
Decide if we can use the one from the resolve cache
Decide if we retrieve from the cache or not Also decide if we validate the cached entry or not
Decide which links to delete
Decimal literals may be "imaginary"
Decimal numbers that start with '0' such as '09' are illegal but we still parse them and return as malformed.
Declarative fill type objects - API design not finalized
Declare a query that requires a lookup in the root call map.
Declare remoteModule as empty object.
Declare variables used by callback
Declares, validates and defaults options.
Declaring, describing, and grouping tests
Decode a single base 64 character code digit to an integer.
Decode a single base 64 digit to an integer.
Decode payload in the given data URI, return the result as a Buffer.
Decodes a base32 encoded string to an array of unsigned 8-bit integers.
Decodes a base32 representation of a key to an internally compatible array representation.
Decodes a canonical hex representation of a key to an internally compatible array representation.
Decodes a hex representation of a key to an internally compatible array representation.
Decodes a hex string to an array of unsigned 8-bit integers.
Decodes the next base 64 VLQ value from the given string and returns the value and the rest of the string via the out parameter.
Decodes the next base 64 VLQ value from the given string and returns the value and the rest of the string.
Decompose a matrix into separate transform values, for use on platforms where applying a precomposed matrix is not possible, and transforms are applied in an inflexible ordering (e.g. Android).
Decrease the indentation after this line.
Decrements the blockStack counter.
Decrements the functionStack counter.
Decrypts the clientKey of a SerializableServerConnectionConfiguration.
Deep clone a language definition (e.g. to extend it)
Deep compare each member.
Deep compare objects.
Deep compare the contents, ignoring non-numeric properties.
Deep copy an acyclic *basic* Javascript object.
Deep object or array comparison
Default `mode` to "always".
Default abort message
Default adding after with no cursor to -1 So the first element in the segment is stored at index 0
Default adding before with no cursor to 1 So the first element in the segment is stored at index 0
Default amount "active" region protrudes beyond box
Default bounciness is 1, which overshoots a little bit once.
Default configuration - blank
Default configuration for the CLI.
Default flags should work.
Default getters for style and pan responders.
Default header targets should be ignored.
Default ignore patterns should not inadvertantly ignore files in parent directories
Default imports come in two flavors.
Default is 2, as appropriate for `process.argv`.
Default is medium (which does not have an associated 'size' string).
Default jsonp settings
Default parameters and Destructuring parameters can have side effects.
Default rule definition: report all lone blocks
Default to "safe" mode
Default to a 4-space indent.
Default to false (not resolving)
Default to the first line, if it's not actually in the file any more.
Default value for options of this type, if no default is specified in the option type usage.
Default value is `false`.
Default value is `true`.
Default value is false.
Default value is true.
Default value-returning functions that may optionally be passed as a third argument to Def.prototype.field.
Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
Defaults to 'before' when unspecified.
Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
Defaults to 'head' when unspecified.
Defaults to 123 (NTP)
Defaults to 60 seconds.
Defaults to GET if not specified.
Defaults to Number.POSITIVE_INFINITY.
Defaults to `SourceMapConsumer.GENERATED_ORDER`.
Defaults to `lib/rules`.
Defaults to `process.argv`.
Defaults to `process.env`.
Defaults to pool.ntp.org
Defaults to returning a ScrollView with the given props.
Defaults to simultaneous.
Defaults to true if not supplied.
Defaults to zero (no timeout)
Defeat the older Safari bug: http://www.quirksmode.org/js/events_properties.html
Defer a task to execute it asynchronously.
Defer compiling this method until we really need it.
Defer is necessary because we need to keep the children to call detach hooks on them.
Defer selecting default target since we need all clients to get their targetAdded notifications first.
Defers a function, scheduling it to run after the current call stack has cleared.
Define a fallback version of the method in browsers (ahem, IE), where there isn't any inspectable "Arguments" type.
Define a local copy of jQuery
Define a module along with a payload.
Define a reactive property on an Object.
Define a rule for one particular run of tests.
Define a type whose name is registered in a namespace (the defCache) so that future definitions will return the same type given the same name.
Define argument syntax for the top-level command.
Define catalyst test apps used in integration tests
Define custom matchers to test our custom matchers...
Define label in the current function in the current scope.
Define lazy getters for each module.
Define option with `flags`, `description` and optional coercion `fn`.
Define row and header height, should be in sync with styles for timeline graphs.
Define t in the current function in the current scope.
Define the hook, we'll check on the first run if it's really needed.
Define your own error by extending this class.
Defined in Mozilla but not MSIE :(
Defines a function which checks whether or not a reference is allowed according to the option.
Defines a new linting rule.
Defines a plugin with a given name rather than loading from disk.
Defines a predicate to check whether or not a given reference is outside of valid scope.
Defines an environment.
Defines many new linting rules.
Definitely want to avoid this.
Definition of context types for this component.
Definition of context types this component sets for its children.
Definition of prop types for this component.
Delay closing the underlying socket connection until registered subscriptions have closed.
Delay hiding the combobox long enough for a click inside the combobox to trigger on it in case the blur was caused by a click inside the combobox.
Delay in ms, from onPressIn, before onLongPress is called.
Delay in ms, from the release of the touch, before onPressOut is called.
Delay in ms, from the start of the touch, before onPressIn is called.
Delay to give the new requests time to start.
Delays a function for the given number of milliseconds, and then calls it with the arguments supplied.
Delegate callback from BreakpointDisplayController.
Delegate focus to the FileTree component if this component gains focus because the FileTree matches the selectors targeted by themes to show the containing panel has focus.
Delegate marshalling to the type registry.
Delegate method `name`.
Delegate to the passed in HgRepositoryClient.
Delegate to the registered connect error handler.
Delegate to these DiagnosticsProviderBase methods to satisfy the DiagnosticProvider interface.
Delegates to **ECMAScript 5**'s native `Function.bind` if available.
Delegates to **ECMAScript 5**'s native `Object.keys`
Delegates to **ECMAScript 5**'s native `every` if available.
Delegates to **ECMAScript 5**'s native `filter` if available.
Delegates to **ECMAScript 5**'s native `forEach` if available.
Delegates to **ECMAScript 5**'s native `indexOf` if available.
Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.
Delegates to **ECMAScript 5**'s native `map` if available.
Delegates to **ECMAScript 5**'s native `reduceRight` if available.
Delegates to **ECMAScript 5**'s native `reduce` if available.
Delegates to **ECMAScript 5**'s native `some` if available.
Delegator accessor `name`.
Delegator getter `name`.
Delegator setter `name`.
Delete a fragment from cache.
Delete a property and trigger change if necessary.
Delete all the ignored files
Delete all the keys in the `keys` array.
Delete an image from the ImageStore.
Delete and create folder
Delete branch (not necessary anymore)
Delete destination folder if any
Delete dummy .master file that is present on the master branch
Delete first to force a new insertion.
Delete headers with value undefined since they break ClientRequest.OutgoingMessage.setHeader in node 0.12
Delete leading comments along with any trailing whitespace they might have.
Delete previous link if any
Delete the native Symbol if we have one to ensure we test the unpolyfilled environment.
Delete the node from any ranges it may be a part of
Delete the record at `dataID`, setting its value to `null`.
Delete the reference from the instance to this internal representation which allow the internals to be properly cleaned up even if the user leaks a reference to the public instance.
Delete the root record ID associated with the mutation.
Delete trailing comments along with any leading whitespace they might have.
Deletermine if that's a rebase or merge operation.
Deletes a listener from the registration bank.
Deletes all listeners for the DOM element with the supplied ID.
Deletes the record from the store, also removing any references to the node from any ranges that contain it (along with the containing edges).
Deletes the value for a property on a node.
Deliberately skip previous process.
Deliberately suppress any flow errors in this method.
Demote these to 'error' level.
Denormalize remainder
Depend on all deps collected by this watcher.
Dependencies further down the graph are either not affected or informed by `dependencyQueryID`.
Depending on the location of .arcconfig, we may get a key that is different from what `arc lint` actually returns, and end up without any lints for this path.
Deplorable hack to make the submit method do the right thing.
Deprecated - 'format' argument, as supported in v1.2
Deprecated hook for JSX spread, don't use this for anything.
Deprecated transform props used on Android only
Deprecated, do not use.
Deprecated, use 'type' instead
Deprecated: An an easy way to express two-way binding with React.
Dereference transport for early garbage collection (no matter how long the jqXHR object will be used)
Derivation of this interval is difficult.
Derive timestamps from profile start and stop times.
Derived from children
Descend through wrappers to the right content
Describes the root queries, param definitions and other metadata for a given path (URI).
DescriptorArrays are fixed arrays used to hold instance descriptors.
Deserialization happens before the gadgets are available, so we need to serialize gadgets as placeholders (which are later replaced with the real thing).
Deserialize a standard representation
Deserializes a url with query parameters: args, argTypes to an array of the original arguments of the same types the client called the function with.
Designed to be used from bottom to up since it walks up the BinaryExpression trees using node.parent to find the result.
Despite being static, they must be defined outside of the "statics" key under which all other static methods are defined.
Destroy markers that no longer correspond to breakpoints.
Destroy old highlighted sections and highlight new ones
Destroy side-bar-view, the active view.
Destroy the fragment.
Destroys `touches` by removing touch objects at indices `indices`.
Destroys all event registrations for this instance.
Destroys the entire sub-stack, rather than just using last(impliedEvalAncestorsStack).pop(), as a CallExpression is always the bottom of a impliedEvalAncestorsStack substack.
Destructuring assignments can have multiple default value, so possibly there are multiple writeable references for the same identifier.
Detach a line from the document tree and its markers.
Detach an event or set of events from an element
Detach heavy component on hide
Detaches a handler attached via `attachAggregateHandler`.
Detaches a handler attached via `attachProfileHandler`.
Detaches a reference name.
Detect `this` as the global object.
Detect free variable `exports`.
Detect free variable `global` from Node.js.
Detect free variable `module`.
Detect free variable `self`.
Detect free variable `window`.
Detect hardware back button presses, and programmatically invoke the default back button functionality to exit the app if there are no listeners or if none of the listeners return true.
Detect if the current active connection is metered or not.
Detect if we can use `window.performance.now()` and gracefully fallback to `Date.now()` if it doesn't exist.
Detect invalid regular expressions.
Detect the popular CommonJS extension `module.exports`.
Detect the request to connect same origin server, reuse the connection.
Detect when flags have changed so we can alert the client.
Detect whether the inner corners are collapsed.
Detect whether the inner edge is fully circular.
Detect whether the outer corners are collapsed.
Detect whether the outer edge is fully circular.
Detect whether the selection is backward.
Detect which version of jquery-tmpl you're using.
Detect, normalize options and install callbacks for jsonp requests
Detects any character in the Unicode categories "Uppercase letter (Lu)", "Lowercase letter (Ll)", "Titlecase letter (Lt)", "Modifier letter (Lm)", "Other letter (Lo)", or "Letter number (Nl)".
Determine effective options based on given values and defaults.
Determine if `minField` is a subset of the range specified by `subField` such that they can be subtracted.
Determine if `this` and `that` are deeply equal.
Determine if a given value is an object that implements the `RelayEnvironment` interface.
Determine if a module requirement is already met by the tree at or above our current location in the tree.
Determine if an identifier is referencing an enclosing function name.
Determine if at least one element in the object matches a truth test.
Determine if provided node is the last of their parent block.
Determine if request has content
Determine if successful
Determine if the context has changed or not
Determine if the record has any changes (was created or updated).
Determine if the record was created by this write operation.
Determine if the record was created.
Determine if the selection has changed as a result of updating the options list
Determine if the supplied record might be missing data.
Determine if the supplied record reflects an optimistic update.
Determine if the two queries have the same root field and identifying arg.
Determine if there are Node.js pipe-like data listeners.
Determine if version is greater than all the versions possible in the range.
Determine if version is less than all the versions possible in the range
Determine if we are in termination case (2) or (3) and return the appropriate thing.
Determine if we are in termination case (3) or (2) and return the appropriate thing.
Determine target for build flags
Determine the differing substring between the initially stored text content and the current content.
Determine the object type
Determine the position of an element within the matched set of elements
Determine the type of a character in a keypath.
Determine what benchmarks are to be run, and with which packages installed.
Determine what the applicable shortcut for a given action is within this component's context.
Determine where to move to before making changes
Determine whether a file is signed.
Determine whether all of the elements match a truth test.
Determine whether item is loose or not.
Determine whether mappingB is after mappingA with respect to generated position.
Determine whether or not an installed app can handle a given URL.
Determine whether the next list item belongs here.
Determine whether this.node needs to be wrapped in parentheses in order for a parser to reproduce the same local AST structure.
Determine which modules are already installed
Determine which node dev files version we are installing
Determines correct wrapping by tag types.
Determines how the return key should look.
Determines how to resize the image when the frame doesn't match the raw image dimensions.
Determines if a given line and column are after a location.
Determines if a given line and column are before a location.
Determines if a given node has duplicate parameters.
Determines if a given node is a block statement.
Determines if a given node is a one-liner that's on the same line as it's preceding code.
Determines if a given node is a one-liner.
Determines if a given node is part of JSX syntax.
Determines if a given source index is in a comment or not by checking the index against the comment range.
Determines if a given token is a comma operator.
Determines if a given variable is being exported from a module.
Determines if a node is surrounded by (potentially) invalid parentheses.
Determines if a node is surrounded by parentheses twice.
Determines if a node is surrounded by parentheses.
Determines if a node represents a call to a potentially implied eval.
Determines if a node that is expected to be parenthesised is surrounded by (potentially) invalid extra parentheses.
Determines if a reference is a read operation.
Determines if a value is an array.
Determines if spacing in curly braces is valid.
Determines if the first character of the name is a capital letter.
Determines if the given property is key-value property.
Determines if the severity for the given rule configuration represents an error.
Determines if the variable is used.
Determines if there is more than one var statement in the current scope.
Determines if this rule should be enforced for a node given the current configuration.
Determines if two Ranges are equal.
Determines if two tokens have at least one whitespace character between them.
Determines the base directory for node packages referenced in a config file.
Determines the color of the keyboard.
Determines the location of the given view in the window and returns the values via an async callback.
Determines the location on screen, width, and height of the given view and returns the values via an async callback.
Determines the lookup path, including node_modules, for package references relative to a config file.
Determines the scaling of `value`.
Determines the type of a declaration statement.
Determines the type of background drawable that's going to be used to display feedback.
Determines the type of module that is loaded via require.
Determines what the opacity of the wrapped view should be when touch is active.
Determines whether HTML5 videos play inline or use the native full-screen controller.
Determines whether a component should have a link to a runnable example
Determines whether a function has a name.
Determines whether a node is required by the grammar to be wrapped in parens, e.g. the test of an if statement.
Determines whether a non-Literal node is a negative number that should be treated as if it were a single Literal node.
Determines whether an event happened in the gutter, and fires the handlers for the corresponding event.
Determines whether an object can have data
Determines whether an operator is a comparison operator.
Determines whether an operator is an equality operator.
Determines whether an operator is one used in a range test.
Determines whether an option is set, relative to the spacing option.
Determines whether node is wrapped in parentheses.
Determines whether node represents a range test.
Determines whether or not a given node is a valid expression.
Determines whether or not the callback is part of a callback expression.
Determines whether the current FunctionExpression node is a get, set, or shorthand method in an object literal or a class.
Determines whether the keyboard gets dismissed in response to a drag.
Determines whether two adjacent tokens are on the same line.
Determines which keyboard to open, e.g.`numeric`.
DevTools protocol defines urlRegex parameter, but the parameter is not used by the front-end.
DevTools sidebar is a vertical split of panels tabbed pane and a drawer.
Developer can compare the keys of two routes then know which route is added to the stack earlier.
Developer can override this be explicitly returning true.
Developers should not use a number, but we are using the prop type both for user provided colors and for transformed ones.
Development Header File management commands
Diagnostic information, returned from findDiagnostics.
Diagnostics often have children.
Diagnostics will be removed once the file is closed.
Diff a connection field such as `news_feed.first(3)`.
Diff a scalar field such as `name` or `id`.
Diff any items in the array in the forward direction.
Diff the current dataID
Diff the file after setting the view mode to compare against the right thing.
Diff uses child nodes and keeps requisite fields
Diff, based on new data and old data, determine the minimum amount of DOM manipulations needed to make the DOM reflect the new data Array.
Differences for other resize methods
Different lines, draw top part
Different repo types emit different events at individual and refresh updates.
Different types of routes.
Differs from JSON.stringify in that undefined because undefined and that inf and nan don't become null
Differs from JSON.stringify in that undefined becauses undefined and that inf and nan don't become null
Diffs a non-connection plural field against each of the fetched items.
Diffs the field conditionally based on the `scope` from the nearest ancestor field.
Direct responder events dispatched directly to responder.
Directive with no other statements, warn about missing semicolon
Directly set the value.
Directories have to be read as IgnoreReaders otherwise fstream.Reader will create a DirReader instead.
Directories have to be read as Packers otherwise fstream.Reader will create a DirReader instead.
Directories should sort first, then files, and case should be ignored
Dirty hack to support old (RK) and new (RCT) native module name conventions.
Disable Atom's bundled 'tree-view' package.
Disable YellowBox so we do not have to mock its dependencies
Disable `allowReserved` to enforce them.
Disable any kind of automatic timeout behavior for incoming requests in case it takes the packager more than the default timeout of 120 seconds to respond to a request.
Disable autolink inside example code blocks of guides.
Disable brace matching in long lines, since it'll cause hugely slow updates
Disable debug output.
Disable file watch subscriptions, not needed here.
Disable it when appending to prevent doing unneeded bookkeeping.
Disable the file-watcher package from showing the promot, if installed.
Disabled by default in production builds.
Disabling a package during the traversal has no effect if this is a startup load because `PackageManager` does not re-load the list of packages to activate after each iteration.
Disabling and unloading Atom's bundled 'tree-view' must happen after activation because this package's `activate` is called during an traversal of all initial packages to activate.
Disabling devMode allows Atom to access the data stored within the installed-packages:*.* cache.
Disallow defining methods more than once unless explicitly allowed.
Disallow overriding of base class methods unless explicitly allowed.
Disambiguating between a `for` and a `for`/`in` or `for`/`of` loop is non-trivial.
Discard any remaining `private` data
Discard any remaining `user` data
Discard captured fields.
Discard index placeholder values to get only actual matches
Discard pending command.
Discard the second event of a jQuery.event.trigger() and when an event is called after a page has unloaded
Disconnect given segments.
Discussion at https://github.com/SteveSanderson/knockout/pull/352
Dismissable panel that displays the diagnostics from nuclide-diagnostics-store.
Dispatch a command to show the `ProjectFindView`.
Dispatch the event to the listener.
Dispatch the run action to the selected build system and collect the results.
Dispatch two linter requests.
Dispatches all synthetic events on the event queue.
Dispatches an event and releases it back into the pool, unless persistent.
Display "Clear Filter" element
Display an iOS action sheet.
Display an info message about reserved words as properties and ES5 but do it only once.
Display friendly names for all class-like types.
Display new customized element UI from input provider and action.
Display not found if everything is hidden
Display the iOS share sheet.
Display types for which margin is ignored.
Display types for which padding is ignored.
Displays a loading notification while waiting for a promise.
Displays friends statuses.
Displays the message until the returned disposable is disposed
Dispose a remote object.
Dispose any resource held by this provider.
Dispose function that removes this counter from the global list.
Dispose of the previous commands.
Dispose removed projects repositories, if any.
Dispose the Emitter to release memory and to inform future callers that they're attempting to listen to events that will never fire again.
Dispose the counters, ensuring that they are removed from the global list.
Disposes all object in the registry
Disposes the state for the class.
Distance (in pixels) between screenPosition and the cursor.
Distance between the minimum and the maximum latitude/longitude to be displayed.
Distinguish between a props update versus a simple state update
Distinguish between singular/plural queries.
Distributed under an MIT license: http://codemirror.net/LICENSE
Distributed under an MIT license: http://codemirror.net/LICENSE Because sometimes you need to mark the selected *text*.
Distributed under an MIT license: http://codemirror.net/LICENSE TODO actually recognize syntax of TypeScript constructs
Distributed under an MIT license: http://codemirror.net/LICENSE This is CodeMirror (http://codemirror.net), a code editor implemented in JavaScript on top of the browser's DOM.
Distributed under an MIT license: http://codemirror.net/LICENSE Utility function that allows modes to be combined.
Dividing a function by anything makes little sense, but we have to check for that.
Do NOT call this directly.
Do NOT call this from outside this class.
Do NOT use this to enforce a certain condition on any user input.
Do a binary search between these bounds.
Do a bulk-read of the DOM positions and sizes needed to draw the view, so that we don't interleave reading and writing to the DOM.
Do a full toggle, hide and then show, so focus logic is guaranteed to happen.
Do a line by line diff of two strings.
Do a recursive diff of two JSON objects.
Do a sibling check if the nodes have a common ancestor
Do all the async work we'll need to do in order to tell if this is a safe operation
Do an initial fit and 'robustnessIters' robustness iterations.
Do not attempt to diff files larger than this limit.
Do not attempt to use offsetes if we're not attached to the document tree yet.
Do not bother to sort the diagnostics until a render is happening.
Do not call this directly -- call _runLintWithBusyMessage
Do not cement exact scores or match indices in this test, since they are determined by Fuzzy-native.
Do not change the values below, additional actions are needed on the Chromium side in order to add more codes.
Do not check for id selector and keep whitespace in the string.
Do not check if node's target is not a valid semver one
Do not defer cleanup when unbinding
Do not display a warning if 'default' is the first statement or if there is a special /* falls through */ comment.
Do not disturb either the source or target location's node_modules folders.
Do not follow redirects
Do not include comment or processing instruction nodes
Do not insert them into the grid, but count their total height.
Do not interfere with text editing.
Do not keep in-memory cache if it's completely empty
Do not live-edit "content" property of pseudo elements.
Do not pass these events downstream to ScrollView since they will be registered in ListView's own ScrollResponder.Mixin
Do not pick non-inherited properties from inherited styles.
Do not print any message when the project is used as a component.
Do not proceed if there are any missing fields.
Do not process corner column.
Do not re-add overlay mode if regex did not change for better performance.
Do not re-render based on props
Do not re-render if state is equal
Do not reinitialize a mongobridge
Do not reitinialize a replica set
Do not reitinialize a sharded cluster
Do not reitinialize a standalone server
Do not reject, as this is normal in the hosted mode.
Do not rely on this attribute.
Do not remove old categories if not handling a user gesture, as there's chance categories will be added later during start-up.
Do not require this unless we are actually rendering.
Do not restore if the node is missing
Do not return a suggestion, so we can fall through to provider2.
Do not return the cached value if we are executing under the test runner.
Do not reuse whitespace (or anything else, for that matter) when printing generically.
Do not send messages on lines that did not change
Do not set `select.value` as exact behavior isn't consistent across all browsers for all cases.
Do not show a single suggestion if it is the same as user-entered prefix, even if allowed to show single-item suggest boxes.
Do not store staled hits
Do not test cached resources.
Do not throw when any of them (`ca`, `cert`, or `key`) are undefined because that will be the case when the server is started in "insecure" mode.
Do not tie up the Buck server continuously retrying for flags.
Do not touch the styles if they are being edited.
Do not traverse comment nodes
Do not use path.join() because we assume that the remote machine is *nix, so we always want to use `/` as the path separator for cwd, even if Atom is running on Windows.
Do not use popToRoute here, because race conditions could prevent the route from existing at this time.
Do not use unless you have a very good reason.
Do not wait for Watchman to sync.
Do not wrap help description, but indent newlines appropriately.
Do nothing for invisible controls.
Do nothing here, it will be added in updateVisibleNodes.
Do nothing if populated nodes still fit the viewport.
Do nothing if the source did not change at all.
Do nothing unless cached resource tree is processed - it will overwrite everything.
Do nothing, because either: 1.
Do nothing, it's expected.
Do search preprocessing for all existing and future root directories.
Do send the request This may raise an exception which is actually handled in jQuery.ajax (so no try/catch here)
Do some typechecking here since we call this blindly.
Do the same for the dev dependencies
Do the same for the incompatible local package
Do the same thing, but for a remote project by starting the nuclide server using the remote-utils library in nuclide-integration-test-helpers.
Do this after creating the global so that if an AMD module wants to call noConflict to hide this version of jQuery, it will work.
Do this first, to support `npm update npm -g`
Do this in O(n) where n is the number of matchIndexes (ie.
Do this in `componentWillUnmount` to prevent memory leaks
Do top level deps first, this stops the sorting by required order from unsorting these deps.
Do use require.resolve so the paths can be codemoded in the future.
Do warn for different components
Document order sorting
Document resource goes last.
Document's children have changed, perform total update.
DocumentFragments aren't actually part of the DOM after insertion so appending children won't update the DOM.
DocumentSelectionState is responsible for maintaining selection information for a document.
Documentation says nothing about file name of bundled script.
Documentation says what source maps can contain absolute paths, but DevTools strictly expects relative paths.
Documented in http://selenic.com/hg/help/status.
Does a build/install.
Does a shallow comparison for props and state.
Does not animate, immediately replaces and rerenders navigation bar and stack items.
Does not cancel the queries themselves.
Does not check if a matching directory entry is a file, and intentionally only searches for the first file name in this.fileNames.
Does not check if a matching directory entry is a file.
Does not clone if nothing changed.
Does not ensure that the current cursor position is visible.
Does not fail if the directory doesn't exist.
Does not fail if the file doesn't exist.
Does not invoke the callback on the nearest common ancestor because nothing "entered" or "left" that element.
Does not modify either input argument.
Does not mutate the original.
Does not remove from the DOM.
Does not require going to the debuggee.
Does not support the only defined option, "defer".
Does not take into account specific nature of platform.
Does not use object.assign as objectId may have fields which we must not copy.
Does not warn that data cannot be refetched sine no data is missing.
Does so such that this setup method may be used on an instance that is already initialized, in a way that does not consume additional memory upon reuse.
Does some tests to check a given object implements the EventGenerator interface.
Does the actual updating of the line display.
Does the process to enter a given AST node.
Does the process to leave a given AST node.
Doesn't have  `__range__` loaded
Doesn't matter what the args are here.
Doesn't rely on call-back orders (some calls may be loop-back).
Doesn't yet support other contained responders from blocking this scroll view from becoming the responder.
Doing something adds an event to done and clears undo.
Doing the normalization here.
Dollar signs used before commands without showing output
Don't "declare class exports" directly, otherwise in error messages our show up as "exports" instead of "Map" or "MapPolyfill".
Don't "declare class exports" directly, otherwise in error messages our show up as "exports" instead of "Set" or "SetPolyfill".
Don't accept line comments that are separated
Don't add to the buffer if we've decoded to an empty string chunk and we're not in object mode
Don't aggregate the key column.
Don't allow unknown flags (true by default).
Don't append a newline to the last line.
Don't attach events to noData or text/comment nodes (but allow plain objects)
Don't attempt to store insecure connections.
Don't automatically add "px" to these possibly-unitless properties
Don't be shy with it.
Don't bother checking the file - this can be very expensive.
Don't bother instantiating parent iterator if taking 0.
Don't bother keeping 'clean' files in the cache.
Don't bring in undefined values
Don't cache debugger module
Don't calculate the next value unless somebody's listening.
Don't call this directly from outside this package.
Don't change the UI after 'edit' events.
Don't check for mime-types in 304-resources.
Don't clear and let it propagate out if it is "break", "return", or "throw" in switch case
Don't connect empty markers unless clearWhenEmpty is false
Don't consider a local config file found if the config is null
Don't consider the personal config file in the home directory, except if the home directory is the same as the current working directory
Don't consume trailing commas as valid
Don't create a real PathSearchUpdater that relies on watchman.
Don't delete the watcher if there are other users for it.
Don't do a replace if the drop happened inside of the selected text.
Don't do another update for this path if we are in the middle of running an update.
Don't do anything here.
Don't do anything if add isn't an object
Don't do events on text and comment nodes
Don't do this for Program nodes - they have no parents
Don't even try it unless root.
Don't exceed max to render
Don't fetch if array is null or empty, but still track the fragment
Don't fetch if connection is null, but continue to track the fragment if appropriate.
Don't fetch suggestions if the mouse is still in the same 'word', where 'word' is a whitespace-delimited group of characters.
Don't fire the event while the user is dragging.
Don't forget to everything listed here to `package.json` modulePathIgnorePatterns.
Don't get confused, there are 3 "internal" streams for each keyval pair so it basically checks if there is any value added to the form
Don't ignore main files
Don't import built ins.
Don't include duplicate ignore rules.
Don't include empty buffers.
Don't include the default connection profile.
Don't know yet what type to create, so we wrap in a proxy.
Don't leave long text in the textarea, since it makes further polling slow
Don't log errors if the command returns a nonzero exit code, because status returns nonzero if it is reporting any issues, even when it succeeds.
Don't need the extra array object.
Don't override when accessed via prototype.
Don't overwrite existing Cookie header
Don't pass a reference to `runTests` directly because the callback receives a mouse event as its argument.
Don't pass non-elements to Sizzle
Don't pass the 100 chars limit
Don't prevent the normal copy if the user has a selection.
Don't re-render if the props haven't changed.
Don't re-trigger an onFOO event when we call its FOO() method
Don't recognize any special comments other than jshint for single-line comments.
Don't reduce numRendered when scrolling back up
Don't remove the nextTick.
Don't render more than 1 additional row
Don't render past the end
Don't render past the top
Don't rethrow so that we can run every other timer.
Don't return options that are disabled or in a disabled optgroup
Don't run *any* scripts, because install command already will have done that.
Don't save object properties source code that is longer than this
Don't send premature or duplicate updates
Don't serialize the marker when the buffer is serialized.
Don't set styles on text and comment nodes
Don't show a testing option if there are no test runners.
Don't start the filewatcher or the cache.
Don't store user's password.
Don't toggle provider2 -- so it starts open.
Don't track `__type__` fields
Don't transform node_modules, except react-tools which includes the untransformed copy of React
Don't trust a default "yes" answer for a non-core module in a snapshot build
Don't trust location.hash not to have been unencoded by the browser
Don't try to fetch information for this path if it's not in the repo.
Don't try to save users less than 1.2ms (a number I made up)
Don't update yet for smooth transition.
Don't use 'blue' not visible on cmd.exe
Don't use `actions.expandNode` because it causes a re-render, which queues a real fetch and might populate the children of `dir1`.
Don't use e.target.value to avoid conversion of the value to string.
Don't use require() because it may be reading from the module cache.
Don't want to dispose this subscription, as it's still being used
Don't warn about getter/setter pairs if this is an ES6 concise method
Don't warn again for the same component
Don't warn for native components.
Done in one shot to minimize update/measure roundtrips.
Done with all the node children
Dot (.) U+002E can also start a floating-point number, hence the need to check the next character.
Double clicking a non-directory will keep the created tab open.
Double quotes are part of the value (see: S4.1.1).
Double-check the result.
Downloads a repository which has many js files to test performance with multi files.
Dragend is a special case: it also clears the hover state.
Draw a contour for the total frame time.
Draw bar using UTF squares (just for grins)
Draw frame perforation.
Draw horizontal ruler.
Draw lines one pixel above they need to be, so 60pfs line does not cross most of the frames tops.
Draws a cursor for the given range
Draws a report (multiple tables).
Draws canvas of the specified css size in DevTools page space.
Draws the given range as a highlighted selection
Drill down (through composites and empty components) until we get a native or native text component.
Driven in a corner -- no valid cursor position found at all -- try again *with* clearing, if we didn't already
Drop the event parameter when invoking userCallback.
Duck type TopLevelWrapper.
Due to a bug in the Gutter API, destroying a Gutter after the editor has been destroyed results in an exception.
Due to a previous bug in the sshPort type, we may need to do this cast to correct bad state that was persisted in users' configs.
Due to this, it is left to the user to implement at this time.
Dummy container used to detect which wraps are necessary.
Dummy container used to render all markup.
Dumps a DOT code of a given code path.
Dumps the current analyzing state.
Duplicate selection so we can move range without breaking user selection.
During a momentum scroll, a touch start will be immediately followed by a scroll event if the view is currently scrolling.
During componentWillMount and render this will still be null but after that will always render to something.
During execution of guarded functions we will capture the first error which we will rethrow to be handled by the top level error handler.
During execution the body wrapper will be passed the correct values whereas during the annotator the arguments don't exist yet.
During the first execution, "subscribable" isn't set, so don't bother doing the update then.
During the lifetime of this 'openConnectionDialog' flow, the 'default' connection profile should not change (even if it is reset by the user connecting to a remote project from another Atom window).
During the server rendering we don't want to schedule any updates.
E.g. '/dir1/dir2/' Returns a map that maps between the node names (without the '/' suffixes) and the actual paths on the file system.
E.g. 'assets_awesomemodule_icon'
E.g. 'fbide' matches 'FaceBookIntegratedDevelopmentEnvironment' and 'faceBookIntegratedDevelopmentEnvironment'.
E.g. resume (V8 request 'continue') does no work correctly when args are empty instead of undefined
E.g.: node tool.js arg1 arg2 -v '-v' is after some args here.
E2e test that verifies that init app can be installed, compiled, started and Hot Module reloading and Chrome debugging work.
ECMA-262 11.3 Line Terminators
ECMA-262 11.6 Identifier Names and Identifiers
ECMA-262 11.8.5 Regular Expression Literals
ECMA-262 11.8.6 Template Literal Lexical Components
ECMA-262 12.12 Labelled Statements
ECMA-262 12.13 Conditional Operator
ECMA-262 12.14 Assignment Operators
ECMA-262 12.2 Primary Expressions
ECMA-262 12.2.10 The Grouping Operator
ECMA-262 12.2.5 Array Initializer
ECMA-262 12.2.6 Object Initializer
ECMA-262 12.2.9 Template Literals
ECMA-262 12.3 Left-Hand-Side Expressions
ECMA-262 12.4 Expression Statement
ECMA-262 12.4 Postfix Expressions
ECMA-262 12.5 Unary Operators
ECMA-262 13.10 The return statement
ECMA-262 13.11 The with statement
ECMA-262 13.12 The switch statement
ECMA-262 13.14 The throw statement
ECMA-262 13.16 The debugger statement
ECMA-262 13.3.1 Let and Const Declarations
ECMA-262 13.3.2 Variable Statement
ECMA-262 13.3.3 Destructuring Binding Patterns
ECMA-262 13.4 Empty Statement
ECMA-262 13.7 Iteration Statements
ECMA-262 13.8 The continue statement
ECMA-262 13.9 The break statement
ECMA-262 14.1 Function Definition
ECMA-262 14.2 Arrow Function Definitions
ECMA-262 14.4 Yield expression
ECMA-262 14.5 Class Definitions
ECMAScript 5.1/Unicode v6.3.0 NonAsciiIdentifierPart:
ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierPart:
ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierStart:
ECParameters sequence
ED25519 is not supported by OpenSSL, use a javascript impl.
EDITOR CONSTRUCTOR A CodeMirror instance represents an editor.
EDITOR METHODS The publicly visible API.
END of automatically generated file
ENOSYS means that the fs doesn't support the op.
ENOTDIR isn't used on Windows, but npm expects it.
ERROR: multi-line comments followed by code is not OK
ES2015 Symbol polyfill for environments that do not support it (or partially support it_
ES3 FutureReservedWord in an ES5 environment.
ES5: lock down object properties
ES6: report blocks without block-level bindings
ESTree/Acorn/ESpree use .local for all three node types.
EVENT HANDLERS Attach the necessary event handlers when initializing the editor
EVENT HANDLING Lightweight event framework.
EVENT UTILITIES Due to the fact that we still support jurassic IE versions, some compatibility wrappers are needed.
EXECUTE SHIFTS All other shifts, applied to the smaller subtrees between w- and w+, are performed by this function.
Each .bind() will create a new function that calls this with the appropriate key as well as the event.
Each Hit object has a reference to its Yallist.Node.
Each TypedArray type requires a distinct constructor instance with identical logic, which this produces.
Each accessor function calls the original function so that it always gets the latest value and all dependencies are captured.
Each array corresponds to a supplied render method and contains the instances returned by that render method in the order it was invoked.
Each async task pushes it's own queue onto the queue stack.
Each button can optionally specify a style, which is one of 'default', 'cancel' or 'destructive'.
Each child view of the `ViewPagerAndroid` will be treated as a separate page and will be stretched to fill the `ViewPagerAndroid`.
Each error or warning can consist of any number of different messages from Flow to help explain the problem and point to different locations that may be of interest.
Each file in the update is expected to contain fields for `name`, `new`, and `exists`.
Each iframe is represented by two distinct objects in the DOM:  an iframe object and a window object.
Each instance constructor, including Vue, has a unique cid.
Each instance provides an isolated environment with: - Methods for fetching and updating data.
Each item in the "message" array is an object with the following fields: - path (string) File that contains the error.
Each item rendered has a ref of the form "clickLogN".
Each key is the id of a code path segment.
Each key represents a tag.
Each key/value pair is used to render a Bonfire with appropriate links.
Each line is added as separate string.
Each mapping to the supplied source file is rewritten using the supplied source map.
Each message consists of several different components, each with its own text and path.
Each method returns a `Promise` object.
Each mutation corresponds to a field on the server which is used by clients to communicate the type of mutation to be executed.
Each node has a type property.
Each node should have a key that uniquely identifies it among the LazyTreeNodes that make up the tree.
Each object contains:  attributeName: Used when rendering markup or with `*Attribute()`.
Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
Each object in the arrays is of the form:
Each pair is a key/value pair that will be used to instantiate the map.
Each parsed plist contains an array which, in turn, *may* contain dicts (that correspond to records).
Each path is presumed to be in the repo.
Each path is simply an array of nodes.
Each plugin that is injected into `EventsPluginHub` is immediately operable.
Each read of 'a' should result in only one get underlying get call
Each render method is invoked with the classes created using the render methods that come after it in the supplied list of render methods.
Each request is sent with a unique ID that the server should send back to signal that the message has been written to the appropriate stream.
Each rule uses the identifier of code path segments to store additional information of the code path.
Each run of four backslashes ends up as just one backslash.
Each step of the path may represent a root query (for refetchable nodes) or the field path from the nearest refetchable node.
Each test runs in O(n log n) * O(cdf).
Each test then writes their own ignore file rules for their purposes, and is responsible for removing them afterwards.
Each time the array changes value, capture a clone so that on the next change it's possible to produce a diff
Each time this watchman update fires, we will make the LocalHgService ignore events for a certain grace period.
Each unique combination of filter calls is stored in its own generated record (ex: `field.orderby(x)` results are separate from `field.orderby(y)` results).
Each value is an object: - superCalled:  The flag which shows `super()` called in all code paths.
Each value under the "sections" field has two fields: - offset: The offset into the original specified at which this section begins to apply, defined as an object with a "line" and "column" field.
Easier to completely branch on self closing to handle slightly different styles involved with scope breaks.
Easily-parseable/retrievable ID or TAG or CLASS selectors
Easy API for creating new setFilters
Echo a RemotableObject.
Echos the value of a value.
Edges can only be fetched if a range call (first/last/find) is given.
Edges must be added in reverse order since the segment must be continuous at all times.
Editors are often open before providers load, so update existing ones too.
Effectively, it() and describe() just become regular functions inside of index.js, not at all related to Mocha.
Either a valid cache is found, or will be created.
Either adds or removes the computed parent directories depending on the operation passed in.
Either callFrameId or functionId (exactly one) must be defined.
Either callFrameId or functionObjectId must be specified.
Either fix it or disallow doing so completely in favor of getInitialState.
Either identical, or both NaN
Either way, return on the first hit.
Element contains another Purposefully does not implement inclusive descendent As in, an element does not contain itself
Element has no renderer.
Element that was hidden earlier, but hasn't been removed yet.
Element to check for prefixes on.
Element, Comment, Document
Elements are added to these to represent selection and cursors.
Eligibility is determined online, based on registered EvaluationExpression providers.
Eliminate references to the old, removed items, so they can be GCed
Eliminates unnessary unique query ids in RelayQueryPath
Else return the default blank, "".
Emit a pane change event first, so that clients can do something while waiting for a provider to give a result.
Emit change events only after the cache has been fully updated.
Emit core modules array.
Emits a destroy event that's used to unmount the attached React component and invalidate the cached view instance of the Diff View.
Emits an event of entering AST node.
Emits an event of entering comments.
Emits an event of leaving AST node.
Emits an event of leaving comments.
Emits an event of the given type with the given data, and holds that event in order to be able to dispatch it to a later subscriber when they say they want to handle held events.
Emits an event of the given type with the given data.
Emits file change events for the underlying flags file.
Emits onCodePathEnd event of this code path.
Emits onCodePathSegmentEnd event of the current segments.
Emits onCodePathSegmentStart events if updated.
Emits onCodePathStart events.
Emits rule to generate version info for a SAPI or extension.
Emits the held events of the specified type to the given listener.
Emits the last onCodePathStart/onCodePathSegmentStart events.
EmitterSubscription represents a subscription with listener and context data.
Empirically the minimum width needed to fit 'nuclide-file-tree' buttons without causing overflow.
Empirically, doing an initial search speeds up the next search much more than simply doing the setup kicked off by 'fileSearchForDirectory'.
Empty animations, or finishing resolves immediately
Empty out this.bindings, just in cases.
Empty result means to re-use existing resolution
Empty set actually contains everything
Empty space (in pixels) above the view
Empty string is a valid value, null means error.
Empty string removes the value, whereas null/undefined have no effect
Empty strings, null, undefined and "auto" are converted to 0.
Emptying firstChildren/findComponentRootReusableArray is not necessary for correctness, but it helps the GC reclaim any nodes that were left at the end of the search.
Emulate "data" attribute from DOM 3 TextInput event.
Enable debugging in the process.
Enable experiments for testing.
Enable namespaces listed in `localStorage.debug` initially.
Enable namespaces listed in `process.env.DEBUG` initially.
Enable reportErrorsAsExceptions
Enable shallow clones for GitHub repos
Enable text copy from the symbol reference view
Enable the scene and set the spring to catch up with the new gesture
Enables a debug mode by namespaces.
Enables the tests to await loading children.
Enabling and disabling packages
Encapsulates all CLI behavior for eslint.
Encapsulates all of the state information we need about a specific Flow root
Encapsulates the state for this package so it can be cleaned up easily in deactivate().
Encode an integer in the range of 0 to 63 to a single base 64 digit.
Encode folder structure in file name
Encodes an array of unsigned 8-bit integers to a hex string.
Encodes an array of unsigned 8-bit integers using base32 encoding.
Encodes the internal representation of a key into a hexadecimal representation.
Encodes the internal representation of a key to a base32 representation.
Encodes the internal representation of a key to a canonical hex representation.
Encodes the structure of messages that can be sent from the client to the server.
Encodes the structure of messages that can be sent from the server to the client.
Encountered an unsupported format character, treat as a string.
Encountered nothing but spaces.
Encrypts the clientKey of a ConnectionConfig.
End Of Line If an EOL is not preceded by a backslash, show a warning and proceed like it was a legit multi-line string where author simply forgot to escape the newline symbol.
End of options marker.
End of range is exclusive, so subtract 1 from the end offset.
End of the loop when firing
End of the third-party code
End of unbegun comment.
End the socket client to watchman to trigger restore subscriptions.
Ends dragging the pane sizer.
Enforce API surface and semantic compatibility with 1.9.x branch 2.
Enforce consistency in style of quoting.
Enforce immutability.
Enforces the spacing around the star if node is a generator function.
Enforces the spacing around the star if node is a yield* expression.
Enough space for minimum.
Enough space for preferred.
Enough space to store all bytes of a single character.
Enqueue a callback that will be executed after all the pending updates have processed.
Enqueue a callback to be run at the end of the current batching cycle.
Enqueue the base names of this type.
Enqueues a callback to be invoked when `notifyAll` is invoked.
Enqueues a synthetic event that should be dispatched when `processEventQueue` is invoked.
Enqueues markup to be rendered and inserted at a supplied index.
Enqueues moving an existing element to another index.
Enqueues removing an element at an index.
Enqueues setting the markup of a node.
Enqueues setting the text content.
Ensure 3rd-party packages are not installed via the 'atom-package-deps' package when the 'nuclide' package is activated.
Ensure DOM element for console message.
Ensure IDs are generated in the order that queries are created
Ensure `b` is at least as long as `a`, swapping if necessary.
Ensure a given position is not inside an atomic range.
Ensure a valid alternate
Ensure all props option syntax are normalized into the Object-based format.
Ensure alternates match
Ensure an event has a stop method.
Ensure ancestors of this element don't attempt to run tests as well.
Ensure at least a single node is present, for measuring.
Ensure at least one space between the label and the id
Ensure callback is only called once
Ensure consistency between cache and reality.
Ensure consistency between model value and selected option.
Ensure dir is created
Ensure dirs are readable
Ensure element is created.
Ensure exactly only one "/"
Ensure fallback to Date.now in tests.
Ensure files are readable
Ensure flushing is not bound to any domain.
Ensure it's a real array, as we're about to reparent the nodes and we don't want the underlying collection to change while we're doing that.
Ensure logging is configured.
Ensure mock was called
Ensure newlines are properly escaped.
Ensure no extra fields are accidentally marshalled.
Ensure no lingering debounced renders are waiting and will muck with the state of the package between test runs.
Ensure no setters are called for the indexes
Ensure no setters are called for the indexes Ensure no setters are called for the indexes
Ensure no tmp dir is left on disk.
Ensure nodes with children are expanded so their subtrees render.
Ensure old attributes still work
Ensure other process didn't start copying files before lock was created
Ensure package is created
Ensure package meta version is the same as the resolution
Ensure positioning of the Datatip at the end of the current line.
Ensure previous input has been read, so that the handler sees a consistent view of the document
Ensure that a `__typename` field is generated
Ensure that a gadget of the specified gadgetId is visible, creating one if necessary.
Ensure that a given node is at a program or function body's root.
Ensure that all callbacks are invoked, passing this unique argument.
Ensure that both objects contain the same number of properties.
Ensure that both the template and remotes directories have the correct permissions.
Ensure that every element either is passed in a static location, in an array with an explicit keys property defined, or in an object literal with valid key property.
Ensure that every event that declared an `order`, was actually dispatched.
Ensure that everything is cleaned, even invalid packages in the cache
Ensure that for every click log there is a corresponding ref (from the perspective of the injected ClickCounter component.
Ensure that if the key is provided, it must be an array.
Ensure that the argument is an array by wrapping it in an array if it is not.
Ensure that the outer radius is always larger than the inner radius.
Ensure that the requested precision is in the supported range.
Ensure that the return value is a promise.
Ensure that the return value is an observable.
Ensure that we end up with a round value
Ensure that we have exactly `nextLength` resolvers.
Ensure that, if the cursor was in the whitespace at the start of the line, it is moved to the end of that space.
Ensure the cache object
Ensure the condition is true, otherwise throw an error.
Ensure the editor is re-focused
Ensure the editor is valid and there is a view to attach the keypress timing to.
Ensure the events system works after markup mismatch.
Ensure the events system works after mount into server markup
Ensure the file tree is visible before trying to reveal a file in it.
Ensure the immutability of the node.
Ensure the integrity of the ActivationState created from state.
Ensure the lineView.wrapping.heights array is populated.
Ensure the response listener is set up before the request is sent.
Ensure the result length is the same as the original hex value.
Ensure the side bar is hidden to start
Ensure the tree is correct on every step.
Ensure there's a token end at the current position, and that i points at it
Ensure trailing for all protocols
Ensure we always return an array and never null
Ensure we are in an operation.
Ensure we are not trying to load data from an earlier version of this package.
Ensure we have stored a precompiled version of this template (don't want to reparse on every render)
Ensure we have the right element, and that the user is not dragging a selection (this matches native `select` event behavior).
Ensure we pop a, c, b
Ensure we've done the default injections.
Ensure we've got a proper binding context to work with
Ensure we've removed from the connection's map before awaiting.
Ensure you pass in a constant to reduce memory allocations.
Ensures essential globals are available and are patched correctly.
Ensures that a file is a symlink that points to a valid file
Ensures that a variable declaration of the alias in a program or function is assigned to the correct value.
Ensures that an assignment uses the shorthand form where possible.
Ensures that getters/setters from 0 up to "_newLength" have been defined on `Object.getPrototypeOf(this)`.
Ensures that the binding processor doesn't try to bind the options
Ensures that the representation invariants hold.
Ensures that variables representing built-in properties of the Global Object, and any globals declared by special block comments, are present in the global scope.
Ensures that, when possible, the selection range (currently selected text input) is not disturbed by performing the transaction.
Ensures the result is actually a Promise.
Enter a function and either: - Push a new nested scope onto the stack (in 'function' mode).
Enter distraction-free mode
Enter is however both printable and non-printable.
Enter or colon (for name)/semicolon outside of string (for value).
Entering a function in 'function' mode pushes a new nested scope onto the stack.
Entity body for PATCH, POST and PUT requests.
Entries are ordered by start time within a level, so find the last visible entry.
Entry for enabling/disabling the feature
Entry iterators provide implicit keys.
Entry point into reprint.
Enumerates all the possible types of update configurations.
Equality is symmetrical, so the same result should be returned if this and the argument are flipped.
Equivalent of `typeof` but with special handling for array and regexp.
Equivalent to Promise.all, but avoids wrappers if nothing is actually a promise.
Equivalent to push, but avoids a function call.
Erases *all* AsyncStorage for all clients, libraries, etc.
Erases line3 and line1.
Error 'unexpected predicate "symbol"'
Error - bail out early.
Error and End are not dbgp status codes, they relate to socket states.
Error messages should be identical to V8.
Error occurred reading the link
Error out if some of the specified names are not installed
Error out if the json file does not exist, unless force create is true
Error(s) in fetching/handleUpdate-ing its or one of its pending dependency's subtracted query.
ErrorUtils is originally defined in a file named error-guard.js.
Errors for properties that should not be updated with `updatePropertyByID()`.
Errors from V8 are actually just messages, so we need to fill them out a bit.
Escape a component key so that it is safe to use in a reactid.
Escape a string so it can be used in a RegExp constructor.
Escape any double quote in the expression.
Escape attribute value for use in HTTP header
Escape characters that have special regex meanings.
Escape quotes and slash
Escape string for Regex construction
Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)
Escapes attribute value to prevent scripting attacks.
Escapes non-RegExp-safe characters such as slashes in the query string.
Escapes text to prevent scripting attacks.
Escapes the control characters of a given string.
Especially useful on the arguments object.
Esprima block comment.
Esprima doesn't bother with this field, presumably because it's always true for unary operators.
Esprima includes the leading colon (and possibly spaces) as part of the typehint, so we have to strip those out.
Esprima line comment.
Esprima strips out the starting and ending tokens, so add them back
Esprima used to use the .name field to refer to the local binding identifier for ImportSpecifier nodes, but .id for ImportNamespaceSpecifier and ImportDefaultSpecifier nodes.
Essentially calls `this.reconcileTransaction.perform(method, scope, a)` with this transaction's wrappers around it.
Essentially, guaranteeing a minimum of two passes.
Establish the object that gets returned to break out of a loop iteration.
Establish the root object, `window` (`self`) in the browser, `global` on the server, or `this` in some virtual machines.
Estimate quotient digit
European and Arabic numbers act as if they were R in terms of their influence on neutrals.
Eval scripts as fast as possible.
Evaluate a text directive, including filters.
Evaluate executable scripts on first document insertion
Evaluate text as a json expression
Evaluate the expression in the debugger's current context.
Evaluate the getter, and re-collect dependencies.
Evaluate the value of the watcher.
Evaluate, unless deferEvaluation is true
Evaluates a script in a global context
Evaluates the code in the console as if user typed it manually and invokes the callback when the result message is received and added to the console.
Even executed within an environment setup with vcvars32.bat, clang-cl doesn't recognize the arch toolset.
Even if an env variable "" (2 doublequotes) is declared, the cmd.exe will not substitute it with its value.
Even if the "Show Differential Revision" preference is enabled, only show the column if there is at least one row with a Differential revision.
Even if the currently active pane is not an ordinary editor, we still at least want to show the tree.
Even if we can't get flags, try to watch the build file in case they get added.
Even if we find the node we're looking for, we finish looping through its siblings to ensure they're cached so that we don't have to revisit this node again.
Even if we were, there is another bug in Internet Explorer 10.
Even though the runtime complexity of this is theoretically worse vs if we used a map, it's much, much faster in practice for the data sets we deal with (we avoid allocating result pair arrays).
Even though the tests use the mocked clock, it still seems to occasionally flake out.
Even though this is just a placeholder for a gadget, there's a chance it'll need to be serialized before we replace it.
Even though this.props.tooltip has an owner, updating it shouldn't throw here because it's mounted as a root component
Even though we're ignoring the cache, we will still invoke the callback immediately with `ready: true` if `querySet` can be resolved by the cache.
Event Subscription Reading Style Elements
Event listeners need to be added _after_ we attach to the document, so that owner document is properly update.
Event listeners registered for this phase are called at this time.
Event listeners registered for this phase are triggered during this process.
Event names that have already been detected and prefixed (if applicable).
Event object passed to the `onopen`, `onclose`, `onmessage`, `onerror` callbacks of `WebSocket`.
Event phase constants.
Event queue being processed in the same cycle allows `preventDefault`.
Event target isn't necessarily an HTMLElement, but that's guaranteed in the usages here.
Event that fires when another annotation or the mapview itself was tapped and a previously shown annotation will be closed.
Event that fires when the annotation drag state changes.
Event that fires when the annotation gets was tapped by the user and the callout view was displayed.
Event type is stored as 'topClick' - we transform that to 'click'
Event types that do not support event bubbling, capturing and reconciliation API (e.g event.preventDefault(), event.stopPropagation()).
EventEmitter is defined in src/node_events.cc EventEmitter.prototype.emit() is also defined there.
EventSubscription represents a subscription to a particular event.
EventSubscriptionVendor stores a set of EventSubscriptions that are subscribed to a particular event type.
EventTarget automatically initializes these to `null`.
EventValidator is designed to validate event types to make it easier to catch common mistakes.
Events and their corresponding property names.
Events are not possible without cancelling IME.
Events can be reentrant (e.g., focus).
Eventually this will happen on the hack side, but for now, this will do.
Eventually, we will move away from JSLint format.
Every PathVisitor has a different this.Context constructor and this.Context.prototype object, but those prototypes can all use the same reset, invokeVisitorMethod, and traverse function objects.
Every React component is in one of these life cycles.
Every buildable type will have its "type" field filled in automatically.
Every commit that breaks the backward compatibility shall bump the version in package.json.
Every evaluation we perform with xdebug's eval command is saved in a unique variable for later lookup.
Every matching commmand should have a corresponding entry somewhere.
Every native component is responsible for allocating its own `tag`, and issuing the native `createView` command.
Every parent which is not a split view, must be of the same size as this view.
Every record stored in a file has an iteration column at the start for aggregation purposes.
Every time a StatusBar component is mounted, we push it's prop to a stack and always update the native status bar with the props from the top of then stack.
Every time we get a new subscriber, we need to push results to them.
Every written chunk gets output as-is.
Everything can be diffed out
Everything can be diffed out, connection is null.
Everything can be diffed out, linked field is null.
Everything can be diffed out, plural field is empty.
Everything can be diffed out, plural field is null
Everything else in the universe uses 'utf8', though.
Everything else is currently unsupported, most notably precision, unsigned numbers, non-decimal numbers, and characters.
Everything except HSL(A) should be returned as RGBA if transparency is involved.
Everything is a marker...
Everything that references the open() function needs to be in here
Everything's fine as long as it does not contain any error description.
Ex: 'AltGr + d` in Polish.
Ex: on OS X, this will let you see rich output in the Safari Web Inspector console.
Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents
Exact match resolution (e.g. branches/tags)
Examine each non-spacing mark (NSM) in the level run, and change the type of the NSM to the type of the previous character.
Example case: With a story unliked, quickly like and unlike it.
Example of using the `TouchableMixin` to play well with other responder locking views including `ScrollView`.
Example usage:  Successful fetch.
Example use cases: - In-flight queries may have been diffed against cached records that are unreferenced and eligible for GC.
Example: A browser system caches DOM nodes based on component ID and must remove that cache entry when this instance is unmounted.
Example: see multiGet for example
Examples of code that should not trigger the rule
Examples of code that should trigger the rule
Except as noted, this content is licensed under Creative Commons Attribution 3.0 Listen to the load event for the document.
Except for the parent and the sibling links no properties are to be updated after the creation.
Except when testing an event plugin or React's event handling code specifically, you probably want to use ReactTestUtils.Simulate to dispatch synthetic events.
Exceptions: names like MY_VAR and _myVar.
ExceptionsManager transitively requires Promise so we install it after
Exclude blacklisted senders.
Exclude dicts that don't have any message property.
Exclude leading and trailing slash.
Exclude the BASE revision.
Exclusions for deliberate/widespread violations
Execute Flow with the given arguments
Execute a callback for every element in the matched set.
Execute a function while preventing that function from triggering updates on this directive instance.
Execute a sub-command executable.
Execute all promises.
Execute immediately if ready is not present
Execute the appropriate callbacks
Execute the module function
Execute the provided code using the current executor.
Execute the task, which should not return anything.
Execute the tests synchronously.
Executed within the scope of the `Transaction` instance.
Executes a command and returns the output instead of printing it to stdout.
Executes a shell command, buffering the stdout and stderr If an error occurs, a meaningful error is generated Returns a promise that gets fulfilled if the command succeeds or rejected if it fails
Executes hh_client with proper arguments returning the result string or json object.
Executes the CLI based on an array of arguments that is passed in.
Executes the commands needed to get a list of devices from ADB
Executes the current configuration on an array of file and directory names.
Executes the current configuration on text.
Executes the function within a safety window.
Executes the linter on a file defined by the `filename`.
Executes the next task in the queue.
Executes the provided `callback` once for each enumerable own property in the object and constructs a new object from the results.
Executes visitor on the object and its children (recursively).
Executes visitor on the object and its children, but only traverses into children which can be statically analyzed and don't depend on runtime information.
Execution of a "direct" dispatch - there must be at most one dispatch accumulated on the event or it is considered an error.
Exercise the update path.
Existing properties are preserved as `originalPropertyName`.
Exit early for strings to avoid a performance hit in some environments.
Exit early if it's guaranteed not to match
Exit early if the nodes are identical
Exited in distraction-free mode -- it had hidden both providers
Exiting a function in 'function' mode pops its scope off the stack.
Exiting the domain would prevent the domain from catching the error.
Expand all ancestors.
Expand all new non-content layers to expose content layers better.
Expand path to include general dirs
Expand start/end lines with context.
Expand the .loc of the node responsible for printing the decorators (here, the decorated node) so that it includes node.decorators.
Expand the .loc of the node responsible for printing the decorators (here, the export declaration) so that it includes node.decorators.
Expand until at least a certain number of matches is expanded.
Expands all selected directory nodes.
Expect IME keyCode on each keydown.
Expect a token of a given type.
Expect all spies except spy_fileB to have been called.
Expect arc lint to be called once
Expect arc lint to be called twice.
Expect spy_fileA and spy_allMessages to have been called from the invalidation message.
Expect spy_project and spy_allMessages to have been called from the invalidation message.
Expect that getProxy added files to the cache.
Expect the getter methods on DiagnosticStore to return correct data.
Expect the getter methods on DiagnosticStore to return correct info.
Expect the getter methods on DiagnosticStore to return the correct info.
Expect the next token to match the specified keyword.
Expect the next token to match the specified punctuator.
Expected ReactClass methods (in the "interface").
Experimental: When true, offscreen child views (whose `overflow` value is `hidden`) are removed from their native backing superview when offscreen.
Explain why the delete button is disabled if the current selection, or lack thereof, is undeletable.
Explanation of some of the non-obvious fields:  - moveX/moveY: If no move event has been observed, then `(moveX, moveY)` is invalid.
Explicit config always wins
Explicit to preserve empty strings
Explicitly copying object properties appeases Flow's "maybe" type handling.
Exploits the ID naming scheme to perform the search quickly.
Exponential reconnect time trials.
Export 'ko' in the binding context so it will be available in bindings and templates even if 'ko' isn't exported as a global, such as when using an AMD loader.
Export React, plus some native additions.
Export `opener` for programmatic access.
Export a semver like object but with our custom functions
Export caches for testing.
Export declarations are responsible for printing any decorators that logically apply to node.declaration.
Export if used as a module
Export private functions for unit-testing.
Export the Underscore object for **Node.js**, with backwards-compatibility for the old `require()` API.
Export the contents of the package.json.
Export the parseFoo parsers because they might be useful as primitives for custom option types.
Export these buil-in interaction modules.
Exported "config" object
Exported because modes sometimes need to do this.
Exported because nested modes need to do this for their inner modes.
Exported for testing only.
Exported for testing.
Exported only because it has to be referenced by string lookup from within rewritten template
Exporting only so specs can clear up after themselves fully
Exports some data, e.g. for perf investigations or analytics.
Expose `debug()` as the module.
Expose a GraphQL endpoint
Expose an observable rather than the raw subject.
Expose some functions to the outside through this name space.
Expose support vars for convenience
Expose the Barrett function
Expose the default network layer to allow convenient re-configuration.
Expose the fake timer utils to global to be used by npm spec tests.
Expose the interface for adding custom equality testers.
Expose the interface for adding custom expectation matchers
Expose the mock interface for the JavaScript timeout functions
Expose the partially-built object to the default function as its `this` object.
Expose the root command.
Expose the type on the factory and the prototype so that it can be easily accessed on elements.
Expose useful internals
Exposed `Symbol` constructor (returns instances of HiddenSymbol)
Exposed for debugging purposes
Exposed for instanceof checks.
Exposed for profiling reasons.
Exposed for unit testing.
Exposing "did clean" flag purely so specs can infer whether things have been cleaned up as intended
ExpressionStatement restricted productions
Extend a given object with all the properties in passed-in object(s).
Extend all selections (pos is an array of selections with length equal the number of selections)
Extend the 'normal' keywords with the TypeScript language extensions
Extend the base object
Extend the binding context hierarchy with a new view model object.
Extend the binding context with new custom properties.
Extend the context hierarchy by setting the appropriate pointers
Extend the primary selection range, discard the rest.
Extended JavaScript BN functions, required for RSA private ops.
Extending ajaxSettings
Extending unicode characters.
Extension: Allows a provider to include a display name that will be shown with its messages.
Extension: Intended for developers who want to provide both interfaces to cater towards people who use only the `linter` package.
Extension: Overrides `grammarScopes` and triggers the linter on changes to any file, rather than just files with specific grammar scopes.
External users might find this function useful, but it is not necessary for the typical use of this module.
Externalize the source map.
Extra Bash code content to add to the end of the "spec".
Extra arguments are stored as the mode's dependencies, which is used by (legacy) mechanisms like loadmode.js to automatically load a mode.
Extra assertion because `toEqual` matcher skips over properties with undefined values...
Extra options to show the user.
Extract a JavaScript identifier out of the next sequence of characters or return 'null' if its not possible.
Extract a SyntheticInputEvent for `beforeInput`, based on either native `textInput` or fallback behavior.
Extract a comment out of the next sequence of characters and/or lines or return 'null' if its not possible.
Extract a numeric literal out of the next sequence of characters or return 'null' if its not possible.
Extract a punctuator out of the next sequence of characters or return 'null' if its not possible.
Extract a regular expression out of the next sequence of characters and/or lines or return 'null' if its not possible.
Extract a string out of the next sequence of characters and/or lines or return 'null' if its not possible.
Extract data from Apple's `aps` dict as defined: https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/ApplePushService.html
Extract dataTypes list
Extract entropy (256 bits) from NS4 RNG if available
Extract markdown metadata header
Extract optional namespace, e.g., "click.foo"
Extract other options
Extract qualified content nodes from a node list.
Extract rule configuration into eslint:recommended where possible.
Extract the expression from the row text.
Extract the filename, line number, and line text from grep output.
Extract the id of the node with the connection that we are adding to.
Extract the id of the node with the connection that we are deleting from.
Extract the matching piece of the normalized path to compare with the root path.
Extract to a temporary directory in case of file name clashes
Extracts dependencies (module IDs imported with the `require` function) from a string containing code.
Extracts description from contents of a readme file in markdown format
Extracts just the shared parts from an ObjectId.
Extracts patterns each condition for a specified type.
Extracts the `nodeName` from a string of markup.
Extracts the `nodeName` of the first element in a string of markup.
Extracts the content of `/*expected` comments from a given source code.
Extracts the new edge from the payload
Extracts the result from a wrapped and chained object.
FB-only: override the symbols-view "Go To Declaration" context menu item with the Hyperclick "confirm-cursor" command.
FBIDE indexes each filepath by important characters it contains.
FEATURE DETECTION Detect drag-and-drop
FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled) IE8 throws error here and will not see later tests
FF does not set `charCode` for the Enter-key, check against `keyCode`.
FIFO queue that executes Promise executors one at a time, in order.
FIRST WALK Computes a preliminary x-coordinate for v.
FIXME Hack to have stream not keep the event loop alive.
FIXME Should probably have an option in net.Socket to create a stream from an existing fd which is writable only.
FIXME recursively check contents
FIXME(33716): typeof document.all is always 'undefined'.
FIXME(413886): We never want to show execution context for the main thread of shadow page in service/shared worker frontend.
FIXME(62725): console stack trace line/column numbers are one-based.
FIXME(62725): stack trace line/column numbers are one-based.
FIXME(ikarienator): this is seemingly an issue in the previous location info convention.
FIXME(samgoldman) Remove top-level interface once Babel supports `declare interface` syntax.
FIXME: Add a createCallback which is different from editCallback and has different behavior when creating a new node.
FIXME: Add title once it is used by search controller.
FIXME: Consider returning null for loaded traces.
FIXME: Decide the color.
FIXME: Delete Button semantics are not yet defined.
FIXME: For Chrome, put creationTime and updateTime somewhere.
FIXME: Implement this.
FIXME: Improve the Tree Element / Outline Abstraction to prevent crawling the DOM For an expanded element, it will be the last element with class "close" in the child element list.
FIXME: Investigate if we can remove StyleInvalidator invalidations entirely.
FIXME: It will be moved to separate ExecutionContext.
FIXME: Make sure windows does what we want here
FIXME: Move this to TimelineUIUtils.js.
FIXME: Needs better tooltip.
FIXME: Only pass runtime wrappers here.
FIXME: Remove once ES6 is supported natively by JS compiler.
FIXME: Some fields are not yet supported due to back-end limitations.
FIXME: Status bar items don't work well enough yet, so they are being hidden.
FIXME: Technically at least one of these is required.
FIXME: TextInput doesn't honor `fontWeight` or `fontStyle` https://github.com/facebook/react-native/issues/2140
FIXME: This dependency should be removed from here once we do not need URL to create a UISourceCode.
FIXME: This file has a strange header because it needs to be ignored by the transpiler, but work with 'import type'".
FIXME: This file is included into both apps, since the devtools_app needs the InspectorFrontendHostAPI only, so the host instance should not initialized there.
FIXME: This is a stopgap.
FIXME: This is a workaround for the selection machinery bug.
FIXME: This is a workaround to force Closure compiler provide the standard ES6 runtime for all modules.
FIXME: This is bad and I should feel bad.
FIXME: This is duplicated in inflate-shrinkwrap and should be factoed into a shared function
FIXME: This is needed by CodeSchool extension.
FIXME: This performance optimization should be moved to blink so that all developers could enjoy it.
FIXME: This should be removed once transpilation is not required for closure compiler ES6
FIXME: This should probably be extracted to a function.
FIXME: This should use fileSystemMapping to determine url.
FIXME: Transition timing updates currently not supported
FIXME: Unnecessary as long as we have to have the tarball to resolve all deps, which is progressively seeming to be likely for the indefinite future.
FIXME: We should not use getComputedStyle().
FIXME: We wrap actions like three ways to sunday here.
FIXME: We'd like to stop profiling on the target and retrieve a profile but it's too late.
FIXME: WebInspector.linkifyURLAsNode() should really use baseURI.
FIXME: WebSocket MUST have initiator info.
FIXME: adapt this to multiple targets.
FIXME: add support for negative start delay
FIXME: add support for step functions
FIXME: allow to choose snapshot if there are several options.
FIXME: also add steps once we support event nesting in the FlameChart.
FIXME: avoid updates of a collapsed pane.
FIXME: bring back Animation events as we figure out a way to show them while not cluttering the UI.
FIXME: cache the shrinkwrap directly
FIXME: call reject for null strings.
FIXME: change field naming style to use trailing underscore.
FIXME: correctly specify target
FIXME: crbug.com/447523, use selection.isCollapsed when it is fixed for shadow dom.
FIXME: declare this property in protocol and in JavaScript.
FIXME: do it in the caller.
FIXME: find a way of generating this mapping or getting it from combination of LayoutStyleConstants and CSSSelector.cpp at runtime.
FIXME: handle resourceState also
FIXME: https://github.com/facebook/react-native/issues/1501
FIXME: ideally, we shouldn't do this, but this makes the logic of converting async console events to sync ones much simpler.
FIXME: it is possible to optimize this loop out.
FIXME: make SuggestBox work for multiple documents.
FIXME: make utility method in Dialog, so clients use it instead of this getter.
FIXME: move this check to the backend.
FIXME: move to the SourceFrame.
FIXME: need tighter checking on this, but is a breaking change
FIXME: phantomChildren doesn't actually belong in the package.json
FIXME: promise chain below does not compile with JSON.parse.
FIXME: remove everything below.
FIXME: remove resourceTreeModel and others from worker targets
FIXME: replace this instance by a normal WebInspector.StylePropertiesSection.
FIXME: reverse SplitView.isVertical meaning.
FIXME: shrink default list once external list is good enough.
FIXME: sort this out, it should not happen.
FIXME: support debugData.stack_update_needs_step_in flag by calling WebInspector.debugger_model.callStackModified
FIXME: there should be a way to fetch UISourceCode for its uri.
FIXME: there should be no "progress events"
FIXME: there shouldn't be such a case.
FIXME: there used to be registry completion here, but it stopped making sense somewhere around 50,000 packages on the registry
FIXME: this could use findTreeElement to reuse a tree element if it already exists
FIXME: this does not handle trailing comments.
FIXME: this should be replaced with common Save/Discard/Cancel dialog.
FIXME: totalCount gets updated optimistically, but this edge does not get added until the server responds
FIXME: uncomment following once inspector stops being drop targer in major ports.
FIXME: use WebInspector.Linkifier
FIXME: use context menu provider
FIXME: we don't allow editing of longhand properties under a shorthand right now.
FIXME: when we replace read-package-json with something less magic, this should done elsewhere.
FOR_BACKEND is used by the eval'd code
Facebook reserves all rights not expressly granted to you in this license agreement.
Facebook reserves all rights not expressly granted.
Facilitate reuse when creating custom network layers.
Factory function to create a suitable BigInteger.
Factory method to create a new React element.
Fail all pending requests.
Fail gracefully if it does not work.
Failed in one of the catch blocks above - most generic error.
Failed to generate response - return generic error.
Failing THAT, if the range was '*' uses latestVersion
Failing that, recompute and store result in cache
Failing that, see if there is a cursor-motion command (starting with 'go') bound to the keyname without 'Shift-'.
Failing that, try finding the most recent version that matches our spec
Fails to persist the checked state of a cloned checkbox or radio button.
Fails to return the selected option to the default selected state when cloning options
Fake originalEvent to avoid donor's stopPropagation, but if the simulated event prevents default then we do the same on the donor.
Fake the run from loader bp
Fall back for XPath, etc.
Fall back to "prev" when the mode doesn't have an indentation method.
Fall back to Buck if it's not in the compilation DB.
Fall back to computed then uncomputed css if necessary
Fall back to copying key by key.
Fall back to other methods after the timeout expires.
Fall back to the writable, configurable property.
Fall through with adjusted payload.
Fall-through intended.
Fallback `Matcher` class compatible with the fuzzy-native implementation.
Fallback for IE 11 providing `toStringTag` values for maps, sets, and weakmaps.
Fallback is to only notice when we hit the arrow, and not declare the arguments as locals for the arrow body.
Fallback on less safe parsing for older browsers
Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
Fallback to comparing cache headers
Fallback to global require
Fallback to prop when attributes are not supported
Fallback to regular semver max satisfies
Fallback to seeking `elem` from the start
Fallback to standard git clone if download failed
Fallback to standard git clone if extraction failed
Falls back to comparing ids when the spans cover exactly the same range.
False by default until .build(...) is called on an instance.
Fast case, write everything using _writev()
Fast path for a common property of AST nodes.
Faster version of `mergeInto` that doesn't check its arguments and also copies over prototype inherited properties.
Faster version of `merge` that doesn't check its arguments and also merges prototype inherited properties.
Fastpath empty strings
Fat interface fields can have differing arguments.
Fat queries can be written like normal GraphQL queries with one main exception: fat queries use childless non-scalar fields to indicate that anything under that field may change.
Favor tags in the nearest directory by sorting by common prefix length.
Feature config is handled by the UP loader, not individual features
Feature-detect IE's crummy client rect reporting for bidi text
Feed 30 lines to editor
Feed the in-memory cache
Feel free to add to or remove from this list of extension modules to configure the precise type hierarchy that you need.
Fenced code blocks should have a language specified
Fetch Hawk credentials
Fetch a seed set for right-to-left matching
Fetch any uncached statuses.
Fetch file previews and expand line ranges with context.
Fetch it from the repository Note that the promise is stored in the decomposed endpoint because it might be reused if a similar endpoint needs to be resolved
Fetch revisions history if revisions state have changed.
Fetch the innermost scope.
Fetch the parser token for a given character.
Fetch the revision details between the current head and the the common ancestor of head and master in the repository.
Fetches `key` and passes the result to `callback`, along with an `Error` if there is any.
Fetches a consistent object map from absolute file paths to their corresponding `StatusCodeNumber` for easy representation with the file tree.
Fetches data required to resolve a set of queries.
Fetches information for a declaration and all its parents.
Fetches more images from the camera roll.
Fetches the statuses for the given file paths, and updates the cache and sends out change events as appropriate.
Fetching and parsing of dependencies continues until all dependencies are fetched.
Fictitious mutation that does multiple things
Field names with no calls can be used as aliases without encoding
Fields can have children, or they can be leaf nodes.
Fields in all alternates must have same type.
Fields that only differ by connection call values should have the same identity.
Figure out if it's a module code.
Figure out if one of the last i bytes of our buffer announces an incomplete char.
Figure out least recently used queries, and pop them off of the `_queryLruQueue` Map.
Figure out the max length per column
Figure out what the state of things will be after we do a read from the buffer.
Figure out what we want to break.
Figures out if we should inspect a given binary expression.
Figures out the row and column coordinates of a raw position within a source string.
File contents are too large and clutter up the logs, so exclude them.
File did not exist in the cache, and its status is modified.
File existed in the cache, and its status changed.
File messages from ProviderA should be gone, but no other changes.
File paths are used as event names for the _fileChangeEmitter, so a second emitter is used for other events to prevent event name collisions.
File watcher should be destroyed on dispose.
Filed as https://github.com/atom/atom/issues/7954.
Filed: https://github.com/atom/atom/issues/10506
Files are related if they have the same filename but different extension, or if the filename is appended with `Internal` or `-inl`.
Files used here are known to exist, so no need to check that here.
Fill frame with retained resources (the ones loaded using new loader).
Fill gap with whole-line-spans
Fill in a browser-detected starting value on browsers where we know one.
Fill in a given object with default properties.
Fill in the packages to be uninstalled
Fill the bins, ignoring values outside the range.
Fill the gap with whitespace characters.
Fill up the dominatedNodes array with indexes of dominated nodes.
Filled in during validation -- this is the flattened object type containing all of the relevant fields.
Filter already resolved
Filter being resolved
Filter by mimetype (e.g. image/jpeg).
Filter calls to only those that specify conditions on the returned results (ex: `orderby(TOP_STORIES)`), removing generic calls (ex: `first`, `find`).
Filter entries according to the specified packages
Filter non-semver ones
Filter only packages that need to be installed
Filter only the specified options because nopt parses every -- Also make them camel case
Filter only those that are valid links
Filter only valid versions, since semver.maxSatisfying() throws an error
Filter out any entries marked as destroyed
Filter out any touch moves past the first one - we would have already processed multi-touch geometry during the first event.
Filter out clicks to other line number gutter elements, e.g. the folding chevron.
Filter out embedder injected content scripts.
Filter out files out of repo results, e.g. hh internal files.
Filter out non-js files.
Filter out non-matching items quickly.
Filter out non-semver ones
Filter out possible comments
Filter out properties that are functions and are reserved.
Filter out properties that are not reserved.
Filter out property keys that aren't string literals, such as computed properties.
Filter out results from PHP files when the Hack service is available.
Filter out the completions that do not contain the prefix as a token in the match text case insentively.
Filter out the elements which are on the same line of each other or the node.
Filter out the empty lines that are between NewLine markers.
Filter out the events to determine if they are relevant to you.
Filter out the util module, it's inspect function is special
Filter out those that have no dependants
Filter out whitespace chunks.
Filter platform-specific examples
Filter the non-requisite children from those siblings.
Filter the stack to our external API
Filter ticks to get closer to the desired count.
Filter to see if a node is a valid first node.
Filter which specs will be run by matching the start of the full name against the `spec` query param.
Filters out unique endpoints, comparing by name and then source.
Filters the context object to only contain keys specified in `contextTypes`, and asserts that they are valid.
Final code path segments which is with `return` statements.
Final code path segments which is with `throw` statements.
Final code path segments.
Final pass, move/insert new fragments into the right place.
Final redraw and notify listeners.
Final reduce to clean-up the stack.
Final version of jquery.tmpl
Finalizes segments of `test` chunk of a ForStatement.
Finally call afterMove and afterAdd callbacks
Finally, add the keys which didn't appear before any key in `next`
Finally, compute the rotation.
Finally, consider the alphabetical order, but not higher than any other score.
Finally, find the largest gap between the merged ranges.
Finally, reset the blank counter
Finally, sort by file name.
Finally, the literal on the left side must be less than or equal to the literal on the right side so that the test makes any sense.
Finally, we add a new thread (if necessary).
Finally, we construct our schema (whose starting query type is the query type we defined above) and export it.
Finally, we map the events through the appropriate marshaller.
Find a line map (mapping character offsets to text nodes) and a measurement cache for the given line number.
Find a line view that corresponds to the given line number.
Find a node with a given start, end, and type (all are optional, null can be used as wildcard).
Find a satisfying version, enabling strict match so that pre-releases have lower priority over normal ones when target is *
Find a suitable version for each package name
Find a version that satisfies 3.
Find a vm from a fragment.
Find all instances of files with the specified file names, in directory and parent directories.
Find all of the gutter markers for the same row and combine them into one marker/popup.
Find all subfields that may overlap with the range rooted at `node`.
Find and disable rules which had no error-free configuration
Find deepest node by coordinates.
Find definition  `kind` is one of 'ml' or 'mli'  Note: ocamlmerlin line numbers are 1-based.
Find first unvisited intersection.
Find if there's one with the exact same target
Find its index in the scores array (earlier elements have bigger scores).
Find local config files from directory and parent directories.
Find mappings for the "aSourceFile"
Find mappings for the "sourceFile"
Find matrix inverse using Gauss-Jordan.
Find one instance of a specified file name in directory or in a parent directory.
Find one that is compatible
Find out if any of the individual longhand properties of the shorthand are used, if none are then the shorthand is overloaded too.
Find out the interval of source points on which a regression is to be made.
Find out whether a line ends or starts in a collapsed span.
Find the (client) ID of the record associated with the given mutation, if any.
Find the appropriate location, and return `null` if both fail unexpectedly.
Find the basename of the path by looking for the last non-empty segment
Find the closest package.json file, starting at process.cwd (by default), and working up to root.
Find the closest parent matching a list of types.
Find the closest point to the specified point.
Find the common unique items in two arrays
Find the deepest React component completely containing the root of the passed-in instance (for use when entire React trees are nested within each other).
Find the failed mutation that created the given (client) record ID, if any.
Find the first element which doesn't have any previous
Find the focused crumb index.
Find the height above the given line.
Find the highest level in the tree that we can install this module in.
Find the highest resizable container that doesn't contain a text editor.
Find the innermost node of a given type that contains the given position.
Find the line at the given vertical position, using the height information in the document tree.
Find the line by pattern, in other cases.
Find the longest line in the document.
Find the mapping that best matches the hypothetical "needle" mapping that we are searching for in the given "haystack" of mappings.
Find the median residual.
Find the nearest Program or Function ancestor node.
Find the next relative operator (if any) for proper handling
Find the one that will actually be loaded by require() so we can make sure it's valid etc.
Find the outermost matching node after a given position.
Find the outermost matching node before a given position.
Find the pane specified by the given string to which we can add an item.
Find the parent, if it exists.
Find the part of the input that is actually new
Find the part that overlaps with the start of this text
Find the position of the marker in the document.
Find the run that has the previous position in it.
Find the section containing the generated position we're trying to map to an original position.
Find the selected crumb and index.
Find the the most recent version less than or equal to latestVersion that satisfies our spec
Find the top change event in the history.
Find the top-most parent element that's a direct child of a document fragment
Find the view element corresponding to a given line.
Find the word at the given position (as returned by coordsChar).
Find unmet deps in parent directories, searching as node does up as far as the left-most node_modules folder.
Find variables in a given scope and flag redeclared ones.
Find variables in the current scope.
Finding t from the equation
Finds a JSDoc comment node in an array of comment nodes.
Finds a function node from ancestors of a node.
Finds a node with the supplied `targetID` inside of the supplied `ancestorNode`.
Finds all direct and indirect child fields of `node` with the given field name.
Finds all instance of components in the rendered tree that are DOM components with the class name matching `className`.
Finds all instance of components in the rendered tree that are DOM components with the tag name matching `tagName`.
Finds all instances of components with type equal to `componentType`.
Finds an element rendered by React with the supplied ID.
Finds and reports references that are non initializer and writable.
Finds and reports references which are outside of valid scope.
Finds and reports references which are outside of valid scopes.
Finds and validates all variables in a given scope.
Finds coordinates of point on layer quad, having offsets (ratioX * width) and (ratioY * height) from the left corner of the initial layer rect, where width and heigth are layer bounds.
Finds module.exports / exports.X statements inside an assignment expression.
Finds related files, to be used in `JumpToRelatedFile`.
Finds the container DOM element that contains React component to which the supplied DOM `id` belongs.
Finds the escope reference in the given scope.
Finds the first booted available device in a list of devices (formatted in the output style of `simctl`.).
Finds the first item that matches the predicate in the workspace and its parent.
Finds the first match from the left column, and returns the corresponding "wrap" data from the right column
Finds the index of the first character that's not common between the two given strings.
Finds the left-right distance between two longitudes.
Finds the line to start with when starting a parse.
Finds the most near ancestor starting at `currentFullPath` that has a file named `filename`
Finds the next node in the tree in the natural order - from top to to bottom as is displayed in the file-tree panel, minus the indentation.
Finds the node with the supplied React-generated DOM ID.
Finds the node with the supplied public React instance.
Finds the parent React component of `node`.
Finds the previous node in the tree in the natural order - from top to to bottom as is displayed in the file-tree panel, minus the indentation.
Finds the singular WriteReference.
Finds the variable by a given name in a given scope and its upper scopes.
Finds unmodified references which are inside of a loop condition.
Finish an AST node, adding `type` and `end` properties.
Finish an operation, updating the display and signalling delayed events
Finish node at given position
Fire an onpopstate event manually since pushing does not obviously trigger the pop event.
Fire change events, and delayed event handlers
Fire events for markers that are hidden/unidden by editing or undoing
Fire handlers on the event path
Fire native event if possible so blur/focus sequence is correct
Fire the first view's toggle again
FireBug's array detection.
FireFox creates a keypress event for function keys too.
FireFox implements `key` but returns `MozPrintableKey` for all printable characters (normalized to `Unidentified`), ignore it.
Firefox creates a click event on right mouse clicks.
Firefox creates a keypress event for function keys too.
Firefox does not have the issue with devtools loaded over file://
Firefox doesn't support selectionchange, so check selection status after each key entry.
Firefox had gotten a few implementation details wrong across different versions so we guard against that.
Firefox needs to capture a different mouse scroll event.
Firefox v8.01 (and possibly others) exhibited strange behavior when mounting `onmousemove` events at some node that was not the document element.
Fires at most once per frame during scrolling.
Fires before onChange callbacks.
Fires entering events.
Fires leaving events.
First Paint is actually a DrawFrame that happened after first CompositeLayers following last CommitLoadEvent.
First add dependencies (if any) of the current binding
First adjust the line structure
First call Object.keys() to enforce ordering of the property descriptors.
First callback to fire (used internally by add and fireWith)
First character of the reprinted node.
First check if devtools is not installed
First clean this node, where applicable
First connection + 5 retries
First cut the query params.
First fill the boxes.
First give onKeyEvent option a chance to handle this.
First header should be a h1 header
First item is empty due to its artificial NOPSEUDO nature in the enum.
First line has column headings.
First line in file should be a top level header
First look for typehints in the docblock.
First look in the cache
First make sure we have the build command in the PATH
First move into "page" coordinate system
First negate out previous match count by calling the search finished callback with a negative number of matches.
First pass children into a component to fully simulate what happens when using structures that arrive from transforms.
First pass, go through the new Array and fill up the new frags array.
First put the bindings into the right order
First see if we want to eat taps while the keyboard is up
First source control relative.
First strip errors occurring in comment nodes.
First time we get here we're checking to reestablish connection using cached credentials.
First try creating regex if user knows the / / hint.
First try to resolve full name (including 'Shift-').
First two are insecure and generally shouldn't be used any more, but they are still supported.
First view should be gone.
First view should be visible again.
First we need to exclude the opening ` from the .loc of the first quasi element, in case the parser accidentally decided to include it.
First we read the outer fragment, which populates the GraphQLStoreRangeUtils rangeData cache.
First, a marker or nothing (captured).
First, a marker or nothing.
First, attempt to store a copy or reference of any data that might've been store with a camelCased key.
First, clone the lookup paths so we're not messing things up for subsequent calls to this function.
First, detect invalid regular expressions.
First, determine what the defined styles are for scenes in this navigator
First, determine whether the South pole is inside or outside:
First, extract the file name.
First, let's check if we're in an unusual parsing mode...
First, make sure we have the shasum, if we don't already.
First, no commit shall break the protocol in that client and server from the same master shall always work with each other.
First, search the line map for the text node corresponding to, or closest to, the target character.
First, sort ranges by their minimum longitudes.
First, the name and value of each parameter are encoded
First, this checks the node:  - The function name does not start with uppercase (it's a constructor).
First, we save the current length
Fix https://github.com/facebook/nuclide/issues/292 When navigating Atom workspace with `CMD/CTRL` down, it triggers TextEditorElement's `mousemove` with invalid screen position.
Fix it by giving the node a postorder index anyway.
Fix name and attach hooks
Fix the module path to use '/' on Windows.
Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.
Fix this by intecepting the handler and applying the correct checkedness before it runs.
Fix up .from in last (or move them into first in case of sameLine)
Fix up .to properties of first
Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child
Fixing jsdom's quirky behavior -- in reality, the parser should strip off the leading newline but we need to do it by hand here.
Flag for duplicate removal
Flag indicating that query data changed since previous render.
Flag indicating whether empty section headers should be rendered.
Flag that indicates that lines might need to be redrawn
Flag that indicates whether we currently expect input to appear (after some event like 'keypress' or 'input') and are polling intensively.
Flag that indicates whether we expect input to appear real soon now (after some event like 'keypress' or 'input') and are polling intensively.
Flag the module as loaded
Flag to know if list is currently firing
Flag to know if list was already fired
Flags to track whether we are in a function, a generator.
Flash the background of a dom node to a different color and then fade back to a base color.
Flatten a children object (typically specified as `props.children`) and return an array with appropriately re-keyed children.
Flatten any nested arrays
Flatten the resulting array
Flatten uiComponentLists from list of lists of components to a list of components.
Flattens an array of style objects, into one aggregated style object.
Flattens children that are typically specified as `props.children`.
Flattens the nested structure returned by `splitDeferredRelayQueries`.
Flip backward selections, so we can set with a single range.
Float literals may be "imaginary"
Flow cannot understand the type refinement provided by the isTextEditor function, so we have to cast.
Flow complains that a spy is not callable.
Flow considers atom config items to be mixed.
Flow didn't like it when I tried import type here.
Flow doesn't like getters
Flow doesn't track non-null when assigning into nullable directly.
Flow naively thinks that since we are in a closure, fileToMessages could have been reassigned to something null by the time this executes.
Flow not yet tracking assignments to instance fields.
Flow rejects `undefined` here
Flow returns the empty string instead of null when there is no relevant path.
Flow sometimes reports a row of -1, so this ensures the line is at least one.
Flow treats Object and Array as disjoint types, currently.
Flow uses 1-based indexing, Atom uses 0-based.
Flush after callbacks to avoid concurrent queue modification.
Flush any dirty changes in a component.
Flush any pending layout events.
Flush both queues and run the watchers.
Flush the queue, and do one forced reflow before triggering transitions.
Flushes any pending requests using a single multiget
Flux style Store holding all data used by the debugger plugin.
Flux style action creator for actions that affect the debugger.
Flux style store holding all data related to debugger provider.
Focus the input again because the click will cause the input to blur.
Focused node has been explicitly set while reaching out for the last selected node.
Focusing on another node may detach "this" from tree.
Folding, for example, can cause multiple logical lines to appear on the same visual line.
Following the lead of Bash 4.1, note that "**" only has special meaning when it is the *only* thing in a path portion.
Follows symlinks to figure out if the real paths of the root and check paths matches.
Fool around closure compiler -- it has its own notion of both KeyboardEvent constructor and initKeyboardEvent methods and overriding these in externs.js does not have effect.
Footer is always at the bottom of the list, and header at the top, on every render pass.
For Curve25519 DH keys, we need to apply some bit mask on generated keys: clear bit 0, 1, 2 of first byte clear bit 7 of last byte set bit 6 of last byte
For HTML, certain tags cannot have children.
For HTML, certain tags should omit their close tag.
For HTML5 data-* attribute interop, we have to store property names with dashes in a camelCase form.
For IE, which doesn't reliably fire "focus" or "blur" events synchronously
For IE11 issue see: https://connect.microsoft.com/IE/feedbackdetail/view/1928508/ ie11-broken-getters-on-dom-objects https://github.com/medikoo/es6-symbol/issues/12
For IE9 compat: when both class and :class are present getAttribute('class') returns wrong value...
For IE9 with doc mode "IE9 Standards" and browser mode "IE9 Compatibility View"
For JSON, show warning no matter what.
For Node.js, simply re-export the core `util.deprecate` function.
For a deep node passed such as 'dir1/dir2/foo.txt' each of the intermediate nodes 'dir1', 'dir1/dir2', 'dir1/dir2' and 'dir1/dir2/foo.txt' entries will be present in the returned map
For a detailed explanation see https://github.com/facebook/flow/issues/908
For a given reconcile, look at which components did not actually render anything to the DOM and return a mapping of their ID to the amount of time it took to render the entire subtree.
For a given script file, find the root directory containing all application source files.
For a multiple-select box, compare the new selection count to the previous one But if nothing was selected before, the selection can't have changed
For a new property, when Backspace is pressed at the beginning of new property value, move back to the property name.
For a reason I have yet to figure out, some browsers disallow word wrapping between certain characters *only* if a new inline element is started between them.
For a single-select box, compare the current value to the previous value But if nothing was selected before or nothing is selected now, just look for a change in selection
For all others, drop the lineNumber until we have a mapping above, since providing the lineNumber incorrectly can result in errors or confusing behavior.
For all statusDisplays that existed in the previous iteration of the sequence, verify that the state has been preserved.
For almost every interaction we care about, there will be both a top-level `mouseover` and `mouseout` event that occurs.
For atom UI notifications.
For attr(object), the object specifies the names and values of the attributes to set or remove.
For attr(object), the object specifies the names and values of the attributes to transition.
For attr(string), return the attribute value for the first node.
For attr(string, function), evaluate the function for each element, and set or remove the attribute as appropriate.
For attr(string, null), remove the attribute with the specified name.
For attr(string, string), set the attribute with the specified name.
For babel 5 compatibility
For backward compatibility, define the following aliases.
For backward compatibility, if the third arg is actually a bool, interpret it as the old parameter 'dontLimitMoves'.
For backwards compatibility, also try with OLDTOKEN if that doesn't match.
For backwards-compatibility.
For better performance only parse once, and then cache the result through a new accessor for repeated access.
For better promise errors
For big changes, we hide the enclosing element during the update, since that speeds up the operations on most browsers.
For both antimeridian cutting and circle clipping, the same comparison is used.
For brevity in specs.
For browsers that do not provide the `textInput` event, extract the appropriate string to use for SyntheticInputEvent.
For button 1, if it was clicked inside the editor (posFromMouse returning non-null), we have to adjust the selection.
For checkbox, fire native event so checked state will be right
For child contexts, use bindingContext.createChildContext or bindingContext.extend.
For classed(object), the object specifies the names of classes to add or remove.
For classed(string), return true only if the first node has the specified class or classes.
For compatibility, we extract the first font-family, hoping we'll get a match.
For connections with range calls on them the "store" and "component" ID will be different because the component needs a special client-ID that encodes the range calls.
For correct constant-time operation, bit 255 should always be set to 1 so the following 'while' loop is never entered.
For correctness, we must *accumulate changes* in the centroid of recently moved touches.
For cross-browser consistency, don't fire native .click() on links
For custom pin images, any tintColor value is supported on all iOS versions.
For details, see http://en.wikipedia.org/wiki/Monotone_cubic_interpolation
For docs on 'typeof' see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof
For each RevisionInfo, the `bookmarks` field will contain the list of bookmark names applied to that revision.
For each component that rendered, see if a component that triggered a DOM op is in its subtree.
For each connection a map from the Store's Breakpoint Id to the Promise of the Connection's Breakpoint Id.
For each dataType in the dataTypeExpression
For each event we're tracking, allow the gadget creator to specify their own custom event too.
For each input link, a path is computed that travels through the tree, up the parent hierarchy to the least common ancestor, and then back down to the destination node.
For each key of `next`, the list of keys to insert before that key in the combined list
For each line in the refs, extract only the heads Organize them in an object where keys are branches and values the commit hashes
For each line in the refs, match only the branches
For each line in the refs, match only the tags
For each pattern in the set, PROCESS(pattern, false) 3.
For each section, we use settings-view to get a familiar look for table cells.
For each subscription no longer being used, remove it from the active subscriptions list and dispose it
For events like 'submit' which don't consistently bubble (which we trap at a lower node than `document`), binding at `document` would cause duplicate events so we don't include them here
For example if we were to mount a function at _/admin_, it would be invoked on _/admin_, and _/admin/settings_, however it would not be invoked for _/_, or _/posts_.
For example it's possible to insert new siblings after it, and/or replace the node with a different one.
For example the arg "-abc" is equivalent to "-a -b -c".
For example the typechecks transform has a mode called static-only that does not add any extra code.
For example when editing a Working set all ancestors of a selected node must have either partial or a complete selection.
For example, "Documentation/*.html" matches "Documentation/git.html" but not "Documentation/ppc/ppc.html" or "tools/perf/Documentation/perf.html".
For example, 'nuclide-commons/lib/array.js'.
For example, Atom provides Workspace::onDidChangeActivePaneItem, but we may want to know not when the active pane item has changed, buth when it has stopped changing.
For example, a list component might add a source that provides the list of rows that are currently visible on screen.
For example, a more advanced emitter may use an EventHolder and EventFactory.
For example, a zlib stream might take multiple plain-text writes(), and then emit a single compressed chunk some time in the future.
For example, as decimals: 1 becomes 2 (10 binary), -1 becomes 3 (11 binary) 2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
For example, as decimals: 2 (10 binary) becomes 1, 3 (11 binary) becomes -1 4 (100 binary) becomes 2, 5 (101 binary) becomes -2
For example, calling `describe` in specs instead of `jasmine.getEnv().describe`.
For example, charset doesn't make sense for binary types like image/png
For example, if "client:1" is a range, the event is on "client:1", not "client:1_first(5)".
For example, if the URL is "https://www.facebook.com", the system browser will be opened, or the "choose application" dialog will be shown.
For example, if the node is `parent.consequent`, this creates a fork from the current path.
For example, if you call run(promise1) and then run(promise2), and promise2 resolves first, the second callsite would receive a 'success' status.
For example, imagine a stream where every byte of input is interpreted as an integer from 0-255, and then results in that many bytes of output.
For example, lastAccessed may not be important to some stores and an equality comparison could exclude that field.
For example, null will be returned if src is not under the project root.
For example, onDragDone is a synthetic event.
For example, the fat query for feedback_like contains the field `like_sentence` with no child fields.
For example, these files would all be related: `Foo.h`, `Foo.m`, `FooInternal.h`, `Foo-inl.h`  For now, we only search in the given path's directory for related files.
For example, this string should be '' if those are the same.
For example, this will return different keybindings on windows vs linux.
For example, you may want to think about your `Animated.Value` as going from 0 to 1, but animate the position from 150px to 0px and the opacity from 0 to 1.
For example: default parameter values.
For first title styles, make sure first title is centered
For format "e", the digit before the decimal point counts as one.
For function argument completions, strip out everything before the current parameter.
For future internal pipeline usage
For global variable foo, handle "foo:false" and "foo:true" to set whether global is writable.
For horizontal scroll views, a distance of 30 from the left of the screen is the standard maximum position to start touch responsiveness.
For inside-directory checking, we want to allow trailing slashes, so normalize.
For instance, `1 / 3` means that moving greater than 1 / 3 of the width of the view will navigate.
For instance, in the expression `(1 + 2) * 3`, the BinaryExpression whose operator is "+" needs parentheses, because `1 + 2 * 3` would parse differently.
For instance, to show times in Pacific Standard Time, pass -7 * 60.
For internal use only.
For key-specific errors, the Error object will have a key property to indicate which key caused the error.
For less well defined inputs use createArrayFromMixed.
For lines with widgets, make an attempt to find and reuse the existing element, so that widgets aren't needlessly removed and re-inserted into the dom
For lines, weight by length.
For methods which are defined more than once, call the existing methods before calling the new property, merging if appropriate.
For more complex types, especially collections, implementing `valueOf` may not be performant.
For more details see http://crbug.com/413608
For more examples look at integration tests in the top-level `spec/` directory.
For most nodes, the generic "store" DataID can be used for both reading out of the store and writing into the result object that will be passed back to the component.
For most touch interactions, you'll simply want to wrap your component in `TouchableHighlight` or `TouchableOpacity`.
For most uses this works great, but in some cases this may cause flickering - one common cause is preventing edits by keeping value the same.
For mousenter/leave call the handler if related is outside the target.
For mutations that have errors, maintains a two-directional index of the mutation and node with an error.
For negative magic numbers: update the value and parent node
For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional anonymous function, even though Opera's built-in debugger can evaluate it anyway.
For node-create mutations, maintains an index of the mutation to the client ID of an optimistically created node (if it exists).
For now only "input", "confirm" and "password" are supported
For now only horizontal scrolling is supported.
For now the second argument, 'text', is not used.
For now we will ignore these details.
For now, `RouteStack` internally,  uses an immutable `List` to keep track of routeNodes.
For now, actual hint text is required.
For now, if a user requests the flags for a path outside of a Buck project, such as /Applications/Xcode.app/Contents/Developer/Platforms/..., then return null.
For now, let's leave that to Buck.
For now, locations are pretty limited.
For now, only warn when we have a suggested correction.
For now, rename does not apply to root nodes.
For now, return a dummy resource tree so various initializations in client happens.
For now, these simple utilities will suffice for testing purposes.
For now, this is safe and works.
For now, this is true - might change in the future.
For now, this method only reflects the status of "modified" directories.
For now, we centralize some logic about how particular service calls should be formatted for display in log messages and the Nuclide Service Monitor.
For now, we exclude it from the template to reduce noise in our unit tests.
For now, we just ignore this case for simplicity.
For now, we only expect HgRepository to work.
For now, we'll hard code the ID logic.
For objects and arrays, the default diffing algorithm is a deep compare
For on(object) or on(object, boolean), the object specifies the event types and listeners to add or remove.
For on(string), return the listener for the first node.
For on(string, function), use the default capture.
For options that shouldn't be deep extended: you can add your own custom options here if and when you create one that shouldn't be deep extended (see ajaxExtend)
For other native event types, do nothing.
For output window messages.
For panels docked left or right, the length is the width.
For panels docked top or bottom, it's the height.
For polygons, weight by area.
For property(name, function), evaluate the function for each element, and set or remove the property as appropriate.
For property(name, null), remove the property with the specified name.
For property(name, string), set the property with the specified name.
For property(object), the object specifies the names and values of the properties to set or remove.
For property(string), return the property value for the first node.
For quickly matching children type, to test if can be treated as content.
For radio buttons, being checked means that the radio button's value corresponds to the model value
For readline-type situations This much at the start of a line being redrawn after a ctrl char is seen (such as backspace) won't be redrawn as the replacement
For regular text input the TextEditor.insertText method should be used.
For relative vertical movement.
For returning void, we track the time for the call to complete.
For safety, create a new copy of the array.
For simplicity, reapply `defaultValue` if `multiple` is toggled.
For snapshot builders, this option will attempt to enable everything and you can then build everything, ignoring fatal errors within a module by running "nmake snap"
For sniffing in tests.
For some reason jst is adding extra setTimeout()s and grunt test isn't, so we need to do this disgusting hack.
For some reason typeof null is "object", so special case here.
For some reason, setting `container.style.display` to `"flex"` directly here doesn't work (something clears it) so we add a class to style it instead.
For some reason, the path returned in tests from GitRepository.getWorkingDirectory is prepended with '/private', which makes the Directory::contains method inaccurate in `repositoryContainsPath`.
For static pages, no need to put React ID and checksum.
For style(name, function) or style(name, function, priority), evaluate the function for each element, and set or remove the style property as appropriate.
For style(name, null) or style(name, null, priority), remove the style property with the specified name.
For style(name, string) or style(name, string, priority), set the style property with the specified name, using the specified priority.
For style(object) or style(object, string), the object specifies the names and values of the attributes to set or remove.
For style(string), return the computed style value for the first node.
For style(string, string) or style(string, function), use the default priority.
For style-based properties, generate shorthands with values when possible.
For style-based properties, try generating shorthands.
For summing up the modifiers along the contour, we use respective variables si+, si-, so-, and so+.
For supporting legacy API we put the FD here.
For testing on non-Mac machines.
For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container
For that we need to get rid of using ::before for disclosure triangle.
For the base 64 variable length quantities we use in the source map spec, the first bit is the sign, the next four bits are the actual value, and the 6th bit is the continuation bit.
For the current active editor, and any update to the active editor, decide whether the toolbar should be displayed.
For the give platform and entry file, returns a promise with: - The full list of dependencies.
For the given source file, find the type of vcs that is managing it as well as the root directory for the VCS.
For the last point, return to the start.
For the purposes of the benchmarker, a TSV file always has a column heading row at the top.
For the rather unlikely chance that the node is already gone from the DOM
For the same node, listeners will be called back in order, according to the implementation of d3.dispatch.
For these node types we shouldn't break or add a semicolon.
For things the user asked to install, that aren't a dependency (or won't be when we're done), flag it as "depending" on the user themselves, so we don't remove it as a dep that no longer exists
For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.
For this statements we should check indent from statement beginning, not from the beginning of the block.
For those browsers, prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus from calling 'blur()' on the element when it loses focus.
For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an undocumented feature that makes it relatively easy to upgrade to KO 3.0.
For tokens that include more information than their type, the value
For transient objects we create a "persistent" copy that contains the same properties.
For translate-y, usually the view doesn't wish to "remain" responder after one of many touches end.
For two-way bindings, provide a write method in case the value isn't a writable observable.
For unit testing only
For use in capture without re-checking null
For use in libraries implementing .is() We use this for POS matching in `select`
For user visible output messages.
Forbid to run JavaScript and set unique origin.
Force EEXIST error from rmdir if the directory is non-empty
Force ENOTEMPTY error from rmdir if the directory is non-empty
Force Sources view to hide the editor.
Force a re-render to update _maxScrollableAreaHeight.
Force a redraw so the scrollbars are styled correctly based on the theme
Force a relayout, or Opera won't use our image for some obscure reason
Force breakpoint update.
Force editing the 1st column when editing the creation node
Force failure if the error was not thrown.
Force layout even if sidebar size does not change.
Force options to be an object
Force original file even if user hasn't changed comments since they may have nagivated away from it within the iframe without us knowing.
Force parsing value with coerce option.
Force removal if there was no new content (e.g., from empty arguments)
Force server-rendering path:
Force shared when called after phpize
Force subscription to fail to mimic network failure, etc.
Force the contents of the mini console (on the bottom) to scroll vertically
Force the state of the cache.
Force the state of the hgStatusCache.
Force the view to cover a given range, adding empty view element or clipping off existing ones as needed.
Force to use cache even for local resources
Force trigger an update to the revisions to update the UI state with the new commit info.
Force update on every watcher in scope.
Forces the potentially scrollable region to redraw so its scrollbars are drawn with styles from the active theme.
Forces the supplied set of queries to be fetched and written to the store.
Forcing a rerender anywhere will cause the update to happen.
Foreach bower.json found
Fork if this node is after the 2st node in `cases`.
Fork if this node is at `consequent`/`alternate`.
Fork if this node is at `right`.
Fork to a bypass and the merged thrown path.
Format a list of tokens into an expression.
Format a single token.
Format a subPath, return its plain form if it is a literal string or number.
Format code on save if settings say so
Format of the result: Children become fields.
Format selections should start at the begining of the line, and include the last selected line end.
Format the error before sending over the web socket.
Format the messages for Nuclide.
Formats an error response from GraphQL server request.
Formats the range specified, and returns the replacement result for that range.
Formats the range specified, but returns the entire file (along with the new cursor position).
Formatting code below assumes that parameters are all wrappers whereas frontend console API allows passing arbitrary values as messages (strings, numbers, etc.).
Formula from: http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
Forward on the actions that we don't handle here.
Forwards the arguments from this script to ./run-jasmine-tests and runs it under a timeout.
Forwards the leaving path to upper contexts.
Found the `python` exceutable, and from now on we use it explicitly.
Found the element we are looking for.
Fraction of directional move required.
Fragment case, recurse keeping track of parent connection
Fragment fields cannot be spread directly into the root because they may not exist on the `Node` type.
Fragment pointers encapsulate the fetched data for a fragment reference.
Fragment should be plural if data is pluaral.
Fragment should be singular if data is singular.
Fragments can be skipped because these will always be composed into, and therefore tracked by, their nearest non-fragment parent.
Fragments cannot be skipped for optimistic writes because optimistically created records *may* have a default `Node` type.
Frame mode skews time, don't render aux overviews.
Freeze it at its current state.
Freezes a given value deeply.
Freezes rule-context properties.
Freezing the object and adding the throw mechanism is expensive and will only be used in DEV.
Fresh assignments by object are shallow copied
From 0.4.1 onward, args in a range behavior key must be in alphabetical order.
From FvD 13.37, CSS Color Module Level 3
From and to are in pre-change coordinates.
From here, the methods are part of the public interface.
From https://reviews.facebook.net/diffusion/HHVM/browse/master/hphp/hack/src/utils/exit_status.ml
From now on, variable terms are as if we're in "gtr" mode.
From the window or outside of the React sandbox.
From underscore.js (https://github.com/jashkenas/underscore/pull/2140).
From: http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp
From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js
Front-end keeps a history of local modifications based on loaderId.
Frontend is not interested in interstitials.
FrontendClient encapsulates communication with front-end running in browser.
Full invalidation tracking (experimental).
Full-page components (html, head, body) can't be rendered into a div directly...
Fully replace the current line with the properly-indented line.
Function (ahem) Functions ------------------ Create a function bound to a given object (assigning `this`, and arguments, optionally).
Function argument completions are a little special.
Function called when the drawer state has changed.
Function called when the page scrolling state has changed.
Function called whenever the navigation view has been closed.
Function called whenever the navigation view has been opened.
Function called whenever there is an interaction with the navigation view.
Function for properly handling a connection error
Function had no arguments.
Function is named so it can be disposed well.
Function is the supertype of FunctionExpression, FunctionDeclaration, ArrowExpression, etc.
Function name or `function` keyword.
Function properties are just markers to native that events should be sent.
Function that is called when the "+" button on the list is clicked.
Function that is called when the "+" button on the profiles list is clicked.
Function that is called when the "-" button on the list is clicked.
Function that is called when the "-" button on the profiles list is clicked while a profile is selected **.
Function that returns a loading indicator.
Function that returns a view to show if there's an error.
Function to assert that the main property of the package meta of a canonical dir is set to the expected value
Function to call when 'cancel' is selected by the user in this view.
Function to call when 'enter'/'confirm' is selected by the user in this view.
Function to check if a node has an argument that is an restricted module and return its name.
Function to check if a node is a require call.
Function to check if a node is a string literal.
Function used for determining how the params will be inlined into the function transform.
FunctionExpression method values should be anonymous, because their .id fields are ignored anyway.
Functional constructors for making the symbols that will be inherited by tokens.
Functions are considered terminals, and arrays are not.
Functions for conformance of style.
Functions for escaping and unescaping strings to/from HTML interpolation.
Functions in methods.
Functions like coordsChar, that need to do a lot of measurements in a row, can thus ensure that the set-up work is only done once.
Functions that are implemented at the connection layer.
Functions to run when options are changed.
Functions were used because (among other reasons) that's the most elegant way to allow for the emptyArray one always to give a new array instance.
Functions without properties can be shortcutted.
Further discussion at https://github.com/SteveSanderson/knockout/pull/387
Further, it does not need to be updated since no additional data can be read about a deleted node.
Further, this list is mutated heavily, but it is never reassigned.
Future Reserved Words
Future getClient calls should fail, if it has a cached ServerConnection instance.
Future: - Restore document/overflow scroll positions that were unintentionally modified via DOM insertions above the top viewport boundary.
GC events do not hold call stack, so make a copy of the current stack.
GC samples have no stack, so we just put GC node on top of the last recorded sample.
GET the data and merge in.
GFM + Line Breaks Inline Grammar
GFM + Tables Block Grammar
GH usernames cannot start with .
GH988 - numeric options can be disabled by setting them to `false`
Gather all folders that are actual packages by looking for the package metadata file
Gather all nodes, ignoring linked nodes
Gather template data.
Gecko browsers fire contextmenu *after* opening the menu, at which point we can't mess with it anymore.
General CFLAGS for building objects
General DLL link flags
General Purpose Event Plugin System
General constructor for creating RelayGraphQLMutation instances with optional `files`, `callbacks` and `collisionKey` arguments.
General infra (such as `ReactMultiChild`) reasons opaquely about the data, but platform specific code (such as `ReactNativeBaseComponent`) can make assumptions about the data.
General spherical polygon clipping algorithm: takes a polygon, cuts it into visible line segments and rejoins the segments by interpolating along the clip edge.
General utilities that are useful in creating custom Event Plugins.
General-purpose constants
Generally a good practice since future versions can make data import decisions based on known past behavior.
Generally props have a value, if it is a spread property it doesn't.
Generally we prefer to break the lowest depth scope.
Generally, content with new line ending are easier to calculate offsets for.
Generate a Server-Authorization header for a given response
Generate a bewit value for a given URI
Generate a cryptographically strong pseudo-random data
Generate a function of recursive functions that can be used to check each element
Generate a key string that identifies a component within a set.
Generate a mapping of standard vendor prefixes using the defined style property and event name.
Generate a new force index used to write GraphQL data in the store.
Generate a remote proxy for a module-level function.
Generate a remote proxy for an interface.
Generate a remote proxy for each module-level function.
Generate a remote proxy for each remotable interface.
Generate a transform matrix based on the provided transforms, and use that within the style object instead.
Generate a unique identifier.
Generate a unique integer id (unique within the entire client session).
Generate an Authorization header for a given request
Generate an authorization string for a message
Generate an edge client id for edges on connections based on the range it belongs to and the node it contains.
Generate an integer Array containing an arithmetic progression.
Generate chords for each (non-empty) subgroup-subgroup link.
Generate constructor proxy.
Generate decomposed endpoints and names based on the endpoints
Generate dependants string for each pick
Generate external debug files when --enable-debug-pack is specified
Generate parameters to create a standard animation
Generate proxies for instance methods.
Generate proxies for static methods.
Generate shortcuts for custom animations
Generate synthetic shorthand we have a value for.
Generate the Makefile
Generate the dispose method.
Generate the full command to be presented in the error message
Generate the object response file and define it to the Makefile.
Generate the proxy by manually setting the prototype of the proxy to be the prototype of the remote proxy constructor.
Generate warnings for stuff that used to be allowed core module names like http, events, util, etc
Generated and original position, original source, as well as a name token.
Generated by `tools/generate-identifier-regex.js`.
Generated pattern is below:  1.
Generates `testschema.rfc.json` from `testschema.rfc.graphql`.
Generates a "mount image" for each of the supplied children.
Generates a .proxy file to stdout from a service definition file.
Generates a 4-bit vector representing the location of a point relative to the small circle's bounding box.
Generates a code string with the specified number of nested callbacks.
Generates a function that matches files with a particular extension.
Generates a new random private key of 32 bytes length (256 bit).
Generates a new random private key seed of 32 bytes length (256 bit).
Generates a static file that includes each rule by name rather than dynamically looking up based on directory.
Generates a string from a breakpoint that can be used in hashed containers.
Generates a table of contents: looks for h2 and h3 elements and generates links.
Generates a warning from the provided node, saying that node type is not allowed.
Generates an OpenSSH fingerprint from an ssh public key.
Generates root tag markup then recurses.
Generates tangents for a cardinal spline.
Generates the template for the given platform.
Genereted extensions list with mode (static/shared)
Genereted win32/build/phpize.js.in
Generic Button wrapper.
Generic print function that will return an array of strings for the given ast node.
Generic tree component that operates on LazyTreeNodes.
Geolocation is enabled by default when you create a project with `react-native init`.
Get "is" binding from an element.
Get *real* offsetParent
Get CORS support even for older IE
Get HTML (table row) describing a message.
Get HTML (table rows) describing the messages.
Get Logger instance which is singleton per logger category.
Get a RFC4122 (http://www.ietf.org/rfc/rfc4122.txt) v4 UUID as current session's ID.
Get a composite component wrapper class for a specific tag.
Get a list of devices and their states from `xcrun simctl`.
Get a list of the commands registered from the list of calls on an `atom.commands.add` spy.
Get a local config object.
Get a native internal component class for a specific tag.
Get a promise for this deferred If obj is provided, the promise aspect is added to the object
Get a promise resolved when queues of a certain type are emptied (fx is the type by default)
Get a proxy module for a given (service, client) pair.
Get a range of a variable's identifier node.
Get a regular expression object for this pattern-flag pair, or `null` in case the current environment doesn't support the flags it uses.
Get a text description of the component that can be used to identify it in error messages.
Get all comments that are either leading or trailing, ignoring any comments that occur inside node.loc.
Get all file messages.
Get all project messages.
Get an attribute with colon or v-bind: prefix.
Get an element's transition type based on the calculated styles.
Get an object which is a unique representation of the current selection.
Get and remove an attribute from a node.
Get and set the style property on a DOM Node
Get array of prototype user-friendly names.
Get cached connection match the hostname and the path has the prefix of connection.cwd.
Get callback name, remembering preexisting value associated with it
Get compiler if the toolset is supported
Get compiler name if the toolset is supported
Get compiler version if the toolset is supported
Get current text of input.
Get default display if display is currently "none"
Get defaults from prompt
Get document width or height
Get each top-level item.
Get edge data in a format compatibile with `GraphQLRange`.
Get excess from tokenize (recursively)
Get home directory of the user who starts this process, supports both *nix and Windows.
Get homepage and open it
Get initial elements from seed or context
Get log4js logger instance which is also singleton per category.
Get mongobridge host.
Get name of the user who starts this process, supports both *nix and Windows.
Get nodes for newly added items
Get notified when the process exits.
Get object describing the nodes which contain characters at offset.
Get outerHTML of elements, taking care of SVG elements in IE as well.
Get parameters needed for the dynamic typehint checks.
Get previously cached mirror if existed
Get processes list from ps utility.
Get references to ES5 object methods.
Get remote connections without duplication.
Get replica set configuration.
Get rid of extensions like, '.js', '.jsx', '.react.js', etc.
Get selected test runner when Flow knows `this._testRunnerPanel` is defined.
Get set of fields which are literal types in al alternates.
Get sharded cluster hosts.
Get the "hash" associated with an object.
Get the "package.json" of all the features.
Get the "version" without the range bit
Get the Nth element in the matched element set OR Get the whole matched element set as a clean array
Get the PaneAxis constructor, since Atom doesn't expose it.
Get the actual prop type.
Get the appropriate anchor and focus node/offset pairs for IE.
Get the appropriate resolver
Get the bidi ordering for the given line (and cache it).
Get the binding from the provider within a computed observable so that we can update the bindings whenever the binding context is updated.
Get the children that are tracked for the given `dataID`, if any.
Get the color based on whether there are errors/warnings...
Get the command that will run the packager server based on the current workspace.
Get the command to execute
Get the condition calls that were used to fetch the given connection.
Get the current line and strip all the indentation.
Get the current value of a counter.
Get the data ID associated with a storage key (and optionally an identifying argument value) for a root query.
Get the default charset for a MIME type.
Get the default extension for a MIME type.
Get the default value of a prop.
Get the default word RegExp for this editor.
Get the entries for a directory.
Get the final matcherOut by condensing this intermediate into postFinder contexts
Get the first code unit
Get the first code unit and code unit value
Get the force index associated with the range at `connectionID`.
Get the host of this source
Get the ids of records that were created/updated.
Get the initial project status, if it's not already there, triggered by another integration, like the file tree.
Get the initial state of the gadgets app.
Get the innermost scope
Get the last element of an array, without modifying arr, like pop(), but non-destructive.
Get the last element of an array.
Get the line number of the start of the next visual line after the given line.
Get the line number of the start of the visual line that the given line number is part of.
Get the lines between from and to, as array of strings.
Get the list of directories
Get the minimatch set 2.
Get the mode to a variable
Get the models that represent the containers being resized:
Get the next highest power of 2
Get the next sibling within a container.
Get the package meta If no name is specified, read the project json If a name is specified, fetch from the package repository
Get the parameters of a given function scope.
Get the part of a document between two positions, as an array of strings.
Get the publicly accessible representation of this component - i.e. what is exposed by refs and returned by render.
Get the record store with full data (cached, base, queued).
Get the record store with only the base data (no queued/cached data).
Get the record store with only the cached and base data (no queued data).
Get the record writer for the base data.
Get the referenced fragment if all conditions are met.
Get the remote service that corresponds to each remote directory.
Get the renderer and configure it with the executed command
Get the requisite siblings.
Get the result of this hash
Get the revision changes that's newer than or is the current commit id.
Get the root record ID associated with the muation.
Get the spans that 'stick out' on both sides
Get the specific value for the option
Get the stagger amount for an insertion/removal.
Get the track by key for an item.
Get the user email configured in git
Get the user name configured in git
Get the value from an expression on this vm.
Get the value of an object property, taking object.type and default functions into account.
Get the value of the field from the first version of the record for which the field is defined, returning `null` if the record has been deleted or `undefined` if the record has not been fetched.
Get the variables to pass to the referenced fragment, accounting for initial values, overrides, and route-specific variables.
Get the whole line and cut it off at the start of the comment
Get the width of the cell in the first (and only) row of the header table in order to determine the width of the column, since it is not possible to query a column for its width.
Get type of style sheet
Get updates that tell the HgRepositoryClient when to clear its caches.
Get version numbers and DEFINE as a string
Get version of this comparator If it's an array, call recursively
Get width or height on the element, requesting but not forcing parseFloat
Get's the left most node on the right side of a BinaryExpression with + operator.
Get's the right most node on the left side of a BinaryExpression with + operator.
Gets *all* keys known to the app, for all callers, libraries, etc.
Gets a complete options schema for a rule.
Gets a context for a `break` statement.
Gets a context for a `return` statement.
Gets a context for a `throw` statement.
Gets a default record representing a connection's `PAGE_INFO`.
Gets a loop-context for a `continue` statement.
Gets a node that is the left or right operand of a node, is not the specified literal.
Gets a number of tokens that follow a given node or token in the token stream.
Gets a number of tokens that precede a given node or token in the token stream.
Gets a plugin with the given name.
Gets a readable location.
Gets a single require, this isn't great for when you want to destructure multiple things in a single statement.
Gets a window from an element
Gets all comments for the given node.
Gets all current diagnostic messages.
Gets all of the Use Strict Directives in the Directive Prologue of a group of statements.
Gets all of the tokens between two non-overlapping nodes.
Gets all tokens that are related to the given node.
Gets an array of variables without read references.
Gets an error message that expected space(s) after a specified keyword.
Gets an error message that expected space(s) before a specified keyword.
Gets an error message that unexpected space(s) after a specified keyword.
Gets an error message that unexpected space(s) before a specified keyword.
Gets an object literal property's key as the identifier name or string value.
Gets braces and the first/last token of content.
Gets declared variables, and checks its references.
Gets error messages that expected space(s) before and after a specified keyword.
Gets error messages that unexpected space(s) before and after a specified keyword.
Gets highest/lowest version from set of comparators.
Gets id of a given segment.
Gets nodes that are ancestors of current node.
Gets references that exist in loop conditions.
Gets references which are non initializer and writable.
Gets shadowed variable.
Gets state of a given member name.
Gets the "length" property value of `object`.
Gets the DOM ID of the React component that is the root of the tree that contains the React component with the supplied DOM ID.
Gets the Differential Revision id (aka DXXXXXX) id for the specified changeSetId, if it exists.
Gets the NuclideSavedConnectionDialogConfig representing the user's last connection.
Gets the SourceCode object representing the parsed source.
Gets the SourceCode of a single file, or set of files.
Gets the VariableDeclarator/AssignmentExpression node that a given reference belongs to.
Gets the WriteReference of a given variable if the variable should be declared as const.
Gets the `else` keyword token of a given `IfStatement` node.
Gets the `toStringTag` of `value`.
Gets the associative array value for `key`.
Gets the badge count number from the `aps` object
Gets the blame for the filePath at the current revision, including uncommitted changes (but not unsaved changes).
Gets the boolean value of a given literal node.
Gets the build file for the specified target.
Gets the code path of a given source code.
Gets the commit that deleted a file.
Gets the connectionIDs for all the connections that contain the given record as a `node`, or null if the record does not appear as a `node` in any connection.
Gets the connectionIDs for all variations of calls for the given base schema name (Ex: `posts.orderby(recent)` and `posts.orderby(likes)`).
Gets the containing loop node of a given node.
Gets the containing loop node of a specified node.
Gets the current badge number for the app icon on the home screen
Gets the current checking context.
Gets the current diagnostic messages for the file.
Gets the current project-scope diagnostic messages.
Gets the data object on the notif
Gets the data required to render the row.
Gets the data required to render the section header
Gets the deepest node containing a range index.
Gets the default eslint configuration.
Gets the docblock for a given node.
Gets the entire source text split into an array of lines.
Gets the environment with the given name.
Gets the filename for the currently parsed source.
Gets the first `count` tokens of the given node's token stream.
Gets the first commit sha of the given file.
Gets the first node that it's safe to insert before on.
Gets the first token of the given node's token stream.
Gets the first version number where a given file is no longer present.
Gets the first version of the record from the available caches.
Gets the flag which shows `super()` is called in all paths.
Gets the flag which shows `super()` is called in some paths.
Gets the function which encloses a given reference.
Gets the group by member parameter index for given declaration.
Gets the hash value for `key`.
Gets the index at which the first occurrence of `NaN` is found in `array`.
Gets the index at which the first occurrence of `key` is found in `array` of key-value pairs.
Gets the index in the tokens array of the last token belonging to a node.
Gets the index of a given variable name in a given comment.
Gets the index of the last spread property.
Gets the key used to access text content on a DOM node.
Gets the kind of a given function node.
Gets the kind of a given node.
Gets the label if the parent node of a given node is a LabeledStatement.
Gets the last `count` tokens of the given node.
Gets the last element of an array.
Gets the last token of the given node's token stream.
Gets the line after the comment and any remaining trailing whitespace is stripped.
Gets the local name of the first imported module.
Gets the map value for `key`.
Gets the markup wrap configuration for the supplied `nodeName`.
Gets the name of a given node if the node is a Identifier node.
Gets the name text of a given node.
Gets the native function at `key` of `object`.
Gets the nearest common ancestor ID of two IDs.
Gets the next DOM ID on the tree path from the supplied `ancestorID` to the supplied `destinationID`.
Gets the next related file, which Xcode defines as the one that comes before the current one alphabetically.
Gets the notification's main message from the `aps` object
Gets the number of characters in a key, including quotes around string keys and braces around computed property keys.
Gets the number of symbols in `string`.
Gets the open brace token from a given node.
Gets the order directly from each rendered child's `index` field.
Gets the parent ID of the supplied React DOM ID, `id`.
Gets the previous related file, which Xcode defines as the one that comes after the current one alphabetically.
Gets the proper XMLHttpRequest for support for older IE
Gets the property name of a given node.
Gets the real path of a file path, with home directory expansion.
Gets the real path of a file path.
Gets the resizeable container (Pane or PaneAxis) which should be resized in order to hide the provided pane.
Gets the rowID at index provided if the dataSource arrays were flattened, or null of out of range indexes.
Gets the schema of a setting for a Nuclide feature key.
Gets the scope (namespace) of a plugin.
Gets the scope for the current node.
Gets the scroll position of the supplied element or window.
Gets the sectionID at index provided if the dataSource arrays were flattened, or null for out of range indexes.
Gets the serverID (if one exists) for a given clientID
Gets the sound string from the `aps` object
Gets the source code for the given node.
Gets the stack value for `key`.
Gets the state of a given code path.
Gets the stderr at this point in time.
Gets the stdout at this point in time.
Gets the tag name where a given file was introduced first.
Gets the target node from a native browser event by accounting for inconsistencies in browser DOM APIs.
Gets the token starting at the specified index.
Gets the token that follows a given node or token in the token stream.
Gets the token that precedes a given node or token in the token stream.
Gets the top binary expression node for concatenation in parents of a given node.
Gets the trailing arguments string that should be appended to __annotator(foo, and does not include a semicolon.
Gets the trailing statement of a given node.
Gets the used member syntax style.
Gets the value of a given node if the node is a Literal node or a TemplateLiteral node.
Gets the variable object of `arguments` which is defined implicitly.
Gets the version number where a given file was introduced first.
Gets the whitespace around the colon in an object literal property.
Gets tokens in a given interval.
Gets variables that are declared by a specified node.
Gets whether or not `super()` is called in a given code path segment.
Gets whether or not a given segment is reachable.
Getter for the "length" property.
Getting Notifications
Getting the message that caused the error is the best we can do for now.
Git has a way of replacing them with a copy.
Git repositories for Acorn are available at
Give UI cycles to repaint, then proceed with creating connection.
Give a descendant focus
Give a nice error message if you try to do it.
Give beforeSelectionChange handlers a change to influence a selection update.
Give each column some padding so that they don't disappear.
Give focus to the search box by default
Give preference to filename results in OmniSearch.
Give priority to the one with most dependants
Give some time to execute
Give some time to scribeProcess and wait for it resume.
Give the component that originally created this child.
Give the init function the jQuery prototype for later instantiation
Give the new window 2 seconds to breathe before testing it.
Give up for anything more complex.
Given `this.props.children`, return an object mapping key to child.
Given a ChangeSet, broadcasts changes for updated DataIDs and registers new DataIDs with the garbage collector.
Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent instance, or null if the node was not rendered by this React.
Given a DOM node, return the closest ReactDOMComponent or ReactDOMTextComponent instance ancestor.
Given a PagedObjectId, return an array of ObjectIds for its children.
Given a ReactCompositeComponent instance, return a list of its recursive owners, starting at the root and ending with the instance itself.
Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding DOM node.
Given a ReactNode, create an instance that will actually be mounted.
Given a `prevElement` and `nextElement`, determines if the existing instance should be updated as opposed to being destroyed or replaced by a new instance.
Given a bindings function or object, create and return a new object that contains binding value-accessors functions.
Given a change object, compute the new set of marker spans that cover the line in which the change took place.
Given a config with environment settings, applies the globals and ecmaFeatures to the configuration and returns the result.
Given a file path, returns path to the Buck project root i.e. the directory containing '.buckconfig' file.
Given a filename and options, build a Babel config object with the appropriate plugins.
Given a full schema, leave it alone
Given a function that returns bindings, create and return a new object that contains binding value-accessors functions.
Given a line object, find its line number by walking up through its parent links.
Given a list of names to ignore, compile them into minimatch patterns and update the store with them.
Given a max text length, constrain our selection offsets to ensure that the selection remains strictly within the text range.
Given a mode and a state (for that mode), find the inner mode and state at the position that the state refers to.
Given a mode spec (anything that resolveMode accepts), find and initialize an actual mode object.
Given a mouse event, find the corresponding position.
Given a payload of data and a path of fields, extracts the `id` of the node specified by the path.
Given a prepared measurement object, measures the position of an actual character (or fetches it from the cache).
Given a query fragment and a data ID, returns a root query that applies the fragment to the object specified by the data ID.
Given a request for an image by path.
Given a tuple of schemas, insert warning level at the beginning
Given a word and a count, append an s if count is not one.
Given an AST node, perform a bottom-up search for the first ancestor that represents a conditional statement.
Given an AST, this function tries to find the object expression that is the module's exported value.
Given an ObjectId for a multi page object, gets PropertyDescriptors for the object's children.
Given an array of lines this will parse the scopes and return a mapping of line number to unique scope ids.
Given an element, validate that its props follow the propTypes definition, provided by the type.
Given an explitit 'data' value, we create a child binding context for it
Given an object `toIterator` will return the itrator for that object.
Given any node return the first leaf node without children.
Given no explicit 'data' value, we retain the same binding context
Given the parsed result of a definition file, generate a remote proxy module that exports the definition's API, but internally calls RPC functions.
Given the source of a file, this returns the data about the module's exported value.
Given the starting source, starting position, and the ending source this function guesses where the cursor should move to.
Given two strings of length `m` and `n` respectively, and threshold `t`, uses `O(t*min(m,n))` time and `O(min(t,m,n))` space.
Gives the permutation of all possible domainMatch()es of a given domain.
Gives the permutation of all possible pathMatch()es of a given path.
Global console object.
Global return (at the beginning of a script) is a special case.
Global runtime evaluation on dummy connection does not care about which frame it is being evaluated on so choose top frame here.
Global timers (via `setTimeout` etc).
Global uid is `1` as this point, since this is the second RadioGroup component to be created.
Global variables commonly provided by a web browser environment.
Global variables defined by option
Globally unique ID used as the "name" attribute to group radio inputs.
Globals provided by popular JavaScript environments.
Globals provided by popular JavaScript libraries.
Globals that were declared using /*global ...
Globs and regexps are different
Globstar behavior is enabled by default, and can be disabled by setting options.noglobstar.
Go ahead and delete the dir
Go back N pages at once.
Go back one page in the webview's history.
Go back to the item for a particular route object
Go back to the top item
Go down to the LCA and close current intervals.
Go forward one page in the webview's history.
Go over properties, wrap object values.
Go through every key on the object,
Go through the array, only saving the items that pass the validator function
Go through the array, translating each of the items to their new values
Go through the items that have been added and deleted and try to find matches between them.
Go through the sorted bindings, calling init and update for each
Go up the nodes stack and open new intervals.
Going forward, we probably want to special-case some of the paths under /Applications/Xcode.app so that click-to-symbol works in files like Frameworks/UIKit.framework/Headers/UIImage.h.
Google Closure Compiler helpers (used only to make the minified file smaller)
Google Input Tools provides composition data via a CustomEvent, with the `data` property populated in the `detail` object.
Got to create a deep copy, otherwise atom.config invariants might break
Grab the data of only the expanded portion of the tree.
Grab the dependencies of packages that were uninstalled
Grab the nodes after filtering
Grab the nodes of each specified name
Grab the org/repo /xxxxx/yyyyy.git or :xxxxx/yyyyy.git (.git is optional)
Grandparent across subcomponent boundaries.
GraphQL requires that a different variable be used for values of different types:
GraphQL should never return undefined for a field
GraphQL validation warnings are followed closely by a thrown exception.
GraphQLRange nodes can also support static queries like surrounds, find, whose contents won't ever change for a given set of arguments.
Green/success if all tests passed without skipping any.
Group all of the root keys by their repository, excluding any that don't belong to a repository.
Group markup by `nodeName` if a wrap is necessary, else by '*'.
Group non-placeholders and placeholders into groups of two.
Group references by file.
Group references within each file.
Group the lines into valid plist strings.
Group the parameter names so that all of the trailing optional parameters are together with the last non-optional parameter.
Groups Note: ART has a notion of width and height on Group but AFAIK it's a noop in ReactART.
Groups by the VariableDeclarator/AssignmentExpression node that each reference of given variables belongs to.
Groups the object's values by a criterion.
Guaranteed to return an integer number.
Guard against completing resource transfer before all requests are made.
Guard against deactivate being called twice
Guard against the dispatch of two touch moves when there are two simultaneously changed touches.
Guard against this getting called multiple times
Guard against undefined "subtract", e.g., when used as in cssHooks
Guard an Array-format assets option and converted it into the key-value Object format.
Guard zone is used to ensure there are always some extra items above and below the viewport to support keyboard navigation.
Gutter.destroy seems to fail after text editor is destroyed, and Gutter.onDidDestroy doesn't seem to be called in that case.
HACK: Ctags results typically just duplicate Hack results when they're present.
HACK: Mark that this file has typechecks on the comments object.
HACK: goToLocation is a getter.
HACKS In order to make things efficient the recalculation of the derived fields is being avoided when possible.
HMR Client that receives from the server HMR updates and propagates them runtime to reflects those changes.
HTML Embedded Scripts: ASP, JSP
HTML and BODY from internal iframes should not overwrite top-level ones.
HTMLCollection/NodeList
HTTP and HTTPS:  If you run your application both as HTTP and HTTPS you may wrap them individually, since your Connect "server" is really just a JavaScript `Function`.
HTTP methods whose capitalization should be normalized
Hack alert, an atom.workspace.open of a location in the current editor, we get the location update before the onDidOpen event, and we don't get an activate/onDidStopChangingActivePaneItem pair.
Hack so we can intercept prompring for data
Hack to call super constructor in WebInspector classes.
Hack to emit end on close because of a core bug that never fires end
Hack to have stream not keep the event loop alive.
Hack to make it work with our packager Copyright 2014 Simon Lydell X11 ("MIT") Licensed.
Hack to set TextEditor to read-only mode, per https://github.com/atom/atom/issues/6880
Hack warning: This is a hack because the www UI explorer used to require render to be called.
Hack: This is converting calls like
Hack: This is easier than replicating the default propType handler.
Hacky: need to override isFile for each call for testing
Handle "." connected identifiers
Handle '.' connected identifiers
Handle Number Literals
Handle a deep copy situation
Handle a key from the keydown event.
Handle a key from the keypress event
Handle a page of pages (...
Handle accentuated characters
Handle all cases to make sure that there's only one slash between baseUrl and uri.
Handle auto keymap transitions
Handle cache's special case and crossDomain
Handle case when target is a string or something (possible in deep copy)
Handle declared globals.
Handle descending domains.
Handle docco title comment (single line)
Handle firing indexes
Handle iff the expected data type is "jsonp" or we have a parameter to set
Handle ignore property, deleting all files from the temporary directory If no ignores were specified, simply resolve
Handle it asynchronously to allow scripts the opportunity to delay ready
Handle multi line comments
Handle multiple events separated by a space
Handle non-detected items
Handle number literals
Handle numeric value increment/decrement only at this point.
Handle operators and Delimiters
Handle operators and delimiters
Handle print of version
Handle push notifications for your app, including permission handling and icon badge number.
Handle regex literals
Handle reversed for expressions, used in spidermonkey
Handle save and saveDev options
Handle scope changes.
Handle server requests, punting them down the middleware stack.
Handle special numbers: NaN, Infinity, -Infinity, -0.
Handle the case where IE, Opera, and Webkit return items by name instead of ID
Handle the global AJAX counter
Handle the interaction of a change to a document with the editor that this document is part of.
Handle the stateChar, then proceed with this one.
Handle uppercase characters
Handle when the DOM is ready
Handler for marker movements due to text being edited.
Handlers: Subclasses of `RelayCacheProcessor` can implement this method to actually perform work after a root/node read completes.
Handles all 'Console.*' Chrome dev tools messages
Handles all 'Debug.*' Chrome dev tools messages
Handles all 'Page.*' Chrome dev tools messages
Handles all 'Runtime.*' Chrome dev tools messages
Handles basic objects, arrays and primitive types, but doesn't support "exotic" types like Date etc.
Handles data value tracking between Chrome and Dbgp.
Handles displaying breakpoints and processing events for a single text editor.
Handles dragging the pane sizer.
Handles lifetimes of marshalling wrappers remote objects.
Handles merging the results of the mutation/subscription into the store, updating each top-level field in the data according the fetched fields/fragments.
Handles notification from JavaScript VM about updated stack (liveedit or frame restart action).
Handles objects with the built-in `forEach`, arrays, and raw objects.
Handles registering files encountered during debugging with the Chrome debugger
Handles responses to an ajax request: - finds the right dataType (mediates between content-type and expected dataType) - returns the corresponding response
Handles sending and recieving dbgp messages over a net Socket.
Handles the developer-visible aspect of errors and exceptions
Handles the payload for a node deletion mutation, reading the ID of the node to delete from the payload based on the config and then deleting references to the node.
Handles the payload for a range addition.
Handles the payload for a range edge deletion, which removes the edge from a specified range but does not delete the node for that edge.
Handles the state machine that responds to various atom events.
Handshake the server with my client id to manage my re-connect attemp, if it is.
Hard break that must exist here.
Hard-coded length from `main`.
Hardlinks in tarballs are relative to the root of the tarball.
Has not been replayed yet.
Hash any pending mutation transactions.
Have a look to see what is above us, to try and work out where we are
Have the list do nothing anymore
Have to install the spy before loading this.
Have to re-add this since the re-initialization kills it
Having .fud makes it much easier to define statement-oriented languages like JavaScript.
Having this regex be not quite right is just a display issue, though -- it only affects the location of the tooltip.
Having too many tests running concurrently on saucelabs causes timeouts and errors, so we have to run them in smaller batches.
Header levels should only increment by one level at a time
Headers (they are sent all at once)
Helper for creating a config for `configureNext`.
Helper for creating touch test config data.
Helper for deleting text near the selection(s), used to implement backspace, delete, and similar functionality.
Helper for stringWithEscapes
Helper for triggering events
Helper function for ::getStatuses.
Helper function for readability above.
Helper function for registering the marashaller/unmarshaller for a type alias.
Helper function for subclasses to make sure onEnd is only called once.
Helper function get easily get a path in the fixtures directory.
Helper function that `.then`s on a promise.
Helper function that calls `write()` on the underlying Stream.
Helper function that counts changes in the output from JsDiff, as well as generates a colored message that shows diff output.
Helper function that extracts the props needed for scene renderer.
Helper function that generates a proxy for an instance method of an interface.
Helper function that generates a remote constructor proxy.
Helper function that generates a transformation statement for an object.
Helper function that generates statments that can be used to marshal all of the arguments to a function.
Helper function that listens for a result for the given requestId.
Helper function that parses a Flow type annotation into our intermediate format.
Helper function that parses an exported function declaration, and returns the function name, along with a FunctionType object that encodes the argument and return types of the function.
Helper function that parses an exported type alias, and returns the name of the alias, along with the type that it refers to.
Helper function that parses an method definition in a class.
Helper function that parses annotations of type 'GenericTypeAnnotation'.
Helper function that runs a command in a given directory, invoking a callback as each line is written to stdout.
Helper function that runs the search command on the given directory `subdir`, relative to `directory`.
Helper function to `addAllParentDirectoriesToCache` and `removeAllParentDirectoriesFromCach`.
Helper function to `fetchRevisionInfoBetweenRevisions`.
Helper function to compare route keys (e.g. "9", "11").
Helper function to continue chaining intermediate results.
Helper function to sort an array of file results - first by their filepath, and then by the number of matches.
Helper function to sort scenes based on their index and view key.
Helper function to write JS configs to temp file.
Helper function to write configs to temp file.
Helper functions for managing events -- not part of the public interface.
Helper method that generates the dispose method for a class.
Helper method, returns a clone of `query` that has been marked as deferred.
Helper that recursively merges two data objects together.
Helper to assert the table data is rendered correctly.
Helper to build a print function for the given node and context.
Helper to call ReactRef.attachRefs with this composite component, split out to avoid allocations in the transaction mount-ready queue.
Helper to construct a new field with the given attributes and 'empty' route/variables.
Helper to construct a new fragment with the given attributes and 'empty' route/variables.
Helper to construct a new mutation with the given attributes and 'empty' route/variables.
Helper to construct a new root query with the given attributes and 'empty' route/variables.
Helper to construct a plain scope for the given `dataID`.
Helper to construct expected result objects for a global provider.
Helper to create a record and the corresponding notification.
Helper to extract a component container's attributes into a plain object array.
Helper to find the previous element that is a fragment anchor.
Helper to read in a single mpint
Helper to reduce boilerplate when creating subclasses.
Helper to register an event/watch callback.
Helper to write the result payload into a store.
Helper to write the result payload of a (root) query into a store, returning created/updated ID sets.
Helper used to collapse a small branch into a single leaf.
Helpers used when computing which overlapping collapsed span counts as the larger one.
Helpful for debugging.
Helps avoid circular dependencies and allows code to reason about whether or not they are in a Worker, even if they never include the main `ReactWorker` dependency.
Helps to align the image vertically.
Hence, if a call is already running, it will wait for it to finish, then start the next async execution, but if called again while not finished, it will return the scheduled execution promise.
Hence, it's cached here to avoid service calls when working on a stack of commits.
Hence, it's safe to re-emit changes when stable from changes.
Hence, the latest project paths are fetched here.
Hence, the need to debounce and listen to both change types.
Hence, we here use node's filesystem watchers instead.
Hence, we need to retry fetching the revision info (depending on the common ancestor) because the watchman-based Mercurial updates doesn't consider or wait while rebasing.
Hence, we remove it here, if existing, and add the new path for which we added a workspace opener handler.
Hence, we return early to allow it to go through.
Here and below, all constructors are private to API implementation.
Here are the mapping between the offset line numbers to the original line number.
Here excluded means they won't be offered as a completion, but if used, their argument type will be completed.
Here first argument is not the longest, but we still don't move it.
Here is the initial message.
Here we added a hook to Error.prepareStackTrace to achieve following goals: 1) Whenever `error.stack` is called, error.stackTrace will be generated.
Here we can inject any modifications into the UI.
Here we copy it to a js variable for faster access.
Here we define a resolver that returns the data defined above.
Here we depart from the documented algorithm, in order to avoid building up an actual levels array.
Here we export a schema that offers one root field named 'greetings', and a method to resolve its data.
Here we intentionally circumvent, to a degree, the logic in the _fetchChildKeys which wouldn't schedule a new fetch if there is already one running.
Here we lose the prototype.
Here we mock it out so that we get normal behavior in our tests.
Here we need to decide whether the reprinted code for newNode is appropriate for patching into the location of oldNode.
Here we poll to unregister it when the editor is no longer in the document, so that it can be garbage-collected.
Here we store the last mapping.
Here we use asap to wait until all updates have propagated, which is important when using controlled components within layers: https://github.com/facebook/react/issues/1698
Here's a workaround for that.
Here's how this works:
Here's the main message handler ...
Here, I added an expando property function to allow disposing those listeners on the created instance.
Here, Nuclide reloads the remote project files that have empty text editors open.
Here, a new subtree is combined with the previous subtrees.
Here, it's possible to pass an array of file paths to revert/checkout-head.
Here, we compose your Relay container's 'greetings' fragment into the 'greetings' field at the root of the GraphQL schema.
Here, we define a type of object that has a 'hello' field that is of the string type.
Heuristically choose between single-quoted, double-quoted or plain URL regex.
Hex number starts with '0x'.
Hg appears to modify temporary files that begin with these prefixes, every time a file is saved.
HgRepositoryClient runs on the machine that Nuclide/Atom is running on.
Hide a component from the sidebar by making it return false from this function
Hide actual error from user
Hide first so that caller can toggle it visible.
Hide inspectorView and force layout to mimic the undocked state.
Hide/unhide blocks with no matches
Hide/unhide challenges that match the regex
Hide/unhide superblocks with no matches
Hides all scenes that we are not currently on, gesturing to, or transitioning from
Hides it to avoid unnecessary rendering.
Hierarchically the controlling toolbar should be above, and practically this ensures the popover in this build toolbar stacks on top of other UI.
High-level API for creating a RelayMutationTransaction from a RelayMutation.
High-level docs for the Sample iOS API can be written here.
Higher than the snippets provider.
Higher values mean it contains more things.
Highlights all touchable targets.
Hijack console.warn to collect GraphQL validation warnings (we hope)
Hijack window.onerror to catch any stray fatals
Hijacking React Native JS execution and performing it in a node process.
Hint may be "start" or "around".
Historically, its default string encoding is 'binary' so we have to make this configurable.
History TextEditor Coordinates
Hit deadline before processing all tasks, so process more later.
Hitting enter when this panel has focus should confirm the dialog.
Hitting escape when this panel has focus should cancel the dialog.
Hold (or release) the ready event
Holds a given event for processing later.
Holds info about a single rendered line when it was rendered for measurement, while not in view.
Holds onto the measure function in use.
Honor option terminator
Hook Error.prepareStackTrace by leveraging get/set accessor.
Hook for JSX spread, don't use this for anything else.
Hook not needed (or it's not possible to use it due to missing dependency), remove it.
Hook point for tests.
Hook used by React ART
Hooks and param attributes are merged as arrays.
Hooks for boolean attributes
Hooks for printing stack traces with source maps.
How early to start rendering rows before they come on screen, in pixels.
How far the swipe must drag to start transitioning
How many rows to render on initial component mount.
How may times can we tolerate failures from the worker.
How to align children in the cross direction https://developer.mozilla.org/en-US/docs/Web/CSS/align-items
How to align children in the main direction https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content
How to align the element in the cross direction https://developer.mozilla.org/en-US/docs/Web/CSS/align-items
However in certain cases, e.g. v-for scope alias and props, we don't want to force conversion because the value may be a nested value under a frozen data structure.
However in practice it outperforms other O(n log n) hulls.
However size may be expensive to compute if not cached, so only call count() if the number is in fact negative.
However these mixeds are ending up everywhere and are not being inspected
However we need to filter out v8 native scripts.
However, GitRepository uses numbers to represent its statuses, and returns statuses as numbers.
However, Node and Atom builtins are already in the module cache by the time Nuclide loads.
However, Travis is less predictable due to multiple different VM types.
However, `1.2.4-alpha.notready` should NOT be allowed, even though it's within the range set by the comparators.
However, `_resolvedDeferred` is rejected with the earliest encountered error.
However, `currentState` will be null at launch while `AppStateIOS` retrieves it over the bridge.
However, `currentState` will be null at launch while `AppState` retrieves it over the bridge.
However, `flush` does not make any arrangements to be called again if an exception is thrown.
However, a parsing error does not throw an error from this method - it's just considered a fatal error message, a problem that ESLint identified just like any other.
However, a pathological inflate type of transform can cause excessive buffering here.
However, a/b/ should still satisfy a/* now either we fell off the end of the pattern, or we're done.
However, all templateSources must supply text() even if they don't supply nodes().
However, also add individual async events to the thread flow (above), so we can easily display them on the same chart as other events, should we choose so.
However, because --keep-going was specified, the build report should have still been written unless any of the target args were invalid.
However, because this test artificially sets some locks to an earlier time to simulate staleness, we use mtime here.
However, don't include blank lines.
However, due to a change in Node 0.10.27+, pseudoRandomBytes is now the same as randomBytes, and may in fact block in situations where insufficent entropy is available.
However, for example sometimes the output may contain escape sequences (e.g. ANSI) that you want to interpret and strip from the data before appending to the buffer.
However, front-end still asks for resource content.
However, if a TextEditor is created via some other means, (such as a building block for a piece of UI), then it must be observed explicitly.
However, if a process was killed with a signal, don't reject, since this was likely to cancel the search.
However, if all data dependencies can be immediately fulfilled, the `props` property will be present.
However, if at least half frames won't fit at this scale, fall back to using autoscale.
However, if it IS set, then we need to still fail here, but just skip the first level.
However, if it is big enough, then just slice out the part we want, to save unnecessary copying.
However, if we ever elect to use timers in Safari, the prevalent work-around is to add a scroll event listener that calls for a flush.
However, if you are at the top of a class it does seem desirable to highlight it.
However, if you register the `mousemove` on the document object, then it will of course catch all `mousemove`s.
However, in partial mode, we can't say this is necessarily over.
However, it should not force a render if the panel is still supposed to be hidden.
However, it would be good to keep track of files' dev+inode and nlink values, and create a HardLinkReader that emits a linkpath value of the original copy, so that the tar writer can preserve them.
However, moving the mouse into the browser from outside will not fire a `mouseout` event.
However, not all KO-targeted browsers (Firefox 2) support activeElement.
However, note that even this simple case requires nuances to operate in a broad spectrum of browsers.
However, npm *itself* excludes these from its own package, so that it can be more easily bootstrapped using old and non-compliant tar implementations.
However, setNativeProps can only be implemented on leaf native components.
However, since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable as an internal implementation detail in the short term.
However, since this timer gets frequently dropped in Firefox workers, we enlist an interval handle that will try to fire an event 20 times per second until it succeeds.
However, the Disposable that it does return removes the subscription on the 'did-reload-all' event (which is supposed to be deprecated) rather than the 'did-change-active-themes' one.
However, the bound on the number of services is the number of remote connections initiated during this Nuclide session, plus the local one.
However, the number is platform-dependent.
However, the results of this aren't treated as a signed number.
However, the user agent SHOULD ignore the cookie-av entirely."
However, the watchman update for the files that have changed due to the Mercurial action may arrive before the update for the wlock file.
However, the wildcard interop is really expensive, so it's only used when necessary.
However, there are likely far more normal files in the world than directories.
However, there is a special case: the spacebar key.
However, there is no guarantee that the DOM node is in the document.
However, there may be more than one such element.
However, they do not work reliably in Internet Explorer or Safari.
However, this doesn't work well with our customization of stacktrace.
However, this is caught earlier with a better error message.
However, this is still not an official public API, and we reserve the right to remove it at any time if we create a real public property writers API.
However, those costs aren't great enough to justify a new abstraction for managing it at this time.
However, to avoid slowing down the queue of pending tasks, we rethrow the error in a lower priority turn.
However, to have a reasonable HashMap performance i.e. O(1) for insertion, deletion, and retrieval.
However, using `undefined` is not allowed by all browsers so we must replace it with `null`.
However, we cannot just call `get` and then check it against null because T may be a nullable type, in which case this would break subtly.
However, we currently have no way of obtaining this information.
However, we don't actually ever read the version number, so the second field is always blank.
However, we don't do that any more so this test can probably be removed.
However, we don't want to show the very top parent since it is redundant.
However, we have to support IE8.
However, we still want to treat ErrorUtils as a module so that other modules that use it aren't just using a global variable, so simply export the global variable here.
However, when there is no key, it's not looked up in cache, but rather by its path.
However, when you get 16-bit numbers, you do.
However, you should not rely on it being a constant size, because on different platforms and screen densities its value may be calculated differently.
Huge texts in the UI reduce rendering performance drastically.
Human key combos should always explicitly state the shift key.
Human-readable name for the grammar.
Humanize the keystroke according to platform conventions.
Hyphenate a camelCase string.
Hypothetical queries.
I am sorry that you have to see this.
I believe this is necessary due to scopeSpaceBreaks or something.
I chose these semantics over cleverly invoking the callback on new elements because this way is much easier to reason about.
I considered making SpreadElement and SpreadProperty subtypes of UnaryExpression, but they're not really Expression nodes.
I do this because nulls are normally sent as empty strings
I do this because nulls are normally sent as empty strings.
I don't believe we need to lock for a replace since there's no navigation actually happening
I don't fully understand the motivation behind separating it out, but prepending it with 'See also: ' and adding it to the end of the messages is what the Flow team recommended.
I don't know what type error is...
I don't think this will work at all.
I have no idea why you are even allowed to have optional params in the middle, but I guess we have to deal with it.
I haven't seen this in practice but it's better to be safe.
I retained Pratt's nomenclature.
I think that whenever this happens, it's a bug in Flow.
I think this is a literal within JSXElement's children for certain parsers, but Babylon appears to just use Literal.
I wish flow would let add it in a more elegant way.
I would expect the service framework to send onCompleted when it disconnects, but that seemingly doesn't happen.
I would very much like to know _why_ this is.
I'm an enabler, sorry
I'm glad we don't support this kind of weird numbering scheme in the kernel.
I'm leaving it here since this behavior belongs to the old propTypes system yet is currently implemented in the core ReactCompositeComponent.
I'm leaving the condition here because it used to happen before the switch to JSON and I'd rather log something than have the user experience regress in case I'm wrong.
I'm not sure how to reconcile it with the type that is expected here.
I'm not sure what these are.
I'm pretty sure it's safe to assume they are both Identifiers, but let's be safe just in case.
I.e. not a user provided composite type.
I.e. the native environment provides this global directly with its script embedded.
ID from a setTimeout() call.
IE 11 uses modern selection, but doesn't support the extend method.
IE 6 won't allow radio buttons to be selected unless they have a name
IE 9's matchesSelector returns false on disconnected nodes
IE and Edge don't allow access to the DataTransfer.dropEffect property when it's wrapped in another event.
IE complains about "unspecified error" when calling setSelectionRange() on an input element that's been removed from the DOM, so we wait until the selection range callback has fired to end this test.
IE does not cache element positions of inline elements between calls to getBoundingClientRect.
IE does not dispose attachEvent handlers automatically (unlike with addEventListener) so to avoid leaks, we have to remove them manually.
IE does strange things with escape.
IE has `focusin` and `focusout` events which bubble.
IE has a `uniqueID` property on DOM nodes.
IE has a `uniqueID` set on every DOM node.
IE has a different format for this.
IE ignores toString in object iteration..
IE inlines svg namespace
IE requires element to be in document to fire events
IE support, based on a concept by Erik Arvidson ...
IE text differs from modern selection in that it behaves as though block elements end with a new line.
IE throws unspecified error in certain cases, when trying to access activeElement before onload
IE will clean up empty textNodes during frag.cloneNode(true), so we have to give it something here...
IE will fail on defineProperty
IE's approach to draggable
IE's event fires out of order with respect to key and input events on deletion, so we discard it.
IE-only attribute that controls focus behavior
IE10+ fire input events to often, such when a placeholder changes or when an input with a placeholder is focused.
IE11 currently doesn't count as 'ie', since it has almost none of the same bugs as earlier versions.
IE11 does not have attachEvent, so all must suffer
IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.
IE6 sometimes throws "unknown error" if you try to write to .selected directly, whereas Firefox struggles with setAttribute.
IE8 can throw "Can't move focus to the control because it is invisible, not enabled, or of a type that does not accept the focus." for all kinds of reasons that are too expensive and fragile to test.
IE8 does not implement `charCode`, but `keyCode` has the correct value.
IE8 does not implement getModifierState so we simply map it to the only modifier keys exposed by the event itself, does not support Lock-keys.
IE8 fails to fire propertychange on the first input event after setting `value` from a script and fires only keydown, keypress, keyup.
IE8 has no API for event capturing and the `onScroll` event doesn't bubble.
IE8 only supports accessing cssFloat (standard) as styleFloat
IE8 throws "Invalid argument." if resetting shorthand style properties.
IE8: When updating a just created node with innerHTML only leading whitespace is removed.
IE9 claims to support the input event but fails to trigger it when deleting text, so we ignore its input events
IE9 claims to support the input event but fails to trigger it when deleting text, so we ignore its input events.
IE9 doesn't fire input event on backspace/del/cut
IE9 will set input.value to "null" for null...
IIFE to avoid creating classes for no reason because of hoisting.
IMPORTANT Let the queue flush finish before enter the next test.
IMPORTANT: reset the regex for the next search
IN NO EVENT SHALL APPLE INC.
IN NO EVENT SHALL GOOGLE INC.
INPUT HANDLING Poll for input changes, using the normal rate of polling.
Ideally this API would become more restrictive so that this extra work isn't needed.
Ideally this should be executed as a microtask, so we leverage MutationObserver if it's available, and fallback to setTimeout(0).
Ideally this would be a MessageEvent, but Flow's definition doesn't inherit from Event, so it's 'any' for now.
Ideally this would be a union of Field/Fragment/Mutation/Query/Subscription, but that causes lots of Flow errors.
Ideally this would be the only find in here, but it's not because of a jscodeshift bug, so we have to manually search for a specific kind of GenericTypeAnnotations on class super types
Ideally we should return such id that it remains same as long as the the debugger process has the same content of scripts and that changes when a new content is loaded.
Ideally, coincident intersection points should be jittered to avoid clipping issues.
Ideally, if multiple subfolders of an Hg repo are used as project roots in Atom, only one HgRepositoryClient should be created.
Ideally, the timezone input would be a picker rather than a text input, but we don't have any pickers yet :(
Ideally, this would be the inverse relationship.
Ideally, we would declare this in atom-jasmine.js, but we can't extend this global here.
Ideally, we would rely on platform support for parsing a cookie, since this would save us from any potential inconsistency.
Identical (served from cache)
Identical objects are equal.
Identifier or keyword.
Identifiers never need parentheses.
Identifiers provided by the ECMAScript standard.
Identifiers that have an exact alias to use.
Identifiers that have an exact path to use.
Identifiers that might correspond to the default export of a particular absolute path.
Identifiers that might correspond to the default export of a particular literal.
Identifiers that should be ignored when not a type.
Identifiers that should be ignored when they are a type.
Identifiers will be generated based on the file's name.
Identifies whether a given object is a request signer or not.
Identify the new top root node of the subtree of the old root.
Identify the node where selection currently begins, then observe both its text content and its current position in the DOM.
Identity of max() function
If "Reveal File on Switch" is enabled, ensure the scroll position is synced to where the user expects when the side bar shows the file tree.
If "name" is an array of keys...
If --no-deprecation is set, then it is a no-op.
If 409, then GET and merge, try again.
If A is deeper, crawl up.
If B is deeper, crawl up.
If CSS transitions are not supported, trigger an "end animation" event immediately.
If Flow, when running in this root, has reported errors for this file, this invalidation is not necessary because the path will be explicitly invalidated.
If HgStatusOption.ALL_STATUSES was passed and a file does not appear in the results, it must mean the file was removed from the filesystem.
If Hot Loading is enabled avoid rebuilding bundles and sending live updates.
If IE does not support CORS, use XDomainRequest.
If MAX_INDIVIDUAL_CHANGED_PATHS changes, this test needs to be updated.
If React trees are not nested, returns null.
If RemoteDirectoryProvider is called before this, and it failed to provide a RemoteDirectory for a given URI, Atom will create a generic Directory to wrap that.
If URI points to a remote image, it will be downloaded automatically.
If Watchman reports that many files have changed, it's not really useful to report this.
If _read called its callback synchronously, then `reading` will be false, and we need to re-evaluate how much data we can return to the user.
If _read pushed data synchronously, then `reading` will be false, and we need to re-evaluate how much data we can return to the user.
If `checked` or `value` are not supplied (or null/undefined), user actions that affect the checked state or value will trigger updates to the element.
If `clean` is provided, any existing Clang server for the file is restarted.
If `defaultValue` is provided, any options with the supplied values will be selected.
If `display` is specified in the event details, use it as the `hidden` value rather than toggle.
If `false` compass won't be displayed on the map.
If `false` points of interest won't be displayed on the map.
If `false` the user won't be able to change the map region being displayed.
If `false` the user won't be able to pinch/zoom the map.
If `false`, the picker shows an AM/PM chooser.
If `filterUnterminatedRange` is supplied, it will be invoked with any fields from `subjectNode` that are connections and unterminated in `patternNode`.
If `forceHas` is defined, the return value will be equal to `forceHas`.
If `fromRight` is provided elements of `array` are iterated from right to left.
If `immediate` is passed, trigger the function on the leading edge, instead of the trailing.
If `interspersed: false` then '-v' would not be parsed out.
If `liberal` is true (used when parsing properties), it will also convert keywords into identifiers.
If `method` throws, prefer to show that stack trace over any thrown by invoking `closeAll`.
If `multiple` is false, the prop must be a stringable.
If `multiple` is true, the prop must be an array of stringables.
If `props` and `error` are both present, then sufficient data is ready to render, but an error occurred while fulfilling deferred dependencies.
If `props` is present but `done` is false, then sufficient data is ready to render, but some data dependencies have not yet been fulfilled.
If `readyState` is not supplied, the previously rendered `readyState` will continue to be rendered (or null if there is no previous `readyState`).
If `rootNode.form` was non-null, then we could try `form.elements`, but that sometimes behaves strangely in IE8.
If `str` is longer than `max`, padCenter will return `str` unaltered.
If `str` is longer than `max`, padRight will return `str` unaltered.
If `target.path` file cannot be found or read, Promise resolves to null.
If `touchableHandleLongPress` is *not* provided, `touchableHandlePress` will be called as it normally is.
If `touchableHandleLongPress` is provided, by default any `touchableHandlePress` callback will not be invoked.
If `true` the app will ask for the user's location and display it on the map.
If `true` the map will follow the user's location whenever it changes.
If `true`, this component can't be interacted with.
If `value` is not supplied (or null/undefined), user actions that affect the value will trigger updates to the element.
If `value` is not supplied (or null/undefined), user actions that change the selected option will trigger updates to the rendered options.
If `value` is supplied (and not null/undefined), the rendered element will not trigger updates to the element.
If `value` is undefined, the mutation method should unset the property.
If `window.performance` is unavailable (e.g. in Node), use process.hrtime.
If a .babelrc file doesn't exist in the project, use the Babel config provided with react-native.
If a `change` event should be fired, returns the target's ID.
If a `filter` object is provided, only its keys will be checked during comparison.
If a `render` callback is not supplied, the default behavior is to render the container if data is available, the existing view if one exists, or nothing.
If a callback is passed, run this as a controll flow
If a callback was provided, invoke it with the newest update.
If a closer throws an error, the transaction should prefer to throw the error encountered earlier in the operation.
If a component is unmounted before pending changes apply, it will still be here, but we assume that it has cleared its _pendingCallbacks and that performUpdateIfNecessary is a noop.
If a component renders to null or if another component fatals and causes the state of the tree to be corrupted, `node` here can be null.
If a connection profile has a default remote server command, replace it with an empty string.
If a different port is associated with the other protocol we need to update that as well
If a falsy value is provided (e.g. null), we'll simply empty the select element
If a first node doesn't exist then there isn't ever code that would result in a require being changed.
If a fixed node size is specified, scale x and y.
If a fixed tree size is specified, scale x and y based on the extent.
If a font scale is not set, this returns the device pixel ratio.
If a fragment pointer is null, warn if it was found on another prop.
If a gen function is supplied, then the promise it returns will block execution of tasks already in the queue until it resolves.
If a given node is `ArrayPattern` which has `RestElement`, the trailing comma is disallowed, so report if it exists.
If a given node is multiline, reports the last element of a given node when it does not have a trailing comma.
If a hook was provided get the computed value from there
If a hook was provided get the non-computed value from there
If a hook was provided, use that value, otherwise just set the specified value
If a key with the spaces exists, use it.
If a line number is specified by the tag, jump to that line.
If a location can be found for the declaration, it will be available via the 'location' field on the returned object.
If a move event has been observed, `(moveX, moveY)` is the centroid of the most recently moved "cluster" of active touches.
If a negated pattern matches, this will override lower precedence patterns sources.
If a node was inserted in the middle of existing list dynamically we might need to increase the limit.
If a normal DOM Ready event fired, decrement, and wait if need be
If a number was passed in, add 'px' to the (except for certain CSS properties)
If a packager instance was not provided, then just create one for this bundle command and close it down afterwards.
If a paint doesn't have a corresponding graphics layer id, it paints into its parent so add an effectivePaintId to these events.
If a palm is accidentally counted as a touch, but a finger is moving greatly, the palm will move slightly, but we only want to count the single moving touch.
If a particular environment requires that some resources be cleaned up, specify this in the injected Mixin.
If a password is provided, all parts of the profile will be save except the password.
If a paste event occurs after a keypress, throw out the input chars.
If a path has no changes, it will not appear in the returned Map.
If a path is not in the project, it will be ignored.
If a piece of data has a cached instance for it, we reuse it.
If a port is specified explicitly, use it as is
If a pre-compiled linker is available, that means the passed in element will be pre-transcluded and compiled as well - all we need to do is to call the linker.
If a profile does not inclide a remote server command, this means the user intended to use the default server command.
If a project is using Jasmine via the standalone distribution, this file can be customized directly.
If a reducer is returned, it be called to get the new state that will be pushed
If a remote directory path is a local `Directory` instance, the project path isn't yet ready for consumption.
If a resizer was clicked on, record which side is to be resized.
If a schema is provided, it will be used to validate.
If a second command is given, pipe stdout of first to stdin of second.
If a selector was specified, locate the right elements in a dummy div Exclude scripts to avoid IE 'Permission Denied' errors
If a state update triggers rerendering that in turn fires an onDOMReady, that second onDOMReady should not fail.
If a string URI/URL was given, parse it into a URL object
If a subsequent touch move exceeds the boundary of the element, it should unhighlight, but if that same touch is brought back within the boundary, it should rehighlight again.
If a task schedules additional tasks recursively, the task queue can grow unbounded.
If a task throws an exception, `flush` ensures that its state will remain consistent and will resume where it left off when called again.
If a test reaches its final state, it is not expected to do anything more
If a test run throws an exception, the stack trace is returned in 'details'.
If a value is specified as '' (empty string), the corresponding style property will be unset.
If a variable is not specified, place data values in local scope.
If a view model is actually stored in an observable, the corresponding binding context object, and any child contexts, must be updated when the view model is changed.
If a view with a given ID already exists in the side bar, attempting to register another view with the same ID has no effect.
If aRoot is a URL, then its path portion is updated with the result and aRoot is returned.
If aSourceFile is omitted, we will use the file property of the SourceMap
If absent, data will be extracted with the `defaultGetRowData` and `defaultGetSectionHeaderData` functions.
If absent, there is insufficient data to render the container.
If after some amount of time all pending tasks haven't finished, we force the process to end
If all else fails, guess that strings containing certain substrings meant to identify certain licenses.
If all else fails, try to use the default (severity only)
If all else fails, use Math.random().
If all nodes shouldn't have braces, make sure they don't.
If all of the children are needed it's easier to return as promise, to make the caller oblivious to the way children were fetched.
If all subscribers unsubscribe, it will unsubscribe from Atom's text events.
If all the fields are filled out, there are some additional checks we want to do.
If already relative, it will be assumed to be relative to process.cwd(), converted to absolute, and then processed.
If already resolving, error out
If already working, error out
If an AL is found, change the type of the European number to Arabic number.
If an L is found, then change the type of the European number to L.
If an `extends` property is defined, it represents a configuration file to use as a "parent".
If an array was passed in, assume that it is an array of form elements.
If an element has no children, React guarantees it will never re-render the element (which would wipe out the web component's work in this case).
If an error is thrown, a rejected Promise will be returned instead.
If an exception is encountered on the last trial, the exception is thrown.
If an existing element was found, just move it.
If an object, then it has "filename", "saveState", and "allowInlineConfig" properties.
If an onLayout event hasn't come in yet, then we skip here and assume it will come in later.
If an output file is specified, remove that argument.
If another error is encontered, it's thrown to be handled up the stack.
If any cells are in progress, then other updates are skipped because they will just be wasted work.
If any child was tracked then `field` will also be tracked
If any contain enums or booleans, they can be added and then combined
If any edges were missing data (resulting in a split query), then the entire original connection field must be tracked.
If any field in `patternNode` is unterminated (i.e. has no sub-fields), we treat the field as though it contains every descendant sub-field.
If any node should have or already have braces, make sure they all have braces.
If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate` is set, update the component.
If any of the children of this tree have conflicting binaries then we need to decline to install this package here.
If any of the items are arrays, then join them with a space.
If any of the params have a type that cannot be expressed, then we have to render a simple function instead of a detailed one
If any others are needed, simply add them here, or in their own files.
If any part of a line is indentation-locked, the whole line will be indentation-locked.
If any pending queries were subtracted, they will be added as dependencies and the query will only resolve once the subtracted query and all dependencies have resolved.
If any result were not transferred from child contexts, this sets the head segments to both cases.
If any save requests finished in the meantime, previousContents is not longer accurate.
If anyone ever complains about this, then I guess the strategy could be made configurable somehow.
If at least one of the diagnostics is an error rather than the warning, display the glyph in the gutter to represent an error rather than a warning.
If available, also call the original `console` method since that is sometimes useful.
If available, this will call `NativeModules.BugReporting.setExtraData(extraData)` after collecting `extraData`.
If backticks are expected or it's a tagged template, then this shouldn't throw an errors
If both are happening, we only set values for the transition and the gesture will catch up later
If both are present, tokenizedText is preferred.
If both are semvers, compare them
If both have versions, compare their versions using semver
If both nodes are subtypes of Expression, then we should be able to fill the location occupied by the old node with code printed for the new node with no ill consequences.
If both paths of the `try` block and the `catch` block are unreachable, the next path becomes unreachable as well.
If both targets are range, check that both have same higher cap
If both true, we wrap up the expression and use it as the event handler.
If cached this should be called only once
If callback is non-null, it will be used for error and load events.
If caption is included, add it to the array
If caption value is null or undefined, don't show a caption
If change and propertychange bubbled, we'd just bind to it like all the other events and have it go through ReactBrowserEventEmitter.
If clear is set to true, it will set the component to its initial state and re-fetch the images.
If concat is successful, we'll remove the segment at segmentIndex + 1 from the orderedSegments after all elements has been added to the segment at segmentIndex.
If concat is unsuccessful, nothing will be changed.
If connection fails using saved config, open connect dialog.
If containersByReactRootID contains the container we find by crawling up the tree, we know that this instance of React rendered the node.
If conv2 outputs current
If coordinating scrolling with keyboard movement, always* use these hooks instead of listening to your own global keyboard events.
If currentContents is null, it means that the file has not changed since it has been saved, so we can avoid piping the whole contents to the Flow process.
If data is available, append data to url
If default is null, make it '' so that it does not retry
If defaultFlags was provided and used, this will be set to true.
If dominator of the entry has already been set to root, then it can't propagate any further.
If duplicate labels prevent the nodes from rendering, this test will fail.
If duplicates have been added, than those do not count towards the size.
If either offset value has changed, set the values and emit the `change` event.
If either the owner or a `ref` has changed, make sure the newest owner has stored a reference to `this`, and the previous owner (if different) has forgotten the reference to `this`.
If empty sections are not desired to be rendered their indices should be excluded from sectionID object.
If enableForAllGrammars is true, it overrides the grammars in grammarScopes.
If enabled, skip leading hashbang line.
If encountered, nodes of these types should be either left alone or desugared into AST types that are fully supported by the pretty-printer.
If endpoints is an empty array, null them
If equal to Prism.languages, it can be omitted.
If error is EXDEV it means that we are trying to rename across different drives, so we copy and remove it instead
If event changes its type, use the special event handlers for the changed type
If expecting a statement and finding a slash operator, parse a regular expression literal.
If extractor is null, then the archive type is unknown
If false the user won't be able to interact with the control.
If false, disables auto-correct.
If false, it will get called only when the user saves.
If false, text is not editable.
If false, then unknown args are included in the _args array.
If false, then we are trying to unmarshal.
If firstChunk ends with colon remove it because we add it manually later.
If flags become true anew, reports the valid nodes.
If for some reason we lost a lot of frames (e.g. process large payload or stopped in the debugger), we only advance by 4 frames worth of computation and will continue on the next frame.
If force flag is used, bypass cache, but write to cache anyway
If force is specified, delete folder
If force latest is enabled, resolve to the highest semver version or whatever non-semver if none available
If formatCode exists, it'll be used if the editor selection isn't empty, or if it's empty but formatEntireFile doesn't exist.
If found, consume it, otherwise, raise an unexpected token error.
If function exists in stack trace, his length will be great than 0 If there is no known caller func we sent full stack trace
If function is part of array or object, comma can be put at left
If function is standalone, simple calculate indent
If gadget is at the top level "hiding" is kind of a murky concept but we'll take it to mean "close."
If getUrlForRevision() is available, add a single, top-level click handler for the gutter.
If given the client id for a range view, returns the canonical client id for the entire range.
If given tokens are not on same line, it's always `true`.
If global, leave it as-is.
If grouped in an Array, the `key` prop, falling back to array index
If grouped in an Object, the object key combined with `key` prop 2.
If gutter is destroyed by some outside force, ensure the gutter is not destroyed again.
If hostname is null or empty string, it returns a local service, otherwise a remote service will be returned.
If idom has already reached the root, it doesn't make sense to check other retainers.
If included, this will be used to verify that the edit still applies cleanly.
If index is negative, it should resolve relative to the size of the collection.
If initialLine is N, Atom will navigate to line N+1.
If interactive is auto (null), guess its value
If interactive is disabled, error out
If isFunction.check(from), and from is not a built-in constructor, assume from is a binary predicate function we can use to define the type.
If it  ncounters a node that is not in `cachedRecords`, it will queued that node by adding it into the `pendingNodeStates` list.
If it could retry, we don't want to log because it just means the server is busy and we don't want to wait.
If it couldn't retry, it means there was a legitimate error.
If it does not exist, temporarily create it and initiate a fetch.
If it does not reject, then this function will return a rejected Promise.
If it doesn't exist, then just mark the lack of results
If it fails to read, invalidate the in memory cache for the source and delete the entry directory
If it fails, call onFetchFailure
If it finds one, return a terminal link function.
If it goes to 0, then the parent also detaches itself and so on.
If it has a different kind of operator we force it into a new scope.
If it has an argument, it peeks that much farther ahead.
If it has the same kind of operator we do not need to open a new scope.
If it has too many configs, we will only use the most basic of the possible configurations.
If it is a directory we want to create a file inside that directory
If it is a pre-release it will bump up to the same patch version.
If it is a text node, use a range to retrieve the coordinates.
If it is a widget, simply get the box for the whole widget.
If it is an assignment expression, it resolves to the right hand side.
If it is called when not inside of an emitting cycle it will throw.
If it is just whitespace and punctuation, ignore it (this keeps us from eating leading dots).
If it is not, this is the empty array and our base case.
If it is present then `id` would be added as a requisite field.
If it is supplied (and not null/undefined), the rendered options will not update in response to user actions.
If it is zero, then the point is the same side as the South pole.
If it is, then it's the level below where its installed.
If it isn't, then it'll simply be ignored
If it receives a jQuery object, the first element is used
If it returns true, the `edges` and `page_info` fields will be filtered out.
If it satisifes the range it is not outside
If it wasn't returned, this means its status may have changed, in which case it should be removed from the hgStatusCache.
If it's IfStatement's or ConditionalExpression's, this is `"test"`.
If it's a GitHub repository, return the specialized resolver
If it's a call to StyleSheetPropType, do stuff
If it's a call to deprecatedPropType, do stuff
If it's a clone we swap any requests for any of the urls we're mocking with the path to the bare repo
If it's a local directory, it must be loaded with packages activation.
If it's a remote directory, it should come on a path change event.
If it's a semver target, compare using semver spec
If it's a spacebar character, assume that we have already handled it at the keypress level and bail immediately.
If it's a symlink, and we're in a globstar, then stop
If it's a symlink, then treat it as the target, unless the target does not exist, then treat it as a file.
If it's absolute, then we don't bother searching the pathenv.
If it's active, the computed is stored in the context object.
If it's determined that a component should not update, we still want to set props and state but we shortcut the rest of the update.
If it's going to end after it starts, it's empty.
If it's inside of a group, OK if either operand is modified.
If it's negative, it counts from the back.
If it's not a symlink or a dir, then it's definitely a regular file.
If it's not one of these, we won't treat it as an image.
If it's not, then it's likely a mistake so we'll warn you to use the static property, property initializer or constructor respectively.
If it's the only child, treat the name as if it was wrapped in an array so that it's consistent if the number of children grows.
If iterable.size is undefined, the size of the realized sliceSeq is unknown at this point unless the number of items to slice is 0
If jumping to earlier lines, reset columns to the ends of those lines.
If jumping to later lines, reset columns to the beginnings of those lines.
If lastRow is changing, reset so we can call onEndReached again
If left empty, the icon will be tinted in blue.
If liberal is false, it checks whether a gutter or scrollbar was clicked, and returns null if it was.
If listening to data, and it has not explicitly been paused, then call resume to start the flow of data on the next tick.
If localDirectory is not within a Git repo, the Promise rejects.
If localDirectory is not within an Hg repo, the Promise rejects.
If location is not provided the node's start location will be used.
If locations0 is not empty, then relocate and continue listening for touchmove and touchend.
If markers don't include `"*"`, it's added automatically for JSDoc comments.
If markers don't include `"*"`, this adds `"*"` to allow JSDoc comments.
If merging Arrays, a merge strategy *must* be supplied.
If message parsing fails, then our contract with HHVM is violated and we need to kill the connection.
If metadata fields but not edges are fetched, diff as a normal field.
If mimeType is non-null and no Accept header is set, a default is used.
If multiple calls were done asynchronously, then return the single-created HackLanguage.
If names is an empty array, null them
If native `textInput` events are available, our goal is to make use of them.
If necessary, it will remove all items that this object previously registered with Atom's ContextMenuManager.
If needed, determine the center from the current extent.
If negating, then just one match means that we have failed.
If new classes are needed, you should re-execute `createHierarchyRenderer` with the same arguments.
If newNode.original node was set to null, reprint the node.
If nextProp is not a function, then don't bother changing prevProp since nextProp will win and go into the updatePayload regardless.
If no argument is given, return whether or not list has callbacks attached.
If no blame information is available, returns an empty Map.
If no characters are being inserted, no BeforeInput event should be fired.
If no column is provided, returns all mappings corresponding to a either the line we are searching for or the next closest line that has any mappings.
If no command was specified, show bower help Do the same if the command is unknown
If no cursor is present, items are added to the very first segment.
If no cursor is present, items are added to the very last segment.
If no data passed, it means the user aborted
If no default config is provided and no configuration can be found in the directory hierarchy an error will be thrown.
If no descendant has the necessary dataset to create this menu item, don't create it.
If no digit follows the ".", then the precision should be zero.
If no document and documentElement is available, return
If no extra information was requested, resolve simply with the versions
If no file (or directory) at the specified path exists, creates the parent directories (if necessary) and then writes an empty file at the specified path.
If no location is provided, return the complete Lines object.
If no main was specified, fallback to canonical dir
If no names are passed, grab all links
If no names were specified, update every package
If no necessary `.name` descendant is found, don't display a context menu.
If no nodeType, this is expected to be an array
If no options, return null
If no precision is specified for r, fallback to general notation.
If no properties have been added, then we can bail out quickly on object equality.
If no properties were found, the returned array will be of zero length.
If no reducer is returned, no action will be taken
If no render has yet happened, use the last stored length in the state (likely the default).
If no selection is done, then, the whole file is wanted to be formatted.
If no such Promise is produced, then the Promise returned by this function will resolve to null.
If no such URL exists, returns null.
If no timeout duration is provided
If no transport, we auto-abort
If no updatePayload is provided, a new one is created and returned if anything changed.
If no valid response is found, an exception is thrown.
If no value is specified, return the first value.
If no variables changed, the same object is returned.
If nobody prevented the default action, do it now
If node is something like a window, document, or text node, none of which support attributes or a .getAttribute method, gracefully return the empty string, as if the attribute were missing.
If non interactive or user forced, bypass confirmation
If none exist, we do not extract events.
If none found, seek a pair
If none is provided, the Progressbar will render in `indefinite` mode.
If not a block statement, make sure the consequent isn't a ReturnStatement or an IfStatement with returns on both paths.
If not a stateless component, we now render
If not a target/resolved, add as target
If not focused, move the scene to the far away.
If not found, look inline.
If not given, positional args will use Bash's 'default' completion.
If not given, the curve's base point is used.
If not global, then set the user to the owner of the prefix folder.
If not provided, all this function will do is remove a leading slash.
If not provided, it's assumed that the keys of dataBlob are the section identities.
If not provided, it's assumed that the keys of the section data are the row identities.
If not provided, the default action is to simply append the output of the process to the view.
If not provided, the default cli options will be used.
If not provided, the function appends instead.
If not provided, the query will be inferred from the optimistic response.
If not recursing update to navigator at all, may as well avoid computation of navigator children.
If not skipped, this never becomes true after a loop.
If not supplied, metadata on the parent record and any connections without entries in `rangeBehaviors` will not be updated.
If not then close the new socket.
If not, add it as a true ancestor.
If not, an exception will be thrown.
If not, check if source is a valid Subversion repository
If not, check if source is a valid file/folder
If not, display it above the glyph rather than below it.
If not, it is likely the caller's fault.
If not, methods calling randombytes will throw.
If not, the ** "swallows" a segment, and try again.
If not, then assume it's something that'll be compiled, or some other sort of script, and just call it directly.
If not, this is a plain composition event and we have nothing special to extract.
If not, use the fallback JS implementation.
If nothing changed, bail.
If nothing is responder, then the negotiation should propagate directly to the deepest target in the second touch.
If nothing matches, device scale is larger than any available scales, so we return the biggest one.
If nothing to install, skip the code bellow
If nothing was found internally, try to fetch any data from the HTML5 data-* attribute
If null, no item is initially selected.
If offline flag is used, use directly the cached one
If offline, resolve using the cached versions
If omitted, SourceMapConsumer's file property will be used.
If one exists, make sure it is a valid "reactRoot" ID.
If one is stopped, stop all.
If one of the callbacks throw an error, the execution will be aborted and the returned promise be rejected with the thrown error.
If one of the targets is range and other is version, check version against the range
If one of them are semvers, give higher priority
If one of them has a version, it's considered higher
If only one main file, use a string Otherwise use an array
If onlyOnce was true, do not add if already traversed
If option is enabled, start timing latency of keys on the new text editor.
If options is set to true, use defaults
If other error, then fail.
If our lower bound is less than our upper bound, we (1) partition the array into two pieces and (2) recurse on each half.
If output isn't verbose, hide prereleases
If owning frame has navigated to somewhere else window properties will be undefined.
If package.json exists, use it's values as defaults
If packages is an empty array, null them
If parsing actually alters the URL, it is almost certainly an scp-style URL, or an invalid one.
If passed a function, it will be called when the user taps 'OK'.
If passed a function, it will be called with the prompt's value when the user taps 'OK'.
If passed an array of button configurations, each button should include a `text` key, as well as optional `onPress` and `style` keys (see example).
If passed an array of button configurations, each button should include a `text` key, as well as optional `onPress` and `style` keys.
If passed with arguments, sets the value and returns the target.
If passes an `Error` object, it will print the message and stack.
If path is null, empty or undefined, then return the connection which matches the hostname and ignore the initial working directory.
If performUpdateIfNecessary happens to enqueue any new updates, we shouldn't execute the callbacks until the next render happens, so stash the callbacks first
If pos.column does not exceed the indentation amount, then there must be only whitespace before it.
If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)
If possible, select the file.
If possible, use a WeakMap.
If present scriptRegex must be a valid RegExp.
If present, add cb, and return.
If present, the statements will be appended to its body instead of creating a new node.
If prev can be converted to accepted input
If previous comparison failed, it would have stopped execution
If previous iteration zeroed out, double until we get *something* Use a string for doubling factor so we don't accidentally see scale as unchanged below
If promise1 later resolved, the first callsite would receive an 'outdated' status.
If property `borderless` evaluates to true the ripple will render outside of the view bounds (see native actionbar buttons as an example of that behavior).
If provided, this option will be passed along to the source map generator as a root directory for relative source file paths.
If quotmark is set to 'double' warn about all single-quotes.
If quotmark is set to 'single' warn about all double-quotes.
If quotmark is set to true, remember the first quotation style and then warn about all others.
If records are added while we're scrolled to the bottom (or very very close, at least), automatically scroll.
If records were collected there would be insufficient data in the cache to render.
If recursion is found the chain of types which recursively contain each other is reported.
If relative, it is relative to the SourceMapConsumer.
If reload happens before the timeout, the flag will be already unset and the timeout callback won't change anything.
If request was aborted inside a prefilter, stop there
If requested otherwise, cap the offset at 0 minimum to avoid content shifting down.
If resolution is a commit, we need to clone the entire repo and check it out Because a commit is not a named ref, there's no better solution
If resolveValues consist of only a single Deferred, just use that.
If resolved to a target that is not a version, remove the version from the meta
If resolved to a version, there is new content if the tags are not equal
If resolver doesn't define versions function, it's not targetable..
If restoring state, then the project already exists with local directory and wrong repo instances.
If returning `false`, results from the provider will only be shown in the OmniSearch result list.
If returning `true`, the provider should also provide the `getPromptText` and `getTabTitle` methods.
If root flag is set, don't consider file if it is above root
If rule uses fix, has metadata, but has no metadata.fixable, we should throw
If seed is empty or no tokens remain, we can return early
If segment has null cursors, retrieve whole range.
If selector defined, determine special event api type, otherwise given type
If self.tunnelOverride is set (the user specified a value), use it.
If set returns undefined, fall back to normal setting
If set to false, ::addEvent becomes a no-op.
If set to false, the picker will be disabled, i.e. the user will not be able to make a selection.
If set to true it renders the image as original, it defaults to being displayed as a template
If set to true, it can.
If set, the left header button image will appear with this source
If set, the left header button image will appear with this source.
If set, the left header button will appear with this name
If set, the left header button will appear with this name.
If set, the right header button image will appear with this source
If set, the right header button will appear with this name
If set, this replaces the pin or custom pin image.
If shift is held or the extend flag is set, extends a range to include a given position (and optionally a second position).
If shift is held, this will move the selection anchor.
If showIfHidden is false, this will enqueue a pending reveal to be executed when the file tree is shown again.
If smarttabs option is on, ignore tabs followed by spaces.
If so, collapses the top of impliedEvalAncestorsStack and reports on the original CallExpression.
If so, it sets this.charLength to the byte length that character, and sets this.charReceived to the number of bytes that are available for this character.
If so, return success.
If so, return the marker for that span.
If so, then if the two path lengths are equal OR if the next character in the path to check is a path separator, then we know the checked path is in this path.
If so, those relative source paths need to be rewritten relative to the SourceMapGenerator.
If so, we should just stop immediately.
If something failed, reject the whole resolve promise with the first error
If something the target.path links to was what was found, just remove target.path in the location it was found.
If something went wrong, also extend the error
If something went wrong, unset the temporary dir
If source is ./ or ../ or an absolute path
If source map exposed in inline mode, we can easy fix some potential issues.
If spaced is "always", then check whether option is set to false.
If spaced is "never", then check whether option is set to true.
If specific segment is the looped segment of the current segment, skip the segment.
If specified, overrides hint.
If specified, this object will be the value of `this` every time that `aCallback` is called.
If startAtZero is set, then this is useless, and we want to return 0.
If stat fails, it is expected to return ENOENT
If static-only, then we don't need to pass the type hint params since we're not going to do any dynamic checking.
If status code is not in the 2xx range, then just resolve to true
If status is an error, content is likely to be of an inconsistent type, as it's going to be an error message.
If subdirs is an empty array, then simply search in directory.
If successful, handle type chaining
If successful, open the URL for the revision.
If target is '*' check if there's a cached '_wildcard'
If target is a range, check if resolved version satisfies it
If target is a semver, find a suitable version
If target is a version, compare against the resolved version
If target is a wildcard, simply return true
If target is omitted, writes into ajaxSettings.
If target was specified, error out
If target was specified, simply reject the promise
If that fails, it returns the line with the smallest indentation, which tends to need the least context to parse correctly.
If that happens, re-invoke the method against context.visitor.
If that is not the case we return 0 matches, which will trigger the default bash complete.
If that resulting state will trigger a _read, then call _read.
If that's a problem, you should create and fresh instances instead.
If that's the case go ahead and break the scope.
If the ALT key is down when starting a brush, the center is at the mouse.
If the ALT key is pressed, then preserve the center of the extent.
If the DbgpProperty represents an empty array or object, the `pagesize` and `numchildren` will be omitted so we handle this "zero" case specially.
If the Flow server fails we will not try to restart it again automatically.
If the GET is part of a write operation (PUT or DELETE), then skip past the cache entirely, but still save the results.
If the NSM is at the start of the level run, it will get the type of sor.
If the RNG is correct, each test in this suite will pass with probability at least P.
If the React component was previously rendered into `container`, this will perform an update on it and only mutate the DOM as necessary to reflect the latest React component.
If the React root view is embedded in another native view, this will give you the absolute coordinates.
If the Set of selected items is new, like when navigating the tree with the arrow keys, scroll the first item into view.
If the _sourcesContents map is empty, set the property to null.
If the `default` label is not at the last, we must make a path from the last `case` to the `default` chunk.
If the `displaySize` param is not specified, this has no effect.
If the `extends` path is relative, use the directory of the current configuration file as the reference point.
If the `hg diff` call fails, this method returns null.
If the `idOfCurrentlySelectedItem` is null, this means there is no item selected.
If the `others` array does not includes the given segments, adds to the `all` array as well.
If the `value` prop is not updated, the component will continue to render the supplied `value` prop instead of the expected result of any user actions.
If the active directory is removed, fall back to the default.
If the active text editor has no path, bail because there's nowhere to run tests.
If the anchor/focus nodes and offsets are the same, the range is collapsed.
If the area-weighted centroid is undefined, fall back to length-weighted centroid.
If the array has already been sorted, you have the option of using a faster algorithm.
If the array is large and already in sort order, pass `true` for **isSorted** to use binary search.
If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.
If the axis is oriented the same way as the split, and the container that we're going to add our item to isn't split itself, return an existing pane.
If the axis isn't in the same direction as the split, things get tricky.
If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**), we need this function.
If the buffer is modified while it is being iterated, an Error will be thrown.
If the callback instead removes the nodes right away, it would be more efficient to skip reordering them.
If the callback needs to know the value of i, call path.getName(), assuming path is the parameter name.
If the callback returns `false`, traversal is stopped.
If the change is before the event, the event's positions are updated.
If the change touches the same lines as the event, the event, and everything 'behind' it, is discarded.
If the child view model also depends on the parent view model, you must provide a function that returns the correct view model on each update.
If the class is defined in the scopeChain, export that instead.
If the click did not happen on the dialog or on any of its descendants, the click was elsewhere on the document and should close the modal.
If the code includes a valid, prologue position strict mode pragma, execute code by injecting a script tag into the document.
If the codes for two points are different, or are both zero, and there this segment intersects with the small circle.
If the comment is a //-style comment and indented more deeply than the node itself, reconsider it as trailing.
If the commits haven't changed ids, then thier diff haven't changed as well.
If the connection does not match the given pid/idekey/path then close the connection and continue waiting for a match.
If the connection is not in `rangeBehaviors` or we have explicitly set the behavior to `refetch`, re-fetch it.
If the connection isn't present (because it wasn't in the fat query or because it didn't survive query intersection), validation is skipped.
If the connection matches the given pid/ideky/path then resolve with the connection and stop listening for new connections.
If the consequent is an IfStatement, check to see if it has an else and both its consequent and alternate path return, meaning this is a nested case of rule violation.
If the content type is 'x-git', then the server supports shallow cloning
If the context is a for-in/of loop, this effects a break also.
If the context is reference-equal to the old one, pass down the same processed object so the update bailout in ReactReconciler behaves correctly (and identically in dev and prod).
If the cropping process is successful, the resultant cropped image will be stored in the ImageStore, and the URI returned in the success callback will point to the image in the store.
If the current running animation is stopped, no following animations will be started.
If the cursor has moved the highlighted ranges we just computed are useless, so abort
If the data won't fit nicely in a simple header, then generate the appropriate extended header file, and return that.
If the data, order, and number of resolved records has not changed since the last call to `resolve`, the same array will be returned.
If the datatip was moved, push the effects of mouseUp to the next tick, in order to allow cancelation of captured events (e.g. clicks on child components).
If the debugger is still paused then, we continue.
If the destination is HTTPS, tunnel.
If the determinant is -1, then negate the matrix and the scaling factors.
If the directory does not exists, resolve as an empty array
If the directory is not part of a Mercurial repository, returns null.
If the dropdown was changed so that selection is no longer the same, notify the value or selectedOptions binding.
If the duration isn't a number
If the edge version comparator has a operator then our version isn't outside it
If the editor of the new location matches the current location, then the current location is updated, otherwise a new entry is pushed.
If the editors don't match then push a new top.
If the element has a class name or if we're passed "false", then remove the whole classname (if there was one, the above saved it).
If the endpoint is marked as newly, make it unresolvable
If the error is handled, all subsequent tasks will resume.
If the error is handled, then we abort if not, we threw out of here
If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.
If the event did not happen on the `name` span, search for it in the descendants.
If the exact position the target in the file cannot be determined position property of the target location will be set to null.
If the expected value is a Date object, the actual value is equivalent if it is also a Date object that refers to the same time.
If the expression is an identifier, it is resolved in the scope chain.
If the feature has zero length, fall back to arithmetic mean of point vectors.
If the feature is explicitly enabled or disabled, then the config value will be set regardless of when `atom.config.get` is called.
If the feature still has an undefined centroid, then return.
If the fetch indicated that some children were removed - dispose of all their subscriptions
If the file didn't exist on the previous revision, return empty contents.
If the file does not exist, then ENOENT will be thrown.
If the file ends in /, then it can only match a a pattern that ends in /, unless the pattern just doesn't have any more for it.
If the file is currently open, create a marker.
If the fill character is "0", grouping is applied after padding.
If the fill character is not "0", grouping is applied before padding.
If the first and last points of a segment are coincident, then treat as a closed ring.
If the first instance of the connection passes validation, all will.
If the first non-whitespace character is not '*'.
If the flex scale is zero, the container isn't expanded.
If the focused crumb is the first child, pick the farthest crumb that is still hidden.
If the found-month flag is not set and the date-token matches the month production, set the found-month flag and set the month-value to the month denoted by the date-token.
If the found-year flag is not set and the date-token matches the year production, set the found-year flag and set the year-value to the number denoted by the date-token.
If the function accesses any obsevables (or is itself an observable), the dependency is tracked, and those observables can later cause the binding context to be updated.
If the fx queue is dequeued, always remove the progress sentinel
If the gadget isn't in the workspace, create it.
If the gesture can end and restart during one continuous touch
If the given AST Node is a string literal, return its literal value.
If the grid node has the same sorting as previously, then there is no point in sorting it again.
If the grid node is collapsed, then don't sort children (save operation for later).
If the histories were shared, split them again
If the id is has an index and is not deleted
If the identifying value is null or undefined, the supplied callback will be invoked once.
If the image cannot be loaded/downloaded, the failure callback will be called.
If the index hasn't been set, return the index as-is.
If the index of `child` is less than `lastIndex`, then it needs to be moved.
If the input is a non-prerelease version, this acts the same as prepatch.
If the input length is not a multiple of the count, it'll fill the last array with null so you can display a placeholder.
If the instance doesn't have a list of notifiers yet, create one.
If the item is a placeholder, try to replace it.
If the item isn't in a hidable container (i.e. it's a top-level pane item), we're done.
If the jsbundle is running from a sideload location, this resolves assets relative to its location E.g. 'file:///sdcard/AwesomeModule/drawable-mdpi/icon.png'
If the key on the original is valid, then the clone is valid
If the last code path segment is reachable, there are paths which are not returned or thrown.
If the last line has changes, JsDiff doesn't return that.
If the last result had fixes, we need to lint again to me sure we have the most up-to-date information.
If the last suggestion had multiple ranges, we have no choice but to fetch suggestions because the new word might be between those ranges.
If the leading space contains newlines, then replace it with just that many newlines, sans all other spaces.
If the leading space contains no newlines, then we want to preserve it exactly as we found it.
If the left.value is not "new", or the left.first.value is a "." then safely assume that this is not "new Array()" and possibly not "new Object()"...
If the line has only whitespace, and skipBlankLines is true, don't report it
If the location is below, this judges `this` is valid.
If the loop was nested, this returns the most outer loop.
If the lowest version comparator has an operator and our version is less than it then it isn't higher than the range
If the max line changed since it was last measured, measure it, and ensure the document's width matches it.
If the message includes a leading line number, strip it:
If the messages are from the same file (`filePath` is equal and `localeCompare` returns 0), compare the line numbers within the file to determine their sort order.
If the method failed to interpret the process arguments show the command help
If the module is required by ANY non-top level package then we don't want to include this.
If the module isn't installed above us yet, that'd be the very top.
If the mouse is currently over the element, we want to trigger the new popup to appear.
If the name is already defined in the current function, but not as outer, then there is a scope error.
If the name is defined in an outer function, make an outer entry, and if it was unused, make it var.
If the name was guessed
If the name was guessed, remove the trailing .git
If the network activity indicator should be visible.
If the new origin is within the tail, then we do not need a root.
If the new tasks contain the one we were waiting to restore from the user's previous session (or we have no active task), make it the active one.
If the newly selected build system is the one we were waiting to restore from the user's previous session (or we have no active build system), make it the active one.
If the next active element (`event.relatedTarget`) is not a descendant of this modal, close the modal.
If the next argument looks like it might be an argument for this option, we pass it on.
If the node and offset values are the same, the selection is collapsed.
If the node extends beyond its last token, get the token before the next token
If the node has any comments, their locations might contribute to the true start/end positions of the node.
If the node is a generator function, end counting `yield` keywords, then reports result.
If the node is a generator function, start counting `yield` keywords.
If the node is an export declaration and its .declaration has any decorators, their locations might contribute to the true start/end positions of the export declaration node.
If the node was collapsed, deselect its descendants so only nodes visible in the tree remain selected.
If the nodes are siblings, we can do a quick check
If the number of servers is even, an additional member will be added to the set as an arbiter process.
If the object has a `Symbol.iterator` method we just call that.
If the object has no corresponding Def, the callback will never be called.
If the original instance is already gone, we don't have to dispatch any events.
If the outline view has focus, we don't want to re-render anything.
If the package has no dependants or the force config is enabled, mark it to be removed
If the parent and child instances have a common owner ancestor, start with that -- otherwise we just start with the parent's owners.
If the parent context is watching any obsevables, the new child context will automatically get a dependency on the parent context.
If the parent node has type DeclareExportDeclaration, then it will be responsible for printing the "declare" token.
If the parent node is an export declaration, it will be responsible for printing node.decorators.
If the platform returns a non-empty PATH, use it.
If the point at this leaf node is at the same position as the new point we are adding, we leave the point associated with the internal node while adding the new point to a child node.
If the preceding token was a descendant combinator, insert an implicit any-element `*`
If the predicate returns a non-null value it signifies that the handling of the sub-branch is complete and the descent to children is not performed.
If the prepareStackTrace is already been hooked, just return it.
If the previous cache headers contain an ETag, send the "If-None-Match" header with it
If the progress bar will show indeterminate progress.
If the property is optional, it's okay for it to be missing.
If the property name is dynamic, this returns an empty string.
If the provider is renderable and specifies a keybinding, wire it up with the toggle command.
If the query could initially trigger a skip then fail, still treturn a result.
If the range isn't defined, you can post-process.
If the record is in the store, gets a version of the record in the store being used for writes.
If the remainder of attribute-value contains a non-DIGIT character, ignore the cookie-av."
If the remote connection goes away, it won't be possible to stop tests.
If the remote directory hasn't yet loaded.
If the remote-projects package hasn't loaded yet remote directories will be instantiated as local directories but with invalid paths.
If the request had a :: in it, it's a full name, so we should compare to the name of the result in that format.
If the resolutions is empty, delete key
If the response content is being decoded, the Content-Encoding header of the response doesn't represent the piped content, so don't pass it.
If the response is the whole package info, the package meta is under the "latest" property
If the result is not NaN, then the callback is called with the product.
If the result is smaller than 25 lines, ensure that it is a single leaf node.
If the returned subscription is disposed, the Atom commands will be removed.
If the root call has no arguments, the result array will contain exactly one element.
If the rule has too many possible combinations, only take simple ones, avoiding objects.
If the rule is recommended, set it to error, otherwise disable it
If the selection is a single file or a single collapsed directory, the selection is set to the directory's parent.
If the selection is already collapsed or it's not a container, select its parent.
If the server is currently compiling, all other requests will automatically return null (unless the `blocking` parameter is explicitly provided).
If the server parameter is an array, its length will determine the number of nodes in the replica set.
If the server responded with 303 then the resource still has the same ETag
If the server's certs has been updated or there is no previous successful connection, null (resolved by promise) is returned.
If the side bar became visible or if it was already visible and the active view changed, call the next active view's `onDidShow` so it can respond to becoming visible.
If the simple way fails, read from inside an iframe
If the size has been reduced, there's a chance the tail needs to be trimmed.
If the specified URI does not match an image in the store, the failure callback will be called.
If the state of the CircularBuffer changes while it is being iterated, it will throw an exception.
If the statement does not start with a statement keyword or a brace, it's an ExpressionStatement or LabeledStatement.
If the status bar is hidden.
If the status bar is translucent.
If the statuses were fetched for only changed (`hg status`) or ignored ('hg status --ignored`) files, a queried file may not be returned in the response.
If the stream is completed timeout will not return its default value and we will see an EmptyError.
If the supplied fragment builder produces an invalid node (e.g. the wrong node type), these will return `undefined`.
If the target is in a managed directory and is in a symlink, but was not in our parent that usually means someone else installed a bin file with the same name as one of our bin files.
If the task threw an error, we do not want to exit the domain here.
If the task throws an exception (presumably) Node.js restores the domain stack for the next event.
If the term ends in a word character (a-z0-9_), ensure a word boundary at the end, so that substrings do not get falsely matched.
If the term starts or ends with non word characters, then the match will not require word boundaries on that side.
If the test runner is debuggable, and the user has checked the box, then we will launch the debugger before running the tests.
If the test runner panel is not rendered yet, ensure it is rendered before continuing.
If the text is more than one word but does not terminate with period, add the period.
If the toolbar has an only child, it will be displayed between the title and actions.
If the toolbar is currently hidden for some reason, then toolbarNode will be null.
If the touch target is the sibling item, the negotiation should only propagate to first common ancestor of current responder and sibling (so the parent).
If the trailing space contains newlines, then replace it with just that many newlines, with all other spaces removed.
If the trailing space contains no newlines, then we want to preserve it exactly as we found it.
If the transition between status bar property changes should be animated.
If the transition is enabled
If the two's complement value is positive, then we're done, as it's equivalent to the unsigned representation.
If the type is parameterized, we send the parameters as an optional fourth argument.
If the type resolves to an alias it returns the alias's definition.
If the update contains messages at a scope that already has messages from this provider in the store, the existing messages will be overwritten by the new messages.
If the upper function is IIFE, checks the destination of the return value.
If the user (while pressing) moves back into the `PressRect` `touchableHandleActivePressIn` will be invoked again and the mixer should probably highlight the `VisualRect` again.
If the user clicked on a ChangeSet ID, extract it from the DOM element via the data- attribute and find the corresponding Differential revision.
If the user decided to skip it, remove from the array so that it won't influence subsequent dependants
If the user dismissed the dialog, the Promise will still be resolved with action being `DatePickerAndroid.dismissedAction` and all the other keys being undefined.
If the user dismissed the dialog, the Promise will still be resolved with action being `TimePickerAndroid.dismissedAction` and all the other keys being undefined.
If the user has already committed, most of the times, he'd be working on an amend.
If the user has cancelled the test run while control was yielded, we should not run the test.
If the user has manually shown any provider they have probably forgotten they are in distraction-free mode, and intend to enter it.
If the user is pressing either the meta/ctrl key or the alt key.
If the user presses the enter key, confirm the selection.
If the user requested help, show the command's help Do the same if the actual command is a group of other commands (e.g.: cache)
If the user specified a timeout delay.
If the user types a colon outside of a method call, it searches the entire buffer.
If the user unpiped during `dest.write()`, it is possible to get stuck in a permanently paused state if that write also returned false.
If the user's input matches this string (meaning the user hasn't changed it), the user's input will not be saved as part of the profile.
If the v8 output changes, then remove this test.
If the value does not exist, adds it.
If the value exists, deletes it.
If the value is a string, we pull it from the instance's methods by name.
If the value of this path is some child of a Node and not a Node itself, then it doesn't need parentheses.
If the values of existing properties are changed, the value passed to `callback` will be the value at the time `mapObject` visits them.
If the version doesn't match, the server is automatically killed and the client returns 9.
If the view is already visible in the side bar, nothing will happen.
If the visitor returns false, the object's children are not traversed.
If the year-value is greater than or equal to 0 and less than or equal to 69, increment the year-value by 2000.
If the year-value is greater than or equal to 70 and less than or equal to 99, increment the year-value by 1900.
If there are any globally-active touches remaining, remove the ended touches from locations0.
If there are below, it cannot replace with arrow functions merely.
If there are both semver and non-semver, there's no way to figure out the suitable one
If there are functions bound, to execute
If there are multiple providers for a given grammar, the one with the highest priority will be used.
If there are multiple text editors for this path, one is chosen arbitrarily.
If there are multiple valid discriminant fields, we just pick the first.
If there are no children, more than one, or if it's not a text node, we'll clear everything and create a single text node.
If there are no children, that's fine, just return
If there are no errors: a.
If there are no matched entries, then nothing matches.
If there are no more packages being fetched, finish the resolve process (with an error)
If there are no more packages being fetched, finish the resolve process by dissecting all resolved packages
If there are no new contents, resolve to the cached one
If there are no params needed, returns null.
If there are no params to pass to the body, then don't wrap the body function.
If there are no pending requests just destroy the socket and it will get removed from the pool.
If there are no quasi elements, then there is nothing to fix.
If there are no range calls on the supplied `node`, then a call-less connection ID (eg.
If there are no tags and target is *, fallback to the latest commit on master
If there are no tags and target is *, fallback to the latest commit on trunk
If there are no tasks, just show "Run" (but have it disabled).
If there are not enough substitutions for the current substitutionIndex just output the format specifier literally and move on.
If there are one or more projects set previously, this replaces them all with the one(s) provided as the argument `projectPath`.
If there are only non-semver ones, the suitable is elected only if there's one
If there are only semver ones, figure out which one is compatible with every requirement
If there are options and the selected index is out of bounds, default to the first item.
If there are profiles, pre-fill the form with the information from the specified selected profile.
If there are still any unknown options, then we simply die, unless someone asked for help, in which case we give it to them, and then we die.
If there are test runners, start with the first one selected.
If there are too many breakpoints in a storage, it is likely due to a recent bug that caused periodical breakpoints duplication leading to inspector slowness.
If there aren't any options, don't select anything.
If there has been existing heartbeat error/warning, that means connection has been lost and we shall show a message about connection being restored without a reconnect prompt.
If there have only been optional params so far, and this one is optional, add it to the list of trailing optional params.
If there is a declaration and the kind is 'type', the declaration must be a type alias of some sort which already includes the word 'type'.
If there is a future need to detect specific versions of IE10+, we will amend this.
If there is a hex code of the error, display only this.
If there is a key conflict we throw.
If there is a limit on line length, warn when lines get too long.
If there is allocation info parse it, otherwise jump straight to strings.
If there is already a '_' parameter, set its value
If there is already an open form, don't open another one.
If there is an error spawning the command, reject the promise
If there is any problem parsing just fall back on the original string
If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
If there is no 'error' event listener then throw.
If there is no closing brace, make the node span to the start of the next token (this is useful for Tern)
If there is no decimal, break on "e" where appropriate.
If there is no error attached to loggingEvent.data, we create a new error and append it to loggingEvent.data, so that we could get stack information which helps categorization in logview.
If there is no more remaining, then stat(PREFIX) and add to matches if it succeeds.
If there is no native Symbol nor polyfill, then a plain number is used for performance.
If there is no path component, this is the empty string.
If there is no pkgMeta, resolvedVersion is downloading now Check based on target requirements
If there is no record containing the time than use the latest one before that time.
If there is no response object created one (without command).
If there is no result directory (probably a new overall benchmark run), create it.
If there is no result file (probably the first iteration of a new benchmark), create it.
If there is no running test suite, fill the progress bar because there is no progress to track.
If there is no token before `return`, then we expect no line break before the return.
If there is not the `test` part, the `body` path comes from the `init` part and the `update` part.
If there is nothing to track, the computed will be inactive, and we can safely throw it away.
If there is only one active touch, we remember its location.
If there is only one config that results in no errors for a rule, we should use it.
If there is samples array parse it, otherwise jump straight to strings.
If there is the "default" chunk before other cases, the order is different between node's and running's.
If there is, we cancel the timer and do not consider this a panel switch.
If there isn't a next token, the desired token is the last one in the array
If there was a parameter which is named "arguments", the implicit "arguments" is not defined.
If there was an error, invalidate the in-memory cache, delete the cached package and try again
If there was no race - it's a noop.
If there was no visitor method to call, visit the children of this node generically.
If there was somehow another popup for this gutter item, dispose it.
If there were no args and we have unknown options, then they are extraneous and we need to error.
If there's a baseUrl, then use it as the base URL (i.e. uri must be specified as a relative path and is appended to baseUrl).
If there's a beforeRemove callback, call it after reordering.
If there's a parsing error, nothing else can happen.
If there's a problem with the stat, then it means that one or more of the links in the realpath couldn't be resolved.
If there's a remainder, just add whatever is left
If there's an error, removes the temp file.
If there's another comment, repeat check for blank line
If there's more *pattern* left, then
If there's more than one initial capital letter, lower-case all but the last one, so that XMLDefaultDeclaration (for example) becomes xmlDefaultDeclaration.
If there's native implementation of given symbol, let's fallback to it to ensure proper interoperability with other native functions e.g. Array.from
If there's no component for this item, it isn't a gadget.
If there's no gadget registered with the provided ID, abort.
If there's no package in the cache
If there's no path yet, get the path from the active `TextEditor`.
If there's no such element (i.e. all elements are smaller or equal to the specimen) returns right bound.
If there's no such element (i.e. all elements are smaller than the specimen) returns right bound.
If there's not enough space for the id, adjust it for subsequent logs
If there's not text, use a space to make sure the row doesn't collapse.
If there's nothing to resolve, simply dissect
If there's only one initial capital letter, just lower-case it.
If these contain complex data structures this mixin may have false-negatives for deeper differences.
If these expectations are not met, then `verify()` must throw an exception.
If these records were collected there would be insufficient data in the cache to render.
If these tests start failing because Atom can't find a view, look here.
If they are equal and one of them is a wildcard target, give lower priority
If they are equal, the ID is returned.
If they are expensive to re-render, wrap them in StaticContainer or other mechanism as appropriate.
If they are supplied (and not null/undefined), the rendered element will not trigger updates to the element.
If they didn't ask for help, then this is not a "success"
If they do, those comment tags must be intended to appear *after* that child, so move them there.
If they don't fit they are placed in an 'overflow' menu.
If this Def is already buildable, update self.buildParams and continue using the old builder function.
If this activation is happening during the normal startup activation, the `onDidActivateInitialPackages` handler below must unload the 'tree-view' because it will have been loaded during startup.
If this becomes valuable, we can define a representation and extend the implementation to support it.
If this binding handler claims to control descendant bindings, make a note of this
If this can't be a reserved keyword, reset the object.
If this causes problems, figure out how to mock the clock properly.
If this directory is "www" and you are trying to check "www-base", just using startsWith would return true, even though "www-base" is at the same level as "Www", not contained in it.
If this editor has been previously active, we will have already initialized diff info and registered listeners on it.
If this ever fires, either ensure that your test closes all RemoteConnections or we can add a force shutdown method to ServerConnection.
If this expression is dynamic, no need to check.
If this function is called multiple times in parallel, the later calls will cause the previous promises to reject even if they end up expanding the node key successfully.
If this function is ever called with anything but `one` and `two` being `Array`s, it is the fault of the merge utilities.
If this function is not called after the DataGrid is attached to its parent element, then the DataGrid's columns will not be resizable.
If this is a block repeat, we want to make sure we only return frag that is bound to this v-for.
If this is a constructor, write to the prototype, otherwise write to the singleton object.
If this is a controlled radio button group, forcing the input that was previously checked to update will cause it to be come re-checked as appropriate.
If this is a pre-major version, bump up to the same major version.
If this is a pre-minor version, bump up to the same minor version.
If this is a strict mode function, verify that argument names are not repeated, and it does not try to bind the words `eval` or `arguments`.
If this is already a prerelease, it will bump to the next version drop any prereleases that might already exist, since they are not relevant at this point.
If this is available on the event object, use it.
If this is made configurable, consider using autocomplete-plus' minimumWordLength setting, as per https://github.com/atom/autocomplete-plus/issues/594
If this is not a pre-release version, it will increment the patch.
If this is not already the active view, switch to it and ensure the side bar is visible or is the specified `display` value.
If this is not called before calling onNewLayout, the number of inProgress cells will remain non-zero, and thus the onNewLayout call will not fire the needed state change update.
If this is not specified and the property is missing, an error will be thrown.
If this is not the first segment, we should not request edges that would overlap the last element of the previous segment.
If this is not the last segment, we should not request edges that would overlap the first element of the next segment.
If this is the initial mount (with no existing view), renders to null.
If this is the last statement in a block that ends on the same line *and* option lastsemic is on, ignore the warning.
If this is the third time the process has errored (i.e. the have already been two errors before), stop retrying.
If this is the view that was last serialized, render synchronously and immediately so the side-bar appears quickly on start up.
If this lower-in-DOM node causes new content to be rendered at a place higher-in-DOM, we need to be careful not to invoke these new listeners.
If this node needs parentheses and will not be wrapped with parentheses when reprinted, then return false to skip reprinting and let it be printed generically.
If this option was changed from being selected during a single-item update, notify the change
If this package is disabled, stop updating the button and remove it from the toolbar.
If this returns null, then it is not safe to run flow.
If this returns null, then it is not safe to run hack.
If this segment already has the first element, we don't need any segments before this.
If this segment already has the last element, we don't need any segments after this.
If this throws again, the error will bubble up (and can be caught by a higher error boundary).
If this turns out to be a popular use case it's possible to implement by overiding `Object.freeze` to store a "hash" property on the object for later use with the map.
If this view is already active, just toggle the visibility of the side bar or set it to the desired `display`.
If this was the active view, choose the first remaining view (in insertion order) or, if there are no remaining views, choose nothing (`undefined`).
If this was the last package in the cache, delete the parent folder (source) For extra security, check against the file system if this was really the last package
If this._connection is not set, then the superclass constructor is still executing.
If this.traverse still hasn't been called, visit the children of the replacement node.
If tool-bar is disabled, stop updating the button state and remove tool-bar related cleanup from this package's disposal actions.
If traditional, encode the "old" way (the way 1.3.2 or older did it), otherwise encode params recursively.
If true spaces will be used for indentation, otherwise tabs will be used.
If true the switch will be turned on.
If true the user won't be able to move the slider.
If true the user won't be able to toggle the switch.
If true, a note stating the `default` for this option, if any, will be appended to the help output.
If true, a note stating the `env` envvar (if specified for this option) will be appended to the help output.
If true, all text will automatically be selected on focus
If true, before opening the new tab, it will close any existing tab with the same title.
If true, disable all interactions for this component.
If true, focuses the input on componentDidMount.
If true, the keyboard disables the return key when there is no text and automatically enables it when there is text.
If true, the text field will blur when submitted.
If true, the text input can be multiple lines.
If true, the text input obscures the text entered so that sensitive text like passwords stay secure.
If true, then selecting a segment won't persist visually.
If true, this will cause onTextEditorEvent to get called more often -- approximately whenever the user stops typing.
If true, we read from the DOM before updating to ensure that the value is only set if it has changed.
If true, we will query providers for updates whenever the text in the editor is changed.
If truthy, adds `value`, if falsy deletes `value`.
If two or more parameters share the same name, they are sorted by their value.
If two touches start, one moves five in a direction, then stops and the other touch moves fives in the same direction, the cumulative distance is ten.
If types are added here, make sure to also add them to FlowConstants.js.
If undefined, the default for the current locale is used.
If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates
If url is an object, simulate pre-1.5 signature
If user changes any config, update the health - and reset the polling cycles.
If user declares "foo", convert to "foo:false".
If user has committed to nonprofit, this will complete their pledge
If user response was negative, abort
If using innerHTML throws an exception, use the fallback method
If using spaces this is how many spaces will be inserted.
If using tab charcters this is how many spaces a single tab is expected to be displayed as.
If validation succeeds: an object containing a valid profile to save.
If value is a function, invoke it and return its value
If variable is updated, the properties array is patched locally.
If we already had a child with this URI - keep it
If we already have the right measurement, avoid augmentation
If we already have this child, then merge the data together.
If we already processed all orphan nodes that have only weak retainers and still have some orphans...
If we are *explicitly* given a prefix on the cli, then always use that.
If we are a recently built node, and the directory structure is that of a repository.
If we are currently composing (IME) and using a fallback to do so, try to extract the composed characters from the fallback object.
If we are editing, return early to prevent canceling the edit.
If we are ignoring linter errors, replace the input with empty string if it doesn't already at least start or end a multi-line comment
If we are in a testing environment then we want to use a default atom config.
If we are in the global scope, then we have an undefined variable.
If we are not in a transition from this index, make sure opacity is 0 to prevent the enabled scene from flashing over the presented scene
If we are on Windows then we only need to go one level up, everything else, two
If we are only doing script debugging, then the dummy connection listener's port can also be used to listen for the script's xdebug requests.
If we are secure then we don't need the ssh tunnel.
If we are under maxSockets create a new one.
If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties
If we call `asap` within tasks scheduled by `asap`, the queue will grow, but to avoid an O(n) walk for every task we execute, we don't shift tasks off the queue after they have been executed.
If we call it once with a larger value, the first promise will resolve first, even though the timeout is larger
If we cannot execute based on adb devices output, fall back to shell am start
If we change the key, the component is unmounted and remounted
If we clean up the buffer before the `openUriInPane` finishes, the pane will be closed, because it could have no other items.
If we couldn't locate the key comment, though, there may be whitespace shenanigans going on that have conjoined the comment to the rest of the key.
If we did traverse, this fragment reference would lead us to create an object with a __dataID__ instead of the desired `null`.
If we did traverse, this fragment reference would lead us to create an object with a __dataID__ instead of the desired `undefined`.
If we didn't, we'd have shared state between these various tests.
If we don't have a shasum yet, compute it.
If we don't have gBCR, just use 0,0 rather than error BlackBerry 5, iOS 3 (original iPhone)
If we don't know, then assume that we are waiting for one.
If we don't reject, then we might leak promises if a node key is expanded and collapsed in succession (the collapse could succeed first, causing the expand to never resolve).
If we don't remove it, we're gonna have a bad time.
If we ever supported this then we must handle exceptions and side-effects.
If we fail to connect to hack, then retry on next request.
If we find a child whose ID is an ancestor of the given ID, then we can be sure that we only want to search the subtree rooted at this child, so we can throw out the rest of the search state.
If we find a key character on the starting line, then the user is typing a single-line method (it doesn't need to be indented).
If we find a private key, we just take the public component of it and use that.
If we found a closing parenthesis but it occurred after the end of the original subtree for this reprinting, then we must not return true for hasClosingParen(oldPath).
If we found a dataType We add the dataType to the list if needed and return the corresponding response
If we found an opening parenthesis but it occurred before the start of the original subtree for this reprinting, then we must not return true for hasOpeningParen(oldPath).
If we found one, add as resolved and copy resolved properties from the compatible one
If we found one, merge stuff instead of adding as resolved
If we get a map from the transformer we'll switch to a mode were we're combining the source maps as opposed to
If we get an EOF inside of an unclosed string, show an error and implicitly close it at the EOF point.
If we get any other code we must have exited earlier.
If we get here before consuming all the bytes, then that is a bug in node.
If we get something that is not a buffer, string, null, or undefined, and we're not in objectMode, then that's an error.
If we get this far, make sure we haven't executed the code
If we got authorization, make sure it's the right password.
If we had to start a Flow server, store the process here so we can kill it when we shut down.
If we happened to read() exactly the remaining amount in the buffer, and the EOF has been seen at this point, then make sure that we emit 'end' on the very next tick.
If we have a BlockStatement, check each consequent body node.
If we have a beforeCursor and there is no next page, then there is no gap between the current segment and the next.
If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
If we have a top level node that is excluded, get rid of it completely (not keeping children), since bottom up data relies entirely on the root node.
If we have a valid `dataID`, ensure that a record is created for it even if we do not actually end up populating it with fields.
If we have an afterCursor and there is no previous page, then there is no gap between the current segment and the previous.
If we have an error include diagnostics
If we have any errors remaining report on them
If we have data, let's convert it
If we have default value in percents, calculate it on first use.
If we have elements to modify, make the request
If we have irregular characters remove them from the errors list
If we have multiple messages place them under a messages key The first error will be logged as message key This is to adhere to TAP 13 loosely defined specification of having a message key
If we have no .loc information for oldNode, then we won't be able to reprint it.
If we have not specified any module dirs let's add some defaults
If we have nothing in the buffer, then we want to know as soon as we *do* get something into the buffer.
If we have past steps, put the end event for each range rather than start one.
If we have pending requests and a socket gets closed a new one needs to be created to take over in the pool for the one that closed.
If we have reached this point, charA and charB are different, but only one of them is uppercase.
If we haven't received anything after LOADING_DELAY_MS, display a loading indicator.
If we hit EOF and our comment is still unclosed, trigger an error and end the comment implicitly.
If we issued an unexpected argument we have learned nothing about the state of the Flow server.
If we made it all the way through the loop, provider must be lower priority than all of the existing providers, so add it to the end.
If we managed to parse the key and locate the key comment with the regex, then do a non-partial read and assert that we have consumed all bytes.
If we match the uppercase characters of the filename, we should be ranked the highest
If we need to scroll a specific position into view, do so.
If we put this type on the definition, use sites will not see the individual properties in the Server object for things like autocomplete.
If we reset the textarea on every change, that breaks IME.
If we saw typeName earlier in the breadth-first traversal, delete the last-seen occurrence.
If we set secondaries to maintenance mode, wait for them to become unhealthy.
If we skipped validation above, we get a second chance here.
If we tried to read() past the EOF, then emit end on the next tick.
If we want to someday check for reordering, we could do it here.
If we were given a form, use its 'action' URL and pick out any requested field values
If we were successful, then we know the item is up-to-date, so there's no need to update it and we can move on to the next item.
If we were to continue synchronously here, the debugger would no longer be paused when the remaining subscribers' callbacks were invoked.
If we're asking for more than the target buffer level, then raise the water mark.
If we're at the top, always use real timeline start as a left window bound so that expansion arrow padding logic works.
If we're being called from the command line, just execute, using the command-line arguments.
If we're in Chrome or Firefox, provide a download link if not installed.
If we're in IE8, check to see if we are in compatibility mode and provide information on preventing compatibility mode
If we're in an ES6 environment, make parsers iterable
If we're in the browser, add `_` as a global object via a string identifier, for Closure Compiler "advanced" mode.
If we're looking at the latest movies, aren't currently loading, and still have no results, show a message
If we're looking globally only look at the one package we're operating on
If we're saving bundled deps, normalize the key before we start
If we're switching from children to content/html or vice versa, remove the old content
If we're updating to null or undefined, we should remove the property from the DOM node instead of inadvertantly setting to a string.
If we're updating to null or undefined, we should remove the property from the DOM node instead of inadvertently setting to a string.
If we're warning about an invalid (non-parent) ancestry, add '...'
If we've already got an array, just append.
If window is too small, don't even try to resize.
If yes, return a component link function.
If you *are* setting the userconfig explicitly then it will override your explicit intent, and that IS harmful and unexpected.
If you are looking for a function that creates an Array instance based on an "Array-like" object, use createArrayFrom instead.
If you are using it, please donate.
If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state of that virtual hierarchy
If you decide to catch this exception and stop it from propagating, make sure to call its cancel method to avoid silencing other exceptions that might be thrown later in the traversal.
If you do need to enable this property for an animation, consider combining it with renderToHardwareTextureAndroid if the view **contents** are static (i.e. it doesn't need to be redrawn each frame).
If you do not need precise scroll position tracking, set this value higher to limit the information being sent across the bridge.
If you do out the computations:  0xffff - 128 + 1 0xffff - 127 0xff80  You can then encode this value as the signed version.
If you don't care about sections you should safely be able to use `cloneWithRows`.
If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does) and then you don't need to override 'createJavaScriptEvaluatorBlock'.
If you have no idea what ASN.1 or BER is, see this: ftp://ftp.rsa.com/pub/pkcs/ascii/layman.asc
If you need data to be fetched in addition to rendering, please use `RelayRenderer`.
If you need it, you are probably looking for `componentWillUpdate`.
If you need real error handling don't use this mock.
If you need this property, create an instance with the appropriate root and use execFlow.
If you need to add a new command, please add it to local-cli/.
If you need to convert an array-like object, like `arguments`, into an array use toArray instead.
If you need to override any of this functions do so by defining the file `rn-cli.config.js` on the root of your project with the functions you need to tweak.
If you never call cb(), then you'll never get another chunk.
If you omit any of the other render functions, ListView will simply skip rendering them.
If you open Atom via Spotlight such that it opens with a tab named "untitled" that does not correspond to a file on disk, this will return null.
If you pass an error, then that'll put the hurt on the whole operation.
If you passed an arg, we interpret it as an array of entries to destroy
If you passed an arg, we interpret it as an array of entries to remove
If you passed zero args, we destroy everything
If you passed zero args, we remove everything
If you provide a source map that was generated from a previous call to recast.print as options.inputSourceMap, the old source map will be composed with the new source map.
If you really mean this implicit string conversion, you can do something like String(myThing)
If you really want the pretty-printer to use tabs instead of spaces, make this option true.
If you see a blank content, you probably forgot to add a selected one.
If you set a process.env field to null or undefined, it gets cast to the string 'null' or 'undefined'.
If you want esprima not to throw exceptions when it encounters non-fatal errors, keep this option true.
If you want esprima to generate .range information (recast only uses .loc internally), pass true for this option.
If you want those, you can opt in to the higher-level `RelayMutation` API.
If you want to animate a composite component, you need to re-render it.
If you want to communicate between Atom and the webview, you can use webview's API.
If you want to make a custom template engine,
If you want to print trailing commas in object literals, array expressions, functions calls and function definitions pass true for this option.
If you want to set the opacity of the drawer, use rgba.
If you want to take ownership, you must make your own copy.
If you want to use a different branch of esprima, or any other module that supports a .parse function, pass that module object to recast.parse as options.parser (legacy synonym: options.esprima).
If you wish to maintain the existing data you must handle merging of old and new data separately and then pass that into this function as the `dataBlob`.
If you'd like to manage it in some other way (e.g. Flux), just call `this.forceUpdate()` whenever your store's state changes.
If you're not setting the userconfig explicitly, then it will be loaded twice, which is harmless but excessive.
If you've referenced jQuery we'll use that rather than duplicating its code.
If your React component's render function is "pure", e.g. it will render the same result given the same props and state, provide this mixin for a considerable performance boost.
If your attribute isn't in here, it won't get written to the DOM.
If, however, the set operation is a no-op (such if setting a property to the same value it already has), new instance creation is not skipped and same instance is returned instead.
If-Else not considered currently.
If/When support for 0.9.4 is dropped, this should be unnecessary.
If/when the saved connection profiles change, we want to re-render the dialog with the new set of connection profiles.
Ignore (abort) ready state if we have a new pending request.
Ignore CompositeComponent proptype check.
Ignore __proto__ property, stay lossless.
Ignore `RelayQLFragmentSpread` selections.
Ignore all non-export top level program elements including: imports, statements, variable declarations, function declarations
Ignore anything in node_modules that isn't a package folder.
Ignore block statements if not configured
Ignore case score matches gets a good score.
Ignore case where FbHgBlameProvider is unavailable.
Ignore changes to other files.
Ignore classes by default
Ignore computed properties, turn lossy.
Ignore destructuring assignment
Ignore empty path components resulting from //, as well as a leading and traling slashes.
Ignore exported variables.
Ignore falsy entries due to errors reading package metas
Ignore falsy values and Expressions.
Ignore if folder does not exist
Ignore if it is last statement in a block
Ignore if link does not exist
Ignore if parent of node is a for variant
Ignore if parent of node is an export specifier
Ignore if target is '*' and resolved to a non-semver release
Ignore if there is no following statement
Ignore length property of array, stay lossless.
Ignore long-living WebSockets for the sake of progress indicator, as we won't be waiting them anyway.
Ignore lurking files, e.g.: .DS_Store if the user has navigated throughout the cache
Ignore malformed settings.
Ignore nested replacement ranges.
Ignore non-enumerable members on prototype, stay lossless.
Ignore non-text editors and new editors with empty uris / paths.
Ignore not found .git directory
Ignore size property of map, set, stay lossless.
Ignore step 4 and 5 for those k.
Ignore switches by default
Ignore the inserted text if the user is typing in a string or comment.
Ignore the rest of the response
Ignore the whole call when the value is null
Ignore typehints that span too many lines.
Ignored files are excluded from the results, as are duplicates.
Ignores `h1`, because you should only have one per page.
Ignores empty comments.
Ignores if it's shadowed.
Ignores the cache and fetches data required to resolve a set of queries.
Image.propTypes.source is required but we want it to be optional, so we OR it with a nullable propType.
Images are stored in memory and must be manually removed when you are finished with them, otherwise they will continue to use up RAM until the app is terminated.
Images are stored in memory only, and must be manually deleted when you are finished with them by calling `removeImageForTag()`.
Immediate call again in case of race condition there
Immediately Invoked Function Expression (IIFE).
Immediately after `j` is incremented in this loop, the following hold true:
Immediately convert line and column to 0-based numbers.
Implement an async ._write(chunk, cb), and it'll handle all the drain event emission and buffering.
Implement an async ._write(chunk, encoding, cb), and it'll handle all the drain event emission and buffering.
Implement the identical functionality for filter and not
Implementation Summary 1.
Implementation derived from TweetNaCl version 20140427.
Implementations or sub modules can pass other keys to the AssertionError's constructor - they will be ignored.
Implements Source Map V3 model.
Implements a hierarchical layout using the cluster (or dendrogram) algorithm.
Implements a native component that does not receive mouse events when `disabled` is set.
Implements hierarchical edge bundling using Holten's algorithm.
Implements the Flux pattern for our file tree.
Implicit invalidation semantics:
Implicit key determined by the index in the set
Implicit octal, unless there is a non-octal digit.
ImportNamespaceSpecifier's only appear by themselves or to the "right" of an ImportDefaultSpecifier:
Important for 0-time items to have 0 width.
Important note: start() and stop() will only be called at most once.
Importantly, it also short-circuits in some cases if the path is null or undefined.
Imported from nuclide-files-service, which is an apm package, preventing a direct import.
Imports all environments from a plugin.
Imports from non-Nuclide modules.
Imports from other Nuclide packages.
Imports from within this Nuclide package.
Imports store data from a previous export.
Improve performance by isolating this hot code path from the try/catch block in `updateChildren`.
Improve the module's maintainability by reducing the storage paths to a single mechanism.
In Atom, this is false - prevent accidental unnecessary use.
In Buck, the 'cursor to previous line' and 'erase line' escape characters occur in pairs.
In HTML5, select fires only on input and textarea thus if there's no focused element we won't dispatch.
In IE it is not safe to call document.activeElement if there is nothing focused.
In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty` directly.
In IE8, certain elements cannot render alone, so wrap all elements ('*').
In IE9+, we have access to composition events, but the data supplied by the native compositionend event may be incorrect.
In IE9, the selection range will get reset if `textContent` is mutated.
In JSON strings must always use double quotes.
In JavaScript, string data is stored as UTF-16, so BOM is 0xFEFF.
In Node, __dirname and __filename should be ignored.
In Node.js, uncaught exceptions are considered fatal errors.
In Objective-C we often have the X + XInternal.h for implementation methods.
In Polish language abbraviated months are not commonly used so there is a dispute about the proper abbraviations.
In ReactDOM components, we make sure that single children that are strings are treated as "content" which is much faster to render and update.
In Webkit, preventing default on a spacebar `textInput` event cancels character insertion, but it *also* causes the browser to fall back to its default spacebar behavior of scrolling the page.
In `return` (and `break`/`continue`), the keywords with optional arguments, we eagerly look for a semicolon or the possibility to insert one.
In a transform stream, the written data is placed in a buffer.
In a web browser, exceptions are not fatal.
In a well balanced tree, half of the nodes are in the bottom row and have no children - let's avoid calling out to the native bridge for a large portion of the children.
In addition to executing ordinary .js files, the other Node process can also run .js files under the Babel transpiler, so long as they have the `'use babel'` pragma used in Atom.
In addition to normal JavaScript comments (// and /*) this method also recognizes JSHint- and JSLint-specific comments such as /*jshint, /*jslint, /*globals and so on.
In addition to parsing, it is looking for ad hoc lint patterns.
In addition to subscribing to all subsequent events, this method will also handle any events that have already been emitted, held, and not released.
In addition to the data for the given event it also sends a event control object which allows the listeners/handlers to prevent the default behavior of the given event.
In addition to token() method returning the next token, the Lexer object also emits events.
In addition, each field name may map to an array of data IDs if the field is plural.
In addition, supplying a `renderLoading` that returns undefined has the same effect as not supplying the callback.
In addition, the Store will immediately invoke the callback with data currently in the Store, iff there is any.
In addition, the Store will immediately invoke the callback with the data currently in the Store, iff there is any.
In addition, time_t defaults to 64-bit.
In addition, to Identifier this method can also produce BooleanLiteral (true/false) and NullLiteral (null).
In all other cases the expression itself is returned.
In any case it should be called after all other removing, unbinding and turning of is done
In any case, major browsers allow duplicate keys, so that's what we'll do too.
In any case, we need to guard against it.
In apps written with React Native from the root view down, you should use Navigator instead of Modal.
In both cases we want to ignore the timer id, but in the former case we warn as well.
In both cases where null is returned, test will be applied to the next item in the array.
In both the case of the `UIWebView` based `RCTJavaScriptCaller` and `RCTContextCaller`, we implement our own custom timing bridge that should be immune to unexplainably dropped timing signals.
In bottom up mode, our parents are our children since we display an inverted tree.
In case a subscription was disposed during the arrayForEach cycle, check for isDisposed on each subscription before invoking its callback
In case of "message", the `data` property contains the incoming data.
In case of exception the override won't be called.
In case of globally installed, get the base dir where executable subcommand file should be located at
In case of redirect request id is reassigned to a redirected request and we need to update _nodesByRequestId and search results.
In case of self time, first add self, then children of the same category.
In case several nodes were selected, the topmost (first in the natural visual order) is considered to be the reference point for the move.
In case they do, we don't want to fail the render phase where it didn't fail before.
In case this id is already selected, anyways persist it as the last saved value.
In case we have no closing Layout event, endData is not available.
In case you didn't know, the caught parameter shadows any variable of the same name in an outer scope.
In case you need this behavior you can provide a childFactory function to wrap every child, even the ones that are leaving.
In case you want to use the Rotten Tomatoes' API on a real app you should create an account at http://developer.rottentomatoes.com/
In cases where either:
In certain (Error) conditions socket.close may not emit the on close event synchronously.
In destructuring cases, the length of the array can be 2 or more.
In each of these, `this` refers to the Class itself, not an instance.
In fact, when sorting with a comparator, these costs outweigh the benefits of sorting in C++.
In general native animated implementation should support any numeric property that doesn't need to be updated through the shadow view hierarchy (all non-layout properties).
In heavy mode, we take our visual identity from ancestor node...
In jest environment, XmlHttpRequest doesn't exist so getOwnPropertyDescriptor returns undefined and defineProperty default for writable is false.
In modern browsers (i.e., not IE8 or IE9), the input event is exactly what we want so fall through here and trigger an abstract event
In modern non-IE browsers, we can support both forward and backward selections.
In most cases we rely exclusively on isSupertypeOf to make O(1) subtyping determinations.
In normal operation, these are only for long filenames or link names, which are rarely very big.
In oldIE we use the DOM Node `uniqueID` property to get create the hash.
In older browsers we can't create a null-prototype object so we have to defend against key collisions with built-in methods.
In order to avoid back tracking, it returns `null` if the position is not a MethodDefinition and the caller is responsible to visit other options.
In order to avoid exponential backtracking, we use two flags to denote if the production can be binding element or assignment target.
In order to bound the height of a ScrollView, either set the height of the view directly (discouraged) or make sure all parent views have bounded height.
In order to eliminate side effects of files located outside of workspace this should be done for all test cases here.
In order to ensure we reprint leading and trailing program comments, wrap the original Program node with a File node.
In order to generate such stream, here is a sample bash command:
In order to get the stateful object with the methods that Atom wants for items, we actually have to mount it.
In order to keep our status 'types' the same, we map the string StatusCodeId to numbers.
In order to qualify as leading, a comment must be separated from fn by an unbroken series of whitespace-only gaps (or other comments).
In order to remove those results from the results of this file, we need to overwrite it() and describe() just in RuleTester to do nothing but run code.
In order to retrieve the image dimensions, the image may first need to be loaded or downloaded, after which it will be cached.
In order to return the same Def instance every time Type.def is called with a particular name, those instances need to be stored in a cache.
In order to send minimal queries and avoid re-retrieving data, `RelayPendingQueryTracker` maintains a registry of pending queries, and "subtracts" those from any new queries that callers enqueue.
In order to use Cmd+P to record/dump perf data, we need to make sure this module is available in the bundle
In order to use it pass this component as `renderScrollComponent` to the list view.
In other browsers, doing so is slower or neutral compared to the other order (in Firefox, twice as slow) so we only do this inversion in IE.
In other words, the embedder of this component should be the source of truth, not the native component.
In particular, it's useful for erroring if the server fails to send data halfway through streaming a response.
In particular, this allows JavaScript animations to run smoothly.
In particular, this helps when the old range is empty so there is no old text for us to compare against.
In particular, this is needed to support PropTypes
In particular, this system allows for circular and forward definitions.
In practice, `rangeInfo` is `undefined` if unfetched, `null` if the connection was deleted (in which case `connectionID` is null too).
In practice, `require.resolve()` is helpful in producing this path.
In practice, this has not appeared to cause any issues thus far.
In practice, this should be OK for now.
In practice, we query for a subset of those fields because we intersect the fat query with the tracked query we have for a given node (ie.
In release mode you should always use a drawable resource for these icons.
In remote-projects/main.js, we remove these generic directories.
In response, Atom will create a generic Directory for this URI, and add it to the list of root project paths (atom.project.getPaths()).
In signed 16 bits this would be 0xff80.
In simple declaration or assignment cases, the length of the array is 1.
In streams that never have any data, and do push(null) right away, the consumer can miss the 'end' event if they do some I/O before consuming the stream.
In such a pathological inflating mechanism, there'd be no way to tell the system to stop doing the transform.
In such cases the node will be harmlessly wrapped in an additional layer of parentheses.
In that case, cache first so there is a known size and these do not resolve to NaN.
In that case, just bump it up again.
In that case, resolvedSize will be NaN and sliceSize will remain undefined.
In that case, this merges segments.
In that case, we don't want to throw if we can't find the source - we just want to return null, so we provide a flag to exit gracefully.
In the DOM, we would likely want to purge any cached node ID lookups.
In the Flow crashes I have observed, the code is 2 and the signal is null.
In the `finally` block, parallel paths are created.
In the case of "break on uncaught exception" triggered by "TypeError: undefined is not a function", the exception is thrown by a V8 builtin CALL_NON_FUNCTION defined in v8/src/runtime.js.
In the case of `ReactDOMComponent`, a mount image is a string of markup.
In the case of any other error, just see if there's a dir there already.
In the case of properties that might _actually_ have dashes, we need to also store a copy of that unchanged property.
In the case of these tests, it will end up the parent of the "eslint" folder.
In the case the cursor does not correspond first cursor, walk through the edges to see if we can trim edges to only those before the first cursor.
In the case the cursor does not correspond last cursor, walk through the edges to see if we can trim edges to only those after the last cursor.
In the event of a failed `concatSegment` operation, rollback internal properties to their former values.
In the example, this would be "/path/to/directory".
In the example, this would be "nuclide://example.com:9090".
In the following example, the nested title and body text will inherit the `fontFamily` from `styles.baseText`, but the title provides its own additional styles.
In the future let's look into adding a command line option to specify this location.
In the future release empty section headers will be rendered by default, and the flag will be deprecated.
In the future this may be used to indicate that required data for the fragment has not been fetched or was evicted from the cache.
In the future we might support more complicated things, including nested locations ("the bottom of the right") and event different container types (pane items vs panels).
In the future we need a way to generate GUIDs but for now this will work on a smaller scale.
In the future, it will be possible to load only one set of definitions appropriate for a given parser, but until then we must rely on default functions to reconcile the conflicting AST formats.
In the future, the following "ko" variable may be made distinct from "koExports" so that private objects are not externally reachable.
In the future, we should cleanup callbacks by cancelling them instead of using this.
In the inherited sections, only show overrides for the potentially inherited properties.
In the interest of a performance, a transformer should only return a Promise if necessary.
In the official Linter API, the providerName is just "name".
In the phpize mode, the subdirs are always relative to BUID_DIR.
In the process of returning their deferred-dispatched events, event plugins themselves can dispatch events on-demand without returning them from `extractEvents`.
In the real version, you'd be able to add multiple callbacks for each event.
In these cases, use no bounding match.
In this case it's handled in the `enterBreakableStatement` function.
In this case it's handled in the `exitBreakableStatement` function.
In this case the two fetched `node` queries do not reflect the fact that `friends.first(3)` were fetched for item `4`, so `friends.first(3)` has to be tracked as-is.
In this case we need to listen for incoming connections to attach to, as well as on the port that the dummy connection will use.
In this case we will just print the value.
In this case, `stale` will be true.
In this case, it is both a client id and does not have a corresponding mapping in the client server id map.
In this case, it should contain special Nuclide arguments (see `runCommandInNewPane`).
In this case, only the stderr content is evaluated.
In this case, simply checking whether the root is a prefix of the path won't work.
In this case, the arguments need to contain "--depth 1".
In this case, the arguments should not contain "--depth 1".
In this case, we can just let Atom open a blank editor.
In this case, we can scope the 'hg status -i' call to just the added file.
In this case, we have a fallback that uses forceUpdate.
In this case, we just want to return an empty string if there is no current bookmark.
In this case, we only want the untracked files under the given localDirectory.
In this case, we return our remaining data and end the stream, if appropriate.
In this case, we use the `mouseover` top-level event.
In this case, we want to run a fresh 'hg status -i'.
In this case, you could write a very small amount of input, and end up with a very large amount of output.
In this example, a component receives data in chunks, handled by `_onDataArrived`, which concats the new data onto the old data and updates the data source.
In this process, both "onCodePathSegmentStart" and "onCodePathSegmentEnd" events are fired.
In this way, other module could still overwrite Error.prepareStackTrace to customize stacktrace.
In this way, writing to Error.prepareStackTrace will put the new prepareStackTrace functions in a wrapper that calls the hook.
In this way, you can share images, videos, PDF files, etc.
In turn, `TouchableMixin` expects us to implement some abstract methods to handle interesting interactions such as `handleTouchablePress`.
In turn, data received by the socket is forwarded to the stdout of this process.
Inaccurate, just a sanity check.
Include `tabIndex` so this component can be focused by calling its native `focus` method.
Include edges from all connections that exist in `rangeBehaviors`.
Include even hidden options in `optargs` so that bash completion of its arg still works.
Include modules used by integration tests
Include npm-version and node-version in user-agent
Include null-filtered edges as "seen" so that they will be subscribed.
Include the path to the nuclide package.
Include this.depth in the name to make sure the name does not collide with any variables in nested/enclosing scopes.
Includes additional information that is useful to the UI, but redundant or nonsensical for providers to include in their responses.
Includes conditional calls (`orderby`) and range/offset calls (`first`, `after`).
Includes inherited fields.
Includes own typeName.
Includes partial query strings.
Includes some event props shared by KeyEvent and MouseEvent
Includes the `nodePath` (ancestor nodes) that can be used to construct an appropriate the JSONPath for the query.
Includes the newlines in the resulting stream.
Includes those for files that are not open.
Including a try-catch may be detrimental to function performance, so move it out here a separate function.
Inclusive time is not useful for many components without knowing where they are instantiated.
Incorporate the offset, then check against cycle size
Increase priority (default is 100) to ensure this toolbar comes after the 'tool-bar' package's toolbar.
Increase the indentation after this line.
Increases the count of `yield` keyword.
Increasing promise resolve time will gurantee maximum parallelization.
Increment depth for parentheses, braces, and brackets so that interior commas are ignored
Increment the counters / check values.
Increment the last row one at a time per JS event loop
Incrementally add a string to this hash
Incrementally adds only escaped chars, adding other chunks as-is as a micro-optimization.
Increments the blockStack counter.
Increments the functionStack counter.
Indeed, this was already supported, but it was a bit to keen on this.
Indent multi-line strings (e.g. css).
Indent the starts of attribute names.
Indentation contexted
Index 0 will be the whole email.
Index 1 is the capture group.
Index 1 is the captured pid.
Index of currently firing callback (modified by remove if needed)
Index of initial page that should be selected.
Index of the first retainer in the _retainingNodes and _retainingEdges arrays.
Index of the row, passed through to other callbacks.
Index the scopes by the start range of their block for efficient lookup in getScope.
Indicate that return has been found in the current function.
Indicates that a provider is registered but that it did not return an outline.
Indicates that no provider is registered for the given grammar.
Indicates that we are in the middle of a activate/onDidStopChangingActivePaneItem pair of events.
Indicates that we're processing a forward/backwards navigation in the stack.
Indicates this field is hidden from eachField iteration.
Indicates to accessibility services to treat UI component like a native one.
Indicates to accessibility services whether the user should be notified when this view changes.
Indicates whether or not the packager is running.
Indices are split up according to data types to avoid collisions.
Individual apps can disable this
Individual selectable item in a Picker.
Information about a rule configuration, in the context of a Registry.
Information about the rendered lines.
Information for each code path segment.
Information for each constructor.
Inherit all of the other RelayQueryField::getStorageKey() behavior, like stripping out spurious if/unless and connection args.
Inherit from `EventEmitter.prototype`.
Inherit the prototype methods from one constructor into another.
Init the element's event structure and main handler, if this is the first
Init the event handler queue if we're the first
Initial dimensions are set before `runApplication` is called so they should be available before any other require's are run, but may be updated later.
Initial maximum value of the slider.
Initial minimum value of the slider.
Initial renders aren't batched together yet...
Initial root directories
Initial value of the slider.
Initialise distance matrix and vector of closest clusters.
Initialize PRNG if environment provides CSPRNG.
Initialize a delegator.
Initialize a jQuery object A central reference to the root jQuery(document)
Initialize a mongobridge.
Initialize a new `Command`.
Initialize a new `Option` with the given `flags` and `description`.
Initialize a replica set.
Initialize a sharded cluster.
Initialize a standalone server.
Initialize against the default document
Initialize and render the contents of the panel only if the hosting container is visible by the user's choice.
Initialize central reference
Initialize empty function node.
Initialize errorCount to zero, since this is a config which will be linted.
Initialize information of a given code path segment.
Initialize instance element.
Initialize the SVG elements since we know they'll always need to be wrapped consistently.
Initialize the background to fill the defined range.
Initialize the defaultProps property after all mixins have been merged.
Initialize the directive, mixin definition properties, setup the watcher, call definition bind() and update() if present.
Initialize the pool with junk if needed.
Initialize the public class
Initialize the tangents at every point as the average of the secants.
Initialize the tweens.
Initialize this to the default connection profile.
Initialize to 'active' instead of null.
Initializes `panelComponent` so it does not need to be considered nullable.
Initializes an array clone.
Initializes an object clone based on its `toStringTag`.
Initializes an object clone.
Initializes garbage collection: must be called before any records are fetched.
Initializes internal state.
Initializes state of member declarations for the class.
Initializes the component, renders markup, and registers event listeners.
Initializes the internal `onDOMReady` queue.
Initializes the parser, reads any number of statements, and wraps them in a Program node.
Initializes the stack of state of member declarations.
Initializes/Disposes state of each code path.
Initially false to indicate the cell should be rendered "offscreen" with position: absolute so that incremental rendering doesn't cause things to jump around.
Initially nothing wants to become the responder
Initially our child becomes responder
Initially we have no changed files so the diff view tool-bar counter should be empty.
Initially when data with children is returned to the Chrome debugger only the ObjectId is returned.
Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).
Initiates the fetching of node's children if it's not already in the process.
Inject data generated from fallback path into the synthetic event.
Inject module for resolving DOM hierarchy and plugin ordering.
Inject modules for resolving DOM hierarchy and plugin ordering.
Inject some specialized knowledge about the DOM.
Inject the element directly into the jQuery object
Inject the runtime into a devtools global hook regardless of browser.
Injectable event backend
Injectable mapping from names to event plugin modules.
Injectable ordering of event plugins.
Injected code in to user's code to **try** to protect against infinite loops cropping up in the code, and killing the browser.
Injected dependencies:
Injects an ordering of plugins (by plugin name).
Injects any key/value pairs from the given Observable value into the component as named props.
Injects plugins to be used by `EventPluginHub`.
Injects the client mutation id associated with the record store instance into the given record.
Inline fragments without type conditions fall back to parent type.
Inline strings when formatting.
Inline style has the greatest specificity.
Inlined `register` since this is a reasonably hot code path.
Inlined for performance, see `ReactInstanceHandles.createReactID`.
Inner ranges may reference cache keys defined in their parents.
Input must be homogenously typed.
Input must be lineSpace-local ("div" coordinate system).
Input selection module for React.
Inputs come from command-line switches (--target, --dist-url), `process.version` and `process.release` where it exists.
Inputs to the state machine.
Insecure configs are used for testing only.
Insecure connections are used for testing and will fail the encryption call below.
Insert a function that wraps the function body.
Insert a sentinel executor that will not be called until all of the other promises in the queue have been flushed.
Insert a token before another token in a language literal
Insert after insertion point
Insert at the same index for the first profile of the group.
Insert callback into url or form data
Insert in sorted order
Insert in the alphabetical order, first domains, then folders, then scripts.
Insert in the alphabetical order, first frames, then resources.
Insert non-breaking spaces to ensure the changeset is right-aligned.
Insert shortcuts to distrubuted children.
Insert spaces when the tab key is pressed
Insert the given array of lines at offset 'at', count them as having the given height.
InsertBefore operation that takes a callback.
InsertBefore with transition.
Inserts `aStr` between each of `this.children`.
Inserts `childNode` as a child of `parentNode` at the `index`.
Insets define the minimum margin for these components and can be used to effectively align Toolbar content along well-known gridlines.
Insets for the map's legal label, originally at bottom left of the map.
Inside double quotes: any symbol except double quote and backslash or any symbol escaped with a backslash.
Inside of class bodies are always strict mode.
Inspects the file path to determine the correctly way to load the config file.
Inspired by require("ast-types").NodePath.prototype.needsParens, but more efficient because we're iterating backwards through a stack.
Install callbacks on deferreds
Install glass pane capturing events.
Install linked package deps
Install packages which aren't already installed
Install public, 3rd-party Atom packages listed in this package's 'package-deps' setting.
Install script dataType
Install without the optional dependency
Installs event handlers for all the events we care about.
Instance of element that should respond to touch/move types of interactions, as indicated explicitly by relevant callbacks.
Instance-specific data
Instantiate a map with internal slots.
Instantiate resolver cache
Instantiate stub for web-hosted mode if necessary.
Instantiate the registry
Instantiate the resolve cache
Instantiate/insert a new child vm.
Instead of calling _addInvalidationToEvent directly, we create synthetic StyleRecalcInvalidationTracking events which will be added in _addInvalidationToEvent.
Instead of calling this function, call `subscription.remove()` directly.
Instead of making single child node just for the type name, we'll graft the type onto the end of the property name.
Instead of showing the user a bunch of un-mounted blank space, WLV sets contentInset to prevent scrolling into unrendered areas.
Instead of the "map" field, it's also possible to have a "url" field specifying a URL to retrieve a source map from, but that's currently unsupported.
Instead of using expandos on components, we should be storing the state needed by the diffing algorithms elsewhere.
Instead, a provider may set enableForAllGrammars to true, and then it will get notified of changes in all TextEditors.
Instead, display updates are batched and then all combined and executed at once.
Instead, it's more useful to identify the group of gadgets to which this one belongs and get it out of the way.
Instead, just go to index 0
Instead, send the HMR updates right away and clear the bundles cache so that if the user reloads we send them a fresh bundle
Instead, simply create wrapped transformers that assert the type of their argument.
Instead, the `value` prop must change in order for the rendered element to be updated.
Instead, the `value` prop must change in order for the rendered options to update.
Instead, the first match of the filtering here is the only possible match.
Instead, the props must change in order for the rendered element to be updated.
Instead, the way to achieve this effect is to create an ordinary TextEditor and then override any methods that would allow it to change its contents.
Instead, they should use the result of this method to attach listeners for bubbling events.
Instead, they use the getInitialState and componentWillMount methods for initialization.
Instead, this function keeps filtering local.
Instead, use `CallbackQueue.getPooled()`.
Instead, use an instance variable (see `clone()`).
Instead, use the onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
Instead, we define a getter that warns if it's accessed.
Instead, we must take all recently moved touches, and calculate how the centroid has changed just for those recently moved touches, and append that change to an accumulator.
Instead, we need to remove components from the root one by one, until either we find a prefix that fits, or we run out of components to remove.
Instead, we periodically shift 1024 tasks off the queue.
Instead, we write all the results in the same stdin stream.
Instead, we're going to have to use the following general formula, that works in a rather Javascript friendly way.
Instruments methods on a class or object.
Instruments profiling for arbitrarily asynchronous code by a name.
Integer division by 2, mod q
Integer literals may be "long"
Integrate with your platform specific scroll views, or even your custom built (every-frame animating) scroll views so that all of these systems play well with the `ResponderEventPlugin`.
Integration test, testing the combination of JSX with our unit of abstraction, `ReactCompositeComponent` does not ever add superfluous DOM nodes.
Intentionally **not** an arrow function because Atom sets the context when calling this and allows dynamically setting values by assigning to `this`.
Intentionally fetch the filesystem contents after getting the committed contents to make sure we have the latest filesystem version.
InteractionManager allows long-running work to be scheduled after any interactions/animations have completed.
Interacts with the background and text classes because the mode may output tokens that influence these classes.
Intercept "notifySubscribers" to track how many times it was called.
Intercept "subscribe" calls, and for array change events, ensure change tracking is enabled
Intercept Parse API call.
Intercept all logs, adding additional information
Intercept mutating methods and emit events
Interface similar to findNodeAt.
Interfaces for Chrome Dev Tools internal APIs.
Intermediate scroll position, not pushed to DOM yet
Internal constructor (not one exposed) for creating Symbol instances.
Internal flag to indicate the delimiters have been changed.
Internal implementation of a recursive `flatten` function.
Internal instances should fully constructed at this point, so they should not get any new fields added to them at this point.
Internal queue of events that have accumulated their dispatches and are waiting to have their dispatches executed.
Internal recursive comparison function for `isEqual`.
Internal store for event listeners
Internal tweaks for real symbol producer
Internal version of `receiveEvent` in terms of normalized (non-tag) `rootNodeID`.
Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).
Internally, the HgRepository uses the string StatusCodeId to do bookkeeping.
Internet Explorer 10 is the only browser that has setImmediate but does not have MutationObservers.
Interpolate a piece of template text.
Interpolate to provide an initial guess for t
Interpolates the given points using Fritsch-Carlson Monotone cubic Hermite interpolation.
Interpolates the value before updating the property, e.g. mapping 0-1 to 0-10.
Interpolation delimiters.
Interpret and default an options object
Interrupt the active transition, if any.
Interrupt the transition, if any.
Intersect two infinite lines cd and ab.
Intersection point lies inside of the polygon if scalar products of normal of the plane and cross products of successive tVects are all nonstrictly above or all nonstrictly below zero
Intersection points are sorted along the clip edge.
Intersects the great circle between a and b with the clip circle.
Interset the added and removed lines maps, taking the values of the added lines.
Invalid URI: it may generate lot of bad errors, like 'TypeError: Cannot call method `indexOf` of undefined' in CookieJar Detect and reject it as soon as possible
Invalid base64 digit.
Invalid chars shouldn't get passed to native
Invalid credential object
Invalid sets are not expanded.
Invalid syntax for a selector
Invalid, but not changed by browser parsing so we allow them
Invalidate all file messages.
Invalidate all project messages.
Invalidate file messages from ProviderA.
Invalidate if there there is no longer a revision with that id.
Invalidate layout below.
Invalidate project messages from ProviderA.
Invalidate the current revisions state because the current commit info has changed.
Invariant: All contained MessageRecords must have a count greater than or equal to one.
Invariant: This model can only be constructed on a ServiceWorker target.
Invariant: the Set values are never empty.
Invert the keys and values of an object.
Invert the pixel extent to data-space.
Inverted and renamed, use JSHint name here
Investigate if we can use localhost and match protocol version between client/server.
Invoke a method (with arguments) on every item in a collection.
Invoke callback(row) for each entry in the array that would be returned by flattenObject(data, depth).
Invoke synthetic calls for events that are missing ResourceSendRequest
Invoke the Makefile in the 'build' dir.
Invoke the callback on just the original child paths, regardless of any modifications made to the array by the callback.
Invoke this from an `onMomentumScrollBegin` event.
Invoke this from an `onMomentumScrollEnd` event.
Invoke this from an `onResponderGrant` event.
Invoke this from an `onResponderReject` event.
Invoke this from an `onResponderRelease` event.
Invoke this from an `onScrollBeginDrag` event.
Invoke this from an `onScrollEndDrag` event.
Invoke this from an `onScroll` event.
Invoke this from an `onStartShouldSetResponderCapture` event.
Invoke this from an `onStartShouldSetResponder` event.
Invoke this from an `onTouchEnd` event.
Invoke this from an `onTouchMove` event.
Invoke this from an `onTouchStart` event.
Invoked after the make/msbuild command exits.
Invoked before the component receives new props.
Invoked by ReactTestUtils.Simulate so that any errors thrown by the event handler are sure to be rethrown by rethrowCaughtError.
Invoked on load start
Invoked once before the component is mounted.
Invoked when connection is fails
Invoked when connection is sucessful
Invoked when load completes successfully
Invoked when load either succeeds or fails
Invoked when load fails
Invoked when load finish
Invoked when server requests keyboard interaction
Invoked when the component has been mounted and has a DOM representation.
Invoked when the component is about to be removed from its parent and have its DOM representation destroyed.
Invoked when the component is about to update due to a transition from `this.props`, `this.state` and `this.context` to `nextProps`, `nextState` and `nextContext`.
Invoked when the component is initially created and about to be mounted.
Invoked when the component is mounted.
Invoked when the component's DOM representation has been updated.
Invoked when the item is "active" (in that it is still eligible to become a "select") but the touch has left the `PressRect`.
Invoked when the item is "selected" - meaning the interaction ended by letting up while the item was either in the state `RESPONDER_ACTIVE_PRESS_IN` or `RESPONDER_INACTIVE_PRESS_IN`.
Invoked when the item is long pressed - meaning the interaction ended by letting up while the item was in `RESPONDER_ACTIVE_LONG_PRESS_IN`.
Invoked when the item should be highlighted.
Invoked when trying to connect
Invoked while deciding if the component should be updated as a result of receiving new props, state and/or context.
Invoked with the new value when the value changes.
Invokes `console.error()` with the specified arguments.
Invokes `console.log()` when available.
Invokes a remote method that is specified as an export of a .js file.
Invokes all enqueued callbacks and clears the queue.
Invokes interceptor with the obj, and then returns obj.
Invokes the success callback once with the latest location info.
Invokes the success callback whenever the location changes.
Invokes the terminal "beep" sound once per second on every exact second.
Is a stack of stacks, where the first element in each substack is a CallExpression.
Is accessing to eval (excludes direct calls to eval)
Is currently only supported on android.
Is currently used by lib/config.js to find .eslintrc and package.json files.
Is currently used by lib/ignored_paths.js to find an .eslintignore file.
Is not transpiled, allow `var` and console usage.
Is used to store information like "isRewritten".
Issue onresize to the sidebar element, its size won't change.
It *must* be the case that every `rootNodeID` always maps to the exact same `tag` forever.
It accepts a map of all of the different types of events that the emitter can emit.
It accepts an object mapping of style properties to values.
It accepts event listeners and DOM properties that are valid according to `DOMProperty`.
It adds a necessary unique requestId to each network request that can be used to abort that request later on.
It adds a null sentinel to the updatePayload, for each prop key.
It allows each concrete provider to provide customized debugging types, actions and UI.
It also allows the ability to add new primitives, ranging from Buffer to NuclideUri that are not handled at the transport layer.
It also includes server changes that break older clients.
It also indexes by height, and is used to convert between height and line object, and to find the total height of the document.
It also keeps cowboy devs at bay from introducing exotic syntax, stage 0 features, and/or obscene module systems like Haste.
It also moves any leading and trailing markers outside of the parenthesis.
It also relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.
It also removes the password if provided, and only retains the remote server command if it is not the default.
It always refers to the navigation context the event handler has been attached to as opposed to event.target which identifies the navigation context on which the event occurred.
It analyzes the geometry of elements, and observes when another responder (scroll view etc) has stolen the touch lock.
It assumes that we've input the unsigned value 0xff80.
It caches data fetched from an HgService.
It calls onFailure when some data is unabled to be satisfied from cache.
It calls onSuccess when all the data has been loaded into memory.
It can also be a function.
It can be a subset if certain fields are impossible to create on the client (and if views are expected to handle the data inconsistency).
It can be a superset of the actual response payload if certain fields that are affected have not been queried by the client, yet.
It can be modified to change the final behavior of "check".
It can be used as the thickness of a border or division between two elements.
It can be used to store accumulations or anything else that the callback might find relevant.
It can be used to test a test.
It can remove its own subscription.
It cannot be a directory.
It compiles a new normalized keymap, and then updates the old object to reflect this.
It computes a key based on a secret key with a public component (opponent's public key or curve base point if not given) by using scalar multiplication.
It contains a process that's created using the provided factory upon subscription.
It contains common properties and methods to any event.
It could be different than the given path if the file is a symlink or exists in a symlinked directory.
It currently returns an Observable just to circumvent the 60s service timeout for Promises.
It definitely makes sense that the lines we get are 1-based and the columns are 0-based...
It did not apply, cancel editing.
It differs from BasicSourceMapConsumer in that it takes "indexed" source maps (i.e. ones with a "sections" field) as input.
It does not actually perform any backend operations.
It does not remove arbitrary extra new lines.
It does not take into account symlinks (for now).
It doesn't complete until the process exits (or errors).
It doesn't matter if nothing changed, we'll set it anyway.
It doesn't matter what the search term is.
It emits "entry" events, which provide a readable stream that has header info attached.
It emits events when things change that you can subscribe to.
It encodes the source fragment, initial variables, and a mapping from variables in the composing query's (or fragment's) scope to variables in the fragment's scope.
It exists from the moment the quick-open UI becomes visible until it gets closed, either via file selection or cancellation.
It exists, but maybe not how we need it
It exports the FS on http via the endpoint: http://your.server:your_port/fs/method where method is one of readFile, writeFile, etc.
It falls back to setTimeout on devices that support CSS transitions but not raf (e.g. Android 4.2 browser) - since these environments are usually slow, we are giving it a relatively large timeout.
It fetches all non-yet-fetching dependencies with _fetch.
It handles the last case body as broken if `default` chunk does not exist.
It handles the specific actions needed to finish setting up the binding context.
It happens in Safari, that getter is still called after property was defined with a value, following workarounds that
It happens when piping command to "head" util
It has been adapted here for stricter adherence to RFC 3986
It has no fractional component and that it does not exceed the maximum allowed value.
It has special keys `_args` (the remaining args from `argv`) and `_order` (gives the order that options were specified).
It has to be on any parent directory of the cli.
It has to return a non-null node, but it may be the same instance as it was called with.
It holds references to DOM nodes and display-related state.
It implements the same interface as GitRepository, (https://atom.io/docs/api/latest/GitRepository) in addition to providing asynchronous methods for some getters.
It improves the greppability of the code, 2.
It includes: (1) An entry to enable/disable each feature - called "nuclide.use.*".
It is a Syntax Error if PropName of MethodDefinition is "constructor" and SpecialMethod of MethodDefinition is true.
It is a Syntax Error if PropName of MethodDefinition is "prototype".
It is a simple multicast mechanism on top of which extra functionality can be composed.
It is able to avoid re-rendering and directly set the attributes that changed.
It is an implementation detail that devtools should not know about.
It is an ugly unfortunate mess of history.
It is analagous to `RelayQueryTransform` with the main differences as follows: - there is no `state` (which allowed for passing data up and down the tree).
It is common practice to put libs under one of these dir names
It is different from event.currentTarget when the event handler is called during the bubbling or capturing phase of the event.
It is duplicated here to handle tarballs that are created using other means, such as system tar or git archive.
It is expected to reject.
It is however not recommended to use the static API and the component for the same prop because any value set by the static API will get overriden by the one set by the component in the next render.
It is ignored when a system icon is defined.
It is implemented as a meta-marker-object controlling multiple normal markers.
It is important that this has a lower priority than the handler from fb-diffs-and-tasks.
It is important to kick controller lifetime after apps are instantiated.
It is impossible to create the subscription and pass it in - this method must be the one to create the subscription and therefore can guarantee it is retained in a way that will be cleaned up.
It is incorrect to continuously take all active *and* recently moved touches, find the centroid, and track how that result changes over time.
It is inside if: the polygon winds around it in a clockwise direction.
It is necessary for this to be called during the wathcer's dependency collection phase because we want the v-for to update when the source Object is mutated.
It is needed in order to move 'visually' through bi-directional text -- i.e., pressing left should make the cursor go left, even when in RTL text.
It is not a communication protocol per se.
It is not sufficient to assign `setImmediate` to `requestFlush` because `setImmediate` must be called *by name* and therefore must be wrapped in a closure.
It is not sufficient to exit the domain, because domains exist on a stack.
It is passed as a prop to any component rendered by NavigatorIOS.
It is possible for the path to be above the root.
It is possible that the error is from a configuration comment in a linted file, in which case there may not be a config set in this ruleSetIdx.
It is possible to parse multiple files into a single AST by passing the tree produced by parsing the first file as `program` option in subsequent parses.
It is recommended not to cache the result of this function in case the user updates his or her preferences in Atom, in which case the return value will be stale.
It is recommended that it be the name of the provider's package.
It is recommended that you use an abstraction on top of AsyncStorage instead of AsyncStorage directly for anything more than light usage since it operates globally.
It is recommended to name your tasks for easier async debugging.
It is relativized based on the path of the source code.
It is safe to call `removeImageForTag()` without first calling `hasImageForTag()`, it will simply fail silently.
It is safe to call cancel even if no connection is started
It is set on all token types that can be followed by an expression (thus, a slash after them would be a regular expression).
It is somewhat obscure, because it works in character codes rather than characters, and because operator parsing has been inlined into it.
It is supposed to run in CI environment, not on a developer's machine.
It is the interface that other Atom packages will use to access Mercurial.
It is the sum of communication and services API.
It is the user's responsibility to make sure that the private key is a uniformly random, secret value.
It is up to the listeners to determine any necessary deltas required for their use-case.
It is used only by "bower info".
It is used to add generic typing and respective type inference where available.
It is used to bootstrap a forked process.
It is used to distinguish for ( var i in ...
It is useful for matching pressed keys.
It isn't possible to produce an "empty" ref query dependency with `Relay.QL`, but in order to be future-proof against this possible edge case, we create such a query by hand.
It just did return false, so we can stop suppressing now
It leaves last matching endpoint.
It looks for programming errors.
It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)
It loops over all of the valid configuration filenames in order to find the first one that exists.
It makes a looping path.
It makes network requests that never return in a test env.
It makes new unreachable segment, then it set the head with the segment.
It makes single-touch gestures resilient to extra touches, and can be used to recognize simple multi-touch gestures.
It may be that some of the nodes have already been removed, or that new nodes might have been inserted in the middle, for example by a binding.
It means that we can accept ranges as targets
It must add the last segment into `brokenForkContext`.
It must be a primitive type -- just return it.
It must be an integer greater than zero.
It must be called with 'this' set to the provider instance.
It must be removed from the list of command-line arguments passed to libclang.
It mutates the first object and also returns it.
It needs to be connected to a Wall object that can send JSONable data to the bridge on the other side.
It notifies your component when it should give feedback to the user.
It only has function scope.
It only supports static images.
It only works if the arrow is on the same line as the arguments and there's no strange noise (comments) in between.
It probably belongs where the key checking and instantiateReactComponent is done.
It processes each prop and adds it to the updatePayload.
It provides methods for scheduling queries (`run`), force-fetching queries (ie.
It really seems to do the wrong thing.
It registers a watcher with the expression and calls the DOM update function when a change is triggered.
It registers the head segment to a context of `break`.
It registers the head segment to a context of `return`.
It registers the head segment to a context of `throw`.
It requires each resolver defined in config.resolvers and calls its "match" to check if given resolves supports given decEndpoint
It retuns a token in a JSLint-compatible format.
It returns a minimal set of queries that will fulfill the difference, or an empty array if the query can be resolved locally.
It returns all semver versions.
It returns the field name without any calls.
It returns the paths relative to the directory in which this command is run.
It returns the status of only files under the given path.
It returns the successor of v on this contour.
It runs `apm test` under a timeout to ensure that the test terminates.
It runs in response to DOM events (click) and changes in checkedValue.
It runs in response to changes in the bound (checked) value.
It seems a linked list but it is not there will be only 2 of these for each stream
It seems strange for Flow to report errors in one place when run from one root, and not report errors in that same place when run from another root.
It seems that if they are killed, the code is null and the signal is 'SIGTERM'.
It seems to be a special case of "a file present in a parent directory" above.
It should also make things faster, as we no longer have to consider whether the text node might be bindable.
It should also work if we fetch each one separately.
It should be as if those touches do not exist.
It should be noted that our approach makes it super simple to manage your gadget state using React (`setState()`) but doesn't require it.
It should be used instead of LocalStorage.
It should complain about double injections.
It should hide provider2 and enter a distraction-free mode where it will restore both
It should just return elements now.
It should not error out
It should not fail on enosys ever, as this just indicates that a fs doesn't support the intended operation.
It should not technically be optional in the Babel/Acorn AST format, but it must be optional in the Esprima AST format.
It should only return exit codes.
It should still be possible to add items to the submenu after it has been cleared out.
It should technically live in core's test suite but I'll leave it here to indicate that this is an issue that needs to be fixed.
It should work when invoking as a Mixin.
It shows an error when issuing `bower install` and no bower.json is present in current directory
It simply passes the functions defined at construction to a new data source with the data specified.
It simply renders rows passed as children in a separate recycler view cells similarly to how `ScrollView` is doing it.
It specifies whether the children are visible or not.
It starts by sorting the words by length.
It starts recursive fetching of targets.
It stores selected packages in the this._dissected array.
It takes an object with `type` property and extra data depending on the `type`.
It takes an offset integer (into the current `input`) to indicate the location of the error, attaches the position to the end of the error message, and then raises a `SyntaxError` with that message.
It throw exception here
It trades a neglibable overhead in general case for a large speedup in case of mappings being added in order.
It turns out that returning an HTMLElement with a getTitle() method is sufficient to add a pane with the result of getTitle() as the title for the pane.
It updates the version in podspec/json/gradle files and makes sure they are consistent between each other After changing the files it makes a commit and tags it.
It uses timestamp-based caching and partial updates, because it is a monster.
It was later adapted to RSVP which made further amendments.
It will add the necessary requestId, so that you don't have to generate it yourself.
It will also recover from `scribe_cat` failure automatically.
It will be called with the up to date component arguments (state, props, context).
It will be compared in `shouldComponentUpdate`.
It will be rerendered when the routes change.
It will break if node contains any sort of circular structure.
It will not be altered in any way.
It will not be invoked again until `executeTask` has been invoked.
It will not however check the signature, or the keyId format as those are specific to your environment.
It will not touch any elements above this one.
It will only have an effect on API 21+.
It will only match dot entries if it starts with a dot, or if dot is set.
It will receive the route object in the `route` prop, a navigator, and all of the props specified in `passProps`.
It will reset the debugger agent.
It will return false for other array-like objects like Filelist.
It will set the registry's `rule` property to an object having rule names as keys and an array of registryItems as values.
It will take the first one.
It will use the same element
It works by creating a new constructor that has the same prototype as the original constructor, and simply applies the original constructor directly to 'this'.
It works by rendering a subset of rows and replacing offscreen rows with an empty spacer, which means that it has to re-render rows when scrolling back up.
It would be annoying if the user had to save before using the jump-to-definition feature to ensure he or she got accurate results.
It would be nice if it would use the path for filtering, as currently the client has to do the filtering.
It would be nice to store the information on the container (Pane, PaneAxis) itself, but Atom doesn't give us a way to persist metadata about those.
It'll be slightly off from native, but better than glitching out.
It's a balanced tag, so skip immediately to the end of this virtual set
It's a different instance from the next loop step's.
It's a named template - clear the element
It's a perf optimization.
It's a sad state of affair, really.
It's an alternative to `Array.prototype.filter` that accepts an async function.
It's an alternative to `Array.prototype.some` that accepts an async some function.
It's an anonymous template - store the element contents, then clear the element
It's as close as you can get to Atom's path.
It's attractive to try to do a default serialization but that's probably a bad idea because it could be costly and confusing to serialize a bunch of unneeded stuff.
It's best to store the information in this method and then take any action at a later point (either in `keyboardDidShow` or other).
It's better to have it running at faster speed than jumping to the end.
It's better to just leave the existing outline visible until the new results come in.
It's better to use .match().
It's common for client code to pass the same options into both recast.parse and recast.print, but the Printer doesn't need (and can be confused by) options.sourceFileName, so we null it out.
It's expected DOT arrows.
It's fast, but is of unspecified quality.
It's fine the user connected to a different project on the same host: we should still be able to restore this using the new connection.
It's hard to handle JSON in a safe manner without inspecting it at runtime, hence the any
It's impactful to memoize our requires here since these commons are so often used.
It's important that only one instance of this function runs at any time.
It's important that we build the array of ancestors before calling any event handlers, because event handlers can modify the DOM, leading to inconsistencies with ReactMount's node cache.
It's important to make sure that the buffer hasn't already been destroyed.
It's just less weird than some kind of placeholder.
It's necessary to get them both in one function because items don't have links back to their parent.
It's not actually needed for things to work correctly.
It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the compiled file.
It's not an error to finalize a type more than once, but only the first call to .finalize does anything.
It's not guaranteed to remove all markers.
It's not part of the interface definition for a general binding provider.
It's not properly implemented in canvas mode.
It's not safe to use value for number literals that would lose precision.
It's not silenceable and has no effect, so just ignore it.
It's not smart to choose a naive heuristic like "log all string arguments" because services such as Flow take the unsaved file contents as an argument, which would clutter our logs.
It's not spec-compliant.
It's now a different DOM node.
It's possible for state to be mutable but such change should trigger an update of the owner which would recreate the element.
It's possible that node is newly-created (not parsed by Esprima), in which case it probably won't have a .loc property (or an .original property for that matter).
It's possible that the URI opens before the remote connection has finished loading (or the remote connection cannot be restored for some reason).
It's possible that the element exists but doesn't have a component.
It's possible that the number of rows decreased by more than one increment could compensate for.
It's possible to end up with dangling processes if pipe isn't implemented correctly.
It's possible to overwrite properties followed by it.
It's prefer that mixins determine state in this way, having the class explicitly mix the state in the one and only `getInitialState` method.
It's recommended to use one of the static methods to generate that dictionary.
It's safeafe if the reference matches one of the following condition.
It's similar to `else` blocks.
It's still not a complete check if some flags with spaces got added.
It's the same behavior as without this statement except with a better message.
It's typically full of platform-specific stuff like symlinks and .cmd files anyway.
It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing
It's unbalanced, so start capturing from this point
It's unclear why the 1-based to 0-based indexing works the way that it does, but this has the desired effect in the UI, in practice.
Item is non-scalar (array or object), encode its numeric index.
Item is removed from queue.
Items comes with a few predefined system icons.
Items with lower priority values appear earlier in the context menu (i.e., items appear in numerical order with respect to priority).
Iterate backwards through tiesToBreak, examining the gaps between the tied comments.
Iterate each node in pre-order.
Iterate in reverse so that we can't get tripped up by the items we're adding.
Iterate over all defined fields of an object, including those missing or undefined, passing each field name and effective value (as returned by getFieldValue) to the callback.
Iterate over each mapping between an original source/line/column and a generated line/column in this source map.
Iterate over invisible nodes beyond the upper bound of viewport.
Iterate over results to get totals
Iterate over the document.
Iterate over the keys and setup the new object
Iterate over the logical lines that make up this visual line.
Iterate through each node in the program body.
Iterate through internal items.
Iterate through the line, determining if we have balanced brackets.
Iterate throught the test one at a time on new stacks
Iterate until either we run out of mappings, or we run into a mapping for a different line than the one we found.
Iterate until either we run out of mappings, or we run into a mapping for a different line than the one we were searching for.
Iteratee functions may exit iteration early by explicitly returning `false`.
Iterates from edges.length - 1 to 0
Iterates through children that are typically specified as `props.children`.
Iterating over object properties is faster than iterating over arrays.
Iteratively approximate from a nonzero starting point
Its corresponding value will be the list of matching build targets in its results.
Its name will be periodically randomized to break any code that depends on its existence.
Its output is suitable for passing it onto ReactMultiChild which does diffed reordering and insertion.
Its start and end offset
Its type is one of ObjectExpression, ObjectPattern, ArrayExpression, ArrayPattern, ImportDeclaration, and ExportNamedDeclaration.
JS Parser API: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API
JS implementation of timer functions.
JS multiply "overflows" differently from C/C++, so care is needed here.
JS objects have odd ids, skip native objects.
JSBN-specific extension
JSCompiler does not model this well.
JSHINT marks unused variables as 'unused' and unused function declaration as 'unction'.
JSNumbers aren't precise enough for this, so time is handled internally as 'msecs' (integer milliseconds) and 'nsecs' (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
JSON.parse failed, just log the contents probably a naughty.
JSON.stringify and util.inspect have some collision potential as well, though less, and collision detection is expensive.
JSON.stringify can't stringify instance of Error.
JSON.stringify's replacer is not called _after_ serialization.
JSX extensions below.
JSXAttribute doesn't have any escape sequence: https://facebook.github.io/jsx/
JSXAttributes should always use double quotes.
JSXElements don't need quotes, so we need special handling.
JSXMemberExpressions can only contain identifiers so we do not allow any sort of breaking between accesses unlike in a standard member expression.
Jasmine 1.3 does not support `jasmine.objectContaining`, so we need to check the results manually:
Jasmine doesn't provide a way to test that the fn was invoked with scope.
Jasmine has trouble spying on properties supplied by getters, so to make it work we have to get the value, delete the getter, and set the value as a property.
Jasmine toThrow() does not support calling async function using await so manually checking exception instead.
Jasmine won't trigger temp's cleanup handler.
JavaScript Array "length" is bound to an unsigned 32-bit int.
JavaScript code in this file should be added after the last require_* statement.
JavaScript does not have block scope.
JavaScript engine analysis
JavaScript micro-templating, similar to John Resig's implementation.
Jest does not allow running only one tick, so just assert that broadcasts occurring twice means `mockCallback` was invoked separately.
Jest/Jasmine build ins.
Jobs with duplicate IDs will be skipped unless it's pushed when the queue is being flushed.
Joins two paths/URLs.
Jump backward without unmounting the current scene.
Jump by 10 when shift is down or jump by 0.1 when Alt/Option is down.
Jump forward to the next scene in the route stack.
Jump to line/column if provided.
Jump to the root of this React render tree
Just `result.output` has BOM.
Just a dummy value to check for.
Just a standard identifier.
Just an error message.
Just assert that it's already there, otherwise raise a warning.
Just closing its pane and would potentially leave siblings which, presumably, the user would then have to also close.
Just continue through, and bail out if we try to use it.
Just duck typing here.
Just encode everything.
Just for convenience.
Just give it a cold observable and let it handle the rest.
Just ignore inspector frames.
Just ignore that, because it doesn't matter.
Just in case the AST has been modified to contain falsy "statements," it's safer simply to skip them.
Just in case there's a race between the update of the root keys and the cwdKey and the cwdKey is set too early - set it again.
Just let git fail if it turns out that the commit-ish is invalid.
Just like the parent property, some operations require an ability to find siblings easily.
Just make a dummy prop object with only the flattened style
Just need to override the parent's "Not Implemented" error-thrower.
Just output a friendly reminder message for the rest of the process
Just pass the start index.
Just re-position the end anchor to the end of the container.
Just set the default, so it can be overridden.
Just simple syntactic sugar around flattenChildren().
Just so we have a known starting state for the tests
Just stashing it in the data at this point.
Just the generated position.
Just to ensure this gets packaged, since its only caller is from Native.
Just to make sure the JS gets packaged up.
Just to suppress the style mutation warning
Just use cached values.
Just wait until we get a master
KEY EVENTS Run a handler that was bound to a key.
KO 1.2.1 wrote numerical values to element.value.
Karney, http://geographiclib.sourceforge.net/ See lib/geographiclib/LICENSE for details.
Keep (de)identation O(lines) time.
Keep a copy of the old load method
Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position
Keep a running string of stderr, in case we need to throw an error.
Keep attempting to connect.
Keep both the (mapped) and old keys if they differ, just as traverseAllChildren used to do for objects as children
Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment
Keep in mind that ScrollViews must have a bounded height in order to work, since they contain unbounded-height children into a bounded container (via a scroll interaction).
Keep in sync with .data-grid col.corner style rule.
Keep in sync with .network-blue-divider CSS rule.
Keep in sync with .network-red-divider CSS rule.
Keep in sync with LayoutStyleConstants.h PseudoId enum.
Keep in sync with the Python server.
Keep in sync with the clang Python binding (../fb/lib/python/clang/cindex.py) The order of the keys matches the ordering in cindex.py.
Keep looping until it does.
Keep offset at 1 second precision
Keep order with the last array element taking highest precedence
Keep pipe for back-compat
Keep references to cloned scripts for later restoration
Keep selection even if the node is not in the current viewport.
Keep settings up to date with Nuclide config and precalculate options.
Keep src as a buffer so calculating its digest with crypto is fast.
Keep the Atom commands in sync with the application state.
Keep the atom commands up to date with the registered gadgets.
Keep the field if the connection is unfetched
Keep the identity function around for default iterators.
Keep the original open editor item with a unique name until the remote buffer is loaded, Then, we are ready to replace it with the remote tab in the same pane.
Keep the side-bar hidden when there is no active view instance.
Keep them as a list so we can fill in when nonull is set.
Keep this file in vanilla JavaScript so we can add perf measuring hooks and not have to worry about accounting for transpile costs or `import` hosting.
Keep this list in sync with RCTRootViewIntegrationTests.m
Keep this list in sync with UIExplorerIntegrationTests.m
Keep track of how many mouse listeners were returned for the text editor so we know when it's safe to actually dispose it.
Keep track of the diagnostics created by each text buffer.
Keep track of the last colon that we see.
Keep track of the provided types, union the types if they already exist, which allows for prototype subclasses to provide more types.
Keep track of which events have ever been used, for event optimization
Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it
Keeps track of allocating and associating native "tags" which are numeric, unique view IDs.
Keeps track of the current owner.
Kennedy "A Simple, Fast Dominance Algorithm" Softw.
Key event with given key identifier.
Key is the name of the option and value is a description string that will be displayed.
Key should be joined to obj key
Key should be joined to object key
Key should be overridden
Key value gets bigger incrementally.
Key/val minification may have aliased that key to be 'xa12'.
KeyPress is deprecated, but its replacement is not yet final and not implemented in any major browser.
Keys are keywords (there are for every keyword).
Keys default to indices.
Keywords that cannot follow a comma operator.
Kick animation on first frame.
Kick off a fetch to get the current bookmark.
Kick off all the arc execs at once, then await later so they all happen in parallel.
Kick off the DOM ready check even if the user does not
Kick this off early, so we don't need to repeat this on every call.
Kill the Clang server for a particular source file, as well as all the cached compilation flags.
Kill the appropriate scope markers.
Kill the search process on dispose.
Kills the nuclide server associated with `connection`, and closes the connection.
Kind of weird to have a default max of Infinity, but oh well.
Kinds of map iterations 23.1.5.3
Kloss  You should have received a copy of the license along with this program.
Kloss, Michele Bini  You should have received a copy of the license along with this program.
Kloss, Michele Bini, Ron Garret  You should have received a copy of the license along with this program.
Kloss, Ron Garret  You should have received a copy of the license along with this program.
Kludge to make sure the styled element lies behind the selection (by z-index)
Kludge to prevent 'maybelse' from blocking lexical scope pops
LINE DATA STRUCTURE Line objects.
LINE NUMBERS Re-align line numbers and gutter marks to compensate for horizontal scrolling.
LINE UTILITIES Find the line object corresponding to the given line number.
LINE WIDGETS Line widgets are block elements displayed above or below a line.
Labels are going to be over their grid lines.
Labels are going to be under their grid lines.
Last call should not trigger flags.
Last character of the reprinted node.
Last fire value (for non-forgettable lists)
Last reported number of active touches.
Last resort, use old skool env vars
Last two args are only used by updateDoc, since they have to be expressed in the line numbers before the update.
Last-Modified header cache for next request
Lastly, project and absolute.
Later, we do an Object.keys() on these.
Launches an alert dialog with the specified title and message.
Layout 1: Measure total and normal crumb sizes
Layout 2: Measure collapsed crumb sizes
Layout 3: Measure collapsed crumb size
Lazily allocate the array to conserve memory.
Lazily allocates the refs object and stores `component` as `ref`.
Lazily computed and memoized private properties
Lazily create the child cache.
Lazily create the flux stuff.
Lazy execute the domain module.
Lazy require these functions so that we could spyOn them while testing in ServiceIntegrationTestHelper.
Lazy-add the new callback in a way that preserves old ones
Lazy-loading of expensive libs like babel.
Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
Leading and trailing underscores are commonly used to flag private/protected identifiers, strip them
Leading comments are defined as:  - let N be the number of leading comments numbered 0 to N-1 - if there is space betwee comment N-1 and first, comments 0 to N-1 - else comments 0 to N-2
Leading comments are invalid trailing comments.
Leave WebComponents undefined.
Leaves enough room in the environment for implementing your own: 1.
Leaves remote URI's alone.
Leaving it in classic as a safety precaution.
Leftover arguments need to be pushed back.
Legacy API: addRequest(req, host, port, path)
Legacy browsers don't have a path attribute on native events
Legacy events does not support event bubbling and reconciliation.
Legacy hook TODO: Warn if this is accessed
Legacy members portred from `Navigator`.
Legacy methods for backwards compatibility.
Legacy static members.
Lendiff is the amount of lines added or subtracted by the change.
Length is the combined lengths of all the buffers in the list.
Lengthen the array for every element, matched or not
Let `testPath` be `undefined` so the path will be taken from the active `TextEditor`
Let both work for now while we iron it out TODO (evv): rename timeStamp to timestamp in internal code
Let browser handle Ctrl+/Ctrl- shortcuts in hosted mode.
Let the component unmount before propagating the final message change to the model, So the subsequent change event avoids re-rendering this component.
Let the drag handler handle this.
Let the watchman Client find the watchman binary via the default env PATH.
Let's guess where it is
Let's just console log it anyway.
Let's leave the scopeChain empty for now.
Let's mock it so that we can run the tests.
Let's return a descriptive comment then.
Let's the build system minify keys without losing the ability to dynamically use key strings as values themselves.
Lets hook into one of them:
Leverage slice if possible
Leverage the exponentiation by squaring algorithm for a faster repeat.
Lexical analysis and token construction.
Licensed under the MIT License.
Lie about our children to prevent expanding on double click and to collapse shorthands.
Lie about our children to prevent expanding on double click and to collapse subproperties.
Life cycle and private methods below.
Lightweight form of highlight -- proceed over this line and update state, but don't save a style array.
Like .check, except that failure triggers an AssertionError.
Like Array.prototype.some, the final result is either true or false to indicates whether the callback returned true for any element or not.
Like GNU ncurses "clear" command.
Like JavaScript's built-in Error class, but supports a "cause" argument and a printf-style message.
Like JavaScript's built-in Error class, but supports a "cause" argument which is wrapped, not "folded in" as with VError.
Like ModuleSpecifier, except type:"ExportSpecifier" and buildable.
Like ModuleSpecifier, except type:"ImportSpecifier" and buildable.
Like Object.keys, but aware of what fields each AST type should have.
Like `Rx.Observable.fromPromise`, but the resulting Observable sequence does not automatically complete once the promise resolves.
Like `String.prototype.join` except for SourceNodes.
Like `addAllParentDirectoriesToCache`, except it removes all parent directories.
Like d3.dispatch, but for custom events abstracting native UI events.
Like most implementations of mkdirp, if it fails, it is possible that directories were created for some prefix of the given path.
Like scryRenderedDOMComponentsWithClass but expects there to be one result, and returns that one result, or throws exception if there is any other number of matches besides one.
Like scryRenderedDOMComponentsWithTag but expects there to be one result, and returns that one result, or throws exception if there is any other number of matches besides one.
Like slide.chain, but runs all commands even if they have errors, also throws away results.
Likely requires a fix to 'request'.
Likewise for "asdf"in obj.
Likewise, within the root use the property to efficiently find the needed node
Limit that we get worried about randomness.
Limit the length of uris and headers to avoid a DoS attack on string matching
Limit the number of active Clang servers.
Limit the number of dividers to one per pixel.
Limit the total memory usage of all Clang servers.
Limits async function execution parallelism to only one at a time.
Limits the maximum number of characters that can be entered.
Line length settings.
Line separator U+2028 and Paragraph Separator U+2029 are the potential issues here, as they can show up in JSON but must be escaped in JS.
Line/start/end are 1 based.
LineTerminator is an end of singleline comment
Linear inheritance hierarchy.
Lines are stored 0-based
Lines count as hidden when they are part of a visual line that starts with another line, or when they are entirely covered by collapsed, non-widget span.
Lines of context to show around each preview block.
Lines with gutter elements, widgets or a background class need to be wrapped again, and have the extra elements added to the wrapper div
Lines with gutter elements, widgets or a background class need to be wrapped, and have the extra elements added to the wrapper div
Link exists, check if it points to a folder that still exists
Link to the project's GitHub page: https://github.com/pickhardt/coffeescript-codemirror-mode
Linker for an skipped text node.
Linker functions return an unlink function that tearsdown all directives instances generated during the process.
Links the variable and the reference.
Lint all files with each rule config in the registry
Linter APIs, for compatibility with the Atom linter package.
Lints Markdown files.
List all (watched) files in the given directory.
List all of the counters that have been created.
List all packages when in interactive mode + json enabled, and always when in non-interactive mode
List every parameters possible on a test case that are not related to eslint configuration
List extracted from the atom-styleguide package.
List of HTML entities for escaping.
List of asset types that a component can own.
List of bookmarks at this revision.
List of children that will be moved or removed.
List of items that have been added to this context menu in the order they were added.
List of most recently used query strings, used for pruning the result cache.
List of segments where each segment is a continuous chunk.
List of supported methods.
List of template parameters (functions/methods only).
List only 1 level deep dependencies
ListView - A core component designed for efficient display of vertically scrolling lists of changing data.
ListView can be notified when a row is being highlighted by calling highlightRow function.
ListView wraps ScrollView and so takes on its properties.
Listed in order of severity.
Listen for 'next', 'error', and 'completed' events.
Listen for a single message, and resolve or reject a promise on that message.
Listen for connections.
Listen for file tree context menu file item events to open the diff view.
Listen for in-editor context menu item diff view open command.
Listen for menu item workspace diff view open command.
Listen for removed connections and kill the debugger if it is using that connection.
Listen for run events on directories in the file tree
Listen for run events on files in the file tree
Listen for switching to editor mode for the active file.
Listen for touchmove and touchend on the target of touchstart.
Listen for watcher changes to route them to watched files and directories.
Listen on the given `event` with `fn`.
Listen to DOM events during the bubble phase.
Listen to DOM events during the capture phase.
Listen to incoming messages
Listen to the close event instead of exit They are similar but close ensures that streams are flushed
Listen to wheel events in order to try and update the viewport on time.
Listeners and IDs are two parallel arrays that are always in sync.
Listeners and Instances are two parallel arrays that are always in sync.
Listening to the `notification` event and invoking `popInitialNotification` is sufficient
Listens to window scroll and resize events.
Little red bubble that sits at the top right of the icon.
Load 1 story with message
Load 2 stories without message
Load a url into a page
Load all of the grammars synchronously because the top-level load() function should be synchronous so that it works as expected with require().
Load all rule modules from specified directory.
Load and parse a JSON config object from a file.
Load any missing dependencies in the given tree
Load any packages that might have been passed in from the command line.
Load development dependencies into the given tree
Load entry module and return exports
Load expensive libs so we don't skew the results.
Load feature deserializers and require them.
Load nuclide-node-transpiler to start transpiling.
Load service configs, and resolve all of the paths to absolute paths.
Load the "config.gypi" file that was generated during "configure".
Load the ES6+ server code now that the transpiler is in place.
Load the benchmark we need to (continue to) run.
Load the definitions, cached by their resolved file path.
Load the file contents locally or remotely.
Load the module directly from a string,
Load the referenced file and merge the configuration recursively.
Load the service parser module.
Load waitsForPromise into global.
Loading has completed.
Loads a JSON configuration from a file.
Loads a JavaScript configuration from a file.
Loads a YAML configuration from a file.
Loads a configuration file from the given file path.
Loads a configuration file regardless of the source.
Loads a configuration from a package.json file.
Loads a legacy (.eslintrc) configuration from a file.
Loads a plugin with the given name.
Loads all plugins from an array.
Loads and registers all rules from passed rules directory.
Loads static html or a uri (with optional headers) in the WebView.
Loads the default environments.
Local variable so that the type refinement holds in the onClick handler.
Localstorage attempts to return the localstorage.
Locate or create the new tail.
Locate the position of the desired element
Locate the root containing the tracked node efficiently by using the child-derived containsTrackedNode property
Lock the list in its current state
Log an error and proceed as usual.
Log error and mark the directory as dirty so the failed subscription will be attempted again next time the directory is expanded.
Log instance data as a plain JS object so that it is easier to inspect in console.
Log out some stats to let the user know what happened
Log the error and continue the server crash.
Logic to work around this issue: https://github.com/atom/atom/issues/10952.
LogicalExpression (left)
LogicalExpression (right)
LogicalExpressions have cases that it goes different paths between the `true` case and the `false` case.
Logistic approximation to normal CDF around N(mean, stddev).
Logs an observable to the console.
Logs exceptions to the (native) console and displays them
London: Chapman and Hall.
Long filenames should not break stuff.
Long format for `ms`.
Long term, we need either (a) JS code to not depend on anything outside this directory, or (b) Come up with a way to declare this dependency in Buck.
Longer than DEBOUNCE_INTERVAL so when we wait for this amount of time, a debounced event will be emitted.
Look at the previous children and classify any removed scenes as `stale`.
Look for ARG_ENABLE or ARG_WITH calls
Look for a manually provided compilation database.
Look for a nearby BUCK or TARGETS file.
Look for exact match.
Look for extraneous resolutions
Look for for, while and do loops, and inserts *just* at the start of the loop, a check function.
Look for presence match, e.g. in 'static method in FooBarClass'.
Look for the final semicolon.
Look for the first colon after the start of the current method.
Look here: https://github.com/facebook/nuclide/blob/master/pkg/nuclide-diagnostics-provider-base/ for a complete list of options.
Look in the nearest node_modules directory for react-native and extract the packager script if it's found.
Look into how to fix this.
Look up the keys of the object.
Look up the name of a key as indicated by an event object.
Look up the service function.
Look up whether this option is 'selected'
Look up whether this option is 'selected' via context
Looks for a node with the given URI in the sub branch - returns null if not found
Looks for a node with the given URI in the sub branch - returns the deepest found ancesstor of the node being looked for.
Looks like a bug to me, although it's probably a harmless one.
Looks like emitAllMessages does not actually emit all messages.
Looks up the destination.
Looks up the plugin for the supplied event.
Looks up the value identified by `key` in `state.data`.
Lookup module names and resolve them by calling the definition function if needed.
Lookup the MIME type for a file path/extension.
Lookup the `skipComments` option, which defaults to `false`.
Loop because an observable's value might in turn be another observable wrapper
Loop over that, wrapping quotes around any that have spaces, and writing them to stdout.
Loop over the elements in the view, syncing cur (the DOM nodes in display.lineDiv) with the view as we go.
Loop over the listed "internals", and check them as well.
Loop through all the selected options
Loop through children appending to the array until we hit depth
Loop through the hierarchy, in case there's any nested components.
Loops are addressed in popLoopContext().
Loosely check result is an array of DOM nodes
Looseness is ignored here.
Low-level API into merlin service useful for debugging and for prototyping on top of bleeding edge Merlin branches.
Lowercase jquery is used because AMD module names are derived from file names, and jQuery is normally delivered in a lowercase file name.
Lurking file should have been removed
MAC normalization format version
MD5 hash function for Node.js.
MDN Links  These links are for Bonfires.
MDN says that any new values should be appended to existing values.
MISC UTILITIES Number of pixels added to scroller and sizer to hide scrollbar
MODE DEFINITION AND QUERYING Known modes, by name and by MIME
MODE STATE HANDLING Utility functions for working with state.
MOUSE EVENTS Return true when the given mouse event happened in a widget
MOVE SUBTREE Shifts the current subtree rooted at w+.
Mac OS X (El Capitan) prints this warning when loading the libclang library.
Magic theory: IE8 supposedly differentiates between added and updated nodes when processing innerHTML, innerHTML on updated nodes suffers from worse whitespace behavior.
Magnitude of offset indicates the number of offset lines required for version.
Main application component.
Main world context should always go first.
Maintain a list of states to process after each read completes.
Maintain iOS 7 compatibility which doesn't have JS typed arrays.
Maintain original order
Maintain the back-end logic of old timeline, skip console.time() / console.timeEnd() that are not properly nested.
Maintain the order fetched from the FS
Maintains a map from the client id to the server id of optimistically added nodes
Make "aSourceFile" relative if an absolute Url is passed.
Make "hasFocus" an alias
Make "ko.computed" an alias for "ko.dependentObservable"
Make "rootNode" parameter optional
Make "sourceFile" relative if an absolute Url is passed.
Make Array say that they are Array
Make JSHINT a Node module, if possible.
Make RQLTransform ignore this call.
Make RegExps say that they are RegExps
Make `delete` a no-op to effectively create a read-only buffer.
Make a PropertyPreview from the RemoteObject similar to the backend logic.
Make a cancellable version of an async callback.
Make a caret selection inside the new element if there isn't a range selection and there isn't already a caret selection inside.
Make a child link function for a node's childNodes.
Make a copy because shiftRight is destructive
Make a copy of the current contents and ensure it's an array
Make a dummy file instead of using slower gitPrepare()
Make a group TreeElement now that there are 2 profiles.
Make a path relative to a URL or another path.
Make a writable jQuery.Event from the native event object
Make absolutely sure the calling code does not attempt to reprint any nodes.
Make an HEAD request to the source
Make an rs_signer for HMACs, not a rs_signFunc -- HMACs digest their data in chunks rather than requiring it all to be given in one go at the end, so they are more similar to signers than signFuncs.
Make an update for markup to be rendered and inserted at a supplied index.
Make an update for moving an existing element to another index.
Make an update for removing an element at an index.
Make an update for setting the markup of a node.
Make an update for setting the text content.
Make any React component Animatable.
Make backspace key presses in the text editor a no-op to disallow editing (read-only).
Make both sides relayout boundaries.
Make built source available inside npm package
Make canonical dir relative
Make dates with properties first say the date
Make delete key presses in the text editor a no-op to disallow editing (read-only).
Make duplicate lines a no-op to disallow editing (read-only).
Make equalTo implicitly true if it wasn't specified there is no other operator.
Make error with message first say the error
Make functions say that they are functions
Make it a const for Flow
Make it easier to expect prop values.
Make it so all of the test paths are deemed within the repo.
Make n - 1 resizers for n columns.
Make pasting in the text editor a no-op to disallow editing (read-only).
Make relative option true by default when used with paths
Make root dominator of orphans.
Make setTimeout work as expected.
Make sure 'this' is preserved
Make sure ProfilesPanel is initialized and CPUProfileType is created.
Make sure a close event on the old socket doesn't have any effect on the reconnect with a new socket.
Make sure a non-zero number of paths have been specified.
Make sure a position will be valid after the given change.
Make sure all of the pane items reflect the current state of the app.
Make sure all previous requests are caught up first.
Make sure any changes done by applyBindings or unmemoize are reflected in the array
Make sure at least one highlight is visible.
Make sure cache gets reset.
Make sure component options get converted to actual constructors.
Make sure console.error is set back at the end of each test, or else the above logic won't work
Make sure default populate won't take action.
Make sure different git references get different folders
Make sure elementForSelection is not a child of attributeValueElement.
Make sure essential globals are available and are patched correctly.
Make sure existing environment vars don't muck up the test
Make sure it rolled back the deleted edge from indices map
Make sure it's not a disconnected DOM node
Make sure it's protocol-specific
Make sure main is first in the children list.
Make sure main is the first in the children list.
Make sure navigation completed and possible console messages were pushed.
Make sure only one file watcher is created.
Make sure pauses didn't stick skipped.
Make sure progress bar has finished (floating point rounding)
Make sure textarea (and checkbox) defaultValue is properly cloned Support: IE9-IE11+
Make sure that after the third, we're back to where we started and the refs are completely restored.
Make sure that at the end of the operation the current cursor is shown.
Make sure that attribute selectors are quoted
Make sure that bin/jsx is runnable by echoing main.js.
Make sure that none of the executors overlapped.
Make sure that nothing sneaks out Record all 3 overflow attributes because IE9-10 do not change the overflow attribute when overflowX and overflowY are set to the same value
Make sure that null and NaN values aren't set.
Make sure that once we render once, we stay rendered even if incrementalGroupEnabled gets flipped.
Make sure that the "type" field was filled automatically.
Make sure that the handler has a unique ID, used to find/remove it later
Make sure that the options inside disabled selects aren't marked as disabled (WebKit marks them as disabled)
Make sure that the quotes match up.
Make sure that this path refers specifically to a Node, rather than some non-Node subproperty of a Node.
Make sure that we don't sit around waiting for lock files
Make sure that we're working with the right name
Make sure that whether the fetch succeeds or fails, the _pendingFetch field is cleared.
Make sure the .transform package method works.
Make sure the DOM node resolves properly even if we're replacing a `null` component
Make sure the `yes` process actually terminates.
Make sure the bidirectional communication channel is set up before resolving this Promise.
Make sure the bidirectional communication channel is set up before sending data.
Make sure the file watcher event runs through the system before we rebuild the bundles.
Make sure the gutters options contains the element "CodeMirror-linenumbers" when the lineNumbers option is true.
Make sure the process is killed when we get it.
Make sure the rules object exists since it is assumed to exist later
Make sure the work units get done in order
Make sure the worker is loaded.
Make sure there is a new line at the end.
Make sure there's a "top" to link to.
Make sure these are actually pane item containers:
Make sure this is cached.
Make sure times is a number
Make sure to do this after saving in the scope map.
Make sure to fire the mostRecentEventCount first so it is already set on native when the text value is set.
Make sure tracking keeps working (see stopTogether in ParallelConfig used by maybeVectorAnim).
Make sure we allow at least one server to stay alive.
Make sure we always return the smallest of these.
Make sure we call onEndReached exactly once every time we reach the end.
Make sure we can add the require() hook.
Make sure we didn't create any zero-length spans
Make sure we don't actually create a new domData key if we are actually deleting a value
Make sure we don't try get flags for non-source files.
Make sure we don't try to store or set a non-string value
Make sure we get the graceful-fs that fstream is using.
Make sure we have a chance to update all existing widgets.
Make sure we have a worker to run the JS.
Make sure we installed local version of react-native
Make sure we invalidate the messages for the current path.
Make sure we only call stop() at most once for each animation
Make sure we return at least the __dataID__.
Make sure we set .type before any other properties (setting .value before .type means .value is lost in IE11 and below)
Make sure we set the data so it isn't changed later
Make sure we set type first.
Make sure we update the tween properties later on
Make the Changes and trigger the moveToNextCallback after updating.
Make the archive lower case to match against the types This ensures that upper-cased extensions work
Make the callback - expects an editing node (table row), the column number that is being edited, the text that used to be there, and the new text.
Make the changes, replacing each context element with the new content
Make the deferred a promise
Make the drawer take the entire screen and draw the background of the status bar to allow it to open over the status bar.
Make the last element in an array take the highest precedence
Make the new number and constrain it to a precision of 6, this matches numbers the engine returns.
Make the next paths of the test.
Make the right pane 2/3 the width of the parent since console output is generally wider than the test tree.
Make the whole process to fail fast
Make these modules available to the schema author through a require shim.
Make this a bit more than the actual debounce time.
Make user object available in templates.
Makes a DOT code of a given code path.
Makes a binding like with or if
Makes a code path segment for a `SwitchCase` node.
Makes a code path segment for a `catch` block.
Makes a code path segment for a `finally` block.
Makes a code path segment for the body part of a DoWhileStatement.
Makes a code path segment for the body part of a ForInStatement and a ForOfStatement.
Makes a code path segment for the body part of a ForStatement.
Makes a code path segment for the body part of a WhileStatement.
Makes a code path segment for the left part of a ForInStatement and a ForOfStatement.
Makes a code path segment for the right part of a ForInStatement and a ForOfStatement.
Makes a code path segment for the test part of a DoWhileStatement.
Makes a code path segment for the test part of a ForStatement.
Makes a code path segment for the test part of a WhileStatement.
Makes a code path segment for the update part of a ForStatement.
Makes a code path segment from the first throwable node to the `catch` block or the `finally` block.
Makes a code path segment of the `else` block.
Makes a code path segment of the `if` block.
Makes a code path segment of the right-hand operand of a logical expression.
Makes a given segment being used.
Makes a path for a `break` statement.
Makes a path for a `continue` statement.
Makes a path for a `return` statement.
Makes a path for a `throw` statement.
Makes any easing function symmetrical.
Makes it easier to test as well as for other Node.js programs to effectively run the CLI.
Makes sure a certain child node is present in the file tree, creating all its ancestors, if needed and scheduling a chilld key fetch.
Makes sure a specific child exists for a given node.
Makes sure we update cursor and id to index map correctly based on removal time.
Makes the final path.
Makes use of `Map`'s insertion ordering, so values are irrelevant and always set to `null`.
Manages the IDs assigned to DOM representations of React components.
Manages the current code path.
Managing Cursor Position
Managing Enabled Themes
Managing Keyboard Events
Managing Keymap Files
Managing Syntax Scopes
Manipulate the cache and check if it resolves for the cached ones
Manual indexOf because it's slightly faster than native.
Manually manage hover highlight since :hover does not work in case of click-and-hold menu invocation.
Manually manipulate the menu template order.
Manually resolve all default Babel plugins.
Manually shift all values starting at the index back to the beginning of the queue.
Manually shove something into the read() buffer.
Manufactures the absolute path of a file that should pass as being within the repo.
Many are trivial to parse, some require a bit of complexity.
Many browsers/platforms do not support this, however (see http://webkit.org/b/16699 and http://crbug.com/12361).
Many files being changed may be a sign that we are picking up changes that were created in an automated way -- so in addition, there may be many batches of changes in succession.
Many host objects are `Object` objects that can coerce to strings despite having improperly defined `toString` methods.
Many layers of composite components (created with `React.createClass`) can all share the same `rootNodeID`.
Many people use restrict_root_files so watchman only will watch folders that have those listed files in them.
Map a function to a range of nodes .
Map an application action to an Array of tracking events.
Map annotations with title/subtitle.
Map application actions to tracking events.
Map contains a key corresponding to our fragment
Map data set into arrays of values keyed by distinct keyColumn values and columns.
Map does not contain a key corresponding to our fragment
Map from fake arc config dir to fake files within it.
Map from full process name to binary that starts the process We can't just re-use full process name, because it will spawn a new instance of the app every time
Map from null to something.
Map from property "standard name" to an object with info about how to set the property in the DOM.
Map keyword names to token types.
Map objects are collections of key/value pairs where both the keys and values may be arbitrary ECMAScript language values.
Map of a TextEditor to its BlameGutter, if it exists.
Map of a TextEditor to the subscription on its ::onDidDestroy.
Map of directory path to the number of modified files within that directory.
Map of line number (0-indexed) to the name that line blames to.
Map over jQuery in case of overwrite
Map this array value inside a dependentObservable so we re-map when any dependency changes
Map tokens' start and end range to the index in the tokens array
Map uses `Map`'s insertion ordering to keep files in order.
Mapping from class specification keys to special processing functions.
Mapping from event name to dispatch config
Mapping from lowercase property names to the properly cased version, used to warn in the case of missing properties.
Mapping from lowercase registration names to the properly cased version, used to warn in the case of missing event handlers.
Mapping from normalized, camelcased property names to a configuration that specifies how the associated DOM property should be accessed or rendered.
Mapping from parent IDs to initial child orderings.
Mapping from reactRootID to React component instance.
Mapping from reactRootID to `container` nodes.
Mapping from registration name to event name
Mapping from registration name to plugin module
Mappings do not contain a field for the last generated columnt.
Maps Dbgp properties to/from Chrome RemoteObjects.
Maps a URL to an identifier.
Maps a string key to a simple callback that should return a string payload to be attached to a bug report.
Maps children that are typically specified as `props.children`.
Maps clang's cursor types to the actual declaration types: for a full list see https://github.com/llvm-mirror/clang/blob/master/include/clang/Basic/DeclNodes.td
Maps flow root to the set of file paths under that root for which we have ever reported diagnostics.
Maps hack config dir to HackConnection
Maps hack root to the set of file paths under that root for which we have ever reported diagnostics.
Maps root calls to a single data ID through an indentifying arg (or EMPTY) eg.
Mark a component as needing a rerender, adding an optional callback to a list of functions which will be executed once the rerender occurs.
Mark a given record as having received data for a deferred fragment.
Mark a given record as having received data for a fragment.
Mark all edges with given id to be deleted.
Mark all non-required deps as extraneous.
Mark an instance as ready.
Mark as a direct dep of root
Mark as being fetched
Mark as conflicted so that the resolution is not removed
Mark as created if the store did not have a record but disk cache did (either a known record or known deletion).
Mark as extraneous at this point.
Mark as new so that a conflict for this target always require a choice Also allows for the target to be converted in case of being *
Mark as updated only if a record exists in both the store and disk cache.
Mark each root dependency as targets
Mark endpoint as unresolvable if the parent is also unresolvable
Mark records as created/updated as necessary.
Mark scripts as having already been evaluated
Mark text editors with a working provider with a special CSS class.
Mark that a method should not be used.
Mark the component as having rendered to null.
Mark the current path as the final node.
Mark the currently valid edge with given id to be deleted.
Mark the most recent observation regardless of if we can lock the navigator.
Mark the name as extra, since the ID is more important.
Mark the root direct children as affected.
Mark the selectors in group if necessary.
Mark this fragment for inclusion only if the given variable is falsy.
Mark this fragment for inclusion only if the given variable is truthy.
Mark this usage of the fragment as deferred.
Mark top fragment as local, and child fragment as non-local.
Markers are ordered in ascending order by line number.
Markers have links back to the lines they currently touch.
Marks `super()` called.
Marks a previous segment as looped.
Marks it as done when the promise returned by the given function is resolved or rejected.
Marks the label of a given node as used.
Markup should not change, but some lifecycle methods should be run again.
Marshal an object using the appropriate marshal function.
Marshal the result, to send over the network.
Marshalling an unexpected value throws.
Match any non-space character not matched already.
Match elements found at the specified indexes
Match elements unmatched by `matcher`
Match end of previous token to determine whether a slash is a division or regex.
Match object operator
Match text (at least two characters) that does not contain any of the above special characters, although some of the special characters are allowed to start it (all but the colon and comma).
Matches a hunk summary line as specified in the unified diff format.
Matches a regular expression (text enclosed by slashes), but will also match sets of divisions as a regular expression (this is handled by the parsing loop below).
Matches a whole line break (where CRLF is considered a single line break).
Matches dashed string for camelizing
Matches something like: textA: or textA:textB:
Matches starting with the prefix gets the highest score.
Math constants e.g. Math.PI, Math.E etc.
Math global, simple path
Math minus sign, same width as plus.
Math.random()-based (RNG)
Matrix to transform basis (b-spline) control points to bezier control points.
Max circular updates allowed in a batcher flush cycle.
Maximum depth of traversals before we consider the possibility of a bad ID.
Maximum number of levels to traverse.
Maximum number of results to render in the table before truncating and displaying a "Max results reached" message.
Maximum number of rows to render while scrolling, i.e. the window size.
Maximum size of area that can be displayed.
May be ToastAndroid.SHORT or ToastAndroid.LONG
May be null if libclang reports no spelling (e.g. for C++ files).
May be undefined in tests.
May not be consistent between clang versions.
May not send/recieve messages.
May only call when in paused state.
May resolve the component asynchronously, and perform transition based on specified transition mode.
Maybe a specific combination using all three options works
Maybe the user just deactivated that package.
Meaning is "at least and backwards compatible with"
Meaning is "reasonably at or greater than"
Meaning that the markers we place here may be in the wrong place already.
Meaningful stack-traces
Means that something is not allowed.
Meant to be called from parseTypeAnnotation.
Meant to make it simple and easy for a DiagnosticProvider to subscribe to relevant events.
Measure a bunch of lines, for browsers that compute fractional heights.
Measure width to pretty-print the output
Measured layout will be only available when the component is mounted.
Measurement can be split in two steps, the set-up work that applies to the whole line, and the measurement of the actual character.
Measurement may not have returned yet.
Measures multiple methods of a class.
Measures the `HitRect` node on activation.
Media Query Inspector.
MemberExpressions get special rules
Memoize an expensive function by storing its results.
Memoizes the `RelayQueryFragment` equivalent of a given GraphQL fragment for the given route, variables, and deferred status.
Memoizes the return value of a function that accepts one string argument.
Memory conservative (mutative) matrix math utilities.
Mercurial creates the .hg/wlock file before it modifies the working directory, and deletes it when it's done.
Mercurial history emails can be invalid.
Merely touch starting is not sufficient for a scroll view to become the responder.
Merge Tail into tree.
Merge all the properties of source into target, source wins in conflict, and by default null and undefined from source are applied
Merge common CLI options into the config
Merge head component with prevIncompletedMessage if needed.
Merge in environment-specific globals and parserOptions.
Merge in the feature's config
Merge the attributes of two elements, and make sure the class names are merged properly.
Merge this change into the last event
Merge two objects, but throw if both contain the same key.
Merge two option objects into a new one.
Merge with the next range.
Merge with the pending element if it exists, otherwise with existing element props.
Merges a given arguments of maps into one Map, with the latest maps overriding the values of the prior maps.
Merges a partial update into a set of variables.
Merges changes that are within a single operation, ore are close together with an origin that allows merging (starting with "+") into a single event.
Merges existing value with input value, assuming they are stringified json.
Merges existing values with input values, assuming they are stringified json.
Merges new props and state, notifies delegate methods of update and performs update.
Merges the file change statuses of the dirty filesystem state with the revision changes, where dirty changes and more recent revisions take priority in deciding which status a file is in.
Merges the offset value into the base value and resets the offset to zero.
Merges the prop stack with the default values.
Merges the results of a single top-level field into the store.
Merges two config objects.
Merges two objects together.
Merges two paths from the `try` block and `catch` block merely.
Merges two paths from the `try` block and `catch` block.
Merlin uses an internal buffer (name + content) that is independent from file content on disk.
Message is displayed above the input.
Message order within a provider is respected.
Message will remain unchaged if not provided.
MessageChannels are desirable because they give direct access to the HTML task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera 11-12, and in web workers in many engines.
Method definitions don't have the function keyword.
Method is assumed to be a standard D3 getter-setter: If passed with no arguments, gets the value.
Method should be like Dialog.showModalElement(position params, reposition callback).
Methods and props used by native Animated impl
Methods are provided for adding edges (`appendEdge`, `prependEdge`, `addItems`) and removing them (`removeEdgeWithID`).
Methods for injecting dependencies.
Methods from the PendingTransaction interface.
Methods must be bound to the instance since they might be passed down as a prop to child components.
Methods that don't move the character pointer.
Methods that work with multi-line structures and move the character pointer.
Microsoft Azure absolute filepath
Might be a file drop, in which case we simply extract the text and insert it.
Might be a text scaling operation, clear size caches.
Might be not known for cached resources with null responses.
Might have already been rolled back via `onFailure`.
Might have been detached already.
Mimic the loading state where `dir1` reports itself as expanded but has no children yet.
Mimics empty from PHP.
Minimal default mode.
Minimally validate the parsed object
Minimize new string creation.
Minimum interval (in ms) between onChangeActivePaneItem events before revealing the active pane item in the file tree.
Minimum size of area that can be displayed.
Minimum width of the comments or code pane, in pixels.
Missing `body.text` on the comment.
Missing `comments.count` in store
Missing `doesViewerLike` in store
Missing `isVerified` in the first element.
Missing edges due to non-empty `diffCalls`.
Missing the actor node.
Mix direct extraneous as dependencies (dependencies installed without --save/--save-dev)
Mix in a 32-bit integer into the pool
Mix in the current time (w/milliseconds) into the pool
Mix properties into target object.
Mix two arrays such that each element of the second array is concatenated onto each element of the first array.
Mixed is safer than any, but that safety comes from Flow forcing you to inspect a mixed value at runtime before using it.
Mixers should implement this to visually distinguish the `VisualRect` so that the user knows that releasing a touch will result in a "selection" (analog to click).
Mixers shouldn't access them - not even to provide them as callback handlers.
Mixin for containers that contain UIViews.
Mixin helper which handles policy validation and reserved specification keys when building React classes.
Mixin helper which handles policy validation and reserved specification keys when building React classses.
Mixin options into this
Mixin that can be integrated in order to handle scrolling that plays well with `ResponderEventPlugin`.
Mobile Safari apparently has a bug where select() is broken.
Mobile Safari does not fire properly bubble click events on non-interactive elements, which means delegated click listeners do not fire.
Mock 2 hack languages
Mock `Date.now` to use the fake Jasmine clock so `advanceClock` can be called synchronously and call appropriate callbacks deterministically.
Mock a diagnostic provider with 2 flow roots, sharing common file real paths.
Mock a diagnostic provider with 2 hack language roots, sharing common file real paths.
Mock authenticated ID
Mock clipboardData since native implementation doesn't have a constructor
Mock getEventCharCode for proper unit testing
Mock object to simulate the behavior of a request.
Mock of the Native Hooks
Mock out the dependency on fb-watchman.
Mock the `publishMessageInvalidation` call to capture call arguments.
Mock the call, return false for this test.
Mock the call, return true for this test.
Mock the resolver factory to always return a resolver for the test package
Mock the services we use.
Mock this here so we can mimic IE8 support.
Mock watcher service handlers registry.
Mocked ChildProcess instance (not typed as such because the mock only implements a subset of methods).
Moderately fast, high quality
Modern browser with input or textarea.
Modified events could be late that it doesn't capture the latest edits/ state changes.
Modifier key presses don't count as 'real' key presses for the purpose of keymap fallthrough.
Modify the URL to make sure we get the inline source map.
Modify the listener counts on all parents.
Modular reduction using "classic" algorithm
Module build commands
Module capable of getting the configuration that should be used for the `rn-cli`.
Module for creating composite components.
Module store of errors that we have found
Module that is injectable into `EventPluginHub`, that specifies a deterministic ordering of `EventPlugin`s.
Module that provides a function for creating a unique identifier.
Module._findPath is an internal method to Node.js, then one they use to lookup file paths when require() is called.
Module.globalPaths contains all of the special Node.js directories that can also be searched for modules.
Modules is always strict mode.
Modules required for integration tests
MongoDB indexs email but can be sparse(blank)
Monkey patch applyIgnores such that we get hold of all ignored files
Monkey patch source to file://
Monkey-patch createRange support to JSDOM.
Monkey-patching lets developers work on Nuclide in the same way as any other Atom package.
More Complex Objects.
More invisible rects for resizing the extent.
More lower-level change function, handling only a single document (not linked ones).
More options handling for requests with no content
More recent revision changes takes priority in specifying a files' statuses.
Most React components have pure render functions.
Most are also available from CodeMirror (editor) instances.
Most common single-character punctuators
Most default values are '' or false, but not all.
Most field types are already tested in the normal read function above.
Most likely no package.json so just set default name
Most likely, this is an invalid target, so do nothing.
Most of the commands (scripts) we run will color output only if their stdout is terminal.
Most of the external API clips given positions to make sure they actually exist within the document.
Most of the functions will simply let the function(s) below them parse, and, *if* the syntactic construct they handle is present, wrap the AST node that the inner parser gave them in another node.
Most of the methods defined on the Doc type are also injected into CodeMirror.prototype, for backwards compatibility and convenience.
Most of the real functionality is covered in other unit tests, this just makes sure we're wired up correctly.
Most of the time, the context will directly get a view model object, but if a function is given, we call the function to retrieve the view model.
Most providers will include a set of grammarScopes, and will therefore get notifications only about TextEditors that are associated with those grammarScopes.
Most simple solution here to `resume` data stream, instead of dump it, otherwise we'll never get a data.
Most subclasses shouldn't need to extend this method.
Most types of statements are recognized by the keyword they start with.
Mostly implements https://atom.io/docs/api/latest/Directory
Mostly implements https://atom.io/docs/api/latest/File
Mostly just for testing and legacy API reasons
Mostly useful for testing purposes.
Mostly, this is here so that reading a dir with a socket in it doesn't blow up.
Mount and unmount for every pair.
Mount once, render updates, then unmount.
Mounted components have a DOM node representation and are capable of receiving new props.
Mounted rows always form a contiguous block so it is expressed as a range of start plus count.
Mounting is the process of initializing a React component by creating its representative DOM elements and inserting them into a supplied `container`.
Mounts a child with the supplied name.
Mounts this component and inserts it into the DOM.
Move a fragment to a new position.
Move a module from one point in the node_modules tree to another.
Move along until the end of the wrapped expression
Move contents from the temporary directory If the contents are a single directory (and we're not preserving structure), move its contents directly instead.
Move it down vertically so it does not end up under the mouse pointer.
Move matched elements from seed to results to keep them synchronized
Move selection up and down.
Move shallow copy items to storage
Move the char pointer forward i times.
Move the cursor to right after the inserted colon.
Move the cursor to the end of the function body.
Move the first profile to the group.
Move the hidden textarea near the cursor to prevent scrolling artifacts
Move the last profile out of its group and remove the group.
Move this left of the toolbar, when it is on the right.
Move through initial spaces if any.
Move to the next non-space character.
Move to the next token
Move to the right depth
Moved around its parent to cover visible view
Moved around its parent to cover visible view.
Moves a child component to the supplied index.
Moves current to the previous entry.
Moves cursor to specific position
Moves the selection one node down.
Moves the selection one node up.
Moves to the next entry.
Moving From the "New Attribute" position.
Moving from "New Attribute" that holds new value
Moving from "New Attribute" that was not edited
Moving to a node from outside the window.
Moving to top gives errors due to NativeModules not being initialized
Mozilla always adds an entry to the history
Mozilla/Netscape seems to prefer am3
Multi-Selects return an array
Multi-parameter syntax - construct the options according to the params passed
Multifunctional method to get and set values of a collection The value/s can optionally be executed if it's a function
Multiple children of the same name become arrays.
Multiple class names are allowed (e.g., "foo bar").
Multiple consecutive blank lines
Multiple headers with the same content
Multiple leading zeroes.
Multiple lines may point to the same marker when it spans across lines.
Multiple members of an import declaration should also be sorted alphabetically.
Multiple mixins should be fine too
Multiple parameters with the first being a format string.
Multiple spaces after hash on atx style header
Multiple spaces inside hashes on closed atx style header
Multiply to translation matrix on the right rather than translate (which would implicitly multiply on the left).
Multiplying by the inverse is used in matrix math instead of division.
Must access the parent to make an option select properly Support: IE9, IE10
Must add first to prevent the ServerConnection from going away in a possible race.
Must be a path to a directory, not a file.
Must be completely driven by an external clock signal, all that's stored here is timerID, timer type, and callback.
Must be implemented by subclasses.
Must be one or the other.
Must be the next sibling, as we just emptied the children
Must be unique to the provider.
Must contain a .hg-rename folder.
Must do if this `consequent` is empty.
Must do this *before* loading the child classes
Must force callback to be called on nextTick, so that we don't emit 'drain' before the write() consumer gets the 'false' return value, and has a chance to attach a 'drain' listener.
Must guard against an unmounted component here.
Must have no matching end comment, and allowUnbalanced is true
Must not be a mouse in or mouse out - ignoring.
Must not be used by any another gutter in this TextEditor.
Must not change target assignment
Must not discard the (non-)printable Enter-key.
Must not have duplicate values in any alternate.
Must return true if embedded in a native platform scroll view.
Must return true to start the process of `Touchable`.
Must use `global` instead of `window` to work in both frames and web workers.
Must use arrow here to get correct 'this'
Must use lazy require to get the spied version.
Mutable properties - set when the node is assigned to its parent (and are immutable after)
Mutates and returns a nested `SplitQueries` structure, updating any deferred "ref queries" to actually reference their contexts.
Mutating the event's members allows us to not have to create a wrapping "dispatch" object that pairs the event with the listener.
MutationObservers are desirable because they have high priority and work reliably everywhere they are implemented.
Mutations and subscriptions must have a concrete type due to the need for requisite top-level fields.
Mutations to this object fires off high level events to listeners such as UI controllers, giving them a chance to update.
Mutations with the same collision are sent to the server serially and in-order to avoid unpredictable and potentially incorrect behavior.
Mute future events from the top level wrapper.
NB: Deactivating and reactivating will result in a new Model instance (and new instances of everything else).
NB: No relatedTarget if the mouse left/entered the browser window
NB: Taken straight from: https://github.com/IvanVergiliev/2048-react/blob/master/src/board.js with no modification except to format it for CommonJS and fix lint/flow errors
NB: This is a pretty rare edge case.
NB: this measures wall-clock time, not the time between bytes sent by the server.
NEXT RIGHT This function works analogously to NEXT LEFT.
NO ERROR: DON'T VALIDATE MULTILINE STATEMENTS
NO ERROR: INDENT ONCE WHEN MULTIPLE INDENTED EXPRESSIONS ARE ON SAME LINE
NO ERROR: aligned with previous opening paren
NO ERROR: alignment of arguments of callExpression not checked
NO ERROR: single line multi-line comments followed by code is OK
NO ERROR: this has nothing to do with indentation, this is CallExpression spacing
NOTE ** The touch area never extends past the parent view bounds and the Z-index of sibling views always takes precedence if a touch hits two overlapping views.
NOTE(berks): get email or set to null.
NOTE(berks): user email validation currently not needed but build in.
NOTE**: on iOS, you need to add the `NSLocationWhenInUseUsageDescription` key in Info.plist to enable geolocation, otherwise it will fail silently.
NOTE: Call `_setDebugEventListener` before all other changes in Debug Context.
NOTE: Does not invoke the callback on the nearest common ancestor because nothing "entered" or "left" that element.
NOTE: Early return to implement immutable `.size` in DEV.
NOTE: For node 0.10.* We can't redefine options itself, this changes arguments
NOTE: Generated fields might get in the way.
NOTE: If the given record is still referenced, no records are collected.
NOTE: If there is no other `response` listeners handling of `response` event changes program behavior Without our listener all data will be dumped, but we pause data by our listener.
NOTE: If you are adding new tests for cli.js, use verifyCLIEngineOpts().
NOTE: Null values reduce hidden classes.
NOTE: On Android, only GET and POST are supported.
NOTE: On Android, this can only be used with GET requests.
NOTE: On Android, this can only be used with POST requests.
NOTE: Scroll events do not bubble.
NOTE: The order of the mappings is NOT guaranteed.
NOTE: There is no `componentDidUnmount` since your component will have been destroyed by that point.
NOTE: These checks are imperfect because we cannot trace fragment spreads.
NOTE: These type checking functions intentionally don't use `instanceof` because it is fragile and can be easily faked with `Object.create()`.
NOTE: This file cannot `require` any other modules.
NOTE: This file is run as-is from Node, which is why we do not use let or Flow types.
NOTE: This function is performance critical, as it can be run on every statement that generates an async event (like addEventListener) to support asynchronous call stacks.
NOTE: This is in addition to the standard set of "built-in" modules.
NOTE: This is part of `updateChildren` and is here for readability.
NOTE: This is specifically for use in Diff View, so don't expose a menu item.
NOTE: This is used by external open source projects.
NOTE: This lazily detects which wraps are necessary for the current browser.
NOTE: This may contain spoilers for the original Star Wars trilogy.
NOTE: This method will fail if the system doesn't know how to open the specified URL.
NOTE: This traversal happens on IDs without touching the DOM.
NOTE: This will fail the unit test (and help prevent log spew).
NOTE: This will not work correctly for non-generic events such as `change`, `reset`, `load`, `error`, and `select`.
NOTE: Two fragments in the same scope will have different names.
NOTE: We can step in this function only if `afterCompile` event is broken This is issue for node v0.12: https://github.com/joyent/node/issues/25266
NOTE: We're explicitly not using JSX here.
NOTE: We're explicitly not using JSX in this file.
NOTE: Will also mutate the incoming definitions in place to make them easier to marshal.
NOTE: You **cannot** use `this.setState()` in this method.
NOTE: `IntentAndroid` is being deprecated.
NOTE: `LinkingIOS` is being deprecated.
NOTE: `VibrationIOS` is being deprecated.
NOTE: `arguments` has a very significant performance penalty, which is why we don't support unlimited arguments.
NOTE: `segments.edges.node` is scalar.
NOTE: decodeURI will throw on malformed URIs (see GH-32).
NOTE: falls through to _var
NOTE: if request was called as `http.request(options, cb)` then there is one action, which we can't detect in handleHttpResponse.
NOTE: localizedString has not yet been added.
NOTE: markup is rendered markup which is a `viewID` ...
NOTE: menuitem's close tag should be omitted, but that causes problems.
NOTE: this can get identifiers that are declared, if you want access to identifiers that are access but undeclared see getUndeclaredIdentifiers
NOTE: this can get types that are declared, if you want access to types that are used but undeclared see getUndeclaredTypes
NOTE: this constructor is not exported
NOTE: this method currently ignores the passed-in text, and instead diffs against the currently saved contents of the file.
NOTE: use absolute path to make sure running tests is OK even if it is in node_modules of other project
NOTE: we might not have any clue what we think it is, for example if the user just did `npm install ./foo.tgz`
NOTE: we're not reading the project's .babelrc here.
NaN means non-codepoint Support: Firefox Workaround erroneous numeric interpretation of +"0x"
Naive return checking, does not iterate through the whole BlockStatement because we make the assumption that the ReturnStatement will be the last node in the body of the BlockStatement.
Name of the saved connection profile.
Named templates can be rewritten, so return "no error"
Named types are represented as Generic types with no type parameters.
Names modeled after https://github.com/facebook/flow/blob/master/src/common/flowExitStatus.ml
Native Array.indexOf uses strict equal, but in this case we need to match string/numbers with custom equal.
Native bridge doesn't *yet* surface errors.
Native component will handle positioning of elements, so it's not important to offset them correctly.
Native method references for those with the same name as other `lodash` methods.
Native method references.
Native methods mixin.
Native nodes(e.g. dom groups) may have ids less than max JS object id in the base snapshot
Navigate forward to a new route
Navigate forward to a new scene, squashing any scenes that you could `jumpForward` to.
Navigate the code iframe to the given url and update the code popout link.
Navigate to a new scene and reset route stack.
Navigation to the new backend process.
NavigationAnimatedValue
NavigationEvent shall be disposed after being emitted by `NavigationEventEmitter`.
NavigationFindReducer takes an array of reducers, and returns a reducer that iterates through all of the reducers and the result of the first reducer that modifies the input
NavigationLegacyNavigator is meant to replace Navigator seemlessly with minimum API changes.
NavigationPanPanHandlers
NavigationParentState
NavigationSceneRendererProps
NavigatorIOS uses "route" objects to identify child views, their props, and navigation bar configuration.
NavigatorIOS will automatically provide "route" and "navigator" components
NavigatorIOS wraps UIKit navigation and allows you to add back-swipe functionality across your app.
Necessary so the type refinement holds in the callback later
Need a leading 0 to prevent sign extension
Need to actually print the query to see this invariant.
Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind) whereas a regular applyBindings won't introduce new memoized nodes
Need to be able to calculate position if either top or left is auto and position is either absolute or fixed
Need to call q.process once per concurrent worker to preserve full concurrency after pause
Need to check for existence of module.paths because Jest seems not to include it.
Need to check for null explicitly.
Need to chmodr before removing..at least on windows because .git has some read only files
Need to create a resolution response to pass to the bundler to process requires after transform.
Need to do this to actually trigger a transition.
Need to guard against this possibility.
Need to handle surrogate pairs.
Need to make sure we don't render more than one new row at a time, but don't want to render past the end of the data.
Need to restore attributes structure.
Need to set a minimum width to see the scrollbar on IE7 (but must not set it on IE8).
Need to set message again because it is not enumerable in some cases
Need to subtract 2: one to move from 1-indexed to 0-indexed, another to account for the open paren we had to add on the first line.
Need to synthesize an Error object from its JSON representation.
Need to wait for the event loop to flush before continuing.
Need to write something to prevent tmp to automatically remove the temp dir (it removes if empty)
Needed so stdout/stderr are available.
Needed to handle Tab key in KHTML
Needed to hide big blue blinking cursor on Mobile Safari
Needs to be a boolean, but autocomplete-plus gives us undefined instead of false.
Needs to be the same as glyph-height in gutter.atom-text-editor.less.
Negated Rules Since we're *ignoring* things here, negating means that a file is re-included, if it would have been excluded by a previous rule.
Negative look-behind for "//"
Negative start index means 'from end of array'.
Negotiation should bubble as deep as the target is because we don't find first common ancestor (with current responder) because there is no current responder.
Neither PASS nor FAIL, so wait for more messages.
Neither the name of Apple Computer, Inc.
Neither the name of Google Inc.
Neither the name of IBM Corp.
Neither the name of Salesforce.com nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
Neither the name of the Snowtide Informatics Systems nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
Neither will actually show up until you render the component (simply instantiating is not enough).
Neuter this node so we don't try to unmemoize it again
Never generate synthetic shorthands when no value is available.
Never move original objects, clone them
Never preview prototype properties, turn lossy.
Never remove a multiHardBreak.
Never render functions in object preview, turn lossy
Never resolve this, so we know that no suggestion is set.
Never return 0 as otherwise equal records would be merged.
Never sends an empty string.
Never treat objects as equal - their properties might change over time.
Nevertheless, we need it to access the deepest dom element receiving DOM events.
Nevertheless, we return a new JSON object here to protect the cached source map from outside modification.
New (served fresh) Request offset again
New browsers have a path attribute on native events
New caches will be created and the unlock returned, allowing direct access to the newly created empty data object.
New edge will replace previous edge that have the same id.
New edges will replace previous edges in the range.
New entries can be pushed on the stack.
New origin might need creating a higher root.
New properties applied via up/down or live editing have an _originalPropertyText and will be deleted later on, if cancelled, when the empty string gets applied as their style text.
New selection, which happens on user interaction via select and collapse, resets the tracked node.
New size might need creating a higher root.
New test Transaction subclass.
New top-level queries are not returned up the tree, and instead are available via `getSplitQueries()`.
New types for `flow status` v0.23.0 (or possibly v0.24.0, it has yet to be finalized)
New versions of the toolbar use negative priority to push icons to the far end.
New's precedence is slightly tricky.
Newline character code for charCodeAt() comparisons
Next add the current binding
Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)
Next attempt will start reporting download progress immediately
Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)
Next statement is not a `var`...
Next test interleaved
Next try arcanist relative.
Next we need to exclude the closing ` from the .loc of the last quasi element, in case the parser accidentally decided to include it.
Next, a space or a tab.
Next, a space or an exception pattern sequence.
Next, get Z scale and normalize 3rd row.
Next, merge those two ends
Next, prove that once mounted, the scope is bound correctly to the actual component.
Next, remove those actual ranges.
Next, this checks the location of the node.
Nice for doing trailing effects.
No API exists for adding breakpoints to source files that are not yet known, store it locally and try to add them later.
No HAS_SIDE_EFFECTS logic here, only `value` has it and is string.
No `id` or `__typename` fields
No `id` or `__typename` fields or responses
No `input` event will occur.
No argument, return index in parent
No arguments passed in - edit the name element by default.
No character is inserted, and no `input` event will occur.
No children to visit.
No commit since master should not cause test to fail
No contest: we have a leading comment.
No contest: we have a trailing comment.
No data for slot, request it.
No data or configuration is shared between instances.
No default configuration
No default configuration rules - conf/environments.js (/*eslint-env node*/)
No event is being processed at this time.
No existing element found, insert a new element.
No frame - sometimes happens when they come out of order, so just wait for the rest.
No guarantees are made about when or how often this method is invoked, so it must not have side effects.
No interrupt event is dispatched because the cancelled transitions never started.
No json file was found, assume one
No key was specified 2.
No keyboard shortcut for this.
No matter what notification we are in, dispatching onResize is not needed.
No matter what we do here, Atom is going to create a blank editor.
No message, we don't need to do anything :)
No more Nuclide events will be fired.
No more fixes have been applied.
No more remaining code, continue
No more tokens left, give up
No need to check if the test was already performed, though.
No need to compact the crumbs more.
No need to compact the crumbs, they all fit at full size.
No need to compute visible rows if there is no callback
No need to derequire because the minifier will mangle the "require" calls.
No need to differentiate by extension, only one gets built.
No need to dispose of this subscription since we want to keep it for the entire life of this object.
No need to pop anything from newPath.stack or oldPath.stack, since newPath and oldPath are fresh local variables.
No need to recalculate this._sidebarSizeDIP and this._totalSizeDIP again.
No need to recompute the robustness weights at the last iteration, they won't be needed anymore
No need to recurse, as the target alias definition will get validated seperately.
No need to reload scope variables, as the remote object never changes its properties.
No need to remove from the set explicitly since we do that on the marker's onDidDestroy handler.
No need to restore the original method since the constructor gets re-assigned every time in beforeEach
No need to sanitize if defined as a function
No need to send anything back to the user.
No need to wrap child nodes of a known concrete type.
No newline characters.
No next page means we have the very last edge.
No operation performed.
No other authentication
No other browser requires this extra indirection.
No other item will be selected if there aren't any other profiles, so make sure that view gets cleared when the last profile is removed.
No previous page means we have the very first edge.
No re-render based on state
No resolved fragment map at all
No selection, plain cursor
No space for the label, so no line as well.
No special handling needed for connections, edges, page_info etc.
No spies should immediately be called because there is no data in the store now.
No tasks are executed unless `processNext` is called.
No token could be matched, give up.
No valid "reactRoot" ID found, create one.
No-op for iOS, but used on the web.
No-op when `console.log` is not a "function".
Nobody is listening for the result of this expression.
Nobody is watching this expression anymore.
Node 0.8 returns strings from .digest().
Node 1 is selected, node 2 is not selected
Node Props TODO: The desktop version of ART has title and cursor.
Node reads yield the `Record` associated with a supplied `dataID`, if found.
Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
Node types which have a test which will coerce values to booleans.
Node-level changes will broadcast at the node ID.
Node-link tree diagram using the Reingold-Tilford "tidy" algorithm
Node.DOCUMENT_TYPE_NODE
Node.JS doesn't have Map.
Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html
Node.js does not return get/set property descriptors now (v0.11.11), therefore we can't fully implement 'accessorPropertiesOnly'.
NodeList in JSC is a function, check for array prior to this.
Nodejs env or modules has a special scope.
Nodes have their start and end characters offsets recorded in `start` and `end` properties (directly on the node, rather than the `loc` object, which holds line/column data.
Nodes with decorators can't have parentheses, so we can avoid computing path.needsParens() except in this case.
Non UTF-8 web pages with non-breaking pages produce syntax errors.
Non zero offset implies this block is neither a removal or an addition, and is thus equal in both versions of the document.
Non-animated styles are set using `setNativeProps`, no need to pass those as a part of the node config
Non-block-level bindings, even in ES6
Non-breaking spaces can be mistakenly typed on OS X with option-space.
Non-colliding keys: both transactions run.
Non-core arguments (like connection and identifying arguments) are dropped.
Non-existent attributes return null, we normalize to undefined
Non-hidden keys of allFields.
Non-matching fragment types are similar to requisite fields: they don't need to be diffed against and should only be included if something *else* is missing from the node.
Non-null iff we have entered distraction-free mode without explicitly exiting it.
Non-public interface for adding and removing lines.
Non-scalar types not in the map default to `deepDiffer`.
Non-scalars deoptimize `RelayContainer.shouldComponentUpdate`.
Non-standard AST node type.
Non-standard Properties
Non-zero length guarantees value max and min indices.
None of the input objects are modified.
None of the remaining cases matter if node is falsy.
Noop TODO: Move all initialization callers back into react-native
Normal Inline Grammar
Normal behavior is to insert the new text into every selection
Normal drop Don't do a replace if the drop happened inside of the selected text.
Normal selection, as opposed to text dragging.
Normalise plugin to an array.
Normalize "", auto, and prepare for extra
Normalize `args`, splitting joined short flags.
Normalize `path` relative to the current path.
Normalize a CSS property name.
Normalize by total number of samples accumulated.
Normalize inconsistent values reported by browsers due to implementations of a working draft specification.
Normalize objects and arrays (potentially containing objects) into array of strings.
Normalize these first so that future comparisons will succeed.
Normalize to Unix first to avoid errors later on.
Normalizes a path, or the path portion of a URL:  - Replaces consequtive slashes with one slash.
Normally an ugly pattern, but calls to `requestAnimationFrame` cannot be canceled.
Normally can't print fields directly, so wrap it in a fake fragment.
Normally we want to prevent default action.
Normally we'd insert a comment node, but since this is a situation where React won't take over (static pages), we can simply return nothing.
Normally we'd wrap this between comment nodes for the reasons stated above, but since this is a situation where React won't take over (static pages), we can simply return the text as it is.
Normally we'd wrap this in a `span` for the reasons stated above, but since this is a situation where React won't take over (static pages), we can simply return the text as it is.
Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values are stored on DOM attributes).
Normally, we'd just disable the `UIScrollView`, but a touch has already began on it, the `UIScrollView` will not accept being disabled after that.
Not a DOMElement, therefore not a React component
Not a MethodDefinition.
Not all URIs are actually URIs, so use regex for the treeish.
Not all `item`s are instances of TextEditor (e.g. the diff view).
Not all bindings provide proper descriptors.
Not all directories on a host correspond to repositories that contain Hack code.
Not all fonts have a variant for each of the numeric values, in that case the closest one is chosen.
Not all native implementations support merge.
Not documented: the 'options' passed to atom.workspace.open() are passed to the opener.
Not doing this results in an "Runtime.getProperties failed" error in node-inspector since that call is only valid during a paused state.
Not enough space even for minimum sizes.
Not enough time elapsed yet, wait for highlight - this is just a perf optimization.
Not every plugin in the ordering may be loaded at runtime.
Not guarded in a canDefineProperty check: IE8 supports defineProperty only on DOM elements
Not only it's always potentially cacheable, but also always potenially new.
Not own constructor property must be Object
Not owner-child so reconcile independently
Not really an alias, but an iterating reference
Not really expecting this scope type here.
Not recommended: `observeStderr` provides more complete information.
Not recommended: `observeStdout` provides more complete information.
Not ref query dependencies:
Not supported by all native implementations.
Not sure how to create any of these.
Not sure if hhvm is alive or not do not set _isClosed flag so that detach will be sent before dispose().
Not too easy to mock out :(
Not used in this test.
Notably, this value should be undefined if subscriptionRoot is the same as subscriptionPath.
Note if the template appears inside an SVG its tagName will be in lowercase.
Note it should be possible to get the HTML via MarkdownPreviewView.getHTML(), but that was causing this script to lock up, for some reason.
Note stream._type is used for test-module-load-list.js
Note that "x.x" is a valid xRange identifer, meaning "any version" Only the first item is strictly required.
Note that 'shell' is not the public 'shell' package on npm but an Atom built-in.
Note that 0 pid also does not filter on process id.
Note that V8 prepends "ex.stack" with ex.toString().
Note that `Animated` is designed to be fully serializable so that animations can be run in a high performance way, independent of the normal JavaScript event loop.
Note that `mapData.length` should be computed on each iteration to support iterating over new items in the map that were added after the start of the iteration.
Note that `onDidChangeScrollTop` isn't technically in the public API.
Note that `pageInfo` also triggers the error...
Note that `require('module')._resolveFilename(path, module)` is equivelent to `require.resolve(path)` under the context of given module.
Note that `this._scrollComponent` might not be a `ScrollView`, so we need to check that it responds to `getScrollResponder` before calling it.
Note that all line/column values are 1 based.
Note that all line/column values are 1-based.
Note that any module using this mixin needs to return the parent view's ref in getScrollViewRef() in order to use this method.
Note that as of 5.8.14, there is a bug with parsing optional props in Babel.
Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later, which KO internally refers to as version "2", so older versions are no longer detected.
Note that closeEditor may remove entries if the editor being closed does not have a path (aka has not been saved).
Note that destroy() is not part of TextEditor's public API.
Note that due to our own strict renaming rules, this must be a private method instead of a static function becuase of the access to _menuOptions and _items.
Note that even if the browser supports DOMTokenList, it probably doesn't support it on SVG elements (which can be animated).
Note that failure is an acceptable option here, since the only result will be a stale cache for some helper commands.
Note that for multiline fields, setting blurOnSubmit to true means that pressing return will blur the field and trigger the onSubmitEditing event instead of inserting a newline into the field.
Note that graceful-fs also retries when fs.closeSync() fails.
Note that if the property changes from one function to another, we don't need to send an update.
Note that if the record is known to be deleted in the store then it will have been been marked as created already.
Note that if the tracked query doesn't have the field then we can't validate.
Note that if x is not monotonic, it's possible that the slope will be infinite, so we protect against NaN by setting the coordinate to zero.
Note that if you are using them, the title and selectedIcon will be overridden with the system ones.
Note that in edge cases, some architecture components instance's in-memory cache might be skipped.
Note that invalid dates with millisecond representations of `NaN` are not equivalent.
Note that it is possible that this method can return false in cases where `equals` would return true.
Note that it is very inefficient to transfer large quantities of binary data between JS and native code, so you should avoid calling this more than necessary.
Note that it's important we be able to open and then close within a single cycle of this loop.
Note that it's possible to scroll faster than rows can be rendered.
Note that lazily loaded modules won't be able to consume platform events from their actions.
Note that long tokens in a help string can go past this.
Note that methodOp(f) means 'wrap f in an operation, performed on its `this` parameter'.
Note that none of these types are buildable because the Mozilla Parser API doesn't specify any builder functions, and nobody uses E4X anymore.
Note that normally, tokens simply exist as properties on the parser object.
Note that on iOS 8 and earlier, only the standard PinColor constants are supported for regular pins.
Note that only JSON-compliant objects are currently supported, as there's no provision for traversing prototypes, extracting class names via constructor, handling properties or functions.
Note that operation(null, f) means 'wrap f in an operation, performed on its `this` parameter'
Note that options does NOT include 'encoding' this ensures that the return value is always a Buffer and never a string.
Note that owner is not calculated for text nodes because they are not created from real elements.
Note that providing the name argument is not necessary in most cases.
Note that regardless of `interspersed` the presence of '--' will stop option parsing, as all good option parsers should.
Note that required fields may be missing if the fragment was not fetched with `Relay.Store.primeCache` or `Relay.Store.forceFetch` before creating a subscription.
Note that rows must be the same height when they are re-mounted as when they are unmounted otherwise the content will jump around.
Note that running includes the state where there are no connections.
Note that safeSpawn() often overrides options.env.PATH, but that only happens when options.env is undefined (which is not the case here).
Note that scalar plural fields are handled by `_diffScalar`.
Note that the children may be a combination of PagedObjectIds and SinglePageObjectIds.
Note that the children of PagedObjectIds may be a combination of SinglePageObjectIds and PagedObjectIds.
Note that the children of an ElementRange may be aggregated into ranges whose size is larger than the debuggeee pagesize.
Note that the inverse - attempt to resolve based on fragment plurarity - doesn't work because there's no way convert plural ids to singular w/o losing data.
Note that the list returned by this function is a copy of the internal supertypeList, *without* the typeName itself as the first element.
Note that the module JSTimers is split into two in order to solve a cycle in dependencies.
Note that the only major, minor, patch, and pre-release sections of the version string are capturing groups.
Note that the process.exit(1) works now because of the "exit" handler installed at the start of this script.
Note that the range property of the event is undocumented.
Note that the root is filtered from the dependants as well as other dependants marked to be uninstalled
Note that the save and find-related commands aren't defined by default.
Note that the scores are different: 0 represents the best match while larger numbers are worse.
Note that the stack will be restored to its original state after the callback is finished, so it is probably a mistake to retain a reference to the path.
Note that the state variable would need to be updated as the user selects a value and changes the index, as shown in the example below.
Note that the visitor object is the prototype of Context.prototype, so all visitor methods are inherited by context objects.
Note that these could occur in different files.
Note that they are not supported in Glob itself anyway.
Note that this API will add a Date header if it's not already set.
Note that this API will fully validate the Authorization header, and throw on any error.
Note that this allows an extension to ordinary LinterProviders.
Note that this can only be false if styleAttr is Horizontal.
Note that this class also provides support for submenu items.
Note that this combined with `maxNumToRender` and the number of rows that can fit in one screen will determine how many rows to render above the viewport.
Note that this does not recurse, so the algorithm will always terminate.
Note that this doesn't apply for the header of the current view, but the ones of the views that are pushed afterward.
Note that this expects indentation to already have been taken into account when breaking, just not resolved yet.
Note that this function assumes node EventEmitter semantics: namely, that adding the same combination of eventName and callback adds a second listener.
Note that this has no effect unless `showsUserLocation` is enabled.
Note that this is *almost always going to be the case*, unless the thing being written is some sort of unsupported type, and thus skipped over.
Note that this is a "flattened" array and your defined getters and setters won't be invoked when you interact with the returned Array.
Note that this is a copy of the internal array used for storing the members so that no one can mess with internal state.
Note that this is date will be displayed in the local time zone of the viewer rather than that of the author of the commit.
Note that this is somewhat dangerous b/c it calls setState() again, effectively mutating the component before all the work is done.
Note that this list does not get sorted: only a filtered version of it does.
Note that this may be asynchronous, or synchronous.
Note that this may just be one dir.
Note that this method is optional.
Note that this only works for identifiers that appear in the current file.
Note that this tree does not perform cyclic redundancy check while appending child node.
Note that this will not actually update the scroll position The scroll position update will happen on the next tick.
Note that this will throw on failure, which will fail the test.
Note that topologicalSortBindings has already filtered out any nonexistent binding handlers, so bindingKeyAndHandler.handler will always be nonnull.
Note that unlike addItem() or addSubmenu(), invoking dispose() is synchronous.
Note that validation on the string is done in `_validateTransform()`.
Note that validation works even when we don't have a tracked query.
Note that validation works even when we don't have tracked query.
Note that waitsForPromise has an optional first argument.
Note that we assume that the beforeRemove callback will usually be used to remove the nodes using some sort of animation, which is why we first reorder the nodes that will be removed.
Note that we do not use the TextBuffer here, since a close/reopen is acceptable.
Note that we keep getting warned as edit distance increases...
Note that we need to allow dot files by default, and not switch the meaning of their exclusion
Note that we need to to parse the flattened tree because it might contain additional packages
Note that we use the resolver methods to query the cache because transformations/normalisations can occur
Note that we've removed escapeTextForBrowser() calls here since the whole string will be escaped when the attribute is injected into the markup.
Note that whatever file is used should also be included in bug reports.
Note that widthPercentage properties should add up to 90 since the ID column always adds 10.
Note that, unlike in the Writer case, ProxyReader is going to be the *normal* state of affairs, since we rarely know the type of a file prior to reading it.
Note the 1 line of context in the previews (but make sure it doesn't overflow)
Note the native date picker dialog has some UI glitches on Android 4 and lower when using the `minDate` and `maxDate` options.
Note the ordering (by matching path prefix).
Note the sensitive matter about accessor property: the property may be physically defined in some proto object, but logically it is bound to the object in question.
Note there is no dataSource like in the standard `ListView`.
Note there is some overhead, so you don't want to slice things up too much.
Note this codepath could also be exercised due to a logical error in Nuclide, so we try to differentiate.
Note this will return true if it contains only empty submenu items.
Note we use Error.captureStackTrace to get stacktrace which is v8-engine only.
Note(avik): remove dynamic typecast once Flow has been upgraded
Note(vjeux): this would be better as an interface but flow doesn't support them yet
Note, however, that they are *not* available on composite components that aren't directly backed by a native view.
Note: "Head" in this set of helper functions refers to the "current working directory parent" in Hg terms.
Note: 'password' is not settable.
Note: A self closing tag gets its own scope, but a non-self closing tag will use the scope opened up in the parent JSXElement.
Note: Although this function is `async`, it never rejects.
Note: An optimistic update may only be applied once.
Note: Disposing the values of the statement below removes the stylesheets.
Note: IE10+ supports the Selection object, but it does not support the `extend` method, which means that even in modern IE, it's not possible to programatically create a backward selection.
Note: IE10+ supports the Selection object, but it does not support the `extend` method, which means that even in modern IE, it's not possible to programmatically create a backward selection.
Note: Ideally fallback name should be consistent (e.g. "Unknown")
Note: If "where" is on an open bracket, then this bracket is ignored.
Note: If paths is empty, a full `hg status` will be run, which follows the spec.
Note: If someone maintains a reference to the structure within options they could mutate the ModuleMap's behavior.
Note: It's not guaranteed to keep lines within this length, but it will do its best.
Note: It's possible for the server to come back and ask more questions.
Note: It's safe to call forceUpdate here because the change events are de-bounced.
Note: Keep these constants in sync with the ones in Console.h
Note: RFCs offer an option for quoted values that may contain commas and semicolons.
Note: Scope is already opened in the JSXElement.
Note: Tasks are only actually executed with explicit calls to `processNext`.
Note: The resolution for the resulting mappings is the minimium of this map and the supplied map.
Note: The resolution for the resulting mappings is the minimum of this map and the supplied map.
Note: The scheduler for promises (`Promise.resolve().then`) runs on the same queue as `process.nextTick` but with a higher priority.
Note: These fields are ordered by precendence.
Note: This array can be potentially sparse as subscriptions are deleted from it when they are removed.
Note: This does not fully test the git ref format.
Note: This form displays DEFAULT_SERVER_COMMAND_PLACEHOLDER as the prefilled remote server command.
Note: This function does NOT clone the data in this data source.
Note: This function is called only from parseObjectProperty(), where EOF and Punctuator tokens are already filtered out.
Note: This ignores `parent` property.
Note: This is a fork of the fb-specific transform.js
Note: This is here because `normalizeGitUrl` is usually called before getResolved is, and receives *that* URL.
Note: This is not part of the public API.
Note: This method may only be called once per instance.
Note: This mirrors logic in the fs read operations that are employed during tarball creation, in the fstream-npm module.
Note: This only applies to requires.
Note: This only applies to type imports.
Note: We do not allow listening to mouseOver events.
Note: We do not recurse here as types may be self-recursive (through nullable for example).
Note: We never need to add a first node.
Note: `npm install foo` inside of the `foo` package will abort earlier if `--force` is not set.
Note: assumes the dates are not in DST.
Note: because of this extension, the key equality of Immutable.Map and the value equality of Immutable.Set will differ from ES6 Map and Set.
Note: caching only works on components, not native Vue
Note: caseSensitive, numThreads, and recordMatchIndexes will be ignored.
Note: children must be traversed before printing variable definitions
Note: difference from C - smlen returned, not passed as argument.
Note: document.documentElement.contains should work here but always returns false for comment nodes in phantomjs, making unit tests difficult.
Note: ending in / means that we'll get a final "" at the end of the pattern.
Note: escaping of newlines when switching from backtick to other quotes is not handled.
Note: esprima can't actually parse "for each (".
Note: esprima does not recognize conditional catch clauses.
Note: files loaded via invokeRemoteMethod() use a variety of ES6/7+ features to verify that Babel transpilation is working as intended.
Note: for Observables we only track how long it takes to create the initial Observable.
Note: getLengthSync DOESN'T calculate streams length As workaround one can calculate file size manually and add it as knownLength option
Note: host of uri must match this._host.
Note: ignoring n.lexical because it has no printing consequences.
Note: it might be more performant to maintain the sorting as we insert them, rather than as we serialize them, but the big O is the same either way.
Note: must declare params as optional.
Note: only applies to entries.
Note: product-specific hacks use aliased cursors/ids to poll for data.
Note: replacing with the ASCII symbol `x` might cause false negatives in unlikely scenarios.
Note: requires the clip polygon to be counterclockwise and convex.
Note: resolvedEnd is undefined when the original sequence's length is unknown and this slice did not supply an end and should contain all elements after resolvedBegin.
Note: similar to d3_cross2d, d3_geom_polygonInside
Note: stops the spring animation
Note: subscription is an experimental non-spec addition.
Note: the `cleanupSubscriptionFunc` is called when the dialog closes: `onConnect`, `onError`, or `onCancel`.
Note: this a generic base implementation of __iterate in terms of __iterator which may be more generically useful in the future.
Note: this accounts for both named and indexed properties on Arrays.
Note: this code is probably the code from the child shell if one is in use.
Note: this is memoized function, which makes it inexpensive to call.
Note: this is the semver.org version of the spec that it implements Not necessarily the package version of this code.
Note: undefined values in `env` get serialized to the string "undefined".
Note: we don't know the real updated status of the file, so don't send a change event.
Note: we must not add args object if it was not sent.
Note: we're actually relying on RelayMutationTransaction invariant.
Note: you may want to use keyOf() if you're using Google Closure Compiler advanced mode.
Note:** Non-object values are coerced to objects.
Note:** SliderIOS is deprecated and will be removed in the future.
Note:** This function only supports cloning values with tags of `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
Nothing changes because there's still touches that started inside of the current responder.
Nothing in the try block should ever null the `_run` property.
Nothing needs to be done if the root directory was watched correctly.
Nothing needs to be done if the root directory watch has ended.
Nothing pertains to our managed components.
Nothing should live on this prototype.
Nothing to do for UIKit bridge.
Nothing to do if our debug session is local.
Nothing to do if we're not debugging.
Nothing to fetch for records 1-3, fetch extension of range for 4-5
Nothing to observe: pass the empty array through
Notice extra empty line at the beginning.
Notice how refs ownership is maintained even when injecting a component into a different parent.
Notifications of readonly are moved from no-undef: https://github.com/eslint/eslint/issues/4504
Notifications of readonly are removed: https://github.com/eslint/eslint/issues/4504
Notifies the node about the change that happened in the configuration object.
Notify all subscribers of a new value.
Notify listeners, process queue, etc
Notify manager that an interaction has completed.
Notify manager that an interaction has started.
Notify never heard a heartbeat from the server.
Notify success watcher setup.
Notify switching networks, disconnected, timeout, unreachable server or fragile connection.
Notify the client certificate is not accepted by nuclide server (certificate mismatch).
Notify the collector that GC should be put on hold/paused.
Notify the server was there, but now gone.
Now *update the component*
Now attach the main listener
Now child wants to become responder.
Now copy over build files
Now double-hash to avoid leaking timing information - there's no easy constant-time compare in JS, so we use this approach instead.
Now get scale and shear.
Now if the number is positive, you're pretty much done, you can just leverage the unsigned translations and return those.
Now imagine another query (say, a deferred query) has populated the store with range info for this connection.
Now install the real 1.5.1.
Now it would be weird if this somehow bumped us back into distraction-free mode.
Now it's time to set the selection.
Now iterate through the rest.
Now kill the node and render it on top of server-rendered markup, as if we used server rendering.
Now let's run the actual ReactDOMInput change event handler
Now lets let the scroll take control this time.
Now make a sorted array with the results.
Now no handlers should be called on `touchEnd`.
Now parents contains each ancestor that does *not* have a cached native node, and `inst` is the deepest ancestor that does.
Now prompt user to make changes
Now remove the child.
Now reset the props that cause there to be a child
Now set any defaults we might have missed out earlier
Now simulate a situation where the app is not idempotent.
Now that the iframe is in the DOM, subscribe to its resize events.
Now that the initial VCS statuses are set, subscribe to changes to the Repository so that the VCS statuses are kept up to date.
Now that the listener is in place, send the message.
Now that the user has selected a build system, we no longer care about what the selected one was the last session.
Now that we have the gadget, we can deserialize the state.
Now that we know the real path, it's possible this collides with an existing connection.
Now that we know which rules to disable, strip out configs with errors
Now that we match urls like 'facebook.com', we have to prepend http:// to them for them to open properly.
Now the magic: trying to recover the key comment when it's gotten conjoined to the key or otherwise shenanigan'd.
Now they are leaving distraction-free mode.
Now we read the inner (non-local) fragment, using the range client ID.
Now we remove the original first touch, keeping the second touch that started within the current responder (child).
Now we rerequest the top of stack that we observed.
Now we unmount the component, as if caused by a non-React event handler for the same click we're about to simulate, like closing a layer:
Now we will resolve some newlines where possible.
Now, compute Y scale and normalize 2nd row.
Now, get the rotations out
Now, move that new touch that had no effect, and did not start within the current responder.
Now, none of the close/inits throw, but the operation we wrap will throw.
Now, put theDog back.
Nuclide URI of the file path
Nuclide URIs disallow use of the `hash` attribute, and any hash characters are interpreted as as literal hashes.
Nuclide behaves badly when remote directories are opened which are parent/child of each other.
Nuclide can't handle nested arrays well in settings, so we save it in a flat array and fix up each pair or entries before using it in the transform
Nuclide code should be able to run on a stock Atom w/o these transforms.
Nuclide package settings used to calculate the module map, the blacklist, and control the plugin behavior.
Nuclide packages for Atom are called "features"
NuclideTextBuffer's constructor will ensure setPath() is called once this.constructor is set.
NuclideUri type requires no transformations (it is done on the client side).
NuclideUris should never be shown to humans.
Nuke elements from the UI
Null -- XXX this probably isn't good practice
Null object is object with 'null' subtype.
Null out the existing pane item's URI so we can insert the new one without closing the pane.
Null out the prefix, and fallthrough to default.
Nullable breaks the layout chain
Nullable values are captured as nullable in lambdas, as they may change between lambda capture and lambda evaluation.
Nullify .loc information for the child declaration so that we never try to reprint it without also reprinting the export declaration.
Number of bytes expected for the current incomplete multi-byte character.
Number of bytes received for the current incomplete multi-byte character.
Number of elements in the cache before periodic cleanup kicks in.
Number of files to show on every page.
Number of images that will be fetched in one page.
Number of logical lines in this visual line
Number of pixels that are tolerated in between a `touchStart` and `touchEnd` in order to still be considered a 'tap' event.
Number of requires within Nuclide that it took to load this module.
Number of rows to render beyond the viewport.
Number of rows to render on first mount.
Number of rows to render per event loop.
Number of spaces the pretty-printer should use per tab for indentation.
Numbers like '019' (note the 9) are not valid octals but we still parse them and mark as malformed.
Numbers must start either with a decimal digit or a point.
Numbers, booleans, undefined, and null.
Numeric values are decimal strings.
O(1)-check if a given object is empty (has no properties, inherited or not)
OCaml.Pervasives has a lot of stuff that gets shown on every keystroke without this.
OOP --------------- If Underscore is called as a function, it returns a wrapped object that can be used OO-style.
OPTION DEFAULTS The default configuration options.
OS X apps don't inherit PATH when not launched from the CLI, so reconstruct it.
OVERVIEW The FileTreeNode class is almost entirely immutable.
Obey beforeColon and afterColon in each property as configured
Obj-C selector with multiple arguments, e.g. doFoo:withBar: This implementation uses a simple greedy heuristic to find the location of the different parts of a selector.
Object Functions ---------------- Retrieve the names of an object's properties.
Object index maps from an object "hash" to index.
Object literal getters/setters lack a colon
Object literal getters/setters lack colons
Object literals *must* be parenthesised
Object literals as arrow function bodies need parentheses
Object of renderable things
Object passed by reference over RPC are assigned an ID.
Object patterns are sorted and then the first identifier in each of patterns is used for sorting.
Object that handles postponed lexing verifications that checks the parsed environment state.
Object that will be a map of properties--safe because we will prefix all of the keys.
Object type used to represent tokens.
Object whose keys are rule names and values are arrays of valid ruleConfig items which should be linted against the target source code to determine error counts.
Object with a a nullable property and a buffer property.
Object.defineProperty failed.
Object.getOwnPropertyNames is the only way to enumerate non-enumerable properties, so if we wrap it to ignore our secret keys, there should be no way (except guessing) to access those properties.
ObjectIds for stack frame contexts just have the 3 required fields.
ObjectIds identify data values with children.
ObjectTypeAnnotation is always converted to a simple object type, as we don't support records
Objects with different constructors are not equivalent, but `Object`s from different frames are.
Observable dispose function, which is called on subscription dipsose, on stream completion, and on stream error.
Observe a list of Array items.
Observe a stream like stdout or stderr.
Observe focus change events from the owner.
Observe focus change events from this component.
Observe the stdout, stderr and exit code of a process.
Observer class that are attached to each observed object.
Observes one of more files has changed.
Observes that a .hgignore file has changed.
Observes that a Mercurial event has occurred (e.g. histedit) that would potentially invalidate any data cached from responses from this service.
Observes that the Mercurial bookmark has changed.
Observes the relevant Nuclide package settings.
Obtain a monotonically increasing timestamp in milliseconds, if possible.
Obtain host and port information
Obtains a client ID (eg.
Obviously not all Emitters should be limited to 10.
Obviously that won't fix anything.
Obviously, this breaks abstraction by reaching into private properties.
Ocamlmerlin doesn't include a `file` field at all if the destination is in the same file.
Occasionally, the watchman client may hang while waiting for a query.
Occupy the same space on the left in all items.
Octal literals fail in strict mode.
Octal number in ES6 starts with '0o'.
Octal number starts with '0'.
Octicon icon name, without the `icon-` prefix.
Of course we collect tokens here.
Of course, it'll still fail eventually if it's a true cycle, and leave things in an undefined state, but that's what is to be expected when `--force` is used.
Often we'll get contiguous blocks of errors on the same line.
Often you want to reference an identifier in a comment.
Often, we may want to respond to Atom events, but only after a buffer period of no change.
Ok, that's a hack, but it works.
Old IE doesn't give collections access to hasOwnProperty.
Old ones just use large positive priority.
Old webkits (at least until Android 4.0) return 'function' rather than 'object' for typeof a RegExp.
Older IE's will not fire a second mousedown for a double click
Older versions of IE throws unspecified error when touching document.activeElement in some cases (during loading, in iframe)
On Android there's a special flag telling us the user is dragging the slider.
On Android this component uses native state drawable to display touch feedback.
On Android wrap the ScrollView with a AndroidSwipeRefreshLayout.
On Android, AsyncStorage will use either RocksDB or SQLite based on what is available.
On Android, display the options in a dialog.
On Android, display the options in a dropdown (this is the default).
On Android, specifies how to display the selection items when the user taps on the picker:  - 'dialog': Show a modal dialog.
On Android, the tag is a local URI, such as `"file:///sdcard/img.png"`.
On Atom restart, it tries to open the uri path as a file tab because it's not a local directory.
On Atom restart, it tries to open uri paths as local `TextEditor` pane items.
On Enter or Return start editing the first attribute or create a new attribute on the selected element.
On Linux, script takes the command to run as the -c parameter.
On Mac OSX El Capitan, bash seems to wipe out the `LD_LIBRARY_PATH` and `DYLD_LIBRARY_PATH` environment variables.
On Mac Os X / macports there's only the ossp-uuid package that provides uuid On Linux there's uuid-runtime which provides uuidgen
On OS X, script takes the program to run and its arguments as varargs at the end.
On Unix systems, it uses ctime by default for staleness checks, since it's the most reliable.
On Windows the 'comspec' environment variable is used, so cmd.exe does not need to be on the path.
On Windows, change backslashes to slashes to get proper URL path from file path.
On Windows, find the first build/*.sln file.
On Windows, launch the editor in a shell because spawn can only launch .exe files.
On Windows, name can come in with Windows slashes instead of Unix slashes.
On Windows, we really want to use the "start" command.
On Windows, we should receive '/C:/path/to/file'.
On android this is not supported and it will have the same behavior as 'none'.
On certain platforms, this means that a native scroll has assumed control and the original touch targets are destroyed.
On iOS 8 and earlier these are the only supported values when using regular pins.
On iOS 9 and later you are not obliged to use these, but they are useful for matching the standard iOS look and feel.
On iOS the RefreshControl is a child of the ScrollView.
On iOS, AsyncStorage is backed by native code that stores small values in a serialized dictionary and larger values in separate files.
On iOS, calling this function will trigger a one second vibration.
On main thread, only coalesce if the last event is of same type.
On non-Windows, without the path to the shell, nothing usually works.
On press down, the opacity of the wrapped view is decreased, dimming it.
On press down, the opacity of the wrapped view is decreased, which allows the underlay color to show through, darkening or tinting the view.
On some browsers, horizontal scrolling will cause redraws to happen before the gutter has been realigned, causing it to wriggle around in a most unseemly way.
On some platforms, we would need to implement it as a `className` anyways.
On subsequent evaluations, just replace the previously-inserted DOM nodes
On that rendered node, forward all `Touchable` responder handlers.
On the selectionchange event, the target is just document which isn't helpful for us so just check activeElement instead.
On windows and no 'msbuild' found.
Once Babel understands "export interface", revert it to the normal one.
Once a component gets mounted, it has an internal instance, once it gets unmounted, it loses that internal instance.
Once a flush has been requested, no further calls to `requestFlush` are necessary until the next `flush` completes.
Once again, Sass deviates from the spec and supplies the version as a string rather than a number, so we use loose equality checking here.
Once all RemoteConnections have been closed, then the ServerConnection will close.
Once an animation has been stopped or finished its course, it will not be reused.
Once attached, the observer converts target object's property keys into getter/setters that collect dependencies and dispatches updates.
Once calculated the properties are immutable.
Once connected you can enter xdebug commands, messages from the xdebug connection are displayed on stdout.
Once in break-disabled state, the connection mux will immediately enable one of the broken connections and move to break-enabled state.
Once initialized, the ConnectionMultiplexer can be in one of 3 main states: running, break-disabled, and break-enabled.
Once it has been determined that an object is no longer needed, call `.forget(id)` to clean up.
Once last row is set, figure out the first row
Once onNewLayout is called after offscreen rendering has completed, includeInLayout will be set true and the finished cell can be dropped into place.
Once perf is enabled, it stays enabled
Once switched, this method also checks for mixed spaces and tabs and other minor warnings.
Once the connection is re-established, the `onDidAddRemoteConnection` logic above will restore the editor contents as appropriate.
Once the debuggee resumes, all RemoteObjects become invalid.
Once the gutter is shown for the first time, it is displayed for the lifetime of the TextEditor.
Once the index is implemented, consumers of this need to be updated.
Once the node is the responder, you can rely on every start/end event being processed by the gesture and `gestureState` being updated accordingly.
Once the printer outputs plain values the filter step can be removed or simplified (might want to still filter metadata).
Once the user has interacted with distraction-free mode it would be weird if another package loading triggered a change in the state.
Once they're all done, then we can resume completely.
Once those are updated to use the string representation, we can drop this code path.
Once we can directly apply a matrix, we can remove this decomposition.
Once we have Camera roll, Toast, Intent (for opening URLs) we should make this consistent with iOS.
Once we provide all diagnostics, instead of just the current file, we can probably remove the activeTextEditor parameter.
Once we render in layout, make sure it sticks.
Once we require timeouts to be specified, we can remove the boolean flags (appear etc.) and just accept a number or a bool for the timeout flags (appearTimeout etc.)
Once we upgrade to Rx5, we should share this observable and verify that our retry logic (e.g. in adb-logcat) works.
One `Animated.Value` can drive multiple properties in a synchronized fashion, but can only be driven by one mechanism at a time.
One already exists in the cache, the other is going to be attempted to be updated.
One difference between this behavior and W3C spec: cancelled touches will not appear in `.touches`, or in any future `.touches`, though they may still be "actively touching the surface".
One item would be converted to 4 valid patterns and 8 invalid patterns.
One of 'GLOBAL', 'DIRECTORY'.
One of 'plain-text', 'secure-text' or 'login-password'.
One of `WhileStatement`, `DoWhileStatement`, `ForStatement`, `ForInStatement`, and `ForStatement`.
One of hint and hintTree must be provided.
One of text or snippet is required.
One of the editors' dimensions is pending sync.
One of the following cases: A non-HTTP/HTTPS protocol A host that has been checked before and that supports shallow cloning
One of the items is a horizontal scroll view
One of two or more EOF null blocks
One of:  - Horizontal - Normal (default) - Small - Large - Inverse - SmallInverse - LargeInverse
One set of parentheses are allowed for a function expression
One use case is to specify status bar styles per route using `Navigator`.
One warning for each element creation
One would expect Tab to be as well (but it isn't).
One-time assignments Sort stability
Only "top-level" if statements are checked, meaning the first `if` in a `if-else-if-...` chain.
Only *inactive* packages can be unloaded.
Only KeyPress has charCode.
Only Node objects (in fact, only Expression nodes) need parentheses.
Only a comma marker retains any length when trimmed from the right.
Only accept "native" animated nodes as children
Only add non-shasum'ed packages if --forced.
Only add window if we got to document (e.g., not plain obj or detached DOM)
Only after 1.7.10 --branch accepts tags Detect those cases and inform the user to update git otherwise it's a lot slower than newer versions
Only allow revealing a single directory/file at a time.
Only ancient things would lack this for good reasons nowadays.
Only applies to create/delete
Only applies to renderable providers.
Only assigned if touch is needed.
Only bind to check boxes and radio buttons
Only break //after// visiting `stop`.
Only broadcast a list-level change if a record was changed/added/removed
Only broadcast an update to the range if an edge was added/changed.
Only called when incremental rendering is done and triggers the parent to re-render this row with includeInLayout true.
Only change the cursor to a pointer if there is a suggestion ready.
Only check before when preceded by `function` keyword
Only check non-release messages
Only check the last line if there is any token after the last item
Only code that has access to the passkey can retrieve (or forget) the secret object.
Only consider this section if the requested source is in the list of sources of the consumer.
Only convert to a number if it doesn't change the string
Only count area for polygon rings.
Only create a range if `edges` field is present Overwrite an existing range only if the new force index is greater
Only create if stat failed
Only dbgp connections whose script path matches scriptRegex will be accepted.
Only deal with non-null/undefined values
Only directories can be expanded.
Only do the expensive require once.
Only download SHASUMS.txt if not using tarPath override
Only drag upon left button.
Only employed if the user elects to use domains.
Only escaping of the minimal set of characters is changed.
Only expose tabId on chrome.devtools.inspectedWindow, not webInspector.inspectedWindow.
Only expressions need parentheses.
Only fire when selection has actually changed.
Only for main window.
Only get the text from stdout.
Only handle drags of the nodes specified.
Only if a given node is not multiline, reports the last element of a given node when it does not have a trailing comma.
Only install command line api object for the time of evaluation.
Only keep layer paint events, skip paints for subframes that get painted to the same layer as parent.
Only keep the most recent entries
Only leads to headaches.
Only mixin to components which have simple props and state, or use `forceUpdate()` when you know deep data structures have changed.
Only modify the target observable once
Only monitor this failure once because there tends to be a lot of the same error.
Only object and function can have properties
Only pause new worker if debugging SW - we are going through the pause on start checkbox.
Only perform the default action if a single node is selected.
Only populate once and if this property is a shorthand.
Only print debug errors if test fails.
Only process deps that are not yet processed
Only purpose is to test that refs are tracked even when applied to a component that is injected down several layers.
Only re-render occasionally so we don't slow down timers.
Only rename if there's only one file and it's not the json
Only render name once in the given continuous block.
Only render tabs for providers that are eligible for at least one directory.
Only requested segment that does not include very first item from the range can have next page and diff calls
Only requested segment that does not include very last item from the range can have next page and diff calls
Only resolve the plugin if it's a string reference.
Only retry on 408, 5xx or no `response`.
Only return diff/tracked node if there are non-generated fields
Only returns true for plain JavaScript objects.
Only run if we're currently tracking changes for this observable array and there aren't any pending deferred notifications.
Only send command if we either removed an existing handler or added handler and had none before.
Only server-side rendering really needs this option (see `ReactServerRendering`), but server-side uses `ReactServerRenderingTransaction` instead.
Only show initialization of constants, which according to python style are all upper case.
Only static images are supported.
Only string or object errors are valid.
Only strings are supported for membership.
Only support ArrayBuffers for POST method.
Only supported on Android 5.0+, has no effect on earlier versions.
Only supported on iOS.
Only the code that actually adds its `nodeHandle` (`tag`) as a child of a container can confidently record that in `ReactNativeTagHandles`.
Only the elements present in just the first array will remain.
Only the invalid test matters here
Only the length terminates the string.
Only the nodes that should be shown are returned.
Only track touches started on the same subject element.
Only track user-initiated selection-change events.
Only update query data if variables changed.
Only use `mouseout` so that we do not extract duplicate events.
Only use addEventListener if the special events handler returns false
Only use the identifier name if it's an identifier in both SourceMaps
Only use the user's last saved remote server command if there has been no change (upgrade) in the official remote server command.
Only used for error messages.
Only used for forceUpdate periodicidy
Only used when passed a node Http.ServerRequest object.
Only used when passed a node request object.
Only valid when currently responder (otherwise, it only represents the drag distance below the threshold).
Only warn when we have a callerName.
Only watch for the node's disposal if the value really is a node.
Only write in the cursor map if existing edge with cursor is deleted or have and older deletion time.
Only write to the front of map if existing edge with id is deleted or have an older deletion time.
Opaque type returned by require('./image.jpg')
Open a file in the flow project we copied, and get reference to the editor's HTML.
Open a file in the project.
Open a file within this project.
Open a remote file in the flow project we copied, and get reference to the editor's HTML.
Open a remote file in the project.
Open a right split pane to compare the contents.
Open a second pane, containing a second editor with the same file.
Open diff view with the `test.txt` file.
Open is always preceded by activate, unless opening the current file
Open the console window if it's not already opened.
Open the file, insert text, append text, save and close.
Open the test.txt file in the repo.
Opens a tab that loads facebook.com.
Opens the given file at the line/column.
Opens the path in the next pane, or the current one if there's only one.
Opens the remote connection dialog flow, which includes asking the user for connection parameters (e.g. username, server name, etc), and optionally asking for additional (e.g. 2-fac) authentication.
Opens the standard Android date picker dialog.
Opens the standard Android time picker dialog.
Opera 10-11 does not throw on post-comma invalid pseudos
Opera crashes at this point
Opera has no cut event...
Operate on a copy of prop so per-property easing won't be lost
OperationConfig was originally typed such that each property had the type mixed.
Operations for dealing with CSS properties.
Operations for dealing with DOM properties.
Operations for updating with DOM children.
Operations used to process updates to DOM nodes.
Operators    -not  -and  -eq
Operators are parsed inline in tiny state machines.
Operators typeof and delete do not raise runtime errors even if the base object of a reference is null so no need to
Operators typeof and delete do not raise runtime errors even if the base object of a reference is null so no need to display warning if we're inside of typeof or delete.
Opinionated decision warning:
Opt-in navigation is handled in the same way as a file open with no preceeding activation
Optimistic queries are inferred and fields have a generic 'any' type.
Optimistically continue down this branch, but not before examining the other siblings.
Optimization: Avoid JSON parsing if it can't reasonably be an Atom package
Optimization: Our directories don't have periods - this must be a file
Optimize `isFunction` if appropriate.
Optimize appearance for 30fps, but leave some space so it's evident when a frame overflows.
Optimize for push.apply( _, NodeList )
Optimize some code when these features are not used
Optimize some code when these features are not used.
Optimize the case of one listener.
Optimized build task that does all of our builds.
Optimized case for simple insertion -- don't want to add new changesets for every character typed
Optimized clamp(reflect(poly(3))).
Optimized for most common case
Optimized version of general operation applications that can be used when the target matrix is known to be the identity matrix.
Option on Mac, Shift on other platforms
Option overwriting strategies are functions that handle how to merge a parent option value and a child option value into the final value.
Optional AJAX dependency, but won't run scripts if not present
Optional function that allows configuration about scene animations and gestures.
Optional method because this was added post-1.0.
Optional specifier for special buttons, e.g. primary, info, success or error buttons.
Optional string representing the octicon that is rendered next to the title.
Optional: return a specific delay (in ms) used to debounce queries to this provider.
Optionally force a scrollTop.
Optionally injectable environment dependent cleanup hook.
Optionally injectable hook for processing a queue of child updates.
Optionally injectable hook for swapping out mount images in the middle of the tree.
Optionally pass in `true` as `onlyCompareGenerated` to consider two mappings with the same generated line and column, but different source/name/original line and column the same.
Optionally pass in `true` as `onlyCompareGenerated` to consider two mappings with the same original source/line/column, but different generated line and column the same.
Optionally provide a component as navigation bar that persists across scene transitions.
Optionally provide a list of buttons.
Optionally provide the navigator object from a parent Navigator
Optionally restricts the set of canceled notifications to those notifications whose `userInfo` fields match the corresponding fields in the `userInfo` argument.
Optionally set `wordRegExp` to adjust word-matching.
Optionally sort the data.
Optionally takes a `program` argument.
Optionally wire in some hacks into the token-rendering algorithm, to deal with browser quirks.
Optionally, follow up with a call to `commit()` to send the mutation to the server.
Optionally, it can also have a `name` and `type` attribute to specify filename and content type (cf.
Optionally, precede with a call to `applyOptimistic()` to apply an update optimistically to the store.
Options used to be as added as '.' to the entry module name.
Or if the value is a function expression.
Or it might be a click on something we should not interfere with, such as a scrollbar or widget.
Or just use first one
Or, `x` may be a function which is evaluated, being passed the range, the array of values, and the current index `i`, returning an array of thresholds.
Or: The cookie's host-only-flag is false and the canonicalized request-host domain-matches the cookie's domain."
Order by the first element name in the array pattern.
Order by the first property name in the object pattern.
Order of mixins is important.
Order views in DOM properly.
Ordered based on occurrences on Facebook codebase
Ordered list item prefix
Ordered list of injected plugins.
Ordinarily this is run via the gen-changelog shell script, which appends the result to the changelog.
Ordinarily we would have to provide an element or register a view, but since we are just testing the model here and not actually rendering anything Atom doesn't complain.
Original props are copied
Originally adapted from https://github.com/azer/relative-date.
Originally defined in Runtime.js
Originally taken from http://www.w3.org/TR/CSS21/propidx.html and augmented.
Origins starting with * are always merged, those starting with + are merged when similar and close together in time.
Orphan paths have no relationship to repair.
Other browsers don't have that property.
Other environments (e.g., Python) will have different mechanisms.
Other falsey values allowed
Other fields fall through to regular diffing.
Other fragments are for diff optimization only and do not require a re-render.
Other input methods (e.g., paste) seem to fire selectionchange normally.
Other keys should get added.
Other kinds of exceptions will propagate without being intercepted and rethrown by a catch block, so their stacks will accurately reflect the original throwing context.
Other methods get called on the bridge
Other optional arguments are not supported yet
Other rules are handling usage of spacing preceded by those keywords.
Others will be reported after all variables are done.
Otherwise `this` is default.
Otherwise a/* will match a/, which it should not.
Otherwise add one to the end
Otherwise add stubs for missing methods that are declared in the interface.
Otherwise bring back whatever was previously saved (if anything), falling back to the empty string if nothing was stored.
Otherwise build a new instance.
Otherwise check for new contents
Otherwise check if .git is already created
Otherwise check if there's an exact match
Otherwise err on the side of overparenthesization, adding explicit exceptions above if this proves overzealous.
Otherwise extract the version from the comparator using a simple regexp
Otherwise increment major.
Otherwise increment minor.
Otherwise initialize for horizontal or vertical properties
Otherwise it does not fill the whole panel, which might be alright except it means that the resize-handle doesn't extend all the way to the bottom.
Otherwise it needs to be printed with this non-exported declaration node.
Otherwise just do a plain text search.
Otherwise just get the value from the style object
Otherwise nodes in our document sort first
Otherwise people can pipe Writable streams, which is just wrong.
Otherwise prepend the dynamic indicator (*).
Otherwise remove them from the temp dir
Otherwise resolve to the newest one
Otherwise return diffCalls/filterCalls with empty edges.
Otherwise return null
Otherwise returns the input.
Otherwise show a warning if multistr option was not set.
Otherwise store -1 to later indicate there were no active test runners.
Otherwise that was the final repetition of the final iteration of the final benchmark.
Otherwise the diff output is a clone of `field` with updated after/first and before/last calls.
Otherwise the dominators for the objects that also were retained by debugger would be affected.
Otherwise the result is returned.
Otherwise they are considered equal
Otherwise this node is not target.
Otherwise two separate editor instances attach to the stdin/stdout which gets confusing.
Otherwise undefined is returned.
Otherwise use obj as the value of the new FastPath instance.
Otherwise use passed ones
Otherwise use the default set of common binary paths.
Otherwise use the full result
Otherwise we are checking out a named ref so we can optimize it
Otherwise we implement the ES6 `Array` and `String` Iterator.
Otherwise we jump to the sources.
Otherwise we know they are disconnected
Otherwise we need full lists of their ancestors for comparison
Otherwise we need to call transclude/compile/link here.
Otherwise we need to figure it out if the user really wants to remove it, even with dependants As such we need to prompt the user with a meaningful message
Otherwise we should be silent.
Otherwise, `querySet` and `fragmentPointers` will be empty, and `nextVariables` will be equal to `lastVariables`.
Otherwise, a name, value and priority are specified, and handled as below.
Otherwise, a new array will be returned.
Otherwise, a new object is returned.
Otherwise, a type, listener and capture are specified, and handled as below.
Otherwise, any series of * is equivalent to a single *.
Otherwise, avoid the DOM node creation, insertion and removal by using an indirect global eval
Otherwise, both a name and a value are specified, and are handled as below.
Otherwise, build a param string
Otherwise, call _write If we return false, then we need a drain event, so set that flag.
Otherwise, cb() with the data.
Otherwise, compare against target/release
Otherwise, complain about missing semicolon.
Otherwise, copy the properties one-by-one to the cache object
Otherwise, create an array by matching non-whitespace
Otherwise, do not use tunnel.
Otherwise, fetch each target from the repository and let the process roll out
Otherwise, fetch remotely
Otherwise, if a way to get the computed value exists, use that
Otherwise, if the root has been trimmed, garbage collect.
Otherwise, insert the intermediate dataType
Otherwise, inspector page reacts on drop event and tries to load the event data.
Otherwise, interpolate each of the numbers and rejoin the string.
Otherwise, it will default to an array containing only the `initialRoute`
Otherwise, it'll set the whole selection.
Otherwise, it's the given node type.
Otherwise, just fetch it from the repository
Otherwise, just use body as provided.
Otherwise, make a default string compare (like rule sort-vars to be consistent) of the first used local member name.
Otherwise, read the file, compile and cache
Otherwise, remove touchmove and touchend listeners.
Otherwise, reports a trailing comma if it exists.
Otherwise, return a function that always gets the latest binding value and registers a dependency on the binding updater.
Otherwise, returns all mappings corresponding to the given line and either the column we are searching for or the next closest column that has any offsets.
Otherwise, returns null.
Otherwise, returns the specified (default) ancestor.
Otherwise, selectively update the specified ones
Otherwise, separators and terminators change to Other Neutral.
Otherwise, simply generate a flat `switch` statement.
Otherwise, simply returns the range between the given positions.
Otherwise, target is either a tag or a branch
Otherwise, the callback is called with an error.
Otherwise, the error is unexpected, so log it.
Otherwise, the returned promise will be resolved with the return value of the last callback.
Otherwise, this is `"loop"`.
Otherwise, turn off editing until further notice, and return the start of the doc
Otherwise, use as-is.
Otherwise, wait for healthy secondaries.
Otherwise, we do not need to move it because a child will be inserted or moved before `child`.
Otherwise, we end up in a deadlock.
Otherwise, we have to resolve it
Otherwise, we pass the string directly to the Date constructor to parse.
Otherwise, we will query only when there is a save event.
Otherwise, we'll have to look up the pattern in the file.
Otherwise, what we wrote and what we read should match exactly.
Otherwise, will schedule an async call when it's done.
Otherwise, you would always wonder if the scroll responder is currently in a state where it recognizes new keyboard positions etc.
Otherwise: 1:16 odds on 30 digits
Otherwise: Let cookie-path be the attribute-value."  We'll represent the default-path as null since it depends on the context of the parsing.
Our basic config which we'll add to to make our other builds
Our last row target that we will approach incrementally
Our list items have 1-pixel cracks between them vertically.
Our nginx proxy server will listen for https traffic and serve from this port on this server.
Our own browserify-based tasks to build a single JS file build.
Our version of the non-standard `Promise.defer()`.
Outdent whatever the list item contains.
Output from executor.js
Output help if necessary
Output help information and exit.
Output window messages.
Outputs a number of spans to make up a line, taking highlighting and marked text into account.
Outputs fixes from the given results to files.
Outputs the results of the linting.
Overlapping values not supported
Overridden by ancestors.
Overridden by subclasses
Overridden by subclasses.
Overridden in shallow rendering.
Overridden methods (that were mixed in).
Override "value" property for values that can not be JSON-stringified.
Override Dp.buildable for this Def instance.
Override XHR.open to allow this page to be located outside the devtools tree, and resources to be selectively mapped back into the devtools tree.
Override and customize some functionalities of WebInspector.
Override chrome.devtools as a workaround for a error-throwing getter being exposed in extension pages loaded into a non-extension process (only happens for remote client extensions)
Override magic textarea content restore that IE sometimes does on our hidden textarea on reload
Override manipulation of globals by nested matchers
Override mime type if needed
Override of TextBuffer's implementation.
Override push to accept second parameter representing priority
Override styles so that each page will fill the parent.
Override the _applyPkgMeta function to prevent it from deleting ignored files
Override the method with a new version on first access.
Override this function to include a meaningful message related to proxies if necessary
Override this to do fancier things, like read the "files" array from a package.json file or something.
Overrideable `describe` function to test.
Overrideable `it` function to test.
Overrides any `size` props on child buttons.
Overrides in this config object will take priority over base.
Overrides response content-type header
Overrides the default blue gradient image.
Overrides the method with specified name until it's called first time.
Overrides the text that's read by the screen reader when the user interacts with the element.
Overwrite fs.readFile so that when .gitignore and .ignore are read in parallel, .ignore will always be read first.
Overwrites any existing profiles.
Own properties are enumerated firstly, so to speed up, if last one is own, then all properties are own.
Owner will be preserved, unless ref is overridden
Owner-child relationships have inverse will and did
PATH_2 existed in the cache, and its status did not change, so it shouldn't generate an event.
PATH_3 was previously in the cache.
PATH_4 was queried for but not returned, and the fetch was for ignored files.
PATH_4 was queried for but not returned, but the fetch was for non-ignored files.
PATH_5 was queried for but not returned, and the fetch was for non-ignored files.
PATH_5 was queried for but not returned, but the fetch was for ignored files.
PATH_6 did not exist in the cache, but its status is clean, so it shouldn't generate an event.
PATH_6 was never in the cache.
PECL project url - this will eventually work correctly for all
POSITION OBJECT A Pos instance represents a position within the text.
PROCESSING_INSTRUCTION
PROTOTYPE The publicly visible API.
PS: oh God, I hate Unicode ECMAScript 5.1/Unicode v6.3.0 NonAsciiIdentifierStart:
Pack sign, exponent, fraction
Packager guarantees that `scales` array is sorted
Packager is running from node_modules.
Packages have matching meta fields (needs explanation) 3.
Packages that didn't have any conflicts in resolution yet have "resolution" entry in bower.json are deemed unnecessary
Packages with invalid metas should have been removed
Packs the specified package into a .tgz file, which can then be installed.
Pad `str` to `width`.
Pad `str` up to total length `max` with `chr`, on the left.
Pad `str` up to total length `max` with `chr`.
Pad with '0' at the front.
Padding characters are truncated if they can't be evenly divided by `length`.
Padding characters are truncated if they exceed `length`.
Pads `string` on the left and right sides if it's shorter than `length`.
Pads `string` on the left side if it's shorter than `length`.
Pads `string` on the right side if it's shorter than `length`.
Page info comes from the range metadata, so we do a custom traversal here which is simpler than passing through page-info-related state as a hint for the normal traversal.
Page info is handled by the range Otherwise, write metadata fields normally (ex: `count`)
Paged id's children are constructed directly in chrome format from the contents of the object id.
PagedObjectIds have fullname and elementRange set.
Paint top and bottom gutter.
PaintInvalidationTracking events provide a paintId and a nodeId which we can use to update the paintId for all other invalidation tracking events.
PaintInvalidationTracking is only used for updating paintIds.
Pan responder that handles gesture for a card in the cards list.
Pan responder that handles gesture for a card in the cards stack.
Pan vertically when shift down only.
Pane items are deserialized before the gadget providers have had a chance to register their gadgets.
Parameterized types like Array, or Object can use this to recursively call other transformers.
Params are checked separately from other variables.
Parent is responder, and responder is transferred by a second touch start
Parent property, however, can't be one of the node's immutable fields, otherwise it'd create circular references.
Parentless nodes are either documents or disconnected
Parse Content-Type header content
Parse HTTP Authorization header
Parse HTTP Server-Authorization header
Parse HTTP WWW-Authenticate header
Parse `argv`, settings options and invoking commands when defined.
Parse a ClassDeclaration AST Node.
Parse a `for`/`in` and `for`/`of` loop, which are almost same from parser's perspective.
Parse a class declaration or literal (depending on the `isStatement` parameter).
Parse a definition file, returning an intermediate representation that has all of the information required to generate the remote proxy, as well as marshal and unmarshal the data over a network.
Parse a directive value and extract the expression and its filters into a descriptor.
Parse a full expression.
Parse a function declaration or literal (depending on the `isStatement` parameter).
Parse a list of variable declarations.
Parse a regular `for` loop.
Parse a regular expression.
Parse a semicolon-enclosed block of statements, handling `"use strict"` declarations when `allowStrict` is true (used for function bodies).
Parse a single statement.
Parse a string of code into an augmented syntax tree suitable for arbitrary modification and reprinting.
Parse a template text string into an array of tokens.
Parse a typehint into the 'nice' form, if possible.
Parse an assignment expression.
Parse an expression into re-written getter/setters.
Parse an object literal or binding pattern.
Parse any so-far unknown options
Parse argv with the given options.
Parse arrow function expression with given parameters.
Parse assignments that were found instead of conditionals.
Parse binary operators with the operator precedence parsing algorithm.
Parse classes as remotable interfaces.
Parse command `args`.
Parse error expected on engines that don't support setters or otherwise aren't supportable by the polyfill.
Parse expected `args`.
Parse flags (if any).
Parse function body and check parameters.
Parse modifiers from directive attribute name.
Parse object or class method.
Parse options from `argv` returning `argv` void of these options.
Parse options from the given argv.
Parse or format the given `val`.
Parse package dependencies
Parse requires AsyncStorage.
Parse template expression.
Parse the args passed as JSON.
Parse the file list to create an aggregated structure based on the subdirs passed.
Parse the given `str` and return milliseconds.
Parse the lines, now in the form: new_file (previous_file)
Parse the mappings in a string in to a data structure which we can easily query (the ordered arrays in the `this.__generatedMappings` and `this.__originalMappings` properties).
Parse the next token as an identifier.
Parse the result of `hg bookmarks` into a `Map` from revision id to a array of bookmark names applied to revision.
Parse the source code once, then reuse the root node
Parse unary operators, both prefix and postfix.
Parses `markers` option.
Parses `uri` with Node's `url.parse` and calls `decodeURI` on `href`, `path`, and `pathname` of the parsed URL object.
Parses a JSON-like config.
Parses a comma-separated list of expressions, and returns them as an array.
Parses a comma-separated list of module exports.
Parses a comma-separated list of module imports.
Parses a config of values separated by comma.
Parses a given value as options.
Parses a list of "name:boolean_value" or/and "name" options divided by comma or whitespace.
Parses a single block.
Parses a string like '0.5rad' or '60deg' into radians expressed in a float.
Parses and normalizes an option object.
Parses array and generator comprehensions.
Parses assignment pattern around given atom if possible.
Parses decEndpoint dependencies and fetches missing ones.
Parses environment variable names in field values 3.
Parses import declaration.
Parses lvalue (assignable) atom.
Parses module export declaration.
Parses out comments from AST and populates commentsByLine and docBlocksByLine
Parses spread element.
Parses text into an AST.
Parses the 'Authorization' header out of an http.ServerRequest object.
Parses the GraphQL document string into a RelayQLDocument.
Parses the command line and runs a command of the CLI.
Parses the given argv array and sets the 'opts', 'argv' and 'command' properties.
Parses the next sequence in this BER buffer.
Parses the option object and determines check methods for each keyword.
Parses the output of `hg diff --unified 0 --noprefix` from one or more files.
Parses the output of `hg diff --unified 0`.
Parses the output of `xcrun simctl list devices` command
Parses the output of the 'adb devices' command
Parses the request body in an anyc/promise way
Parses the source into an AST and then prints it according to the given options.
Parses yield expression inside generator.
Partial invalidation tracking.
Partial state is allocated outside of the function closure so it can be reused with every call, avoiding memory allocation when this function is called.
Partially apply a function by creating a version that has had some of its arguments pre-filled, without changing its dynamic `this` context.
Partially compile a piece of DOM and return a decompile function.
Parts of the grammar that are required to have parens.
Pass `top` to keep the current "toplevel" state.
Pass `true` below to allow duplicate names and sources.
Pass a mocked component module to this method to augment it with useful methods that allow it to be used as a dummy React component.
Pass a string as options.sourceFileName to recast.parse to tell the reprinter to keep track of reused code so that it can construct a source map automatically.
Pass an empty title, the title gets made later in onattach.
Pass down initial value so initial generated markup has correct `selected` attributes
Pass down our tag name to child components for validation purposes
Pass either a string attribute to count by, or a function that returns the criterion.
Pass either a string attribute to group by, or a function that returns the criterion.
Pass in an object with a single key/val pair and it will return you the string key of that single record.
Pass less stop characters to rangeOfWord so the range will be a more complete expression.
Pass the already-active view ID to simply toggle the side bar's visibility.
Pass the right function
Pass the settle filesystem time.
Pass this if window is not defined yet
Pass true to prevent coalescing.
Pass undefined so the default parameter gets used.
Pass zero as contextId to search all contexts.
Passed to option handlers when there is no old value.
Passing "unsupported" props should work just fine as long as they are not animated
Passing **n** will return all the values in the array, excluding the last N.
Passing **n** will return the first N values in the array.
Passing **n** will return the last N values in the array.
Passing 0 here will simply return 'revisionExpression'.
Passing an 'undefined' expression causes an exception in fb-watchman.
Passing an **n** will return the rest N values in the array.
Passing false causes the minimum necessary scroll to occur, so the selection sticks to the top/bottom.
Passing node is a bit dirty, because message data will contain big text in `source`.
Passing the object is too much.
Passive disposal (on next evaluation)
Passthrough to eslint.getSourceCode().
Passthrough to eslint.report() that automatically assigns the rule ID and severity.
Paste events should not lead to BeforeInput events.
Patch settings from the URL param (for tests).
Patch the current global environment.
Patch the global fs module here at the app level
Path is being fetched, await the Promise that's in flight.
Path is relative to the root of this package (where "package.json" lives).
Path to client key, and crt (certificate)
Path to remote directory user should start in upon connection.
Path to server key, and crt (certificate)
Paths to certificate authority crt (certificate)
Paths will be relative.
Pattern match on: attributeConfig
Pattern nodes may contain non-scalar fields without children that should not be removed.
Pattern used by `getNodeName`.
Pausing it causes it to stop emitting entry events, and also pauses the current entry if there is one.
Payload will be null when not in the composited mode.
Pedantic Inline Grammar
Pending dependencies further down the graph either don't affect the result or are already in `_pendingDependencyMap`.
People normally won't write queries like this by hand, but they can be produced as the result of splitting deferred queries.
People use this property instead all the time, so support it
Per 4.1.4 - Convert from unix epoch to Gregorian epoch
Per 4.2.1.2 Throw error if too many uuids are requested
Per 4.2.1.2, Bump clockseq on clock regression
Per 4.2.1.2, use count of uuid's generated during the current clock cycle to simulate higher resolution clock
Per 4.2.2, randomize (14 bit) clockseq
Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
Perf optimisation: Apply bindings only if...
Perf optimization: when conf does not change the derived fields will be passed along with the options it's not type-safe, but it's way more efficient than recalculate them
Perform a change on the document data structure.
Perform a deep comparison to check if two objects are equal.
Perform a heuristic test to determine if an object is "array-like".
Perform a shallow check to ensure the value conforms to `CallValue` type: For performance reasons, skip recursively testing array/object values.
Perform a try catch, just in case the object has a circular reference or stringify throws for some other reason.
Perform actions on text editors of a given language.
Perform an update to a mounted component.
Perform attach if necessary.
Performance is inversely proportional to the number of unique nested structures.
Performance optimization to avoid constantly re-generating these objects.
Performance:  - Making a stylesheet from a style object makes it possible to refer to it by ID instead of creating a new style object every time.
Performes a deep BFS scanning expand of contained nodes.
Performs a Hack symbol search in the specified directory.
Performs a breadth-first iteration over the directories of the tree starting with a given node.
Performs a destructive operation on a transform matrix.
Performs a fast comparison of whether `this` and `that` represent identical query nodes.
Performs a fuzzy file search in the specified directory.
Performs a single pass over the enqueued immediates.
Performs an update of a tree branch.
Performs equality by iterating through keys on an object and returning false when any key has values which are not strictly equal between the arguments.
Performs in-place Gauss-Jordan elimination.
Performs multiple autofix passes over the text until as many fixes as possible have been applied.
Perhaps we'll make that change in the future if this scenario becomes more common.
Perhaps you want 2 command lines with a different set of commands in each, for example.
Permit negative indentations.
Permits chained assignments
PhantomJS can only require() relative files
Pick bases at random, instead of starting at 2
Pick one based on browser.
Pick provisional load requests.
Pick the closer of the two intersection points.
Pick up confs from TSRM and Zend if present
Piggyback on a donor event to simulate a different one.
Piggyback on the whitespace fix and simply check if any non-visible tags appear in the source.
Ping the server until it leaves the current state
Pipe output from forked process.
Pipes through normal onScroll events from the underlying `ScrollView`.
PixelRatio class gives access to the device pixel density.
Place as callback for a DOM element's `onResponderGrant` event.
Place as callback for a DOM element's `onResponderMove` event.
Place as callback for a DOM element's `onResponderRelease` event.
Place as callback for a DOM element's `onResponderTerminate` event.
Place it here so that all "Copy"-ing items stick together.
Please convert your array into string the way web server expects it
Please don't remove this line.
Please refer to the css-layout README for details.
Please use getLength(callback) to get proper length
Pluck off n bytes from an array of buffers.
Pluck the ReactElement from the call, and export it instead.
Plug in your RNG constructor here
Pluggable, initialized in high-level API below.
Plugin to make entity title show the real entity, idea by Roman Komarov
Plugins can be injected as part of page initialization or on-the-fly.
Plugins can override original methods, events or types, so we don't need to throw error on conflict, we only print a warning to console.
Plugins might want to do this, so that they can use event dispatching as a tool that helps them decide which events should be extracted in the first place.
Plural fragments require the prop value to be an array of fragment pointers, which are merged into a single fragment pointer to pass to the query resolver `resolve`.
Pluralization helper.
Plus, for many of the individual attributes in S5.3 it says to use the "attribute-value of the last attribute in the cookie-attribute-list".
Point of the intersection
Point on the first quad side clockwise
Point on the third quad side clockwise
Point to ssh-agent's socket for ssh-agent-based authentication.
Pointer has a different ID or is/was fake data.
Poke around for some headers
Policies that describe methods in `ReactClassInterface`.
Poll selection to see whether it's changed.
Polyfill a module if it is not already defined in `scope`.
Polyfill for XMLHttpRequest2 FormData API, allowing multipart POST requests with mixed data (string, native files) to be submitted via XMLHttpRequest.
Pool size must be a multiple of 4 and greater than 32.
PooledClass representing the bookkeeping associated with performing a child mapping.
PooledClass representing the bookkeeping associated with performing a child traversal.
PooledClass representing the bounding rectangle of a region.
Pop all selection events off the end of a history array.
Pop off selection events that are in the way.
Pop off the top of the stack and add it to the list of nodes to display.
Pop to a particular scene, as specified by its route.
Pop to the first scene in the stack, unmounting every other scene.
Pop up a dialog that is pre-filled with the default params.
Popover may have been removed by showCallback().
Pops a constructor information.
Pops a function scope from the stack.
Pops a variable scope from the stack.
Pops and merges the last forking context.
Pops the current checking context from the stack.
Pops the last block scope.
Pops the last choice context and finalizes it.
Pops the last context of SwitchStatement and finalizes it.
Pops the last context of TryStatement and finalizes it.
Pops the last context of a loop statement and finalizes it.
Pops the segment context stack until the entry segment.
Pops this function's information.
Populate Publish UI with the most recent data after a successful push.
Populate `_nativeNode` on each child of `inst`, assuming that the children match up with the DOM (element) children of `node`.
Populate `_nativeNode` on the rendered native/text component with the given DOM node.
Populate ko.observableArray.fn with read-only functions from native arrays
Populate real files from real disk like real people.
Populate stale scenes from previous scenes marked as stale.
Populate the class2type map
Populate the extensions and types maps.
Populate the extensions/types maps
Populate the left stack.
Populate the only stack.
Populate the registry with core rule configs.
Populate the top level nodes.
Port of Andrew Moon's Poly1305-donna-16.
Port of Atom's timer utils (https://fburl.com/104714454) which is useful for unittest.
Ported from underscore.js isObject
Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.
Ported loosely from BouncyCastle's Java EC code Only Fp curves implemented for now Requires jsbn.js and jsbn2.js
Position arrow accurately.
Position does not expose methods for construction via an `HTMLDOMElement`, because it isn't meaningful to construct such a thing without first defining a frame of reference.
Position information for the previous token
Position relative to main DevTools element.
Position the mover div to align with the current scroll position
Position the mover div to align with the current virtual scroll position
Position timline grid location.
Position types for which top, left, bottom and right are ignored.
Position-in-collection
Position/Index mapping
Positioning above the anchor.
Positioning below the anchor.
Positions of the first endString after the end of the selection, and the last startString before it.
Positions of the last startString before the start of the selection, and the first endString after it.
Positions returned by coordsChar contain some extra information.
Positions the specified row of nodes.
Positive IDs represent objects which live on the server, negative IDs represent objects which live on the client.
Positive numbers mean the size expands outwards.
Possible Return formats.
Possible configuration types:  -  FIELDS_CHANGE provides configuration for mutation fields.
Possible future optimization: If we know it's an element from an XHTML document (not HTML), we don't need to do the .toLowerCase() as it will always be lower case anyway.
Possible identifier start in a surrogate pair.
Possible nodes include the root, fields, and fragments.
Possible values are 'Album', 'All', 'Event', 'Faces', 'Library', 'PhotoStream' and SavedPhotos.
Possible values: 'auto' - The system determines whether the view is important for accessibility - default (recommended).
Possibly more trouble than it's worth, though, since this may be a temporary option.
Possibly split or suppress the update based on the presence of read-only spans in its range.
Post-order traversal.
Post-process the value after it has been piped through the filters.
Postpone a token event.
Potential race condition if intervalSeconds is too small.
Potentially complex pseudos
Potentially we could use similar technique for Windows and Linux
Pre-populates `state` with a suitable `data` object if needed, and copies over any metadata fields, if present.
Pre-populates `state` with a suitable `data` objects if needed.
Pre-process the value before piping it through the filters.
Precedence is as follows: 1.
Precise rendering behavior is configured via the `render` prop which takes a callback.
Precompute a pack of callbacks that's frequently generated and passed to instances.
Precompute crumb styles so that they don't need to be recomputed on every interaction.
Precompute samples table
Predicate that tests whether the next token is of the given type, and if yes, consumes it as a side effect.
Preface gives us something to blacklist in warning module
Prefer Sizzle, if available.
Prefer endTime since it might be from the network stack.
Prefer the actual `id` if present, otherwise generate one (if an id was already generated it is reused).
Prefer to get updates via ::onAllMessagesDidUpdate.
Prefer to get updates via ::onFileMessagesDidUpdate.
Prefer to get updates via ::onProjectMessagesDidUpdate.
Prefer to not define the method than to provide a dummy implementation that returns `Promise.resolve(null)`.
Prefetches a remote image for later use by downloading it to the disk cache
Prefilter to get matcher input, preserving a map for seed-results synchronization
Prefix a token with this to indicate that no breaks should happen here.
Prefix with a space, thus making sure the current flag is not a substring of some other.
Preload fields into local variables for better performance.
Prepare data to be sent bellow 1 - Sort picks by version/release
Prepare for dependency collection.
Prepare the brush container for events.
Prepare the fragment for removal.
Prepares to check the bodies of a "if", "else if" and "else" chain.
Prepares to check the body of a node to see if it's a block statement.
Prepend on new segment
Prepend on range that already has edge
Prepend on segment that already has item
Prepend the help information
Prepend, append, or delete edges to/from a range.
Preprocessing allows a binding provider to mutate a node before bindings are applied to it.
Presentation record does not have model record to highlight.
Preserve getters with warnings on the internal ReactNative copy without invoking them.
Preserve old behavior: If parameter name not provided, don't replace it.
Preserve requests from the new session.
Preserve script evaluation history
Preserve the existing suffix, if any, such as the currency symbol.
Preserve the offset for thick resizers.
Preserve the original `console` as `originalConsole`
Preserve the original environment
Preserves existing new lines.
Preserves order when equal: 1 then 5
Pressed key value is passed as an argument to the callback handler.
Pretend some of them are ref query dependencies:
Pretend that nothing has happened.
Pretend the optional dependency was specified, but somehow failed to load:
Pretty printer that prints top-level React elements using JSX.
Prevent 'this' from being bound to DelayedEventManager.
Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)
Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).
Prevent duplicated error.
Prevent editing the user agent and user rules.
Prevent flickering by always rendering cached children -- if they're invalid, then the fetch will happen soon.
Prevent from infinite recursion when installing cyclic dependencies
Prevent infinite expansion of cross-referencing arrays.
Prevent leaking memory for long chains of recursive calls to `asap`.
Prevent leaking private data in the sourcemap file path
Prevent multiple applyBindings calls for the same node, except when a binding value is specified
Prevent never-ending loop
Prevent normal selection in the editor (we handle our own)
Prevent re-triggering of the same event, since we already bubbled it above
Prevent scrolling the editor when scrolling the suggestion list.
Prevent selecting the nearest word on double click.
Prevent selection and cursors from interfering with the scroll width and height.
Prevent submission of a blank field from creating a directory.
Prevent submission of a blank field from creating a file.
Prevent the container from being scrolled off the end.
Prevent the link from navigating, since we don't do any navigation by following links normally.
Prevent this from being ran twice
Prevent triggered image.load events from bubbling to window.load
Prevent user from scrolling into empty space of unmounted rows.
Prevent wrapper from ever scrolling
Prevents the path to the current file to be prepended, so that the overwritten XHR.open can properly prepend the new path prefix.
Prevents truncating a tiny bit off the end
Previous (equivalent) refs get cleared
Previous call should not error
Previous calls should not log errors
Previous log timestamp.
Previous uuid creation time
Previously assigned color.
Previously we would throw an error if we didn't have an internal instance.
Previously, a bug in `createAtomCommands()` caused non-disposables to be added to the returned CompositeDisposable.
Previously, if you had a dep in your shrinkwrap then anything that required that dependency would count as a match, regardless of version.
Previously, we were doing simple string matching that would give us false positives when checking if paths were in PATH.
Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays
Primarily for unit tests.
Primes the store by sending requests for any missing data that would be required to satisfy the supplied set of queries.
Primitive gesture actions.
Primitive gesture directions.
Primitive or null object.
Primitive types cannot have properties
Primitives can be directly compared
Print a console warning and replace the code with a function that will immediately throw an error in the browser.
Print also a tree of the installed packages
Print bower version, node version and system info.
Print the entire AST generically.
Print the message only when the app was started via `app.listen()`.
Print the new source.
Print the root node generically, but then resume reprinting its children non-generically.
Print trace if verbose, the error has no code or if the error is a node error
Print without attempting to reuse any original source code.
Prints a banner with a border around it containing the given message.
Prints a textual representation of the query node to the console for debugging purposes.
Prints the node ignoring comments.
Prints the type for arguments that are transmitted via variables.
Prints the version of react-native and exits.
Prior to 0.4.1 you would have to specify the args in your range behaviors in the same order they appeared in your query.
Prior to Atom v1.7.0, `atom.inSpecMode` had a chance of performing an IPC call that could be expensive depending on how much work the other process was doing.
Prioritize handling transition in progress over a gesture:
Prioritize the cached compaereCommitId, if it exists.
Prioritizes checking of indices that are most likely to change so that the comparison bails as early as possible.
Private functions gets negative score.
Private helper methods
Private helper methods used by the transformed code.
Private members and methods.
Private state that needs to be reset before every traversal.
Private struct class that holds the key for a route.
Private symbol for identifying `SourceNode`s when multiple versions of the source-map library are loaded.
Proactively render more rows in case some of them will be collapsed without triggering refresh.
Probably an error on in uv_guess_handle()
Probably in future we want to use them for force given resolution, but for now...
Probably in the "in body" parsing mode, so we outlaw only tag combos where the parsing rules cause implicit opens or closes to be added.
Probably just the default registry.
Process a single text token.
Process an element or a DocumentFragment based on a instance option object.
Process and execute the selected commands.
Process buildconf arguments
Process each date-token sequentially in the order the date-tokens appear in the cookie-date
Process everything in chunks.
Process message type.
Process might issue synchronous calls to this throttler.
Process packages.json
Process regular animation frame.
Process the template option and normalizes it into a a DocumentFragment that can be used as a partial or a instance template.
Process the template option.
Process this context here for other than switches and loops.
Process this into the format nuclide-find-references expects.
Process two tail components into prevIncompletedMessage for incompleted response.
Processed fragments are removed from this array, by calling `shiftNextLine`.
Processes an individual byte being written to a stream
Processes an individual file using ESLint.
Processes an source code using ESLint.
Processes any enqueued updates.
Processes props by setting default values for unspecified props and asserting that the props are valid.
Produce a duplicate-free version of the array.
Produce a token object.
Produce an array that contains every item shared between all the passed-in arrays.
Produce an array that contains the union: each distinct element from all of the passed-in arrays.
Produce an error warning.
Produce the next raw token or return 'null' if no tokens can be matched.
Produce the next token.
Products were able to do this because the Babel Relay plugin doesn't produce validation errors for empty fields.
Profiles time from request to receiving the first server response.
Profiling code in Relay consists of three steps:  - Instrument the function to be profiled.
Program nodes introduce global scopes.
Project configuration - .eslintrc overrides package.json in same directory
Project configuration - first level .eslintrc
Project configuration - first level package.json
Project configuration - root set in second level .eslintrc
Project configuration - second level .eslintrc
Project configuration - second level package.json
Project configuration - third level .eslintrc
Project configuration - third level package.json
Project path is the project that is including ESLint as a dependency.
Project-relative path.
Promise-ify the flux cycle around SearchResultManager::executeQuery.
Promisify calls to watchman client.
Prompt string for this picker, used on Android in dialog mode as the title of the dialog.
Prompt the user to enter some text.
Prop type validation may throw.
Propagate exception as error if not done
Propagate retained sizes for each node excluding root.
Propagate the active cursor to the body for the drag duration.
Propagate the scroll position to the actual DOM scroller
Propagate to the linked documents
Proper implementation of methods exposed on Symbol.prototype They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype
Proper implementaton of toPrimitive and toStringTag for returned symbol instances
Proper tooling would allow actual inlining.
Properly terminate if the parent server crashes.
Properties allowed by the native animated implementation.
Properties have their own rules
Properties not set: endLine: undefined, endColumn: undefined, isContentScript: undefined, hasSourceURL: undefined,
Properties of context are called as methods if possible
Properties of the current token: Its type
Properties that are deleted before being visited are not visited.
Properties that are fetched via fields with arguments can be encoded by serializing the arguments in property keys.
Properties that are methods don't use the function keyword.
Property names not specified use the normalized name.
Props passed as properties to a route object will set the configuration for that route's navigation bar, overriding any props passed to the NavigatorIOS component.
Props provide configurability for several features, such as auto-correction, auto-capitalization, placeholder text, and different keyboard types, such as a numeric keypad.
Props to Dean Edwards' addEvent library for many of the ideas.
Protect against Object overwritten by the user code.
Protect against double callback
Protection against accidental inheritance.
Provide a 'Clean and rebuild' command to restart the Clang server for the current file and reset all compilation flags.
Provide a clear path for implementation upgrade to WeakMap in 2014
Provide a hook for user-specified inspect functions.
Provide a link from the copy to the original.
Provide a linked `value` attribute for controlled forms.
Provide a set of routes to initially mount.
Provide an imperative API as static functions of the component.
Provide empty IDs to simulate non-refetchable nodes
Provide linkingActionMap to instruct the container to subscribe to linking events, and use this mapper to convert URIs into actions that your app can handle
Provide the JIT with a nice shape / hidden class.
Provide the compiled function source as a convenience for precompilation.
Provide this key, and the container will store the navigation state in AsyncStorage through refreshes, with the provided key
Provide user-friendly number values.
Provider for autocomplete service.
Provider for code format service.
ProviderB messages should remain the same.
Providers should implement at least one of formatCode / formatEntireFile.
Provides Diagnostics for un-typed regions of Hack code.
Provides a +/- skew which means actual allowed window is double the number of seconds.
Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks during the performing of the transaction.
Provides a handle to the underlying scroll responder.
Provides a limited version of `require('request').del()` so we have a basic Promise-based API for making DELETE requests.
Provides a limited version of `require('request').get()` so we have a basic Promise-based API for making GET requests.
Provides a limited version of `require('request').head()` so we have a basic Promise-based API for making HEAD requests.
Provides a limited version of `require('request').patch()` so we have a basic Promise-based API for making PATCH requests.
Provides a limited version of `require('request').post()` so we have a basic Promise-based API for making POST requests.
Provides a limited version of `require('request').put()` so we have a basic Promise-based API for making PUT requests.
Provides a navigation stack abstraction, useful for going forward/backwards while browsing code.
Provides a promise along with methods to change its state.
Provides a queue for collecting `componentDidMount` and `componentDidUpdate` callbacks during the the transaction.
Provides a queue for collecting `componentDidMount` and `componentDidUpdate` callbacks during the transaction.
Provides additional traits to screen reader.
Provides an API that can be called during an eventing cycle to release the last event that was invoked, so that it is no longer "held".
Provides an API that can be called during an eventing cycle to remove the last listener that was invoked.
Provides an adapter between legacy linters (defined by the LinterProvider type), and Nuclide Diagnostic Providers.
Provides an initial value that will change when the user starts typing.
Provides an opportunity to perform additional logic on the variables.
Provides common functionality for components that must reconcile multiple children.
Provides efficient data processing and access to the `ListView` component.
Provides feedback to the user of the health of a NuclideSocket.
Provides methods to control the garbage collection of records in `RelayStoreData`.
Proxy for converting between Chrome dev tools debugger and HHVM Dbgp debuggee.
Proxy generation failed.
Pruning certain nodes will result in empty or incomplete nodes, here we clean those nodes up.
Public API for controlling garbage collection of `RelayStoreData`.
Publicly exposed method on module for native objc to invoke when a top level event is extracted.
Publish as AMD module
Publish as global (in browsers)
Publish as node.js module
Publish mode only shows the changes of the active repository.
Publishes a 'busy' message with the given string.
Publishes a registration name that is used to identify dispatched events and can be used with `EventPluginHub.putListener` to register listeners.
Publishes an event so that it can be dispatched by the supplied plugin.
Pull all the redirects of the main request upon commit load.
Pull in code from sapi and extensions
Punctuation token types.
Purely defensive, as query is guaranteed to be non-empty.
Purge the least recently used (oldest) entry from the cache.
Push a filter to the current directive object
Push a job into the queue.
Push a scene off the screen, so that opacity:0 scenes will not block touches sent to the presented scenes
Push a watcher into the watcher queue.
Push an update, if any, onto the queue.
Push initial default config to log4js.
Push the node's children on the stack in reverse order so that when they are popped off the stack, they are iterated in the original order.
Push the requested markup with an additional RESULT_INDEX_ATTR attribute.
Pushes a committed text into the history.
Pushes new function scope with all `false` flags.
Pushes the current (uncommitted) text into the history.
Pushing new elements is done relative to the current location not relative to the top of the stack.
Pushing removes any elements above the current location before pushing the new element.
Pushs a variable scope (Program or Function) information to the stack.
Pushs new checking context into the stack.
Put Flexbox into the Polyfills category
Put explicitly provided properties onto the event object
Put in the first slot of each dominatedNodes slice the count of entries that will be filled.
Put in the new values to get a computed value out
Put nodes in the right place if they aren't there already
Put the object in the registry.
Put the scene back into the state as defined by props.sceneStyle, so transitions can happen normally
Put this back to the pool to reuse the instance.
Put this event cycle into the queue and will finish them later.
Put this match into lists grouped by files.
Put visible nodes into the data grid.
QSA and matchesSelector support matchesSelector(:active) reports false when true (IE9/Opera 11.5)
Qualified type identifiers are not handled by runtime typechecker, so simply omit the annotation for now.
Queried fields that are `undefined` are stored as nulls.
Queries are blocked on asynchronous requests.
Queries the layout of a view.
Query an element selector if it's not an element already.
Query for 3 stories with text
Queue of markup to be rendered.
Queue of update configuration objects.
Queue these nodes for later removal
Queuers:  Perform the work of kicking off a root/node read.
Quick and dirty way to get an approximation for the plain text from HTML.
Quick check for a common case, an Obj-C selector with one argument.
Quick check to determine if target is callable, in the spec this throws a TypeError, but we will just return undefined.
Quick lookup for states that are considered to be "pressing" and are therefore eligible to result in a "selection" if the press stops.
Quick lookup map for states that are considered to be "active"
Quick object check - this is primarily used to tell Objects from primitive values when we know the value is a JSON-compliant type.
Quietly ignore stray async events, we're probably too late for the start.
Quietly ignore unbalanced close events, they're legit (we could have missed start one).
Quit if there's nothing to scroll here
Quite a lot of acorn.js is duplicated here.
Quote the input expression so that we can support expression with space in it(e.g. function evaluation).
Quotes produce strings.
RC release, package will be installed only if users specifically do it
RCTScrollViewManager.calculateChildFrames is not available on every platform
REPL has null main script file and calls `evaluate` with `repl` as the file name.
RFC 2617: handle both MD5 and MD5-sess algorithms.
RFC 2965 suggests using Discard attribute to mark session cookies, but this does not seem to be widely used.
RFC 6265 indicates that the max-age attribute takes precedence over the expires attribute
RFC6265 S4.1.2.2 If a cookie has both the Max-Age and the Expires attribute, the Max-Age attribute has precedence and controls the expiration date of the cookie.
RIGHTWARDS ARROW OVER LEFTWARDS ARROW.
RTFM: http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf
Radios and checkboxes getter/setter
Raise an error and skip that input.
Raise an unexpected token error.
Ran off the end of the file - the whole thing is a comment
Range in the input where the symbol reference occurs.
Ranges publish events for the entire range, not the specific view of that range.
Rasterization incurs an off-screen drawing pass and the bitmap consumes memory.
Rate-limited row rendering - By default, only one row is rendered per event-loop (customizable with the `pageSize` prop).
Rather than annoying tagged union
Rather than crash on mismatched plurality of fragment/ids just warn and resolve as if the fragment's pluarity matched the format of the ids.
Ratio of gesture completion when non-velocity release will cause action
RawTasks are recycled to reduce GC churn.
Re-adding a node like this triggers the initial and more favorable whitespace behavior.
Re-center the circles and compute the encompassing radius.
Re-enable Atom's bundled 'tree-view' when this package is disabled to leave the user's environment the way this package found it.
Re-evaluates the `value` property for the specified hierarchy.
Re-position menu in case it does not fit.
Re-render all pane items when (1) new items are added, (2) new gadgets are registered and (3) the active pane item changes.
Re-render base on state
Re-render based on props
Re-render based on state again
Re-render because one field changed
Re-render because the object changed
Re-render on activation.
Re-render the item with the new props.
Re-render whenever the data in the store changes.
Re-set this, in case some other handler touched the selection in the meantime.
Re-synchronize the fake scrollbars with the actual size of the content.
Re-use 'watch-group' since some backends throw when they encounted an unrecognized object group.
Re-use styles from the Atom welcome pane where possible.
Reach out with your feelings.
React Fragments error if you try to inspect them.
React Native CLI configuration file
React Native helps make apps smooth by doing all the heavy lifting off the main thread, in JavaScript.
React Native in dev mode often starts with Red Box "Can't fibd variable __fbBatchedBridge..." This is fixed by clicking Reload JS which will trigger a request to packager server
React Native was installed using CocoaPods.
React component PropTypes Definitions.
React component that wraps the Android-only `ProgressBar`.
React component that wraps the platform `DrawerLayout` (Android only).
React life cycle hooks.
React lifecycle methods may be used normally.
React references `ReactReconcileTransaction` using this property in order to allow dependency injection.
React should warn but do the right thing.
React view that supports a single scrollable child view (e.g. `ScrollView`).
React warnings use console.error so that a stack trace is shown, but we don't (currently) want these to show a redbox (Note: Logic duplicated in ExceptionsManager.js.)
React warnings use console.error so that a stack trace is shown, but we don't (currently) want these to show a redbox (Note: Logic duplicated in polyfills/console.js.)
ReactART doesn't handle update to the bounding box correctly.
ReactBrowserEventEmitter.handleTopLevel might remove the target from the DOM.
ReactChildReconciler provides helpers for initializing or updating a set of children.
ReactClasses doesn't have constructors.
ReactCompositeComponent uses this:
ReactDOM v15.0.2  Copyright 2013-present, Facebook, Inc.
ReactDOMComponentTree uses these:
ReactDOMOption looks at this initial value so the initial generated markup has correct `selected` attributes
ReactElementValidator provides a wrapper around a element factory which validates the props passed to the element.
ReactLink allows the parent to pass down a value coupled with a callback that, when invoked, expresses an intent to modify that value.
ReactLink encapsulates a common pattern in which a component wants to modify a prop received from its parent.
ReactMultiChild DOM integration test.
ReactMultiChild are capable of reconciling multiple children.
ReactNative vs ReactWeb ----------------------- React treats some pieces of data opaquely.
ReactNativeBaseComponent overrides methods in ReactMultiChild.
ReactOwners are capable of storing references to owned components.
ReactPerf is a general AOP system designed to measure performance.
ReactPerf only measures composites, so we put everything in one.
ReactUpdateQueue allows for state updates to be scheduled into a later reconciliation step.
Read a single token, updating the parser object's token-related properties.
Read a string value, interpreting backslash-escapes.
Read an identifier or keyword token.
Read an identifier, and return it as a string.
Read an integer in the given radix.
Read an integer, octal integer, or floating-point number.
Read and store the height of line widgets associated with the given line.
Read directory, looking for links
Read every package meta
Read from cache and we still don't have a valid `dataID`.
Read input from the textarea, and update the document to match.
Read json, generating the package meta
Read package metadata
Read the actual heights of the rendered lines, and update their stored heights to match.
Read the bower.json inside the folder, so that we copy only the necessary files if it has ignore specified
Reads a (potentially) variable length off the BER buffer.
Reads a JS configuration object from a string to ensure that it parses.
Reads and subscribes to query data anchored at the supplied data ID.
Reads query data anchored at the supplied data ID.
Reads query data anchored at the supplied data IDs.
Reads query data, where each element in the result array corresponds to a root call argument.
Reads template string tokens.
Reads the configuration file for the Buck project and returns the requested property.
Reads the file contents and returns empty string if the file doesn't exist which means it was removed in the HEAD dirty repository status.
Really don't warn again for the same component
Really try to only have up to h3, please
Really we should create references to unique objects so when we insert a marker it's impossible that it has appeared elsewhere in the source.
Really, one should not be tossing away EPIPE errors, or any errors, so casually.
Reason for this is that `glob` needs `/**` to collect all the files under a directory where as our previous implementation without `glob` simply walked a directory that is passed.
Reassign as const so the type refinement holds in the closure below
Rebasing/resetting history to deal with externally-sourced changes
Rebound spring parameters when transitioning FROM this scene
Rebuild ReactTestUtils.Simulate whenever event plugins are injected
Rebuild the gutter elements, ensure the margin to the left of the code matches their width.
Recalculate selection highlight dimensions.
Recalculate the new treeElement for the same property we were going to edit next.
Recalculate the total diagnostic count.
Recall that origLoc is the .loc of an ancestor node that is guaranteed to contain all the reprinted nodes and comments.
Received on the first stable websocket connection.
Received on the reconnected stable websocket connection.
Receives a next element and updates the component.
Receives a state machine signal, performs side effects of the transition and stores the new state.
Receives a variargs array of leaf node names and creates the structure in a temporary folder.
Receives two optional predicates  The `prePredicate` is invoked at pre-descent.
Receiving ArrayBuffers happens via Blobs, instead.
Recommended method to use to get the line diffs of files in this repo.
Recommended method to use to get the status of files in this repo.
Recommended to be the package name.
Recompute the robustness weights.
Recomputes the plugin list using the injected plugins and plugin ordering.
Recomputing which rows to render is batched up and run asynchronously to avoid wastful updates, e.g. from multiple layout updates in rapid succession.
Reconciles event listeners, adding or removing if necessary.
Reconciles the children with the various properties that affect the children content.
Reconciles the properties by detecting differences in property values and updating the DOM as necessary.
Reconciles the root DOM node, then recurses.
Reconsider where this check is made.
Record State is unknown because it has not yet been fetched from the server.
Record an update to a record.
Record exists (either fetched from the server or produced by a local, optimistic update).
Record index of the last subscriber so we do not later unintentionally invoke callbacks that were subscribed after this broadcast.
Record is known not to exist (either as the result of a mutation, or because the server returned `null` when queried for the record).
Record might contain data from optimistic update.
Record that an error occurred while creating the given (client) record ID.
Record that the given node is no longer part of the connection.
Record that the node is contained in the connection.
Record the characters to be added to the DOM.
Record the component responsible for creating this element.
Record the creation of a record.
Record the invalidation so later events can look it up.
Record the new index of the last-seen occurrence of typeName.
Record the root element in case it later gets transplanted.
Record the root node ID associated with the mutation.
Record tracked nodes.
Records are "created" whenever an entry did not previously exist for the `recordID`, including cases when a `recordID` is created with a null value.
Records are "updated" if any field changes (including being set to null).
Records are plain objects with special metadata properties.
Records are shapes of data with globally unique "data IDs".
Records whether initialized or uninitialized variables are defined in current scope.
Recover leading whitespace by temporarily prepending any character.
Recrusively traverse an object to evoke all converted getters, so that every nested property inside the object is collected as a "deep" dependency.
Rect is in layer content coordinates, make it relative to picture by offsetting to the top left corner.
Recurse down into the child.
Recurse if we're merging plain objects or arrays
Recurse through connection subfields and write their results.
Recurses on short circuit eval and ternary nodes if enabled by flags.
Recursive check for ternary and logical expressions
Recursive implementation of binary search.
Recursively arranges the specified node's children into squarified rows.
Recursively broadcast an event to all children instances.
Recursively compare objects and arrays.
Recursively compares two objects, ignoring missing metadata keys (such as `__dataID__`).
Recursively compute the layout.
Recursively copy the contents of the fixture to the temp directory.
Recursively find the identifier walking up the scope, starting with the innermost scope.
Recursively flatten arrays (susceptible to call stack limits).
Recursively insert into the child node.
Recursively inserts the specified point p at the node n or one of its descendants.
Recursively populate clone (susceptible to call stack limits).
Recursively propagate an event up the parent chain.
Recursively resizes the specified node's children into existing rows.
Recycles subtrees from `prevData` by replacing equal subtrees in `nextData`.
Red/error if the test class had errors.
Redefine element to the external one.
Redefine style.setProperty et al.
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  1.
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1.
Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
Redraw the line's text.
Reduce time spent doing lookups by setting these on the prototype.
Reduce: make a binary expression from the three topmost entries.
Reduces cognitive load by limiting identifier ambiguity, 3.
Ref systems are difficult to build in such a way that ownership is maintained in an airtight manner.
References in each file are grouped together if they're adjacent.
References:  - http://en.wikipedia.org/wiki/ANSI_escape_code - http://www.termsys.demon.co.uk/vtansi.htm
Reflect.defineProperty
Reflect.getOwnPropertyDescriptor
Reflect.getOwnPropertyNames
Reflect.getPrototypeOf
Reflect.setPrototypeOf
Refresh the usage for the current query.
Refs are available when mounted and updated during reconciliation.
Refs are not maintained in the rendered order, and neither is `this._renderedChildren` (surprisingly).
Refs should be used to reference components that are not the return value of render methods.
RegExps are compared by their source patterns and flags.
Regardless of how frequently the service sends file change updates, Only one batched status update can be running at any point of time.
Regardless, we haven't tested local hack services so save that for another day.
Regardless, whoever is the responder after any potential transfer, we direct all touch start/move/ends to them in the form of `onResponderMove/Start/End`.
Regenerates the .proxy baseline files in the spec/fixtures directory.
Regex for: "new_file (previous_file", with two capture groups, one for each file.
Regexes containing the keys and values listed immediately above.
Region that can trigger swipe.
Register NuclideUri type conversions.
Register NullableType and NamedType
Register a callback for this fake editor.
Register a change handler that is invoked whenever the store changes.
Register a change in the history.
Register a change to a single line.
Register a dependency on the binding context
Register a type by providing both a marshaller and an unmarshaller.
Register all of the static methods as remote functions.
Register as a named AMD module, since jQuery can be concatenated with other files that may use define, but not via a proper concatenation script that understands anonymous AMD modules.
Register callback `fn` for the command.
Register callbacks for option events and watchers.
Register immediately in case anything tries to read and subscribe to this record (which means incrementing reference counts).
Register module at `path` with callback `definition`.
Register module-level functions.
Register suitable examples for snapshot tests
Register the diagnostic store for updates from the new provider.
Register the handlers
Register the subscriptions after the filesystem settles.
Register these transformers
Register type aliases.
Registers a container node into which React components will be rendered.
Registers a host formatter for nuclideUriToDisplayString
Registers a rule module for rule id in storage.
Registers a service function to a service name.
Registers all given rules of a plugin.
Registers for all statement nodes (excludes FunctionDeclaration).
Registers given conditions to the group the condition belongs to.
Registers plugins so that they can extract and dispatch events.
Registers the conditions to belonging groups.
Regression test for crbug.com/370035.
Regular expressions must start with '/'
Rehydrate the state of the benchmark run following a restart or a reload.
Reintegrate element matches to eliminate the need for sorting
Reject early with the result when encountering an error.
Reject if error is not a network error
Rejoin connected segments.
Rejoin first and last segments if there were intersections and the first and last points were visible.
Rejoin integer and decimal parts.
Relatedly, when upgrading, if a bundled module is replacing an existing module we want to choose the bundled version, not the version we're replacing.
Relative path to folder with .git file
Relative to WorkerRuntimeAgent::enable in core/inspector/WorkerRuntimeAgent.cpp
Relative to https://github.com/joyent/node/issues/25266
Relative to nuclide-debugger/scripts, where html page is loaded.
Relative with just one slash, to test fs resolution priority against shorthands
Relativize paths Also normalize paths on windows
Relay allows the same variable at both locations, regardless of type:
Relay contains the set of public methods used to initialize and orchestrate a React application that uses GraphQL to declare data dependencies.
Relay does not currently have a GraphQL argument parser, so...
Relay profiles use await calls, so likely occur out of current stack frame therefore async variant of profiling is used
Relay will materialize this prop based on the result of the query in the next component.
Relay-aware comparators for props and state provide a reasonable default implementation of `shouldComponentUpdate`.
RelayMetaRoute.get(...)
RelayRenderer does not synchronously update because the ready state (and therefore render arguments) for the new `queryConfig` is not yet known.
Release the oldest cached results once the cache is full.
Releases all events of a certain type.
Releases any resources allocated by `mountComponent`.
Releases control over execution.
Releases the event corresponding to the handle that was returned when the event was first held.
Relies on `updateStylesByID` not mutating `styleUpdates`.
Reload inspected page to sniff network events
Reload inspected page.
Reload who the current slaves are.
Reloads the current page.
Rely on keypress instead.
Relying here on the .eslintignore from the repo root
Remaining properties are added to a new props object
Remaining properties override existing props
Remaps must be run before builtin transforms because short-methods may shadow import names.
Remember original destination before login.
Remember that the DOM is ready
Remember that these lines changed, for updating the display
Remember that we already checked any headers in the params were in the request, so if this passes we're good.
Remember the old values, and insert the new ones
Remember the original values
Remember the top-level container
Remember to delete the cropped image from the ImageStore when you are done with it.
RemoteObjects are only valid while the debuggee is paused.
Remove "assets_" prefix
Remove "show next" button if there is one.
Remove '.js' from the end of the package name if it is there
Remove *all* instances
Remove a callback from the list
Remove a directive subscriber.
Remove a file versioned under Hg.
Remove a handler by passing the `change` event type and the handler
Remove a link from `default` label to its chunk.
Remove a range of nodes with transition, store the nodes in a fragment with correct ordering, and call callback when done.
Remove a span from an array, returning undefined if no spans are left (we don't store arrays for lines without spans).
Remove all breakpoints.
Remove all callbacks from the list
Remove all items from the registry with a non-zero number of errors  Note: this also removes rule configurations which were not linted (meaning, they have an undefined errorCount).
Remove all new lines between require fences that are not explicitly added by the NewLine module.
Remove all the markers if we've finished loading and there's no suggestion.
Remove any OS specific files from the files array before checking its length
Remove any edges in the range if it matches any of the ids in the input.
Remove any links for this record
Remove any remaining nodes
Remove any rendered children.
Remove any superfluous resizers.
Remove any trailing whitespace on lines.
Remove any tree elements that no longer have this node as their parent and save all existing elements that could be reused.
Remove any unneeded rendered routes.
Remove authorization if changing hostnames (but not if just changing ports or protocols).
Remove auto dataType and get content-type in the process
Remove automatic id suffix added by kramdown if heading with same name exists.
Remove boolean attributes when set to false
Remove byte order marker.
Remove cache folder afterwards
Remove children that are no longer present.
Remove colors in case some log has colors..
Remove current destroyed child and manually do the cleanup after removal.
Remove deprecated transform props from docs
Remove duplicate items from array
Remove each link that was declared as invalid
Remove element nodes and prevent memory leaks
Remove event listener shorthand.
Remove existent and copy canonical dir
Remove expand all button and shadow host toolbar.
Remove files marked for deletion.
Remove fragment, multi-nodes version
Remove fragment, single node version
Remove from _connections to not be considered in future connection queries.
Remove from being fetched list
Remove from its parent by default
Remove from json only if successfully deleted
Remove full paths and relative line numbers from stack traces so that we can compare against "known-good" output.
Remove generic event handler if we removed something and no more handlers exist (avoids potential for endless recursion during removal of special event handlers)
Remove leading new lines (while keeping indentation)
Remove listener for local notifications
Remove listener for push notifications
Remove listeners, then invalidate all messages from ProviderB.
Remove master and test only for the first 7 refs
Remove matching events
Remove multiple lines
Remove new lines at the start.
Remove operation that takes a callback.
Remove or update next button.
Remove parameters from the previous response, unless this is the second request for a server that requires digest authentication.
Remove previous side class and add new one.
Remove properties that might affect total size calculation.
Remove references with the same range (happens in C++ with templates)
Remove root from the flattened tree
Remove root from the result (last node in the array) and put it at the bottom of the stack so that it is visited after all orphan nodes and their subgraphs.
Remove selection from hidden nodes under this root
Remove selection rendering.p
Remove self from all dependencies' subcriber list.
Remove servers until we're under the memory limit.
Remove spans that are empty and don't have a clearWhenEmpty option of false.
Remove the 'build' dir
Remove the NewLine markers.
Remove the `fix` property to prevent the fix button from showing up (for now).
Remove the button from the toolbar.
Remove the cursor line decorations because that's distracting in read-only mode.
Remove the empty line, which is a message separator.
Remove the expando if it's no longer used
Remove the file from the diff stats cache when the editor is closed.
Remove the first index, because this is the default connection profile, not a user-created profile.
Remove the first object from the stack of traversed objects.
Remove the given callback for `event` or all registered callbacks.
Remove the given messages, if they are currently present
Remove the indentation introduced by JSX
Remove the index of the profile to delete.
Remove the index so new ones get assigned during deserialization
Remove the last parenthesis
Remove the leading absolute path prepended to the file paths between atom reloads.
Remove the link to viewer.actor and broadcast an update
Remove the list item's bullet so it is seen as the next token.
Remove the listener in a home-made disposable for when this editor is no-longer active.
Remove the loading spinner before setting the contents of the blame gutter.
Remove the middle edge
Remove the n lines at offset 'at'.
Remove the pending progress and we will be in a normal activeGesture state
Remove the quotes printValue adds.
Remove the source file from the _sourcesContents map.
Remove the transaction that called this function.
Remove theDog - this should purge the cache
Remove these escape sequences.
Remove things based on the config.
Remove this counter from the global list.
Remove this url from the saved URLs while it is being saved.
Remove trailing slashes
Remove unshift function
Remove unused requires.
Remove updated children first so that `toIndex` is consistent.
Remove with transition.
Remove wrapper from fragment
Remove zero-width spaces that were added by nodeTitleInfo.
Removed to create an eval-free library Reserved word lists for various dialects of the language
Removes `key` and its value from the associative array.
Removes `key` and its value from the hash.
Removes `key` and its value from the map.
Removes `key` and its value from the stack.
Removes a bulk set of the subscriptions.
Removes a child component.
Removes a component by ref from an owner component.
Removes a given element from a given array.
Removes a specific subscription.
Removes all entries which do not match the predicate.
Removes all items this object has added to Atom's ContextMenuManager.
Removes all key-value entries from the map.
Removes all key-value entries from the stack.
Removes all nodes that are tracking the given DataID from the query-tracker.
Removes all of the registered listeners, including those registered as listener maps.
Removes all text from the input.
Removes an edge from a connection without modifying the node data.
Removes an edge from this range such that the edge will never be reachable regardless of the client session.
Removes any Directory (not RemoteDirectory) objects that have Nuclide remote URIs.
Removes any elements below current, then pushes newTop onto the stack.
Removes directories even if they are non-empty.
Removes edge in range if it matches id in input edge.
Removes focus from an input or view.
Removes spans entirely within the change, reconnects spans belonging to the same marker that appear on both sides of the change, and cuts off spans partially within the change.
Removes the event listener.
Removes the leading comments from the first node.
Removes the namespace from a plugin name.
Removes the prefix `eslint-plugin-` from a plugin name.
Removes the scope information object from the top of the stack.
Removes the top item of the break context stack.
Removes the top of stack item.
Removes the top of the stack.
Removes the top scope of the stack.
Removes this subscription from the subscriber that controls it.
Removing a field should not result in a diff query since the edge is tracked.
Removing elements from the set is not supported.
Removing the logging code for production environments will keep the same logic and follow the same code paths.
Removing unlisted breakpoints and mark the ones that already exist.
Rename a file versioned under Hg.
Rename, may be clobbered later.
Renamed "package" to "bundle".
Renames this directory to the given absolute path.
Render a ReactElement to its initial HTML.
Render a TestRefsComponent and ensure that the main refs are wired up.
Render a blank outline when we change panes.
Render a line into the hidden node display.externalMeasured.
Render a new component into the DOM.
Render each group of markup with similar wrapping `nodeName`.
Render once for this single data point (or use the viewModel if no data was provided)
Render own properties.
Render the DOM representation of the text of a line.
Render the button, making sure that the icon is centered.
Render the group heading with the heading-specific indent.
Render the initial style when the initial layout isn't measured yet.
Render the source map being generated to a string.
Render the versions at the end
Render truly inherited properties with black, i.e. return them as non-inherited.
Render will return this component if there are no root nodes.
Rendered when the list is scrolled faster than rows can be rendered.
Rendering ANSI codes.
Rendering is done incrementally one row at a time to minimize the amount of work done per JS event tick.
Rendering offscreen to preserve correct alpha behavior is extremely expensive and hard to debug for non-native developers, which is why it is not turned on by default.
Renders a React component into the DOM in the supplied `container`.
Renders a boolean input.
Renders a debugging overlay to visualize touch target with hitSlop (might not work on Android).
Renders a native WebView.
Renders markup into an array of nodes.
Renders static content efficiently by allowing React to short-circuit the reconciliation process.
Renders the actual row contents.
Renders the native picker component on iOS and Android.
Renew the cached list of directories, as well as the cached map of eligible providers for every directory.
Reopen the picker for another anchor element.
Repeated keys will be overwritten by later values.
Repeats the given string `n` times.
Replace a route in the navigation stack.
Replace a scene as specified by an index  `index` specifies the route in the stack that should be replaced.
Replace all the props.
Replace any instances already present with a re-opening code otherwise only the part of the string until said closing code will be colored, and the rest will simply be 'plain'.
Replace debugger script-based uiSourceCode with a network-based one.
Replace each backslash with double backslash to make sure MS Crt arguments parser won't collapse them.
Replace each paired surrogate with a single ASCII symbol to avoid throwing on regular expressions that are only valid in combination with the "u" flag.
Replace every Unicode escape sequence with the equivalent BMP character or a constant ASCII code point in the case of astral symbols.
Replace new line outside of quotes since cmd.exe doesn't let to do it inside.
Replace the contents of the mappedNodes array, thereby updating the record of which nodes would be deleted if valueToMap was itself later removed
Replace the current active route with a new route, and pops out the rest routes after it.
Replace the current line with the properly-indented line.
Replace the current scene with a new route.
Replace the ext_pickle.js with the new content
Replace the item if it is a placeholder, returning the new item.
Replace the old pane axis with our new one and add the old one as a child to it.
Replace the placeholder with the real item.
Replace the previous scene and pop to it.
Replace the previous scene.
Replace the range from from to to by the strings in replacement.
Replace the route for the current page and immediately load the view for the new route.
Replace the route/view for the previous page.
Replace the signature with the TOKEN, then hash and see if it matches the value in the file.
Replace this with a comma if the scope is broken.
Replace with the actual new continuous node set
Replace/restore the type attribute of script elements for safe DOM manipulation
Replaces a DOM node that exists in the document with markup.
Replaces a node with a string of markup at its current position within its parent.
Replaces a view that exists in the document with markup.
Replaces all of the props.
Replaces all of the state.
Replaces all uses of type aliases in return types with their definition so that clients need not be aware of aliases.
Replaces any rendered children with a markup string.
Replaces any rendered children with a text content string.
Replaces the head segments with given segments.
Replaces the previous route/view and transitions back to it.
Replaces the top item and popToTop
Replaces unused segments with the previous segments of each unused segment.
Report AssignmentExpressions only if they are the left side of the assignment
Report a slice of an array of nodes with a given message.
Report a variable to be used as a restricted global.
Report all nodes in an array with a given message.
Report all nodes in an array, except the first, with a given message.
Report anything that is a match and not a CallExpression
Report anything that is underscored that isn't a CallExpression
Report if the given node contains a bitwise operator.
Report the event as non-handled if there is no selected item, to commit the input or handle it otherwise.
Report variables declared elsewhere (ex: variables defined as "global" by eslint)
Report variables not declared at all
Reports `as` keyword of a given node if usage of spacing around this keyword is invalid.
Reports `class` and `extends` keywords of a given node if usage of spacing around those keywords is invalid.
Reports `do` and `while` keywords of a given node if usage of spacing around those keywords is invalid.
Reports `for` and `in` keywords of a given node if usage of spacing around those keywords is invalid.
Reports `for` and `of` keywords of a given node if usage of spacing around those keywords is invalid.
Reports `if` and `else` keywords of a given node if usage of spacing around those keywords is invalid.
Reports `import`, `export`, `as`, and `from` keywords of a given node if usage of spacing around those keywords is invalid.
Reports `static`, `get`, and `set` keywords of a given node if usage of spacing around those keywords is invalid.
Reports `try`, `catch`, and `finally` keywords of a given node if usage of spacing around those keywords is invalid.
Reports a given arrow function if the function is callee of `.bind()` method.
Reports a given condition info.
Reports a given control node if it's unnecessary.
Reports a given export node if spacing in curly braces is invalid.
Reports a given function if the last path is reachable.
Reports a given function node if the node matches the following patterns.
Reports a given function node.
Reports a given import node if spacing in curly braces is invalid.
Reports a given node as self assignments.
Reports a given node if it's unreachable.
Reports a given node.
Reports a given object node if spacing in curly braces is invalid.
Reports a given program/function if the implicit returning is not consistent.
Reports a given reference.
Reports a given return statement if it's inconsistent.
Reports a given token if there are not space(s) after the token.
Reports a given token if there are not space(s) before the token.
Reports a given token if there are space(s) after the token.
Reports a given token if there are space(s) before the token.
Reports a given token if usage of spacing around the token is invalid.
Reports a given token if usage of spacing followed by the token is invalid.
Reports a given token if usage of spacing preceded by the token is invalid.
Reports a given variable if the variable should be declared as const.
Reports a message from one of the rules.
Reports a node as invalid.
Reports a reference if is non initializer and writable.
Reports a semicolon error with appropriate location and message.
Reports a spacing error with an appropriate message.
Reports a trailing comma if it exists.
Reports accesses of `eval` via the global object.
Reports all accesses of `eval` (excludes direct calls to eval).
Reports an AST node as a rule violation.
Reports an appropriately-formatted error if spacing is incorrect on one side of the colon.
Reports an unexpected use of a bitwise operator.
Reports an unnecessary semicolon error.
Reports analytics including timing for a single operation.
Reports functions which match the following condition:  - has a loop node in ancestors.
Reports given references if all of the reference should be declared as const.
Reports have shown that much more than 5 or 10 cause issues for corporate networks, private repos or situations where internet bandwidth is limited.
Reports if `super()` lacked.
Reports if `this` of the current context is invalid.
Reports if a given node is string concatenation with non string literals.
Reports if an arrow function contains an ambiguous conditional.
Reports if it's a callback which can replace with arrows.
Reports if the dot between object and property is on the correct loccation.
Reports if the given token has invalid spacing.
Reports if this is before `super()`.
Reports invalid spacing style inside braces.
Reports references of the implicit `arguments` variable if exist.
Reports references which are inside of unmodified groups.
Reports test failure.
Reports that a variable declarator or assignment expression is assigning a non-'this' value to the specified alias.
Reports the conditions which are not belonging to groups.
Reports the first token of a given node if the first token is a keyword and usage of spacing around the token is invalid.
Reports the first token of a given node if the first token is a keyword and usage of spacing followed by the token is invalid.
Reports the given message for the given node.
Reports the given node and identifier name.
Reports the last element of a given node if it does not have a trailing comma.
Reports the node if its name has been declared already.
Reports the previous token of a given node if the token is a keyword and usage of spacing around the token is invalid.
Reports this empty statement, except if the parent node is a loop.
Reports when the given node contains a constant condition.
Reports write references if a given variable is readonly builtin.
Reports write references.
Repository-relative path.
Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)
Represents a Buck project on disk.
Represents a collection of errors for the purpose of consumers that generally only deal with one error.
Represents a named, custom type.
Represents a query fragment that is conditional upon the active route as a function that returns either a literal fragment or a fragment reference.
Represents one contiguous segment of edges within a `GraphQLRange`.
Represents one entry in a TreeComponent.
Represents parsed source code.
Represents the result of an executor executing code.
Represents the state of the CircularBuffer when an Iterator for it is created.
Reprint a modified syntax tree using as much of the original source code as possible.
Request a non-intersecting superset with after
Request a non-intersecting superset with before
Request a subset with after
Request a subset with before
Request a superset with after
Request a superset with before
Request from empty range
Request id is passed along to the native module so that the native module can identify the particular call instance.
Request the from empty range
Request the full set to make sure it is stitched properly
Request the super set
RequestSigners come in two varieties: ones with an rs_signFunc, and ones with an rs_signer.
Requests an update to variables.
Requests are always asynchronous, so do nothing.
Requests are processed serially and strictly in order.
Requests coming from React Native
Requests focus for the given input or view.
Requests inspected page to be placed atop of the inspector frontend with specified bounds.
Requests notification permissions from iOS, prompting the user's dialog box.
Require Alert on demand.
Require ReactNativeDefaultInjection first for its side effects of setting up the JS environment
Require commands only when called.
Require examples in this string must be split to prevent React's build tools from mistaking them for real requires.
Require the babel-preset's listed in the default babel config
Require the given path.
Required by Hawk.client.header
Required function which renders the scene for a given route.
Required if no initialRoute is provided.
Requires API Level 21 - `WIFI` - The WIFI data connection.
Requires ec.js, jsbn.js, and jsbn2.js
Requires will still be generated for these modules unless they are also provided in 'builtIns'.
Requiring it too early can lead to issues with things like Platform not being fully initialized.
Reserve space for the entry, as they have to be ordered by startTime.
Reserved names are extracted
Reserved values are passed in at call site.
Reserved word lists for various dialects of the language
Reset actions dropdown for input DebuggerLaunchAttachProvider.
Reset again after, in case modified in handler
Reset cache for branches, tags, etc
Reset connections dropdown with latest connections.
Reset debugging types dropdown for input connection.
Reset every scene with an array of routes.
Reset failed compares count because we're checking for consecutive failures
Reset for subsequent tests.
Reset in memory cache for each test
Reset internal state.
Reset nextInQueue for the next loop
Reset nsecs if clock regresses (new clockseq) or we've moved onto a new time interval
Reset pending fields Even if this component is scheduled for another update in ReactUpdates, it would still be ignored because these fields are reset.
Reset query numbers back to q0.
Reset scope object prototype to null so that the proto properties don't appear in the local scope section.
Reset search restore.
Reset selected item to DEFAULT_OPTION_INDEX if target is not launchable anymore.
Reset selector marks in group.
Reset size to 0 and read the content's natural width (after re-layout) to determine the size to scale to.
Reset so that subsequent non-key-initiated buffer updates don't produce silly big numbers.
Reset the batcher's state.
Reset the configuration to the initial configuration of the tester removing any changes made until now.
Reset the current text selection only if the click is done outside of the selection and 'resetSelectionOnContextMenu' option is true.
Reset the flag of skipping if all branches have been skipped.
Reset the hash object for reuse
Reset the inline display of this element to learn if it is being hidden by cascaded rules or not
Reset the input to correspond to the selection (or to be empty, when not typing and nothing is selected)
Reset the original 'dim' if we changed it to work around the Windows dimmed gray issue.
Reset the regex so it will start the next search at the beginning of the string.
Reset the selection to a single range.
Reset the state of the RegExp.
Reset to false every time becomes responder.
Resets all ANSI formatting on the stream.
Resets all environments.
Resets if scoll back up and down again.
Resets plugin information.
Resets rules to its starting state.
Resets the internal queue.
Resets the internal state of the object.
Resets the node to be kept in view if no more data is being awaited.
Resize main element early and force layout.
Resize the pane to fit its contents.
Resolve a component, depending on whether the component is defined normally or using an async factory function.
Resolve default props
Resolve definitionPath based on the caller's module, and fallback to this file's module in case module.parent doesn't exist (we are using repl).
Resolve everything except for indents and cursor.
Resolve keys you want to use once at startup time, then reuse those resolutions.
Resolve promise if error code is 0 (found matches) or 1 (found no matches).
Resolve promise to the dst dir
Resolve promise with canonical dir and package meta
Resolve reference IP address
Resolve relative path arguments against the Buck project root.
Resolve relative to the parent.
Resolve service path defined in services-3.json to absolute path.
Resolve the component constructor to use when creating the child vm.
Resolve the source using the factory because the source can actually be a registry name
Resolve to an empty array if the directory deson't exist.
Resolve to null because it's a dir
Resolve to some-branch
Resolve with canonical dir and package meta
Resolve with meaningful data
Resolve with removed packages
Resolve with the final location
Resolve with the folder
Resolves a configuration file path into the fully-formed path, whether filename or package name.
Resolves a plural fragment pointer into an array of records.
Resolves a value from CallArgument description.
Resolves any directory patterns into glob-based patterns for easier handling.
Resolves data for a single fragment pointer.
Resolves if the connection looks healthy.
Resolves modules based on a set of options.
Resolves non-plural fragments.
Resolves onLoaderBreakpointResumePromise.
Resolves plural fragments.
Resolves synchronously if already resolved, otherwise resolves asynchronously and caches the resolved constructor on the factory.
Resolves the file location of a given module relative to the configured lookup paths.
Resolves the patterns passed into executeOnFiles() into glob-based patterns for easier handling.
Resolves when the server is ready or the request times out, as indicated by the result of the returned Promise.
Resort to using the resolver name for unnamed endpoints
Resources are automatically cleaned up once all subscribers of an expression have unsubscribed.
Respond in the UI immediately and assume the process is properly killed.
Responder System: ----------------  - A global, solitary "interaction lock" on a view.
Responder being granted: ------------------------  - Touch starts, moves, and scrolls can cause an ID to become the responder.
Responder may or may not have transferred on a new touch start/move.
Responder system incorrectly dispatches should* to current responder Filter out any touch moves past the first one - we would have already processed multi-touch geometry during the first event.
Responder, active, in the `PressRect`
Responder, active, in the `PressRect`, after long press threshold
Responder, active, out of `PressRect`
Responder, active, out of `PressRect`, after long press threshold
Responder, inactive, in the `PressRect`
Responder, inactive, out of `PressRect`
Response controls running state.
Response header columns
Responses and Messages are transformed into these.
Responses to the DBGP 'status' command
Restart replica set primary.
Restore all breakpoints from saved decorations.
Restore docked layout in case of smooth transition.
Restore matcherIn since elem is not yet a final match
Restore pathToConnection to its original state
Restore preexisting value
Restore the environment.
Restore the indentation.
Restore the original dependencies cross-references, that is, the parent-child relationships
Restore the rest of the extraneous (not installed directly)
Restore the state jQuery applied
Restores a setting for a Nuclide feature key to its default value.
Restores data for a fragment incrementally from cache.
Restores data for queries incrementally from cache.
Restoring selection even in the event of an unexpected error.
Restricts the range of possible date/time values.
Result from register action on stub
Result: Non plain array
Results in the current file, have filename set to empty string.
Results may be `null` if the data was marked as deleted or `undefined` if the fragment was either not fetched or evicted from the cache.
Results should be cached keyed by the query with values of null meaning "being fetched" and anything besides null and undefined as the result of a valid query
Results will be ordered in increasing size (so the best guess will be first).
Resume the debugger if needed.
Retrieve an object's values as an array.
Retrieve and filter the old marked spans stored in a change event.
Retrieve specific property
Retrieve the values of an object's properties.
Retrieve the width and height (in pixels) of an image prior to displaying it.
Retrieves `state.data`, initializing it if necessary.
Retrieves a reference to the fragment by name.
Retrieves an array containing all comments in the source code.
Retrieves the JSDoc comment for a given node.
Retrieves the base64-encoded data for an image in the ImageStore.
Retrieves the configuration filename for a given directory.
Retrieves the rendered children in a nice format for comparing to the input `this.props.usernameToStatus`.
Retrieving binding context from arbitrary nodes
Retry 3 times (unless we get a ENOENT)
Retry a maximum of 4 times when nonsense rectangles are returned
Retry every second until we find an active device.
Retry on network errors
Retry should go through.
Return '*' instead of '' so that truthiness works.
Return 'true' for polyfills
Return a 'clean' array
Return a Range if the marker is still valid, otherwise return null
Return a completely flattened version of an array.
Return a copy of the object only containing the whitelisted properties.
Return a copy of the object without the blacklisted properties.
Return a copy of the original AST so that any changes made may be compared to the original.
Return a defensive copy of any existing FastPath instances.
Return a function that produces ReactElements of a given type.
Return a memoized function that checks for the existence of a project level .babelrc file, and if it doesn't exist, reads the default RN babelrc file and uses that.
Return a new Disposable that upon dispose, will remove the bound watch subscription.
Return a non-matching owner
Return a promise that resolves on search completion.
Return a random integer between min and max (inclusive).
Return a regular expression object for this pattern-flag pair, or `null` in case the current environment doesn't support the flags it uses.
Return a require function relative to the `parent` path.
Return a selection that does not partially select any atomic ranges.
Return a simpler request object to allow serialization
Return a simpler response object to allow serialization
Return a sorted list of the function names available on the object.
Return a string for sign() with the given `options`.
Return a string suitable for a Bash completion file for this tool.
Return a version of the array that does not contain the specified value(s).
Return absolute URLs as-is.
Return all the elements for which a truth test fails.
Return all the elements that pass a truth test.
Return an array of lines wrapping the given text to the given width.
Return an array with with any line numbers that are empty.
Return an array with with any line numbers that contain comments.
Return an option matching `arg` if any.
Return an outline object with the node under the cursor highlighted.
Return available launch/attach provider for input connection.
Return command help documentation.
Return early in case 0 selection window.
Return false to prevent the tab getting split (since we only update a singleton health pane).
Return help for options.
Return help output for the current options.
Return how many unique items are in this ArraySet.
Return if A is an ancestor of B.
Return if this is simple 'click', since dispatched on glass pane, can't use 'click' event.
Return index of the leftmost element that is equal or greater than the specimen object.
Return index of the leftmost element that is greater than the specimen object.
Return jQuery for attributes-only inclusion
Return just the object
Return list of commits, including one tag.
Return locally bound variables in these three cases:
Return null if zero digits were read, the integer value otherwise.
Return null in the case where there isn't a closing tag.
Return null when the line isn't visible.
Return only captures needed by the pseudo filter method (type and argument)
Return program help documentation.
Return relative paths to status code number values object.
Return special URLs as-is.
Return special upon seeing a positional matcher
Return the Object shape expected by `HgServiceBase`.
Return the action (prepend/append) to use when adding an item to the range with the specified calls.
Return the actual search results.
Return the always-fail directory when it is expanded.
Return the appropriate call.
Return the cloned set
Return the closest (most specific) match.
Return the column of the colon to align with, or null if it doesn't exist.
Return the config names, with the same number of dashes as the current word has.
Return the deepest cached node whose ID is a prefix of `targetID`.
Return the empty string for floats formatted as ints.
Return the exports of the module
Return the first path found that any target is inside
Return the first value which passes a truth test.
Return the key for the first node that is selected, or null if there are none.
Return the largest option length.
Return the length of the invalid excess if we're just parsing Otherwise, throw an error or return tokens
Return the lowest common ancestor of A and B, or null if they are in different trees.
Return the maximum element or (element-based computation).
Return the minimum element (or element-based computation).
Return the modified object
Return the newly-formed element set
Return the next i character without actually moving the char pointer.
Return the number of elements in an object.
Return the object, which will automatically be converted to an id through the marshalling system.
Return the parent instance of the passed-in instance.
Return the position of the first occurrence of an item in an array, or -1 if the item is not included in the array.
Return the remote module.
Return the response as a JSON encoded string.
Return the resulting serialization
Return the results of applying the iterator to each element.
Return the string representation of this source node.
Return the tab URI for the opened diff view tab item.
Return the tab title for the opened diff view tab item.
Return the value accessor for a given binding.
Return the version string, if it exists
Return true (ok) or false (failed)
Return true if the next token is an assignment operator
Return true if the next token matches the specified contextual keyword (where an identifier is sometimes a keyword depending on the context)
Return true if the next token matches the specified keyword
Return true if the next token matches the specified punctuator.
Return true if we have the source content for every source in the source map, false otherwise.
Return true if your provider supports finding references for the provided TextEditor.
Return true or false from this method to continue loading the request.
Return true to cancel press on long press.
Return true, if pattern ends with globstar '**', for the accompanying parent directory.
Return values used for polygon clipping: 0: there were intersections or the line was empty.
Return values: 0: there were intersections or the line was empty.
Return variables for tokenizers
Return whether a native keypress event is assumed to be a command.
Return, converting to number if forced or a qualifier was provided and val looks numeric
Returned comparator is splitted to comparator and version parts.
Returned or thrown by various protocols to signal 'I'm not handling this'.
Returning argument is a substitute of 'super()'.
Returning true prevents the loop running again
Returns -1 on failure.
Returns RSS of the child process in bytes.
Returns `this` instead of the write() return value to keep the chaining going.
Returns `true` if `node` is considered "empty", which means that it contains no non-generated fields, and no ref query dependencies.
Returns `true` if the feature with the given name is disabled either directly or because the 'nuclide' package itself is disabled.
Returns a Babel Expression AST node, or null if the parse does not succeed.
Returns a Promise that resolves to a target location.
Returns a Promise that resolves to the last result of `run`, as soon as there are no more outstanding `run` calls.
Returns a Promise that's resolved when the roots are rendered.
Returns a Promise which when resolved will be of shape `getPhotosReturnChecker`.
Returns a Promise which will be invoked an object containing `action`, `hour` (0-23), `minute` (0-59) if the user picked a time.
Returns a Promise with photo identifier objects from the local camera roll of the device matching shape defined by `getPhotosReturnChecker`.
Returns a Set excluding any routes contained within the stack given.
Returns a `Promise` object.
Returns a `Promise` that's resolved when the latest suggestion's available.
Returns a box for a given cursor position, which may have an 'other' property containing the position of the secondary cursor on a bidi boundary.
Returns a breakpoint id
Returns a canonical error level string based upon the error message passed in.
Returns a clone of the input with `edges` and `node` sub-fields split into separate `edges` and `node` roots.
Returns a configuration object for the given file based on the CLI options.
Returns a copy of the input Array with all `null` and `undefined` values filtered out.
Returns a filter for whether or not the given status code should be returned, given the passed-in options for ::getStatuses.
Returns a free index if one is available, and the next consecutive index otherwise.
Returns a function that calls the provided function, and uses the result of that to set the component's state.
Returns a function that checks the spacing of a node on the property name that was passed in.
Returns a function that estimates the height of a line, to use as first approximation until the line becomes visible (and is thus properly measurable).
Returns a function that is the composition of a list of functions, each consuming the return value of the function that follows.
Returns a function that will be executed at most one time, no matter how often you call it.
Returns a function that will only be executed after being called N times.
Returns a function, that, as long as it continues to be invoked, will not be triggered.
Returns a function, that, when invoked, will only be triggered at most once during a given window of time.
Returns a hash of the field name and all argument values.
Returns a language-sensitive string representation of this number.
Returns a list of all IDs that were registered for this segment.
Returns a list of all JSON (we don't use CSON) configs in the "menus" subdirectory of the package that owns `filePath`.
Returns a list of all expression around the given position.
Returns a list of client mutation IDs for queued mutations whose optimistic updates are affecting the record corresponding the given dataID.
Returns a list of handles which are not children of others (i.e. sockets as process pipes).
Returns a list of references, grouped by file (with previews), according to the given offset and limit.
Returns a list of supported debugger actions.
Returns a modified function which warns once by default.
Returns a new Babel Transformer that uses the supplied schema to transform template strings tagged with `Relay.QL` into an internal representation of GraphQL queries.
Returns a new stack a size ones less than this stack, excluding the last index in this stack.
Returns a new stack with the provided route appended, starting at this stack size.
Returns a node if it is the only one selected, or null otherwise
Returns a number indicating which of two overlapping collapsed spans is larger (and thus includes the other).
Returns a path like 'drawable-mdpi/icon.png'
Returns a positive value if ABC is counter-clockwise, negative if clockwise, and zero if the points are collinear.
Returns a promise that resolves to the result of executing a process.
Returns a promise that will resolve after `milliSeconds` milli seconds.
Returns a property descriptor for the given "index", with "get" and "set" functions created within the closure.
Returns a random integer within the range `low ..
Returns a reference to the Underscore object.
Returns a reference to the underlying scroll responder, which supports operations like `scrollTo`.
Returns a regular expression for modules that should be ignored by the packager on a given platform.
Returns a reverse-chronological list of recently opened files.
Returns a single-argument callback that can be used to update a single key in the component's state.
Returns a stream of counters as they are created.
Returns a string of length `length` + 1 by replacing extra characters in the middle of `str` with an ellipsis character.
Returns a string with backslashes replaced by two backslashes for use with strings passed to the `RegExp` constructor.
Returns a sub-reducer that will be used when pushing a new route.
Returns a text editor that has the given path open, or null if none exists.
Returns a token that can be parsed using parseRangeClientID to recover the attributes needed to retrieve the corresponding items from a GraphQLRange.
Returns a type that matches the given value iff any of type1, type2, etc.
Returns a unique key which can be associated with the component.
Returns a updated shallow copy of an object without mutating the original.
Returns a value derived asynchronously from an element in the items array.
Returns a value that can be passed to ReactComponentEnvironment.replaceNodeWithMarkup.
Returns a version of the query text with extraneous whitespace removed.
Returns all generated line and column information for the original source, line, and column provided.
Returns all loaded non anonymous uiSourceCodes.
Returns all plugins that are loaded.
Returns all valid ids and cursors.
Returns an absolute URL which can be used to fetch the asset from the devserver
Returns an absolute path
Returns an array containing the number of rows in each section
Returns an array of LineDiff that describes the diffs between the given file's `HEAD` contents and its current contents.
Returns an array of k distinct vectors randomly selected from the input array of vectors.
Returns an array of key names that were found on the object, but did not appear in the list of allowed properties.
Returns an array of listeners that are currently registered for the given event.
Returns an array of logical lines that continue the visual line started by the argument, or undefined if there are no such lines.
Returns an array of saved connection profiles.
Returns an array of span arrays with one element for each line in (after) the change.
Returns an array of tangent vectors.
Returns an array of the given object's own enumerable entries.
Returns an array of transforms that return true when shouldTransformFile is called.
Returns an array of trasnforms that return true when shouldTransformFunction is called.
Returns an array source+target objects for the specified nodes.
Returns an empty array for nodes with no leading or trailing comments.
Returns an existing buffer for that uri, or create one if not existing.
Returns an exsting buffer for that uri, or null if not existing.
Returns an integer value which specifies the current evaluation phase of the event flow.
Returns an object containing the resulting attributes.
Returns an object mapping from every known type in the defCache to the most specific supertype whose name is an own property of the candidates object.
Returns an object that tracks the mouse position in a text editor.
Returns an object to insert in the props stack from the props and the transition/animation info.
Returns an object to remove the source when the component unmounts.
Returns an object whose keys are labels and values are TreeNodeComponent's.
Returns an object with scrollTop and scrollLeft properties.
Returns an observable of evaluation results for a given expression.
Returns an profiled version of the input function.
Returns class name of the object, if any.
Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.
Returns early if the field has not been fetched, otherwise the result of traversal.
Returns early if the range has not been fetched or the entire range has already been fetched.
Returns either 'DIR', 'FILE', or false
Returns everything but the first entry of the array.
Returns everything but the last entry of the array.
Returns false for lines that are fully left-to-right, and an array of BidiSpan objects otherwise.
Returns false when no bracket was found, null when it reached maxScanLines and gave up
Returns if the `rootPath` directory contains the `checkPath` which could be: - A file or directory path that's a direct child of the root path.
Returns if the input is currently focused.
Returns if the row is dirtied and needs to be rerendered
Returns if the section header is dirtied and needs to be rerendered
Returns itself so as to provide a "fluent interface".
Returns markup similar to that produced by fixed-data-table v0.6.0.
Returns mixed so a cast is necessary.
Returns null for null cursors
Returns null if Flow cannot be found.
Returns null if all fields can be subtracted, `minuend` if no fields can be subtracted, and a new query otherwise.
Returns null if already at the last entry.
Returns null if no original source content is available.
Returns null if not a valid file: URI.
Returns null if target cannot be parsed from given arguments.
Returns null if the formatter won't shorten the hostname.
Returns null if the node can not belong to the sub-branch
Returns null if the object is already disposed.
Returns null if the operation fails for whatever reason, including invalid input (e.g. if you pass a filePath that does not exist at the given revision).
Returns null if the operation fails for whatever reason, including invalid input (e.g. if you pass an invalid revision).
Returns null if the record isn't affected by any optimistic updates.
Returns null if there is no previous entry.
Returns null if we can't get the key at this time because the RemoteConnection is initializing.
Returns one of: starting, stopping, stopped, running, break
Returns paths of currently opened editor tabs.
Returns property for basic edges
Returns range information for the given connection field: - `filteredEdges`: any edges already fetched for the given `calls`.
Returns results that only contains errors.
Returns target as object with path and name properties.
Returns target uri for this provider.
Returns the 2D cross product of AB and AC vectors, i.e., the z-component of the 3D cross product in a quadrant I Cartesian coordinate system (+x is right, +y is up).
Returns the Atom action for toggling this provider.
Returns the DOM node rendered by this component.
Returns the DOM node rendered by this element.
Returns the FlowService for the given URI, or the local FlowService if the given URI is null.
Returns the ID of the currently focused text field, if one exists If no text field is focused it returns null
Returns the RelayMutationTransaction.
Returns the UI component for input debug action.
Returns the amount to extend the `HitRect` into the `PressRect`.
Returns the array of subscriptions that are currently registered for the given event type.
Returns the array representation of this set (which has the proper indices indicated by indexOf).
Returns the base 64 VLQ encoded value.
Returns the component-specific DataID stored in `state`, falling back to the generic "store" DataID.
Returns the current list of routes.
Returns the current resizable length.
Returns the debugging type name for this provider(e.g. Natve, Php, Node etc...).
Returns the default property value for a DOM property (i.e., not an attribute).
Returns the definition of a named type.
Returns the dependencies an entry path has.
Returns the device pixel density.
Returns the dot product of the given four-element vectors.
Returns the empty string on failure
Returns the entry which was removed to make room for the new entry.
Returns the exception breakpoint id.
Returns the field name based on the object key used to store the data in nodeData.
Returns the first (deepest) ancestor of a node which is rendered by this copy of React.
Returns the first child in a collection of children and verifies that there is only one child in the collection.
Returns the first function passed as an argument to the second, allowing you to adjust arguments, run code before and after, and conditionally execute the original function.
Returns the first non-numeric operand in a BinaryExpression.
Returns the first suggestion from the consumed providers.
Returns the flat, sorted array of mappings.
Returns the formatter representing the given format or null if no formatter with the given name can be found.
Returns the generated line and column information for the original source, line, and column positions provided.
Returns the iterator method function contained on the iterable object.
Returns the key associated with the route.
Returns the last known text editor screen position under the mouse, initialized to (0, 0).
Returns the last shown descendant according to the natural tree order as is to be displayed by the file-tree panel.
Returns the list of built-in modules.
Returns the name of the .res file that will be generated
Returns the name of the module imported or re-exported.
Returns the native webview node.
Returns the nested AliasMap for `node`, initializing if it necessary.
Returns the node that represents native view that can be scrolled.
Returns the number of millis to wait before triggering a highlight.
Returns the number of significant digits after the decimal point.
Returns the original source content.
Returns the original source, line, and column information for the generated source's line and column positions provided.
Returns the path inside of the fixture directory.
Returns the path to a non-refetchable record.
Returns the pending mutation transactions affecting the given record.
Returns the pixel position in the DOM of the text editor's screen position.
Returns the property name of a MemberExpression.
Returns the provider name or a default value
Returns the query fragment that matches the given route, if any.
Returns the related files and the given file's index in that array.
Returns the removed entry or undefined if the cache was empty.
Returns the requisite siblings of `node`, but filters any non-requisite children of those siblings.
Returns the scaling factor for font sizes.
Returns the score of the common subsequence between `needle` and `haystack` or -1 if there is no common subsequence.
Returns the signing token to be embedded, generally in a header comment, in the file you wish to be signed.
Returns the status of the record stored at `dataID`.
Returns the string representation of this source node along with a source map.
Returns the sub-reducer for a particular state to handle.
Returns the text and range for the word that contains the given position.
Returns the time of the earliest active timer, post-sweep.
Returns the total number of non-deleted edges in the segment.
Returns the usage instructions for node-gyp.
Returns the value of a setting for a Nuclide feature key.
Returns the value of a valueAccessor function
Returns the value of the "length" Symbol.
Returns the value of the config item at `key`.
Returns the value of the field for the given dataID.
Returns the valueAccesor function for a binding value
Returns the values of literals and simple constant variables.
Returns the wrapped function.
Returns total size in DIP.
Returns true by default.
Returns true if `bufferPosition` is prefixed with any of the passed `checkPrefixes`.
Returns true if `query` contains a node that equals the `target` node
Returns true if a promise was returned.
Returns true if child is equal to, or is a proper child of parent.
Returns true if the application was successful, otherwise false (e.g. if the oldText did not match).
Returns true if the given mode name is enabled, false otherwise.
Returns true if the path being checked exists in a `NFS` mounted directory device.
Returns true if the polygon is closed.
Returns true if the store has no data, i.e. no roots, no children.
Returns true if the value was found and deleted and false otherwise.
Returns true if there are any transforms that would want to modify the current source.
Returns true iff the fix succeeds.
Returns true only if the concrete nodes, routes, and variables are all the same.
Returns true when an update is needed.
Returns true when the loops has been running for more than 100ms.
Returns true when the values of all keys are strictly equal.
Returns two arrays of keys that contain each object's exclusive keys.
Returns undefined for empty segment
Returns undefined when all edges are deleted
Returns undefined when the input cannot be reconciled.
Returns whether a given record is affected by an optimistic update.
Returns whether an event should be handled by hyperclick or not.
Returns whether more immediates are queued up (can be used as a condition a while loop).
Returns whether or not comments are at the array end or not.
Returns whether or not comments are at the array start or not.
Returns whether or not comments are at the block end or not.
Returns whether or not comments are at the block start or not.
Returns whether or not comments are at the object end or not.
Returns whether or not comments are at the object start or not.
Returns whether or not comments are at the parent end or not.
Returns whether or not comments are at the parent start or not.
Returns whether or not comments are inside a node type or not.
Returns whether or not this touch end event makes it such that there are no longer any touches that started inside of the current `responderInst`.
Returns whether the number should be ignored when used as an array index with enabled 'ignoreArrayIndexes' option.
Returns whether there is a range at `connectionID`.
Returns whether this is currently a set of static calls that GraphQLRange supports.
Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
Reusable props objects.
Reuse `prevScene` as `scene` so view can avoid unnecessary re-render.
Reuse `root` if it only maps to one result.
Reuse config for convenient consistency  (step2b: uncomment)
Reuse divider elements and labels.
Reuse existing generated IDs if the node does not have its own `id`.
Reuse newcache so results back-propagate to previous elements
Reuse original spaces if the indentation is correct.
Reuse scheduled promise and resolve to 2 in 20 ms.
Reused empty array added for node fields that are always empty.
Reusing the `mountImages` array would likely be a jit deopt.
Reveal the file of a given tab based on the path stored on the DOM.
Reveal the file that currently has focus in the file tree.
Reverse direction for :only-* (if we haven't yet done so)
Reverse edges because larger index were added first
Reverse it to insert items correctly.
Reverse order for parents* and prev-derivatives
Reversing the new modules makes sense because we get them through the resolver which returns a BFS ordered list.
Revert a change stored in a document's history.
Revert the changed values
Revert the customization and verify it has been reverted.
Revert the old values
Revert the select back to its default unselected state.
Revert this when done.
Revert to a trimmed version of the selector if need be.
Revert to the DOM batching strategy since these two renderers currently share these stateful modules.
Revision ids are unique and don't change, except when the revision is amended/rebased.
Rewrite an expression, prefixing all path accessors with `scope.` and generate getter/setter functions.
Rewrite this to only work one way.
Rhino's regular expression parser is flaky and throws uncatchable exceptions, so don't do detection if we are running under Rhino
Right now our internals discard the information about the relationship between the queries that is encoded in the nested structure.
Right now we only care about messages with fixes.
Right now, GitRepository dictates either 'did-change-status' or 'did-change-statuses'.
Right will likely cause a context menu.
Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
Root and fragment nodes must always have children.
Root dispersion (msecs)
Root fields that do not accept arguments
Root is tracked after setting it.
Root mounting (innerHTML set) is recorded with an ID of ''
Root node - no siblings.
Root nodes should have no indent
Root reads yield the `dataID` of the root, if found.
Rotate *requires* you to break out each individual component of rotation (x, y, z, w)
Rotating matVar which is known to be identity by q
Round start and stop values to step interval.
Rounds a layout size (dp) to the nearest layout size that corresponds to an integer number of pixels.
Router has been initialized, but due to the chrome bug it will not yet actually route HTML5 history state changes.
Row data should be provided as a simple array corresponding to rows.
Rudimentary polyfill Once all jest engines support Symbols natively we can swap this to test WITH native Symbols by default.
Rules use it to store additional information of each rule.
Run a function **n** times.
Run a performance test.
Run a task and transform its output into domain-specific actions.
Run all the benchmarks in the benchmarks folder.
Run all the dispose callbacks
Run bower info jquery to list the available versions.
Run from the root FCC directory.
Run init, ignoring any dependencies
Run overlays, adjust style array.
Run post-uninstall hook before resolving with removed packages.
Run specified test on a fresh instance of the test suite.
Run the benchmark for this iteration/repetition and append the results to the result file.
Run the callbacks for newly added nodes (for example, to apply bindings, etc.)
Run the first scheduled task instantly.
Run the given function in an operation
Run the given mode's parser over a line, calling f for each token.
Run the given mode's parser over a line, update the styles array, which contains alternating fragments of text and CSS classes.
Run the search on each subdirectory that exists.
Run the watchers in a single queue.
Run this *after* other packages are activated so they can modify this setting if desired before installation is attempted.
Run update in its own computed wrapper
Running `commandFactory(id)` is equivalent to `require(id)`.
Running in an iframe on the Relay website
Running state means that all connections are in the running state.
Runs `buck query --json` with a query that contains placeholders and therefore expects arguments.
Runs `buck query --json` with the specified query.
Runs `queryNode` against the data in `dataID` and returns the result.
Runs an easing function backwards.
Runs the appropriate `atom --test` command and exits when the test completes.
Runs the equivalent of `cp sourcePath destinationPath`.
Runs the equivalent of `mkdir -p` with the given path.
Runs the equivalent of `mv sourcePath destinationPath`.
Runs the server in the appropriate place.
Runtime domain types.
S4.1.1 Trailing semi-colons are not part of the specification.
S4.1.2.3 suggests that this is bad.
S5.1.2 Canonicalized Host Names
S5.1.3 Domain Matching
S5.2.3 "If the attribute-value is empty, the behavior is undefined.
S5.2.6 -- effectively the same as 'secure'
S5.3 step 11 - "If the cookie store contains a cookie with the same name, domain, and path as the newly created cookie:"
SCROLL EVENTS Sync the scrollable area and scrollbars, ensure the viewport covers the visible area.
SCROLLBARS Prepare DOM reads needed to update the scrollbars.
SCROLLBARS Re-synchronize the fake scrollbars with the actual size of the content.
SCROLLING THINGS INTO VIEW If an editor sits on the top or bottom of the window, partially scrolled out of view, this ensures that the cursor is visible.
SECOND WALK Computes all real x-coordinates by summing up the modifiers recursively.
SECTION: handle `change` event
SECTION: handle `click` event
SECTION: handle `input` event
SELECTION / CURSOR Selection objects are immutable.
SELECTION DRAWING Redraw the selection and/or cursor
SELECTION UPDATES The 'scroll' parameter given to many of these indicated whether the new cursor position should be scrolled into view after modifying the selection.
SES uses a different domain from the service name
SHARED TEXTMARKERS A shared marker spans multiple linked documents.
SIGTERM should have reached inner child
STANDARD COMMANDS Commands are parameter-less actions that can be performed on an editor, mostly used for keybindings.
STATE UPDATES Used to get the editor into a consistent state again when options change.
STRING STREAM Fed to the mode parsers, provides helper functions to make parsers more succinct.
SVG tagNames should be lowercase because they are XML nodes not HTML
SVG-related properties
SVN case: svn, svn+ssh, svn+http, svn+https, svn+file
Sadly we can't just give the line number to github, we have to give the line number relative to the patch file which is super annoying.
Sadly, our setup fatals when doing multiple concurrent requests I don't have the time to dig into why, it's easier to just serialize requests.
Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
Safari may fire events on text nodes (Node.TEXT_NODE is 3).
Safe to call many times because it only changes state if a node is being tracked.
Safely convert anything iterable into a real, live array.
Same applies for the prefix, handled below.
Same as FlowStatusErrorMessageComponent, except without the 'level' field.
Same as ReactDOMTreeTraversal without the invariants.
Same as `accumulateDirectDispatchesSingle` but without requiring that the `dispatchMarker` be the same as the dispatched ID.
Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
Same as `build`, but returns additional output via an Observable.
Same as `cursor.fg.hex(color)`.
Same as `cursor.fg.rgb(r, g, b)`.
Same as `install`, but returns additional output via an Observable.
Same as `scryRenderedComponentsWithType` but expects there to be one result and returns that one result, or throws exception if there is any other number of matches besides one.
Same as `toEqualAtomRange` but for an array of Ranges.
Same as `traverseTwoPhase` but skips the `targetID`.
Same as document.activeElement but wraps in a try-catch block.
Same as subtractPos(start, start.line, start.column):
Same as the above, but works for non-homogenous input.
Same semantics as install and publish.
Sample React Native App https://github.com/facebook/react-native
Sample packages are disabled by default.
Sanitize a URL for a link or image
Sanitize the value from the HTTP server
Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which requires the array) to play nice here.
Save / Rewrite / Restore  When rewriting paths found in an expression, it is possible for the same letter sequences to be found in strings and Object literal property keys.
Save JSON of full schema introspection for Babel Relay Plugin to use
Save JSON, might contain changes to dependencies and resolutions
Save JSON, might contain changes to resolutions
Save `default` chunk info.
Save and remove muted breakpoint decorations.
Save bytes in the minified (but not gzipped) version:
Save current transaction state -- if the return value from this method is passed to `rollback`, the transaction will be reset to that state.
Save json (true forces file creation)
Save last official command to detect upgrade.
Save only if there's something different
Save present categories only upon user gesture to clean up junk from past versions and removed extensions.
Save replacer  The save regex can match two possible cases: 1.
Save resolution to be used in hasNew later
Save response for use in complete callback
Save serverOpts before extracting servers from the array's length
Save the URL in case we're toying with the If-Modified-Since and/or If-None-Match header later on
Save the assets of the bundle
Save the file if that option is specified.
Save the generic parts of all stack traces so we can avoid hardcoding Node-specific implementation details in our testing of stack traces.
Save the latest edited commit message for layout switches.
Save the latest edited publish message for layout switches.
Save the original host before any redirect (if it changes, we need to remove any authorization headers).
Save the previous value of the `_` variable.
Save the remote server command only if it is changed.
Save the resolved, shasum, etc.
Save the underlying nodes before removing the paths
Save the validated profile, and show any warning messages.
Save timeout before retrying to report
Save unused substitutions.
Save user readable type system shorthand of schema
Save version/tag/commit in the release Note that we can't store branches because _release is supposed to be an unique id of this ref.
Saves a connection configuration along with the last official server command.
Saves all JS modules of an app as a single file, separated with null bytes.
Saves all JS modules of an app as single files The startup code (prelude, polyfills etc.) are written to the file designated by the `bundleOuput` option.
Saves the connection profiles.
Saves the edited file in the editable right text editor.
Saves the image to the camera roll / gallery.
Scalars have already been checked for equality
Scale an image to the minimum size that is large enough to completely fill the crop box.
Scale should be applied to page-scale-dependent UI bits.
Scale the data-space extent to pixels.
Scaling matVar by opVar
Scaling matVar known to be identity by opVar
Scan and determine slot content distribution.
Scan for any occurence of mixed tabs and spaces.
Scan for any occurence of non-breaking spaces.
Scan for characters that get silently deleted by one or more browsers.
Scan immediate children to see if they contain unbalanced comment tags.
Scene is far away from the active scene.
Scene's children should not receive touches until the position is close enough to scene's index.
Schedule a function to run after all interactions have completed.
Schedule an asynchronous update to the interaction state.
Schedule refresh to update boundaries and draw the new line.
Schedule scroll to first line after all lines have been rendered.
Schedule the next async, and resolve to 2 in 20 ms.
Schedule work for after all interactions have completed.
ScheduleStyleInvalidationTracking events are only used for adding information to StyleInvalidatorInvalidationTracking events.
Scheduler only sees one task at a time.
Scheduler only sees the next task after `resolveImmediate`.
Schedules a collection for any currently unreferenced records.
Schedules a collection starting at the given record.
Schedules an animation to happen on the next layout.
Schedules the localNotification for future presentation.
Schedules the localNotification for immediate presentation.
Schedules the supplied `query` to be sent to the server.
Scope has null `edgeID` to skip looking at `edges` fields.
Scope objects always fetch preview.
Score values are difficult to test.
Scores this object's string against the query given.
Screen and window dimensions are different on android
Screw you if you pick something less than 40...
Script block: mode to change to depends on type attribute
Script execution can already be paused.
Script failed to parse.
Scroll a given position into view (immediately), verifying that it actually became visible (as line heights are accurately measured, the position of something may 'drift' during drawing).
Scroll a given set of coordinates into view (immediately).
Scroll to the bottom of the list if autoscroll is active.
Scroll to the top of the page
Scrolled out of the end zone, so it should be able to trigger again.
Scrolling the TextEditor
Scrolls to a given x, y offset, either immediately or with a smooth animation.
Scrolls to the given line/column at the given editor broadcasts the editor instance on an observable (subject) available through the getGoToLocation
Search a given variable name.
Search an array of spans for a span matching the given marker.
Search backwards from each instance of a European number until the first strong type (R, L, AL, or sor) is found.
Search backwards from each instance of a European number until the first strong type (R, L, or sor) is found.
Search first caller in chain.
Search for the attribute's position, and then decide where to move to.
Search for the closest intersection.
Search for the location of "msbuild.exe" file on Windows.
Search for the pattern in the file.
Search fragments and the root node for matching fields, but skip descendant non-matching fields.
Search in the fixtures/basic directory.
Search results: jquery http://jquery.io bower http://bower.io
Search, expanding context for leading sibling combinators
Searches for all instances of a pattern in a directory.
Searches for all the file names in this.fileNames.
Searches upwards through the filesystem from pathToFile to find a file with fileName.
Searching and Replacing
Second half of `ToInteger`
Second pass, go through the old fragments and destroy those who are not reused (and remove them from cache)
Second view should be gone.
Second view should be in the DOM.
Second, count the (signed) number of times a segment crosses a meridian from the point to the South pole.
Secondary cursor, shown when on a 'jump' in bi-directional text
Section 5.4 part 2: "*  Cookies with longer paths are listed before cookies with shorter paths.
Section: Add/Remove PathSets
Section: Checking Out
Section: Constants, Type Definitions
Section: Consuming Services
Section: Default Connection Profile
Section: Default/Last-Used Connection Profiles
Section: Event Emitting
Section: Event Subscription
Section: Expression Formation
Section: Feedback from the UI
Section: File and Repository Status
Section: HgRepositoryClient
Section: HgService subscriptions
Section: Invalid Profiles
Section: Managing Context Menus
Section: Managing Gutters
Section: Methods to modify the store.
Section: Methods to read from the store.
Section: PathSet Updating
Section: Reading Hg Status (async methods)
Section: Reading Status (parity with GitRepository)
Section: Repository Details
Section: Repository State at Specific Revisions
Section: Retrieving Bookmark (async methods)
Section: Retrieving Diffs (async methods)
Section: Retrieving Diffs (parity with GitRepository)
Section: Revision Sets
Section: Special Cases
Section: User-created Connection Profiles
Section: Valid Profiles
Section: Watchman Subscriptions
Secure it in a non-enumerable, non-writable property
See "LICENSE" for details.
See "examples/ddcompletion.js" for an example.
See "short-method-shadow.test".
See ExtensionAPI.js for details.
See HgService.getBlameAtHead.
See HgService.getDifferentialRevisionForChangeSetId.
See HgService::getStatuses for more information.
See Incremental.js for more info.
See LICENSE or: http://opensource.org/licenses/BSD-3-Clause
See LICENSE.txt or: http://opensource.org/licenses/BSD-3-Clause
See Mercurial documentation for ways to specify a revision.
See README.md in the root directory for details.
See ReactComponentWithPureRenderMixin See also https://facebook.github.io/react/docs/shallow-compare.html
See ReactUpdates and ReactUpdateQueue.
See Todhunter, Spherical Trig.
See UIManager.js for options
See _shouldRestore() and _enterDistractionFreeMode() for a more detailed explanation.
See `::_isSecure`, which returns the security of this connection after the server is started.
See `EdgeInsetsPropType.js` for more information.
See `InitializeJavascriptAppEngine.js`
See `Navigator.SceneConfigs` for default animations and more info on scene config options.
See `ReactClassInterface` for more the comprehensive protocol.
See `StyleSheet.js` and `ViewStylePropTypes.js` for more info.
See `_updateDOMProperties`.
See `createPrimitiveTypeChecker`.
See `handleChange` comment below
See `prepareCheck` for more information.
See `specExtra` for providing Bash `complete_TYPE` functions, e.g. `complete_fruit` and `complete_veggie` in this example.
See also ReactNativeBaseComponent
See also http://marijnhaverbeke.nl/blog/codemirror-line-tree.html
See also https://facebook.github.io/react/docs/perf.html
See also the comment in cursorCoords.
See also tools/generate-unicode-regex.js.
See also: http://www.johndcook.com/Beautiful_Testing_ch10.pdf
See comment below about _suppressDisposalUntilDisposeWhenReturnsFalse
See comment for NewExpression above.
See corresponding comment in `callTimers` for reasoning behind this
See discussion below on event order ...
See discussion below on event order.
See doc/install.md for more description Managing contexts...
See documentation for each of these class methods that you should implement.
See ensureComponentIsNative.js for more info
See for details: http://tweetnacl.cr.yp.to/
See for more info: https://www.isecpartners.com/blog/2011/february/double-hmac- verification.aspx
See here: http://nodejs.org/api/child_process.html The additional options we provide: queueName string The queue on which to block dependent calls.
See http://bugs.jquery.com/ticket/12385.
See http://code.google.com/p/closure-compiler/wiki/SourceMaps for format description.
See http://en.wikipedia.org/wiki/Cyclomatic_complexity.
See http://en.wikipedia.org/wiki/Linear_regression (section "Univariate linear case") and http://en.wikipedia.org/wiki/Weighted_least_squares (section "Weighted least squares")
See http://facebook.github.io/react/docs/addons.html
See http://schema.org/docs/gs.html
See http://timelessrepo.com/json-isnt-a-javascript-subset
See http://www.softwareishard.com/blog/har-12-spec/ for HAR specification.
See https://codereview.chromium.org/121173009/ .
See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent
See https://developer.mozilla.org/en-US/docs/Web/API/WebSocket See https://github.com/websockets/ws
See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice
See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
See https://facebook.github.io/react/docs/create-fragment.html
See https://facebook.github.io/react/docs/pure-render-mixin.html
See https://facebook.github.io/react/docs/test-utils.html  Todo: Support the entire DOM.scry query syntax.
See https://facebook.github.io/react/docs/two-way-binding-helpers.html
See https://facebook.github.io/react/docs/update.html for details.
See https://github.com/ReactiveX/rxjs/issues/1610
See https://github.com/SteveSanderson/knockout/issues/490
See https://github.com/atom/atom/pull/9968.
See https://github.com/atom/autocomplete-plus/issues/597
See https://github.com/broofa/node-uuid for API details
See https://github.com/eslint/eslint/issues/317
See https://github.com/eslint/eslint/issues/5791.
See https://github.com/facebook/flow/issues/1654.
See https://github.com/facebook/nuclide/issues/416
See https://github.com/facebook/react/issues/1147
See https://github.com/facebook/react/issues/1353
See https://github.com/facebook/react/issues/708.
See https://github.com/joyent/node/issues/1726
See https://github.com/joyent/node/issues/7139
See https://github.com/mozilla/source-map/issues/16
See https://github.com/mozilla/sweet.js/wiki/design
See https://github.com/node-inspector/node-inspector/issues/344
See https://github.com/npm/npm/issues/8881
See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
See https://www.kernel.org/pub/software/scm/git/docs/git-check-ref-format.html
See if "".split is the broken IE version, if so, provide an alternative way to split lines.
See if any of the DOM operations applied to this component's subtree.
See if cache can find it.
See if there's anything else
See if this is React Native itself and, if so, return the command to run the packager.
See if we can take a shortcut and just use innerHTML
See issue https://github.com/eslint/eslint/issues/2242
See lib/colorbrewer for more information.
See node-verror for an example.
See note below for how this affected non-hosted URLs.
See paste handler for more on the fakedLastChar kludge
See pull request at this URL for discussion: https://github.com/jquery/jquery/pull/764
See readInput and resetInput
See resorceStarted for details.
See test/unit/core.js for details concerning isFunction.
See the GNU Lesser General Public License for more details.
See the License for the specific language governing permissions and limitations under the License.
See the README for how to specify each option spec.
See the `RelayStore` module for documentation on the callback.
See the constructor of ProcessOutputView for more information.
See the corresponding prop for more detail.
See the initialRoute propType for a complete definition of a route.
See type `MutationConfig` and the `buildFragmentForEdgeInsertion`, `buildFragmentForEdgeDeletion` and `buildFragmentForFields` methods above for possible configs.
See what push permissions are currently enabled.
See: _addSyntheticStyleRecalcInvalidations.
See: https://atom.io/packages/file-icons
See: https://github.com/bower/bower/issues/1362
See: https://github.com/facebook/react/issues/2295
See: https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js
See: https://our.intern.facebook.com/intern/dex/nuclide/writing-an-integration-test/ for instructions on how to write integration tests.
See: webreflection.blogspot.com/2007/07/quick-fix-internet-explorer-and.html
Seed with a compile request to ensure fast responses.
Seedless set matches succeeding multiple successful matchers stipulate sorting
Seek `elem` from a previously-cached index
Seek a direct converter
Segment location into parts
Select is set to empty string on purpose This is to test IE's treatment of not explicitly setting a boolean content attribute, since its presence should be enough http://bugs.jquery.com/ticket/12359
Select it and expand if necessary.
Select node on right-click (in order for context menu to behave correctly).
Select tab if this file was the last to be shown.
Select the default connection profile, which should always be index 0.
Select the final connection profile in the list because one of the above conditions means the current selected index is outdated.
Select the node on right-click.
Select the parent of the selection if the following criteria are met: Only 1 node is selected The node is not a root The node is not an expanded directory
Select-all will be greyed out if there's nothing to select, so this adds a zero-width space so that we can later check whether it got selected.
Selecting a single node, node2, deselects nodes in all other roots
Selecting a value in the dropdown changes the text as well.
Selects a single node and tracks it.
Selects a subsequence of `Touch`es, without destroying `touches`.
Selects the first comment from the list and forces a refresh of the code view.
Self is preserved since the owner is preserved.
Self-resetting timeout for the poller
Send Http(s) GET request to given url and return the body as string.
Send Http(s) GET request to given url and save the body to dest file.
Send a batched update and clear the pending changes.
Send a dummy request so that we can read the state from the response.
Send a message to front-end.
Send a message to server to call the dispose function of the remote Observable subscription.
Send a request to the Clang server.
Send a response to a front-end request.
Send an array of file/line objects.
Send an event to the front-end.
Send authenticated request
Send back the result.
Send synchronous XHR to sniff network events
Send the incoming requests to the worker process for evaluation.
Send the next, error, and completion events of the observable across the socket.
Send the result of the promise across the socket.
Send the update to the native module only once at the end of the frame.
Send unauthenticated request
Sends a POST request with optional files.
Sends any non-newline terminated data before closing.
Sends command to hhvm.
Sentinel catch-all version constraint used when a dependency is not listed in the package.json file.
Separate head to normal paths and leaving paths.
Separate the lines into groups, beginning with metadata lines.
Separation between ancestor and node
Serialization and deserialization is only required if passport session is enabled
Serialize / Deserialize Arrays.
Serialize / Deserialize Buffer objects through Base64 strings
Serialize / Deserialize Javascript Date objects
Serialize / Deserialize Maps.
Serialize / Deserialize RegExp objects
Serialize / Deserialize Sets.
Serialize / Deserialize Tuples.
Serialize / Deserialize any Object type
Serialize a JS object in a way that the result is valid JavaScript.
Serialize an array of form elements or a set of key/values into a query string
Serialize and Deserialize Objects.
Serialize array item.
Serialize object item.
Serialize scalar item.
Serialize the accumulated mappings in to the stream of base 64 VLQs specified by the source map format.
Serialize the form elements
Serialize the restore state via an array of provider names.
Serialized state is in reverse chronological order.
Serializes array of uiSourceCodes to string.
Serializes the method arguments to args and argTypes arrays to send the metadata about the argument types with the data to help the server understand and parse it.
Serve static resources
Server render every pair.
Server sends headers after 100ms, then sends data during another 100ms.
Server shut down or port no longer accessible.
Server side analog to (parts of) NuclideSocket Handles JSON messaging and reconnect.
ServerConnection represents the client side of a connection to a remote machine.
Servers may have been deleted in the meantime, so calculate the total now.
Serves language requests from HackService.
Services don't support empty query string keys
Set / get the command usage `str`.
Set Agent from Tunnel Data
Set MongoRunner dataDir and dataPath properties.
Set StatusBar with light contents to get better contrast
Set `eventQueue` to null before processing it so that we can tell if more events get enqueued while processing.
Set a prop's initial value on a vm and its data object.
Set a property on an object.
Set a timeout in memory - this block will throw if the server takes more than `timeout` to write the HTTP status and headers (corresponding to the on('response') event on the client).
Set align if exists -  multiLine case
Set as GitHub homepage if it's a GitHub repository
Set autofocus to true if this textarea is focused, or if it has autofocus and no other element is focused.
Set config related to script launching.
Set content of string type.
Set corresponding property to false
Set data for the fake xhr object
Set dependencies based on the response
Set display property to inline-block for height/width animations on inline elements that are having width/height animated
Set document vars if needed
Set elements which have been overridden with display: none in a stylesheet to whatever the default browser style is for such an element
Set global.atom before running any more code.
Set homepage if not defined
Set hours, minutes, seconds and milliseconds.
Set ignore based on the response
Set instance target element and kick off the compilation process.
Set language on the element, if not present
Set language on the parent, for styling
Set maintenance mode for all secondaries
Set new text content.
Set objects are collections of unique values.
Set of bitwise operators.
Set of handlers to fire cursorActivity on
Set of names for providers that were hidden when Nuclide last exited, but have not yet been consumed.
Set of possible behaviors of merge algorithms when encountering two Arrays that must be merged together.
Set position first, in-case top/left are set even on static elem
Set some debug/release specific options
Set state as "Running" to give immediate feedback in the UI.
Set template dir to the empty directory so that user templates are not run This environment variable is not multiple config aware but it's not documented anyway
Set the Accepts header for the server, depending on the dataType
Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
Set the `DEBUG_FD` env variable to override with another value.
Set the `rules` of a config by examining a user's source code  Note: This clones the config object and returns a new config to avoid mutating the original config parameter.
Set the buffer content to query against.
Set the changes subscription observable.
Set the correct header, if data is being sent
Set the corresponding value with the setter.
Set the description to `str`.
Set the display of most of the elements in a second loop to avoid the constant reflow
Set the guid of unique handler to the same of original handler, so it can be removed
Set the initial state of the store.
Set the initial version by reading from the file.
Set the innerHTML property of a node, ensuring that whitespace is preserved even in IE8.
Set the mark as the `this` keyword was found in this scope.
Set the mark to the returned path as `super()` was called.
Set the partial bit after metadata has been copied over.
Set the program version to `str`.
Set the source content for a source file.
Set the testing window dimensions.
Set the text content of the first node after the opening comment, and remove all following nodes up until the closing comment.
Set the text editor's initial value and keep the cursor at the beginning of the line.
Set the textContent property of a node, ensuring that whitespace is preserved even in IE8.
Set the value from an expression on this vm.
Set the versions also for the root node
Set this before onpopulate.
Set this property to `false` to disable this optimization and ensure that this View exists in the native view hierarchy.
Set this to null so this promise can't be rejected anymore.
Set this to true to override that behavior.
Set this up before we call jasmine-node.
Set to 'none' to not do this sorting.
Set to false by default to prevent accidental logging and perf loss.
Set to the height of the document, allowing scrolling.
Set to the height of the text, causes scrolling
Set to true if this is an 'arrayOf' type that collects multiple usages of the option in process.argv and puts results in an array.
Set to true when a non-horizontal-scrolling line widget is added.
Set to true when a non-horizontal-scrolling widget is added.
Set to zero for unlimited.
Set transmit timestamp (returns as originate) Send NTP request
Set up a class to get strong type checking.
Set up a config to easily add require formats
Set up a mechanism to cleanly shut down the socket.
Set up a progress bar, as this process can take a long time
Set up and Teardown of Atom Opener
Set up methods on CodeMirror's prototype to redirect to the editor's document.
Set up some mock paths to be removed.
Set up the HackService to return some canned results.
Set up the cache as if these two other files were already inserted: '/A/blah.js' and '/Z/blah.js'.
Set up the console before running any user code.
Set up the functions for the rendering ANSI codes.
Set up the listener for the ack that the message was received.
Set up the on-the-fly transpiler.
Set up the positional ANSI codes.
Set up the rendering of the app for a given navigation state
Set up the state of the store.
Set up token state The current position of the tokenizer in the input.
Set up two computeds to update the binding: The first responds to changes in the checkedValue value and to element clicks
Set value of afterColon
Set value of beforeColon
Set version number to 4 and Mode to 3 (client)
Set when the widest line needs to be determined anew
Set width or height on the element
Set year, month, date.
Sets `end`, `val`, and maintains `context` and `exprAllowed`, and skips the space after the token, so that the next one's `start` will point at the right position.
Sets `value` for `key` and calls `callback` on completion, along with an `Error` if there is any.
Sets a given config setting in the debugger to a given value.
Sets a given node as invalid.
Sets a subset of the props.
Sets a subset of the state.
Sets an image for the thumb.
Sets an offset that is applied on top of whatever value is set, whether via `setValue`, an animation, or `Animated.event`.
Sets possible actions on the toolbar as part of the action menu.
Sets the JS to be injected when the webpage loads.
Sets the React-specific ID of the given node.
Sets the `env` object's `PATH` string to the values in the passed in Array instance.
Sets the associative array `key` to `value`.
Sets the badge number for the app icon on the home screen
Sets the color of the status bar text.
Sets the content inset for the toolbar ending edge.
Sets the content inset for the toolbar starting edge.
Sets the current segment as `super` was called.
Sets the foreground color with the given RGB values.
Sets the hash `key` to `value`.
Sets the links from the children to this instance (their parent) and the links between the siblings.
Sets the map `key` to `value`.
Sets the navigation icon.
Sets the normal path as the next.
Sets the number of lines for a TextInput.
Sets the overflow icon.
Sets the protected property `__node`.
Sets the schema of a setting for a Nuclide feature key.
Sets the stack `key` to `value`.
Sets the target on all links nested inside comments to be _blank.
Sets the toolbar logo.
Sets the toolbar subtitle color.
Sets the toolbar subtitle.
Sets the toolbar title color.
Sets the toolbar title.
Sets the user-agent for this WebView.
Sets the value for a property on a node.
Sets the value for multiple styles on a node.
Sets the value of a scalar field.
Sets the value of a setting for a Nuclide feature key.
Sets this markup string.
Sets this text content string.
Sets up a set of window environment wrappers that ensure that the BatchedBridge is flushed after each tick.
Sets up global variables typical in most JavaScript environments.
Sets up listeners so the user can jump to related files.
Sets up the instance.
Sets up this instance so that it is prepared for collecting metrics.
Sets whether or not any created callbacks should be enabled.
Sets whether the DelayedEventManager can currently accept more events.
Sets whether the webpage scales to fit the view and the user can change the scale.
Sets/clears the cache manager that is used to cache changes written to the store.
Sets/clears the scheduling function used by the internal task queue to schedule units of work for execution.
Setter for the "length" property.
Setting any of the properties (except for the aforementioned links to parent and siblings) will create a new instance of the class, with required properties set.
Setting lineNumTokenBefore to zero in that case results in the desired behavior.
Setting relaxed expectations to reduce flakiness.
Setting the lastIndex determines where the next search begins.
Setting the number to 0 removes the icon badge.
Setting the type on a radio button after the value resets the value in IE6-9 Reset value to default in case type is set after value during creation
Setting up timing functions to be able to be overridden.
Setting value before type does bad things.
Setup Proxy Header Exclusive List and White List
Setup Proxy Headers and Proxy Headers Host Only send the Proxy White Listed Header names
Setup a CSS transitionend/animationend callback.
Setup a watcher for a dynamic param.
Setup all param attributes, e.g. track-by, transition-mode, etc...
Setup computed properties.
Setup instance methods.
Setup methods on prototype: The following member methods should not be automatically bound: 1.
Setup recursive attached/detached calls
Setup the functions for the standard colors.
Setup the main package with a directory with the same name
Setup the scope of an instance, which contains: - observed data - computed properties - user methods - meta properties
Setup the test folder.
Several custom versions for each potential number of arguments.
Shallow copy args to avoid modifying original payload which may be saved to file.
Shallow copy the stored items and restore
Shallow merges two structures by mutating the first parameter.
Shallow merges two structures into a return value, without mutating either.
Shape Note: ART has a notion of width and height on Shape but AFAIK it's a noop in ReactART.
Shape of the param arg for the `getPhotos` function.
Shape of the return value of the `getPhotos` function.
Shared DOM insertion function.
Shared base for platform-specific XMLHttpRequest implementations.
Shared by integration tests for ScrollView and HorizontalScrollView
Shared default empty native event - conserve memory.
Shared markers (across linked documents) are handled separately (markTextShared will call out to this again, once per document).
Shared warning and monitoring code for the key warnings.
Shave off provisionally allocated space.
Shebangs are used by Node scripts.
Shells out of the `hg status` to get the statuses of the paths.
Shells out to `hg diff` to retrieve line diff information for the paths.
Shift by 0 fixes the sign on the high part.
Shift the popup back down by GLYPH_HEIGHT, so that the bottom padding overlaps with the glyph.
Shims to Node.js objects when running under PhantomJS 1.7+.
Shims to Node.js objects when running under Rhino.
Short circuit on identical object references instead of traversing them.
Short format for `ms`.
Shortcut for :nth-*(n)
Shortcut function for checking if an object has a given property directly on itself (in other words, not on a prototype).
Shorter than the default so the tests don't run long.
Shorthand for the property found.
Shorthand name for convenience
Shorthand property that IE8 won't like unsetting, so unset each component to placate it
Should already be path-split by now.
Should be called after isVertical has the right value.
Should be document order, not mount order (which would be purple, orange)
Should be empty if there was only whitespace around the comment
Should be implemented by subclasses.
Should be ingored (only one level)
Should be lower than all language-specific providers.
Should be present in the DOM.
Should be the active element.
Should be the last call in the method as it might force layout.
Should be the number of revisions + 1 to account for the permanent "Uncommitted" node.
Should be the unique to all providers.
Should be used for properties that make no sense to be owned by the tree elements, yet such that affect the tree.
Should be used only in tests.
Should by in sync with style declarations.
Should get the same stdout and stderr each time
Should go over the list in reverse order alphabetically.
Should have skipped the repeated ones.
Should ignore release candidates
Should not be documented.
Should not be invalidated
Should not collapse as it is not selectable.
Should not error for strings
Should not return extra edges
Should only be used on records read out from RelayRecordStore by `readRelayQueryData`.
Should return 1, but returns 4 (following)
Should see if there is a better spinner option that is not as expensive.
Should work again after compilation finishes.
Show a nicer error message for non-function tags
Show all of the containers recursively up the tree.
Show element's Style Attributes after all author rules.
Show enum values in hex with min length of 4 (e.g. 0x0012).
Show or hide the panel, if necessary, to match the current state.
Show or hide the resizers.
Show the gadget if it doesn't already exist in the workspace.
Show the gadget if it's hidden.
Show the given file in a file manager.
Show the loading cursor.
Show the suggestion at the last known mouse position.
Show yellow box for the `warning` module.
Showing up as a widget implies collapsed (widget replaces text)
Shown as a placeholder in the query input.
Shows a popup for the diagnostic just below the specified item.
Shows a redbox with stacktrace for all console.error messages.
Shows an indefinite, animated LoadingSpinner.
Shows the progress bar Get the SourceCode of all chosen files
Shrink crumbs one at a time by applying the shrinkingFunction until the crumbs fit in the container or we run out of crumbs to shrink.
Shrinkwraps need to let you override dependency versions specified in package.json files.
Shutdown all test servers, replica sets, shard clusters, and bridges.
Siblings at the root node
Side can be passed to get a specific side -- 0 (both), -1 (left), or 1 (right).
Sign a source file which you have previously embedded a signing token into.
Signal that the changes stream is over.
Signals that the marker's widget changed, and surrounding layout should be recomputed.
Signing modifies only the signing token, so the semantics of the file will not change if you've put it in a comment.
Silently exit when the watchID is invalid or already cleared This is consistent with timers
Silently steal the ref from the parent.
Silently swallow error
Similar to ES6's rest param (http://ariya.ofilabs.com/2013/03/es6-and-rest-parameter.html) This accumulates the arguments passed into an array, after a given index.
Similar to FastPath.prototype.each, except that the results of the callback function invocations are stored in an array and returned at the end of the iteration.
Similar to `getConfig`, this is used to create the query corresponding to the `optimisticResponse`.
Similar to addListener, except that the listener is removed after it is invoked once.
Similar to eachField, except that iteration stops as soon as the callback returns a truthy value.
Similar to invariant but only logs a warning if the condition is not met.
Similar to renderToString, except this doesn't create extra DOM attributes such as data-react-id that React uses internally.
Similar to the logic for BlockStatement.
Similarly to "child" contexts, provide a function here to make sure that the correct values are set when an observable view model is updated.
Similarly, C++ users often use X.h + X-inl.h.
Similarly, if a file has been excluded, then there's no point trying it against rules that have already been applied
Similarly, the idekeyRegex filters incoming dbgp connections by idekey, and pid filters connections by process id (appid in the dbgp terminology).
Simple JSON file validation that relies on ES JSON parser.
Simple NAF (Non-Adjacent Form) multiplication algorithm TODO: modularize the multiplication algorithm
Simple alert examples.
Simple calculation based on Levenshtein distance.
Simple corrections to nearly valid identifiers.
Simple flat clone using prototype, accepts only objects, usefull for property override on FLAT configuration object (no nested props).
Simple function for formatting strings.
Simple pure-React component so we don't have to remember Bootstrap's classes
Simple utility for running the android yeoman generator.
Simple wrappers around NativeANimatedModule to provide flow and autocmplete support for the native module methods
Simple, lightweight module assisting with the detection and context of Worker.
Simplest method for creating a RelayGraphQLMutation instance from a static `mutation`, some `variables` and an `environment`.
Simply a convenient way to inline functions using the function's toString method.
Simply applies the view's styles to the inner View component and renders its children.
Simply passes through the measured function, without measuring it.
Simply replace the word `Responder` with `PanResponder` in each of the typical `onResponder*` callbacks.
Simply rethrow otherwise
Simply skip the colon that separates the name and value
Simply strip the 'resume wrapping' and 'stop wrapping' escape characters.
Simulate 'Toggle blame' click in context menu.
Simulate a keypress to trigger the autocomplete menu.
Simulate deactivation of FakeProvider
Simulate keyboard commands.
Simulate missed "frameAttached" for a main frame navigation to the new backend process.
Simulate racy removal by creating a file after vacuum thinks the directory is empty
Simulate scenes transtion with changes of navigation states.
Simulate the providers serializing their own state -- they would start out hidden if we exited Nuclide in distraction-free-mode.
Simulate the removing of a directory from the project list.
Simulate update on each component from top to bottom.
Simulates a top level event being dispatched from a raw event that occurred on an `Element` node.
Simulates a top level event being dispatched from a raw event that occurred on the `ReactDOMComponent` `comp`.
Simulates the traversal of a two-phase, capture/bubble event dispatch.
Since 'data' this is a model object, we include all properties including those inherited from its prototype
Since 1.0.0pre, custom tags should append markup to an array called "__"
Since Espree does not return whitespace nodes, fetch the source code and do matching via regexps.
Since JS doesn't have multiple prototypal inheritance, this class prototypally inherits from Readable, and then parasitically from Writable.
Since Lines objects are immutable, we can reuse any source map that was previously generated.
Since RX manages to dodge the built-in clock mocking we'll use the real clock for these tests :(
Since RelayRenderer has not yet sent a request, view gets to update.
Since WebSockets are potentially long-living, fail requests immediately to prevent caller blocking until resource is marked as finished.
Since `_repositoryAdded` will no longer be about side effects, it should then be renamed.
Since `instance` is a root component, we can set its props.
Since `method` didn't throw, we don't want to silence the exception here.
Since `patternNode` exists, `subjectNode` must be in the intersection.
Since `pointerEvents` does not affect layout/appearance, and we are already deviating from the spec by adding additional modes, we opt to not include `pointerEvents` on `style`.
Since `setTimeout` gets preempted by them, it works great for a more realistic "first render".
Since a class name doesn't accept such characters, we treat it as multiple classes.
Since comments can span across multiple lines this method has to move the char pointer.
Since compilation has been triggered but not awaited, this should instantly fail.
Since console.log support string format as first parameter, we should preserve this behavior by concating eventInfo with first parameter if it is string.
Since cursors are added at the end of nodes this will keep the most valid cursor that appears deepest in the tree.
Since e is used in a callback invoked on another event loop (as in setTimeout etc), we need to call e.persist() on the event to make sure it doesn't get reused in the event object pool.
Since elements are immutable after the owner is rendered, we can do a cheap identity compare here to determine if this is a superfluous reconcile.
Since it can render as 3 different native components we need to update viewConfig accordingly
Since it doesn't, we manually listen for the events and so we have to enqueue and process the abstract event manually.
Since it exposes no official version number, we use our own numbering system.
Since it implements the emitter interface it can also be combined with anything that uses an emitter.
Since it is already destroyed, we can just leave it in detached state.
Since it's just a struct in RAM, this Store is synchronous
Since mappings are sorted, this is guaranteed to find all mappings for the line we are searching for.
Since mappings are sorted, this is guaranteed to find all mappings for the line we found.
Since multiple touches cannot move the same target to different locations concurrently without tearing the fabric of spacetime, we allow the first touch to win.
Since no subdirs were specified, run search on the root directory.
Since nuclide-commons is a Node package, we might end up having multiple copy of it running in Node/Atom.
Since onpopulate can add elements, this makes sure the expanded flag is true before calling those functions.
Since our implementation is spec-compliant for the most part we can safely delegate to a built-in version if exists and is implemented correctly.
Since plain JS classes are defined without any special initialization logic, we can not catch common errors early.
Since previous versions didn't check for Content-Encoding header, ignore any invalid values to preserve backwards-compatibility
Since providers can be slow, the pane-change and edit events are emitted immediately in case the UI needs to clear outdated results.
Since reconciling a component higher in the owner hierarchy usually (not always -- see shouldComponentUpdate()) will reconcile children, reconcile them before their children by sorting the array.
Since something is open, the intent is probably to get back into the distraction-free mode.
Since string, number, and boolean are JSON primitives, they require no marshalling.
Since strings can span across multiple lines this method has to move the char pointer.
Since the ScrollView is wrapped add the style props to the AndroidSwipeRefreshLayout and use flex: 1 for the ScrollView.
Since the browser may natively replace the target node during composition, we can use its position to find its replacement.
Since the buffer is managed by this class, an undo will never happen.
Since the check goes straight through the file, once an index is passed a certain comment, we can go to the next comment to check that.
Since the directives have to go first, we can't use that mechanism to disable this check.
Since the handler is run manually in init(), this would cause Chrome to run it twise.
Since the input might not even be in a form, let's just use the global `querySelectorAll` to ensure we don't miss anything.
Since the name is always a string, null is a safe sentinel value to return if we do not know the name of the (root) value.
Since the parent is rendered in the list above the children, it doesn't really make sense to highlight it if you are below the start position of any child.
Since the reachable last path returns `undefined`.
Since the regex in "getVersion" is not strict semver (so that it can be read in python) this test enforces that it is truly semver valid.
Since the require module is loaded before any of the modules, this ErrorUtils must be defined (and the handler set) globally before requiring anything.
Since the tree is unmounted, we don't dispatch the click event.
Since there are multiple places where an error could occur, don't let the cb be called more than once.
Since there are no other hooks for marginRight, remove the whole object.
Since there are only three levels (0, 1, 2) in an implementation that doesn't take explicit embedding into account, we can build up the order on the fly, without following the level-based algorithm.
Since there is no gap, we can stitch into the beginning of existing segment
Since there is no gap, we can stitch to the end of existing segment
Since there is no prevalidation step for ES6 classes, there is no hook for us to issue a warning earlier than element creation when the error actually occurs.
Since there is no way to tell _how_ a key was added, remove both plain key and camelCase key.
Since there's various security issues with parsing this header, we only interpret word chars plus dots, dashes and spaces
Since these tests are triggered inside the end event of the above topic, transitions will inherit ids from the original transition.
Since this is a function it will not show up in `JSON.stringify` which is what we want.
Since this is being run in a browser and the results should populate to an HTML page, require the HTML-specific Jasmine code, injecting the same reference.
Since this is called a *lot*, try to bail out as cheaply as possible when it is clear that nothing happened.
Since this step is skipped in production, we should just warn instead of throwing for this case.
Since this will be happening onmousemove, we also have to be careful to make sure this is not expensive.
Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray
Since using `List` is really just the implementation detail, we don't want to accept `routeNodes` as `list` from constructor for developer.
Since version 1.3, DOM methods and functions like alert aren't supported.
Since we are only worrying about signed 32-bit values, we're in slightly better shape.
Since we aren't using pooling, always persist the event.
Since we augment the global scope using configuration, we need to update references and remove the ones that were added by configuration.
Since we can't define a non-enumerable property on the object we'll hijack one of the less-used non-enumerable properties to save our hash on it.
Since we need to serialize gadgets as placeholders, we can't let users define `serialize()` (which Atom calls) directly.
Since we now know that the `mountImage` has been mounted, we can mark it as such.
Since we register these buffers with the project, they will get serialized with NuclideTextBuffer as the deserializer.
Since we send a few http requests to setup the process, we don't want to run this file one time per code analysis tool.
Since we update `_renderedChildren` and the actual DOM at (slightly) different times, we could race here and see a newer `_renderedChildren` than the DOM nodes we see.
Since we want to make it a no-op instead, we mirror the same behavior we have in other enqueue* methods.
Since we were not able to preserve all leading/trailing comments, we delete oldNode's comments, print newPath with comments, and then patch the resulting lines where oldNode used to be.
Since we're batching, neither update should yet have gone through.
Since we're now later in the nested arrays our value is more important so we need to calculate it and override the existing value.
Single argument methods get dispatched with the param.
Single parameter, or unused substitutions from above.
Single tokens longer than `width` are not broken up.
Single-line tag (collapsed / simple content / no content)
Single-parameter syntax - everything is on this "options" param
SinglePageObjectIds have fullname and page set.
Size of the indicator.
Size of the reactRoot ID space.
Size of the refresh indicator, see PullToRefreshViewAndroid.SIZE
Size of the refresh indicator, see RefreshControl.SIZE.
Sizes match .btn classes in Atom's style guide.
Skinny tooltips are not pretty, their arrow location is not nice.
Skip 0th handler, as it's 'Use default panel' one.
Skip adding "Reveal..." menu item for our own tree outline.
Skip already added nodes.
Skip checking prop types again -- we don't read inst.props to avoid warning for DOM component props in this upgrade
Skip config scribe_cat logger if 1) running in test environment 2) or running in Atom client 3) or running in open sourced version of nuclide 4) or the scribe_cat command is missing.
Skip first config (severity only)
Skip fragments that do not match the record's concrete type.
Skip if all previous segments have not been visited.
Skip if first element is in same line with this node
Skip if it expected no return value or unreachable.
Skip if it's using arguments.
Skip if the node is invalid or empty.
Skip if this segment has been visited already.
Skip internal variables like ".arguments"
Skip it if already created
Skip key warning if the type isn't valid since our key validation logic doesn't expect a non-string/function type and can throw confusing errors.
Skip last block line check if last item in same line
Skip line comments for option never
Skip linked dependencies
Skip modules outside of Nuclide
Skip named function expressions
Skip non-directory nodes.
Skip over atomic spans.
Skip over elements that have been deleted so we can add new edges in the front.
Skip over elements that have been deleted so we can add new edges on the end.
Skip over kdfoptions.
Skip over root IDs as those are reserved for native
Skip over the ancestor and the immediate separator.
Skip printing EmptyStatement nodes to avoid leaving stray semicolons lying around.
Skip recursive functions.
Skip restoring the editer who has remote content loaded.
Skip rewriting if requested
Skip ssh and/or URL with auth
Skip the button if there is one.
Skip the remaining sub-steps and continue to the next date-token.
Skip the root (node at index 0) as it is the only node that dominates itself.
Skip the single historical log.
Skip the update if cursors are invalid
Skip this one, already seen.
Skip till nearest visible ancestor.
Skip to the actual node.
Skip updating the current segment to avoid creating useless segments if the node type is the same as the parent node type.
Skip visiting children if missingData is already false.
Skip visiting children if result is already false.
Skip whitespace tokens.
Skips "arguments" or variables of a class name in the class scope of ClassDeclaration.
Skips except `super()`.
Skips if no argument.
Skips over deleted edges
Skips unsupported file extensions and any files that are already linted.
Skips when the reference is: - initialization's.
Skips whitespace and comments, and.
Slash (/) U+002F can also start a regex.
Slice children that are typically specified as `props.children`.
Slice off the leading `./` that find will add on here.
Slice on unescaped parentheses followed immediately by a `.`
Slice to the end if no end position was provided.
Slow case, write chunks one-by-one
Small has a height of 20, large has a height of 36.
Small helper function to validate that a path is absolute.
Small score for a match that contains the token case-sensitive.
Small utility that can be used as an error handler.
Smallish, yet realistic testing window dimensions.
Smartypants Transformations
So I'm fudging this for now in the hopes that it at least provides some sort of useful signal.
So addresses the head segments.
So after the initial example list is shown, we then transition to the initial example.
So default to a recursion cap of 3 levels, since that gives fairly good results.
So does fast return with null.
So first check startsWith.
So for that node type, we'll schedule a second thread to apply the value as well.
So here we temporarily walk around this by following hack, until https://github.com/atom/atom/issues/9641 get addressed.
So here's the situation.
So here, we restore top of the stack to the previous location before pushing a new nav stack entry.
So if the treshold is set to 100 and a timer fires 150 ms later than it was scheduled because the event loop was tied up, that would be considered a 50ms stall.
So if there was drag (mouse move) in the middle of that events we skip the click.
So instead we track any node that the context is attached to, and dispose the computed when all of those nodes have been cleaned.
So let's disregard transforms, scrolling and relative layer positioning and choose the largest dimensions of all layers.
So make the area wide instead.
So resolver can decide wheter use cached version of contents new one.
So stores the group this reference belongs to.
So that a nav-stack move(forward/backwards) will return position and scroll after the non-nav move/scrolls.
So the DOM is automatically updated when any dependency changes
So the comparison below can fail of the two calls span a second boundary.
So the easiest way to deal with this is to pass off the responsibility to "cmd /c", which has that logic built in.
So there are 3 paths.
So there is no benefit to lazy loading them, and it increases code complexity.
So this is to maintain backwards compatibility.
So to avoid calling _selectedNodeChanged() twice, first check if _selectedDOMNode is the same node as the one passed in.
So two `touchStart`/`touchMove`s that occur simultaneously are received as two separate touch event dispatches - when they arguably should be one.
So we aggregate inclusive time with both the owner and current displayName as the key.
So we can use this hack.
So we check the presence of the given variable in the comp array before declaring it undefined.
So we construct the hash from this uniqueID to avoid memory leaks and the IE cloneNode bug where it clones properties in addition to the attributes.
So we have to do a conditional check here.
So we just document it and throw in dangerous cases.
So we just merge them into 1 block.
So we look for changes compared to the previous content instead.
So we might as well enforce it.
So we must clean up after.
So we must refer to them as "inverses" of the native tags (that are * normally negative).
So we need to create a new uri using the right port.
So we override this to the expected path.
So we shoudl restore provider2 (hidden on first entry) and provider1 (hidden on second entry)
So we should ignore the variable in the class scope.
So we suppress finish from being emitted here, and only emit it after our target stream is closed and we've moved everything around.
So what happens is the "nobody" user doesn't have permission to create the dev dir.
So whenever we want to set a reactive property without forcing conversion on the new value, we wrap that call inside this function.
So while this is a memory leak, it's very small.
So will ctrl-click on mac.
So, KO does not attempt to workaround this IE issue automatically at present.
So, currently, it would only work if there is no `hh_client` or `.hhconfig` where the `HackWorker` model will diagnose with the updated editor contents.
So, declaring a variable in a block can have unexpected consequences.
So, for predictability, we simply prevent ko.computeds from causing their own re-evaluation.
So, if a URI points to a directory - all its sub-directories and files in them are included.
So, if requested source was loaded in app, we need to require it from app.
So, if this is awaiting a drain, then we just call it now.
So, ignore any nodes that have already been removed, and include any nodes that have been inserted among the previous collection
So, in order to not ask hyperclick for the same thing again and again which will be anyway null, we check if the mouse position has changed.
So, let's blacklist conservatively for now and we can add cases later if we observe Flow crashes that do not fit this pattern.
So, negated rules are only relevant if the file has been excluded.
So, provide a defaultValue here so the promise resolves.
So, set this env var which is read by clang_server.py to explicitly set the file path to load.
So, the first negative lookahead, has to look ALL the way ahead, to the end of the pattern.
So, the heuristic here is to compare against the previous version, not the just-committed one, while the revisions timeline would give a way to specify otherwise.
So, the provider should be hidden.
So, the steps are: 1.
So, there'll be a/b/c/abc, a/b/c/aba, etc., and dot-versions of each.
So, they do not need to be associated with a FlowProcess instance and they may be executed from any working directory.
So, they need to be resolved against the target directory in order to be created properly.
So, this function translates the old "map" output array into its best guess of the set of current DOM nodes.
So, unlike top-down, the statistics in each child still represent the root node.
So, unpack the fixtures with the system tar first.
So, use node.text where available, and node.nodeValue elsewhere
So, we are hooking into the exact same logic that Node.js uses.
So, we cache the output of runCommandInNewPane function and use the same instance of runCommandInNewPane to re-open output pane for the same server process.
So, we circumvent the type system here to maintain the desired runtime behavior.
So, we don't emit('end') until some reading happens.
So, we expect a situation, when original source and bundled script have equal name.
So, we pluck that off, and work with the rest, and then prepend it to everything we find.
So, we restore the current top to its previous location before pushing a new top.
So, we should do this manually.
So, when a matching search query is done in parallel, it will wait and resolve with the original search call.
So, you should pipe a tarball stream into it, and it needs these write/end methods to do that.
Solution: Do not load project config file that is the same as either the default or resolved userconfig value.
Solve the equation by inverting perspectiveMatrix and multiplying rightHandSide by the inverse.
Solves tridiagonal systems of linear equations.
Some ES5 FutureReservedWord identifiers are active only within a strict mode environment.
Some URL objects are not from a URL parsed string and need href added
Some apps may see an improvement in perf, but sometimes perf and memory usage can actually get worse with this.
Some async length retrievers are present therefore synchronous length calculation is false.
Some browse builtin objects can report typeof 'function' (e.g. NodeList in old versions of Safari).
Some browsers builtin objects can report typeof 'function' (e.g. NodeList in old versions of Safari).
Some browsers cannot use `innerHTML` to render certain elements standalone, so we wrap them, render the wrapped nodes, then extract the desired node.
Some browsers fire contextmenu *after* opening the menu, at which point we can't mess with it anymore.
Some browsers use the wrong event properties to signal cmd/ctrl on OS X
Some coding styles use multiple `var` statements, so do nothing if the next token is a `var` statement.
Some easy to use defaults to construct ModuleMapOptions with.
Some event types have a notion of different registration names for different "phases" of propagation.
Some existing components rely on inst.props even after they've been destroyed (in event handlers).
Some filename returned from hhvm does not have protocol.
Some git servers do not support shallow clones When that happens, we mark this host and try again
Some important event plugins included by default (without having to require them).
Some leading comments may be invalid.
Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
Some of the pretty-printer code (such as that for printing function parameter lists) makes a valiant attempt to prevent really long lines.
Some of the properties are derived from the properties of children.
Some of these are stupidly long.
Some of these token types are from JavaScript Parser API while others are specific to JSHint parser.
Some other element is not yielding its role as responder.
Some other error or 'make' not found on Unix, report that to the user
Some properties in the environment are created by us for internal use, so we filter them out.
Some sanity checks on the comments.
Some servers add quotes around the content-type, so we trim that also
Some servers have max channels set to 1, so add a delay to ensure the old channel has been cleaned up on the server.
Some simple corrections for h, s and l.
Some small helper functions.
Some source maps produce relative source paths like "./foo.js" instead of "foo.js".
Some source will transpile such that the "use babel" will still be the first in the file.
Some spies should be called immediately because there is data in the store.
Some test "absolute" paths.
Some trailing comments may be invalid.
Some type of object without properties can be shortcutted.
Some users were relying on this funky behavior, so after removing the aggressive normalization from non-hosted URIs, we brought this back.
SomeApp/ios/SomeApp.xcodeproj
SomeApp/ios/SomeAppTests
Something caused path.name to become out of date, so attempt to recover by searching for path.value in parentValue.
Something deep with something one-off.
Something else already triggered an update to this key because another value diffed.
Something like `1.2.3 - 1.2.4` Note that these all use the loose form, because they'll be checked against either the strict or loose comparator form later.
Something like `npm install --production` only installs production deps.
Sometimes `arc lint` returns an array of strings for the text, rather than just a string :(.
Sometimes a scope break may be adjacent to a hard break.
Sometimes a scrollview takes up more space than its content fills.
Sometimes it provides results as valid JSON objects separated by a newline.
Sometimes it's called a "filter", but that's not a great name for it, since that implies a thing where some bits pass through, and others are simply ignored.
Sometimes linters set original and replacement to the same value.
Sometimes remote directories are instantiated as local directories but with invalid paths.
Sometimes sampler is not able to parse the JS stack and returns a (program) sample instead.
Sometimes the linter puts in global errors on line 0, which will result in a negative index.
Sometimes these events get triggered several times in succession (particularly on startup).
Sometimes this call throws 'not opened'
Sometimes two scopes are returned for a given node.
Sophisticated clients may wish to override this.
Sort and cache in memory
Sort by creationIndex so deserializing retains the creation order.
Sort by start time by default.
Sort for bonus consistency points
Sort on method existence if only one input has compareDocumentPosition
Sort results by filename to normalize order.
Sort semver ones DESC
Sort the auto-completions based on a scoring function considering: case sensitivity, position in the completion, private functions and alphabetical order.
Sort the given array in-place with the given comparator function.
Sort the list of matches by filename to normalize order.
Sort the object's values by a criterion produced by an iterator.
Sort them by DESC order
Sorting the IDs to make testing easier.
Source callbacks are called when `collectExtraData` is called.
Source is preserved since cloneElement is unlikely to be targeted by a transpiler, and the original source is probably a better indicator of the true owner.
Source is undefined when the breakpoint was in code eval()-ed via console or eval()-ed internally by node inspector.
Source maps have some issues in different libraries.
Source type ("script" or "module") for different semantics
Source: array or array-like
SourcesNavigator does not need to update on EditorClosed.
Spaces after list markers
Spawn one Clang server per translation unit (i.e. source file).
Spawn the search command in the given directory.
Spawns a child process and emits a 'spawn' event.
Spec says something about storing a list of markers, but it sounds equivalent to this check.
Special Node.js scope means we need to start one level deeper
Special animatable View
Special case for S3 and SimpleDB in us-east-1
Special case for an arc that spans the full circle.
Special case for comma-first syntax where the semicolon is indented
Special case getDefaultProps which should move into statics but requires automatic merging.
Special case string values
Special case the CENTER state of the first scene.
Special cased handlers
Special demo text that makes itself untouchable so that it doesn't destroy the experiment and confuse the output.
Special directories like "atom://about"
Special form of calling `addListener` that *guarantees* that a subscription *must* be tied to a component instance, and therefore will be cleaned up when the component is unmounted.
Special optimization for only a single match.
Special support for jQuery here because it's so commonly used.
Special treatment for some escaped characters.
Special treatment of numbers is just for backward compatibility.
Special-case HTMLAll.
Specialized method for creating RelayGraphQLMutation instances that takes a `files` object in addition to the base `mutation`, `variables` and `environment` parameters.
Specific values of P are given above each case.
Specifically, a context menu item would often like to know which file (or directory) the user right-clicked on in the file tree when selecting the menu item.
Specifically, below:  - `VariableDeclaration` - variables of its all declarators.
Specifically, if B2 exists (or the modB directory under modC at all) that means modC was given its own copy of modB.
Specifically, if it decides to set node.loc to null, indicating that the node's .loc information is unreliable, then we don't want to add node to the resultArray.
Specifically, removing a breakpoint removes it from all connection's maps before returning.
Specifically, this requires and attaches all of Jasmine's code to the `jasmine` reference.
Specifically, we want to ensure that `console.log()` writes "clean" output to stdout.
Specifier and ModuleSpecifier are abstract non-standard types introduced for definitional convenience.
Specifies filter on asset type
Specifies filter on group names, like 'Recent Photos' or custom album titles.
Specifies font weight.
Specifies how to bin values in the histogram.
Specifies how to extract a value from the associated data.
Specifies should fonts scale to respect Text Size accessibility setting on iOS.
Specifies text alignment.
Specifies the background color of the drawer.
Specifies the lock mode of the drawer.
Specifies the order for leaf values.
Specifies the order for the most-recently specified key.
Specifies the range of the histogram.
Specifies the side of the screen from which the drawer will slide in.
Specifies the width of the drawer, more precisely the width of the view that be pulled in from the edge of the window.
Specifies whether the histogram's `y` value is a count (frequency) or a probability (density).
Specifies whether to return the closest element that is smaller than or greater than the one we are searching for, respectively, if the exact element cannot be found.
Specifies whether you want to iterate over the mappings sorted by the generated file's line/column order or the original's source/line/column order, respectively.
Specifies which group types to filter the results to.
Specify a route to start on.
Specify additional props passed to the component.
Specify the build type, Release by default
Speed up dequeue by getting out quickly if this is just a lookup
Speed-up: Sizzle(".CLASS")
Speed-up: Sizzle("TAG")
SpiderMonkey allows expression closures: function(x) x+1
Spies except spy_fileA should be called immediately because there is relevant data in the store.
Split a String `str` into lines of maxiumum length `max`.
Split lines into an array Update the refs with the actual refs
Split messages on new line characters.
Split on newlines without removing new line characters.
Split out an empty observable after waiting 20 ms.
Split stream into single lines.
Split the output by the symbols '--- '.
Split the parameters into two groups -- all of the trailing optional paramaters, and the rest of the parameters.
Split the path into highlighted and non-highlighted subsequences for optimal rendering perf.
Split them, then merge the results.
Splits a command result to separate lines.
Splits a member or call expression into parts.
Splits a stream of strings on newlines.
Splits on word boundaries.
Splits the given pane in the specified direction and return the new pane.
Spoiler alert: that doesn't include IE8.
Spread properties to test that functions are bound correctly.
Spring animation based on Rebound and Origami.
Squarified Treemaps by Mark Bruls, Kees Huizing, and Jarke J.
Squash the last breaks.
SshConnectionConfiguration's sshPort type is 'number', but we want to save everything as strings.
Stack of fire calls for repeatable lists
Stacks a constructor information.
Stacks this function's information.
Staleness checking algorithm 1.
Standalone Production Build
Standard iOS MapView pin color constants, to be used with the `annotation.tintColor` property.
Standard unmounting of the component that is rendered into `containerID`, but will also execute a command to remove the actual container view itself.
Standard value class for driving animations.
Standard value for driving animations.
Standard/simple iteration through an event's collected dispatches, but stops at the first dispatch execution returning true, and returns that id.
Standard/simple iteration through an event's collected dispatches.
Standardize spaces (some git versions make tabs, other spaces)
Star ranges basically just allow anything at all.
Start a debug session with the user-supplied information.
Start a leaving transition.
Start a new operation.
Start a new scope with regard to labels and the `inFunction` flag (restore them to their old value afterwards).
Start a new search "session" for analytics purposes.
Start a timeout if this is the first click, if the timeout is canceled before it fires, then a double clicked happened or another link was clicked.
Start an AST node, attaching a start offset.
Start an async, and resolve to 1 in 10 ms.
Start an entering transition.
Start and end range of the preview text.
Start chaining a wrapped Underscore object.
Start comments must always have a parent and at least one following sibling (the end comment)
Start just after the "-webkit-" prefix.
Start loading more once the user scrolls within this many pixels of the bottom.
Start reporting progress after a few seconds
Start the Nuclide server and add a remote project.
Start the clock when a key is pressed.
Start the integration test helper.
Start the precedence parser.
Start the search in each directory, and merge the resulting streams.
Start the transition.
Start watching the project for changes and initialize the root watcher for next calls to `watchFile` and `watchDirectory`.
Start websocket server with Chrome after attach completed.
Start websocket server with Chrome after launch completed.
Start with `panelVisible: false` to ensure the panel is initially hidden.
Start with a normal queue
Start with an empty selector
Start with existing JSON details
Start with offset property, which is equivalent to the border-box value
Start with the built in types that are always declared.
Start with the globals since they are always "declared" and safe to use.
Start-of-level-run (sor) and end-of-level-run (eor) are used at level run boundaries.
Starting from the given a node (a property.key node here) looks forward until it finds the colon punctuator and returns it.
Starting from the given a node (a property.key node here) looks forward until it finds the last token before a colon punctuator and returns it.
Starting status has no stack.
Starting value computation is required for potential unit mismatches
Starting with version 2.0, this file "boots" Jasmine, performing all of the necessary initialization before executing the loaded environment and all of a project's specs.
Starts a Flow server in the current root
Starts a corresponding external activity for the given URL.
Starts a local version of the nuclide server in insecure mode on the specified port.
Starts an animation after the given delay.
Starts an array of animations all at the same time.
Starts an array of animations in order, waiting for each to complete before starting the next.
Starts dragging the pane sizer.
Starts listening for socket connections on the given port.
Starts listening for xdebug connections on the given port.
Starts the React Native Packager Server.
Starts the app on a connected Android emulator or device.
Starts the app on iOS simulator
Starts the process if it has not already been started.
Stash a copy in case other scripts modify these
Stash a snapshot of the new scale, and retrieve the old snapshot.
Stash the parent if it exists
State reset every time PathVisitor.prototype.visit is called.
State should have updated by the time this callback gets called
State variable to know if it is a lone identifier, or a destructuring statement.
Stateless functional.
Statements - Control flow
Statements - Declarations
Statements preceded by an infinity loop are unreachable if the loop didn't have any `break` statement.
Statements under must be grouped (by label) in SwitchCase nodes.
Static Lexing/Compiling Method
Static calls define ranges that do not change over a period of time, given the same set of arguments.
Static convenience function for coercing a value to a FastPath.
Static method for creating ArraySet instances from an existing array.
Status codes returned in the "status" field of the testing utility's JSON response.
Status page so that anyone who needs to can verify that the packager is running on 8081 and not another program / service.
Status-dependent callbacks
Stderr forwarding is not implemented by HHVM yet so this will always return failure.
Step 11.4 (delete cookie) is implied by just setting the new one:
Step 1: Determine user-specified config from .eslintrc.* and package.json files
Step 1: Inlines the construction of a quaternion matrix (`quatMat`)
Step 2: Create a copy of the baseConfig
Step 3: Merge in the user-specified configuration from .eslintrc and package.json
Step 4: Merge in command line config file
Step 5: Merge in command line environments
Step 6: Merge in command line rules
Step 7: Merge in command line globals
Step 8: Merge in command line plugins
Step 9: Apply environments to the config if present
Step down for 5seconds, and prevent elections for 6 seconds so we can do some tests without primary
Step value of the slider.
Steps are scheduled via the `RelayStore` task queue (using the injected scheduler).
Stick this to the left of remote-projects (-99)
Stick to the `ScrollResponder` callbacks, and everything will work.
Still don't have the gadget.
Still, it might prove useful in the future.
Stop abusing context.
Stop any current debugger and show the debugger view.
Stop any existing debugging sessions, as install hangs if an existing app that's being overwritten is being debugged.
Stop at a change event.
Stop here and return.
Stop if the entire query is subtracted.
Stop listening once the task is done.
Stop profiling when queries have been sent to the network layer.
Stop replica set primary.
Stop the clock when the (same) editor has changed content.
Stop the scan if the scanner has passed our position.
Stop the traversal after 100 nodes were added to the tree
Stop tracking changes to the mapping for these nodes
Stop transtion, immediately resets the cached state and re-render the whole view.
Stops any running animation or tracking.
Store ETAG under _release
Store a copy of the array items we just considered so we can difference it next time
Store a mapping from a class name to a struct containing it's local constructor and it's interface definition.
Store a mapping from function name to a structure holding both the local implementation and the type definition of the function.
Store a reference from the instance back to the internal representation
Store a relative adjustment to the scroll position in the current operation (to be applied when the operation finishes).
Store additional metadata in bower.json
Store arbitrary object using DomData
Store collected headers in the package meta
Store endpoint info in each log
Store hosts that do not support shallow clones here
Store hosts that support shallow clones here
Store main if is a single file
Store marshallers and and unmarshallers, index by the kind of the type.
Store marshallers and and unmarshallers, index by the name of the type.
Store matches per-set, then uniq them
Store node in `pendingNodeStates` because we have not read data for this `dataID` from disk.
Store some needed stuff
Store some values that we'll need later (but don't want to force a relayout for)
Store the SAPI enabled (summary + QA check)
Store the canonical dir and its meta in each log
Store the children before returning them from the Promise.
Store the correct default display
Store the enabled extensions (summary + QA check)
Store the headers to install
Store the last value set for this index.
Store the map and a cache object for the current logical line
Store the number on on every gadget item in the container just in case one gets moved or destroyed.
Store the original flex scale so we can restore to it later.
Store the promise in the refs object
Store the promise to be reused until it resolves to a specific value
Store the reference to the child process
Store the resolver info in each log
Store the two packages
Store these queries' results in this map, since you can't do first() or last() queries on these ranges.
Stores a base64-encoded image in the ImageStore, and returns a URI that can be used to access or display the image later.
Stores all current FileDiagnosticMessages, indexed by file.
Stores all current markers, indexed by FileDiagnosticMessage.
Stores breakpoints and connections.
Stores callbacks keyed on grammar and event, to allow for easy retrieval when we need to dispatch to all callbacks registered for a given (grammar, event) pair.
Stores callbacks that have subscribed to Atom text events.
Stores may be synchronous, but are still required to use a Continuation-Passing Style API.
Stores the currently set breakpoints as (path, line) pairs.
Stores the host and cwd of a remote connection.
Stream from utf8 to hex to base64...
Streams a fired top-level event to `EventPluginHub` where plugins have the opportunity to create `ReactEvent`s to be dispatched.
Strict object type check.
Strict parsing doesn't allow older draft headers.
String comparator that lists the capitalized verson of a string before the lowercase version.
String index maps from strings to index.
String literal starts with single quote (U+0027) or double quote (U+0022).
String message: A string with the text to toast 2.
String must start with a quote.
String output returned in this function's Promise will be stderr/stdout of the second command.
String that starts with a BMP symbol
String that starts with an astral symbol
String to Object options format cache
String.format does treat formattedResult like a Builder, result is an object.
StringDecoder provides an interface for efficiently splitting a series of buffers into a series of JS strings without breaking apart multi-byte characters.
Strings, numbers, dates, and booleans are compared by value.
Strip colors from the prompt if color is disabled
Strip excess characters from unquoted arguments
Strip off any /-rev/...
Strip off the extension and conventional suffixes like "Internal" and "-inl".
Strip off the extension.
Strip off the global namespace indicator.
Strip off the leading slashes from the fully-qualified build target.
Strip the CSS or JS highlighting if present.
Strip the day of week from the start of the string and the seconds+TZ from the end.
Strip the prefix from the start of the tag:
Strip this value out when the encoding is set to 'utf8', as upstream consumers won't expect it and it breaks JSON.parse().
Strips Unicode BOM from a given text.
Strips out port number, hostname, and current file directory.
Strips the "static upstream" warning from the docblock.
Stub of Sample for Android.
Stub of VibrationIOS for Android.
Stubbed module resolver for easier testing.
Stuff that can not be initialized lazily (i.e. valid while paused with a valid break_id).
Style invalidation events can occur before and during recalc style.
Style of the ProgressBar.
Style to apply to each of the item labels.
Styles for the navigation item containing the component
Styles should be loaded in alphabetical order according to https://atom.io/docs/v0.186.0/creating-a-package
Styles to apply to the container of each scene
Sub-views need their line numbers shifted when text is added above or below them in the parent document.
Subclasses can implement.
Subclasses can optionally implement methods to customize the traversal:  - `visitField(field, state)`: Called for each field.
Subclasses may override in order to short-circuit traversal.
Subclasses should override this method to render the pane using options passed from above.
Subclasses that have corresponding animation implementation done in native should override this method
Subscribable provides a mixin for safely subscribing a component to an eventEmitter  This will be replaced with the observe interface that will be coming soon to React Core
Subscribe opener before restoring the remote projects.
Subscribe to a token event.
Subscribe to changes for the new `this._localPath`.
Subscribe to changes in the current Hg bookmark.
Subscribe to changes in this counter.
Subscribe to changes to a file that appears to be the 'arc build' lock file.
Subscribe to changes to files unrelated to source control.
Subscribe to events from counter1.
Subscribe to new connection updates from DebuggerActions.
Subscribe to the action stream and track things of interest.
Subscriber interface.
Subscribers are notified as follows:  `onNext`: Called with the latest results of a fragment.
Subscribes to the appropriate event depending on whether we should run on the fly or not.
Subsequent calls by the debugger can request the child properties of an ObjectId.
Subsequent definitions will be chained.
Subsequent invocations will return null.
Subsequent root directories updated on change
Subtract a non-scalar/range field.
Subtract out ticks used at beginning
Subtract parent offsets and element margins
Subtract some padding.
Subtracts all pending queries from the supplied `query` and returns the resulting difference.
Subtracts any RelayQuery.Node that contains subfields.
Succeeds when the paths are of the same length have equivalent (shallow-equal) roots and fields.
Success - only one match and it is a package dir
Success callback is notified.
Success http status codes range from 200 to 299.
Successful authentication
Successfully connected with lldb python process, fulfill the promise.
Succinct definitions of keyword token types
Such as some sort of natural compare algorithm.
Such as the configuration whether to use the prefix navigation, for instance, or the currently configured Working Set.
Such overlap is not allowed.
Suggest for localhost only.
Suggestions for alternative methods welcome.
Summary of `ReactBrowserEventEmitter` event handling:  - Top-level delegation is used to trap most native browser events.
Super dangerous and experimental - rows and all their decendents must be fully stateless otherwise recycling their instances may introduce nasty bugs.
Supertype of Block and Line.
Supplemental Plane codepoint (surrogate pair)
Supply the `renderWindowBoundaryIndicator` prop to indicate the boundary to the user, e.g. with a row placeholder.
Support "if"/"ifnot" conditions
Support a empty string "group" to have a blank line between sets of options.
Support anonymous templates
Support array or space separated string of keys
Support both (string, offset, length, encoding) and the legacy (string, encoding, offset, length)
Support both EventTarget and EventTarget(...) as a super class, just like the original module does.
Support for externally loaded babel.
Support for selectors in the "file-icons" package.
Support for this was introduced by https://github.com/nodejs/io.js/pull/758 in io.js.
Support functional components
Support loading old CPU profiles that are missing timestamps.
Support old syntax, maybe add deprecation warning here
Support selecting template as a function of the data being rendered
Support style names that may come passed in prefixed by adding permutations of vendor prefixes.
Support three module loading scenarios
Support: 1.x compatibility Manipulating tables requires a tbody
Support: Android 2.3 Check if div with explicit width and no margin-right incorrectly gets computed margin-right based on width of container.
Support: Android 2.3 Workaround failure to string-cast null input
Support: Firefox 20+ Firefox doesn't alert if the returnValue field is not set.
Support: Firefox, Android 2.3 (Prefixed box-sizing versions).
Support: IE IE returns zIndex value as an integer.
Support: IE6/7 getElementById is not reliable as a find shortcut
Support: IE8 Boolean attributes and "value" are not treated correctly
Support: IE8 Enforce case-sensitivity of name attribute
Support: IE9 Panic based approach to setting things on disconnected nodes
Support: IE9+ Selectedness for an option in an optgroup can be inaccurate
Support: QtWebKit .get() because push.apply(_, arraylike) throws
Support: QtWebKit jQuery.merge because push.apply(_, arraylike) throws
Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3 old WebKit doesn't clone checked state correctly in fragments
Support: Webkit "" is returned instead of "on" if a value isn't specified
Support: Windows 8 Native Apps The type and name attributes are restricted during .innerHTML assignment
Supported elements are: - input (see `isTextInputElement`) - textarea - select
Supported for backgroundColor, barStyle and hidden.
Supported options: timeout (ms), maximumAge (ms), enableHighAccuracy (bool) On Android, this can return almost immediately if the location is cached or request an update, which might take a while.
Supported options: timeout (ms), maximumAge (ms), enableHighAccuracy (bool), distanceFilter(m)
Supports string shapes by extracting numbers so new values can be computed, and recombines those values into new strings of the same shape.
Supports two forms -- with only one argument, it calls that for each line in the document.
Suppose 'foobar' is a property that corresponds to the underlying 'className' property:
Suppose an event handler in each root enqueues an update to the childControl element -- the two updates should get batched together.
Suppose parent wants to become responder on move, and is rejected
Suppose you want to grab the value for a key 'className' inside of an object.
Suppress StyleInvalidator StyleRecalcInvalidationTracking invalidations because they will be handled by StyleInvalidatorInvalidationTracking.
Suppress mysterious IE10 errors
Suppress optimizelegibility in Webkit, since it breaks text measuring on line wrapping boundaries.
Suppresses events (blur/focus) that could be inadvertently dispatched due to high level DOM manipulations (like temporarily removing a text input from the DOM).
Supress ESLint no-undef about using WebInspector without window, which would not have flow types attached.
Surface - Root node of all ART
Surround the expression in with statements to inject our command line API so that the window object properties still take more precedent than our API functions.
Swallow the error while runing in open sourced version.
Swallow the final newline, as some editors add it automatically and we don't want it to cause an issue
Swap the element at the given index with a new value and emits corresponding event.
Swap the elements indexed by `x` and `y` in the array `ary`.
Switch dynamic components.
Switch is not a 'BlockStatement'
Switch to the next line and reset all char pointers.
Switcher owns Box and Child, Box does not own Child
Switches quoting of javascript string between ' " and ` escaping and unescaping as necessary.
Symbol types we can get references for.
Sync any initial breakpoints to engine during loader breakpoint and continue from it.
Sync scroller and scrollbar, ensure the gutter elements are aligned.
Sync scrolling between fake scrollbars and real scrollable area, ensure viewport is updated when scrolling.
Sync the actual display DOM structure with display.view, removing nodes for lines that are no longer in view, and creating the ones that are not there yet, and updating the ones that are out of date.
Sync up dissected dependencies and dependants See: https://github.com/bower/bower/issues/879
Sync with *.json manifests.
Sync with consoleView.css
Sync word and regex pattern for parsing command stdout.
Synchronizes nuclide BreakpointStore and BreakpointManager
Synchronously install necessary plugins, configs, parsers, etc.
Synchronously load a file path.
Synchronously resolve a relative require from a parent module.
SyntaxHighlighter http://alexgorbatchev.com/SyntaxHighlighter  SyntaxHighlighter is donationware.
Synthesize an ObjectExpression union all exports
Synthesize property text disregarding any comments, custom whitespace etc.
Synthetic events (and subclasses) implement the DOM Level 3 Events API by normalizing browser quirks.
Synthetic events are dispatched by event plugins, typically in response to a top-level event delegation handler.
T9254051 - Fix flow http/https definitions.
TDZ scope is created here, so tests to exclude those.
TEXTMARKERS Created with markText and setBookmark methods.
THE CONFIGURATION Is the object passed to the constructor and conceptually shared among all instances in a tree.
THIS IS FILE IS NOT TRANSPILED - USE ELECTRON COMPATIBLE JAVASCRIPT
THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
THIS SOFTWARE IS PROVIDED BY APPLE INC.
THIS SOFTWARE IS PROVIDED BY GOOGLE INC.
TODO (IanVS): not yet implemented
TODO (balpert): Wrap iOS native components in a composite wrapper, then ReactInstanceMap.get here will always succeed for mounted components
TODO (chenshen) fill following information.
TODO (jessicalin) Export the LineDiff type (from hg-output-helpers) when types can be exported.
TODO (jessicalin) Make this method work with the passed-in `text`.
TODO (jessicalin) Make this work for ignored directories.
TODO (kassens): There's a race condition here.
TODO (mikeo): Make this another search provider
TODO (t7298196) Investigate falling back to Node watchers.
TODO (t7832809) Remove this when it is unnecessary.
TODO (t8045823) Convert the return type of ::getBlameAtHead to a Map when the service framework supports a Map return type.
TODO (t8131986) Improve this implementation.
TODO (t8227570) Get initial diff stats for this editor, and refresh this information whenever the content of the editor changes.
TODO (t8823865) Removed this function once Android has been updated.
TODO (t9113913) Ideally, we could send more targeted events that better describe what change has occurred.
TODO - come up with a better strategy in future
TODO Allow control point to be customized.
TODO Allow start and end angle to be specified.
TODO Consider optimizing for the common case of only a single flow root by invalidating all instead of enumerating the files.
TODO Could attach getters and setters here to enforce dynamic type safety.
TODO Deviating from the spec by reusing VariableDeclarator here.
TODO Esprima should return JSXText instead.
TODO Figure out how to silently coerce Expressions to ExpressionStatements where a Statement was expected.
TODO If there is a long delay between when the file is saved and results appear, the file may have changed in the mean time.
TODO Import from type-hints package once it exposes it.
TODO Make this all typecheck.
TODO Missing from the Parser API.
TODO Move a non-caching implementation of this function into ast-types, and implement a caching wrapper function here.
TODO Not in the Mozilla Parser API, but used by Esprima.
TODO Report this nonsense.
TODO Support other source control types file changes (e.g. `git`).
TODO This could be represented as a RestElement in .params.
TODO Unsubscribe at some point.
TODO Warn if fields are overridden with incompatible types.
TODO XML types that nobody cares about or needs to print.
TODO allow duplicate field names if they have the same type.
TODO create a response file at least for the source files to work around the cmd line length limit.
TODO figure out how to allow the diagnostic consumer to poll (for example, if it was just activated and wants diagnostic messages without having to wait for an event to occur)
TODO figure out what font Chrome devtools uses on Windows
TODO go through dispatcher
TODO handle bad input
TODO if all rings are closed, then the winding order of the exterior ring should be checked.
TODO ignore if not clipping polygons.
TODO implement the new way of getting object properties
TODO improve this type
TODO jessicalin: Show this error message in a better place.
TODO match indices not yet implemented.
TODO move LESS styles to nuclide-ui
TODO optimise for this common case
TODO pack this into a function when response files are used for other kinds of info.
TODO persist lastAccessed
TODO properly type the options object
TODO rather than special-case polygons, simply handle them separately.
TODO remove this once we understand this case better
TODO replace `partial` with computed property whenever Flow supports it.
TODO replace this with a ranking algorithm.
TODO replace with computed property once Flow supports it.
TODO rework to use an array, so direct match can be done.
TODO t7093728 This is a simplified XHRExample.ios.js.
TODO this shows that clustering can be improved, as the following scores should be identical:
TODO when this is in the iframe window, we can just use Object
TODO would be better to export a native constant for this, like in iOS the RCTDatePickerManager.m
TODO(3y3): Handle events here
TODO(3y3): types are unique for protocol, not for domain.
TODO(5405356): Implement overflow: visible so position: absolute isn't useless position: 'absolute',
TODO(5586355): If this becomes a bottleneck, we should consider memoizing this function.
TODO(6033040): Consider implementing this as a separate native component
TODO(7693961): The event for DidShow is not available on iOS yet.
TODO(7876450): For some reason, this does not work for particular values of pathToFile.
TODO(9519963): Stream back more detailed compile status message.
TODO(aboxhall): overflow ellipsis style
TODO(aboxhall): styles for all value types
TODO(alpert): Don't escape if sanitize is false
TODO(amasad): Once we get bundle splitting, we can drive this down a bit more.
TODO(asuarez): Improve perf by explicitly running only the transforms we use.
TODO(brentvatne) docs are needed for this
TODO(davidaurelio) Scan polyfills for dependencies, too (t9759686)
TODO(hansonw): Fall back to manual refresh or node watches
TODO(hansonw): Get the caller when it's available
TODO(hansonw): Highlight tokens inside types.
TODO(hansonw): Implement a proper retry mechanism.
TODO(hansonw): Remove after https://github.com/atom/text-buffer/issues/153 is resolved.
TODO(hansonw): Remove this when quick-open has proper ranking/de-duplication.
TODO(hansonw): Remove when symbols-view has a proper API.
TODO(hansonw): use a union + intersection type
TODO(hansonw): we could parse these into hint trees
TODO(janic): Provide a real API to deal with status bar height.
TODO(jared): get this working for react native
TODO(jared): style this
TODO(jeffreytan): when we figured out the launch lifecycle story we may bind this to start-debugging too.
TODO(jessicalin): Determine an appropriate priority so that the gutter: (1) Shows up to the right of the line numbers.
TODO(jjiaa): Find a way to remove the stylesheets when they're unneeded.
TODO(jjiaa): If possible, check that `stylesPath` is also a directory.
TODO(jkassens) hack to format queries with fragments.
TODO(johnlenz): Array should be Iterable.
TODO(johnlenz): Iterator should be a templated record type.
TODO(johnlenz): remove this when the compiler understands "symbol" natively
TODO(johnlenz): symbol should be a primitive type.
TODO(jonaldislarry) These package(s) cannot be activated manually -- t9243542.
TODO(jonaldislarry): Currently xdebug provides no way to eval at arbitrary stack depths, it only supports the current stack frame.
TODO(jonaldislarry): currently first dir only
TODO(jxg): Investigate extending scoreCommonSubsequence to consider subsequences bidirectionally, or use (some proxy for) edit distance.
TODO(jxg): replace with "important characters" index.
TODO(matthewwithanm): Decide how to assign `_expandedFlexScale` to `HTMLElement` to remove this `any` cast.
TODO(matthewwithanm): Provide a way to override this in the UI.
TODO(matthewwithanm): Remove all this flux stuff.
TODO(matthewwithanm): Use project root instead of first directory.
TODO(mbolin): Buck does have an option where the user can customize the name of the build file: https://github.com/facebook/buck/issues/238.
TODO(mbolin): Caller should also invoke dispose(), as appropriate.
TODO(mbolin): Escape slashes.
TODO(mbolin): Find a way to unregister the autocomplete provider from ServiceHub, or set a boolean in the autocomplete provider to always return empty results.
TODO(mbolin): Frequently failing due to 'Daemon is busy' errors.
TODO(mbolin): Ideally, this Disposable should be garbage-collected if this ContextMenu is disposed.
TODO(mbolin): If this passes a string rather than an Error, the unit test fails.
TODO(mbolin): If throws a string rather than an Error, the unit test fails.
TODO(mbolin): Make it so that when mousing over an element with this CSS class (or specifically, the child element with the "region" CSS class), we also do a showPopupFor().
TODO(mbolin): Need logic to make sure results are restricted to apple_library or apple_binary rules.
TODO(mbolin): Return an Observable so that results appear faster.
TODO(mbolin): Tell user to fill out all of the fields.
TODO(mbolin): The architecture should be chosen from a dropdown menu like it is in Xcode rather than hardcoding things to iphonesimulator-x86_64.
TODO(mbolin): This does not account for the case where the user runs `buck build` from the command line while Nuclide is also trying to build.
TODO(mbolin): This redefinition of console.log() does not appear to be bulletproof.
TODO(mikeo): Tell delegate to cancel the connection request.
TODO(mikeo): put renames into a queue so we don't write older save over new save.
TODO(most) reconnect ServerConnection, restore the current project state, and finally change dismissable to false and type to 'WARNING'.
TODO(most): Fix UI rendering and re-introduce: t8174332 provider.composeUiElements(filePath)
TODO(most): Fix: this assumes that the editor contents aren't changed while fetching the comments, that's okay now because we don't fetch them.
TODO(most): Show progress indicator: t8991676
TODO(most): Sync the used comment vertical space on both editors.
TODO(most): handle `rename`, if needed.
TODO(most): mark as resolved.
TODO(most): move async code out of the React component class.
TODO(most): move async code out of the view and deprecate the usage of `_isMounted`.
TODO(most): move to remote-connection/lib/RemoteTextBuffer.js
TODO(most): reconnect ServerConnection, restore the current project state.
TODO(most): save cursor location.
TODO(most): support reverting multiple nodes at once.
TODO(most): t9929679 Remove this hack when Atom has a blinking cursor configuration API.
TODO(most): use state messages to decide on when to send updates.
TODO(natthu): Add another button to allow debugging RN Javascript.
TODO(natthu): Also load .buckconfig.local.
TODO(natthu): Assign random port instead.
TODO(natthu): Provide a way to override this in the UI.
TODO(natthu): Restore validation logic to make sure the target is installable.
TODO(nmote) refine this regex to better capture JavaScript expressions.
TODO(nmote): This is assuming `suggestion.callback` is always an Array, which is not true according to hyperclick/lib/types.
TODO(nzakas): Figure out how fixes might work for processors
TODO(nzakas): Figure out logical things to do with destructured, default, rest params
TODO(ostrulovich) if we're really nice, we should probably check edit distance and suggest the right name the user meant
TODO(peterhal): Remove this once all services have had their def files removed.
TODO(peterhal): Remove this when unhandled rejections have a default handler.
TODO(peterhal): repositoryForPath is the same as projectRelativePath only less robust.
TODO(pieter) add support for multiple .dotmerlin files
TODO(rossallen): The control should be inverted here.
TODO(rsc): handle case where there are no comments
TODO(sergeyv): this file is forked from usual es6.js extern baked into closure compiler In original extern Iterator doesn't implement Iterable and as a result you can't iterate over map.values()
TODO(ssorallen): Use a cancelable form of `debounce`
TODO(t7489503): Don't need this once ES6 Class landed.
TODO(t8118670): This can cause an uncaught exception.
TODO(t8579744): Log these to a separate file.
TODO(t8750960): Work with the Atom core team to get a stable API for this.
TODO(williamsc): This needs to have some better managment tools (Adding/removing query sets).
TODO(yurys): support event dividers
TODO: (poshannessy) deprecate this pattern.
TODO: - on "end", a callback hook for `onResponderEndShouldRemainResponder` that determines if the responder lock should remain.
TODO: Add Console (aka logging) support
TODO: Add a limit so the transform is not run on files over a certain size.
TODO: Add enabling/disabling of registered source and only subscribe when enabled.
TODO: Add optional catch all at word boundaries to account for adding commas in a transform.
TODO: Add optional ext parameter
TODO: Add the __DEV__ check back in to verify the Promise result
TODO: Add timeout If we can't connect, or get disconnected, keep trying to connect.
TODO: All of the elements of the array are non-null, but it does not seem possible to convince Flow of that.
TODO: All these warnings should become static errors using Flow instead of dynamic errors when using JSX with Flow.
TODO: An `isValidNode` function would probably be more appropriate
TODO: Annotate return type better.
TODO: Annotate return type here
TODO: Annotate the listener arg's type.
TODO: Benchmark areas that can be improved with caching.
TODO: Benchmark whether checking for changed values in memory actually improves performance (especially statically positioned elements).
TODO: Better error message why each possibleFields is invalid.
TODO: Bring over matchers from the existing environment.
TODO: Catch test cases that call spyOn() but don't inspect the mock properly.
TODO: Change to COMMAND_STOP: t10862085
TODO: Choosing the last selected key is inexact when there is more than 1 root.
TODO: Completely remove this in v0.15.
TODO: Computed class properties don't seem to be supported by Babylon yet.
TODO: Connection could have been lost for remote file.
TODO: Consider a more efficient strategy that does not blindly destroy all of the existing markers.
TODO: Consider actually moving these to statics or drop this unit test.
TODO: Consider logging socket info: remote ip, etc.
TODO: Currently first local dir only.
TODO: Currently first remote dir only.
TODO: Define undocumented ThemePackage class.
TODO: Delete this after https://github.com/facebook/jscodeshift/issues/34
TODO: Dispatch multiple changed touches in one event.
TODO: Display all prompts, not just the first one.
TODO: Drop this when these are no longer allowed as the type argument.
TODO: Enable following when RN changes land.
TODO: Expose pendingState or don't use it during the merge.
TODO: Figure out where these types actually come from.
TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
TODO: Find a better place for this.
TODO: Flow: `nextValue` is an array, array indexing should work
TODO: Flow: `nodeID` is `string`
TODO: Force the scope to break when a property is a method.
TODO: Generalize to non-`Node` types.
TODO: Generate default title from gadgetId
TODO: Get initial state from serialized state.
TODO: Get this from deserialization.
TODO: Handle file read errors.
TODO: Handle non-file scriptIds
TODO: Handle other things like Syntax.ObjectPattern
TODO: Handle remaining params
TODO: I suspect we should key the local service off of the presence of a .hhconfig file rather than having a single HackLanguage for all local requests.
TODO: Ideally we'd not Promise.all() for argument lists which do not contain any remote interfaces rather than await here.
TODO: If nothing has changed, return the prevChildren object so that we can quickly bailout if nothing has changed.
TODO: Implement a timer to unset this, in case watchman update fails to notify of the removal of the lock.
TODO: Import types from `graphql`.
TODO: Instead of making gestures recompute filtered velocity, we could include a built in velocity computation that can be reused globally.
TODO: Investigate representing React components in the DOM with text nodes.
TODO: It may be a good idea to cache this to prevent unnecessary DOM traversal, but caching is difficult to do correctly without using a mutation observer to listen for all DOM changes.
TODO: Looks like there is bug in Node fs.createReadStream it doesn't respect `end` options without `start` options Fix it when node fixes it.
TODO: Make completedCount, edges, and totalCount optional
TODO: Make it possible to move or split a pane with a VcsLogPaneItem.
TODO: Make some config entries, such as: - Max MB - Max versions per source - Max MB per source - etc..
TODO: Make the following the default once Nuclide only supports Atom v1.6.0+
TODO: Make this configurable so that it's possible to only add known requires and ignore unknown modules.
TODO: Make this configurable so that the suffix for JSX can be changed.
TODO: Make this not necessary...
TODO: Mangle in the transactionId of the most recent pause/status.
TODO: Mark complete as optional
TODO: Mark completedCount and totalCount as optional
TODO: Mark completedCount optional
TODO: Mark edges and totalCount optional
TODO: More complete implementation of RFC 2617.
TODO: Move deepDiffer into react
TODO: Move flattenStyle into react
TODO: Move these around to solve the cycle in a cleaner way.
TODO: Move these to nested declarations on the native side.
TODO: Move this into an ART mode called "serialized" or something
TODO: Move this to nuclide-commons.
TODO: Move to nuclide-commons
TODO: Now that all calls to _data and _removeData have been replaced with direct calls to data_priv methods, these can be deprecated.
TODO: Pool all of this.
TODO: Pool these per platform view class.
TODO: Properly remove new lines from the node.
TODO: Re-enable event.path handling
TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct number.
TODO: Reenable this once the server connection is revived.
TODO: Remaining property types - closure, hashmap, ...
TODO: Remove deprecated onAnnotationPress API call later.
TODO: Remove the `key` once https://github.com/facebook/react/issues/1448 is resolved.
TODO: Remove the any cast once we have bi-directional marshalling.
TODO: Remove this case in the future
TODO: Remove this once all services have been moved to framework v3.
TODO: Replace RegExp with AST-based, more accurate approach.
TODO: Replace with enumeration for possible config types.
TODO: Report a soft error for this.
TODO: Return entries directly and change client to handle error.
TODO: Rewrite `_repositoryAdded` to return the subscription instead of adding it to a map as a side effect.
TODO: Rewrite to synchronous form
TODO: Should be `arrayOf(TestRunner)`, but that would require a real object since this is runtime code for React.
TODO: Should replace all aliases, however that will require rewriting marsalling.
TODO: Some of these tests do very bad things with backslashes, and will most likely fail badly on windows.
TODO: Sort alphabetically by label
TODO: Stderr redirection is not implemented in HHVM so we won't check this return value.
TODO: Stop updating the pathSet when the fileSearch is torn down.
TODO: Stop validating prop types here and only use the element validation.
TODO: Store the location of the closed pane for serialization so we can reopen this gadget there next time.
TODO: Strictly we should detect alternates which directly contain their parent union, or if all alternates indirectly contain the parent union.
TODO: Support enums in rpc3 framework.
TODO: Support exports and destructuring.
TODO: Support plural deletes
TODO: Test Flow integration and ensure that prop types works.
TODO: Test TypeScript integration and ensure that prop types works.
TODO: Test render and all stock methods.
TODO: Test that a single child and an array with one item have the same key pattern.
TODO: The _entries and _hgRepositoryDescription should not be here.
TODO: The callback here is ignored when setState is called from componentWillMount.
TODO: The node location/path needs to be more configurable.
TODO: The setTextContent operation should be enough
TODO: There's room for improvement by using streams if the URL is an archive file, by piping read stream to the zip extractor This will likely increase the complexity of code but might worth it
TODO: These callers should be refactored to avoid the need for this injection.
TODO: These warnings currently come from the composite component, but they should be moved into the ReactElementValidator.
TODO: This behavior creates a runtime dependency on propTypes.
TODO: This currently shows in the Firefox shell when navigating from a React page to a non-React page.
TODO: This is a hack since graphql does not export `buildDirective` directly.
TODO: This is a temporary solution to fight against false-positives in arrays and objects with trailing commas (see GH-363).
TODO: This is currently true because these injections are shared between the client and the server package.
TODO: This is not technically correct.
TODO: This is really a ReactText (ReactNode), not a ReactElement
TODO: This is technically an implementation detail.
TODO: This must be filtered intelligently.
TODO: This returns a nullable array.
TODO: This should actually work since `null` is a valid ReactNode
TODO: This should be a custom marshaller registered in the TypeRegistry
TODO: This should probably use a composite wrapper
TODO: This shouldn't bubble.
TODO: This special-case can be eliminated once `delete()` is added to `Directory` and `File`.
TODO: This test was added to cover a special case where we proxied methods.
TODO: This will be deprecated because state should always keep a consistent type signature and the only use case for this, is to avoid that.
TODO: Update this to a better test that doesn't rely so much on internal implementation details.
TODO: Use a computed property when supported by Flow.
TODO: Use an object to test, after non-object fragments has fully landed.
TODO: Use let for proper scoping.
TODO: Use loader breakpoint configuration to choose between step/run.
TODO: Use nuclide-remote-uri instead.
TODO: Use the ReadOnlyTextBuffer class from nuclide-atom-text-editor when it is exported.
TODO: Validate that text is allowed as a child of this node
TODO: Verify this ...
TODO: We can use the diff-view here when ready.
TODO: We need to have a solid concept of an "active project" that's consistent across Nuclide (i.e. where we should look for commands like this) and use that here.
TODO: We should add the following line to keep the cache up-to-date.
TODO: We should make any setState calls fail in `getInitialState` and `componentWillMount`.
TODO: We should really `.share()` this observable, but there seem to be issues with that and `.retry()` in Rx 3 and 4.
TODO: We used to use `stream.buffer(stream.filter(...))` for this but it doesn't work in RxJS 5.
TODO: When HHVM handles the 'stop' message correctly, we don't need to await this promise, and we can delete this if check.
TODO: add a `localStorage` variable to explicitly enable/disable colors
TODO: add a getRequires() that consolidates automatically, or add a specific consolidate step as part of the transform.
TODO: advinsky replace with remote-uri.normalize() when task t10040084 is closed
TODO: allow reseeding after first request
TODO: change `GraphQLRange` to accept `(edgeID, cursor, nodeID)` tuple
TODO: check if filePath is in rootKey and if not, find the rootKey it belongs to.
TODO: columnNumber: from cmdbegin/end
TODO: compression flag
TODO: convert to ReactMountReady
TODO: decide whether I just need the type
TODO: defer error events consistently everywhere, not just the cb
TODO: escape any single quotes TODO: the timeout value shall be configurable using .json file too (t6904691).
TODO: expectation result may make more sense as a presentation of an expectation.
TODO: fill other fields from UI.
TODO: fix this naming, and here's where the value comes in
TODO: getCurrentAppState callback seems to be called at a really late stage after app launch.
TODO: https://github.com/atom/atom/issues/9237.
TODO: https://github.com/babel/babel/issues/2600 Leading comments are screwed up in ImportSpecifiers.
TODO: implement `RemoteDirectory.isRemoteDirectory()`
TODO: make heap profiler not allocate while taking snapshot
TODO: make sure this stays in sync with gulpfile
TODO: make tab stop between textbox work.
TODO: make this configurable somehow, we probably don't want to explicitly list out all of the lowercase html tags that are built-in
TODO: make this into a proper hashtable
TODO: make this smarter, using a list of packages + substring matches.
TODO: make xdebug_includes.php path configurable from hhconfig.
TODO: move into react or fbjs
TODO: move this logic into RemoteConnection package.
TODO: move this out to another build step maybe.
TODO: nativeParent should have this context already.
TODO: observe for when this editor's path changes.
TODO: optimized handling of constants
TODO: perform some validation for the input.
TODO: pull this into nuclide-commons.
TODO: reenable this test.
TODO: refactor according to the chosen i18n approach
TODO: refactor so this can be shared with DOMChildrenOperations.
TODO: refactor tests, so they can use readOptions directly
TODO: refactor this function to work with other providers(like hhvm).
TODO: refresh connections when new directories are removed/added in file-tree.
TODO: remove `console.log` and dev tools binary
TODO: remove once we deprecate this arg
TODO: remove these, they should be covered by TypeParameterDeclaration but there is a bug in jscodeshift
TODO: rename `observedTopOfStack` to `presentedIndex` in `NavigatorIOS`
TODO: respect encoding
TODO: revisit if we end up having too many segments
TODO: seems like these methods are very similar
TODO: set a var when we catch an exception and use a finally block to close the loop in a nice way..
TODO: smart fill the working directory textbox.
TODO: stop one short of the current responder.
TODO: support multiple fixits (if it's ever used at all)
TODO: sync babel config with gulpfile.
TODO: t7467124 investigate if this can be removed
TODO: test cases for other configuration types (cli, env, user, global)
TODO: test with others
TODO: there is no `rawHeaders` in node 0.10.* We can wrap parser to find raw headers, but it's not so useful to see original string So, maybe won't fix
TODO: these should be separate events, to reduce bridge traffic
TODO: this is copied from fbjs because fbjs doesn't play well with non-haste module systems :/.
TODO: this may need to be arrayified/sliced
TODO: this would be nice as its own Object - NegativeExpectation TODO: copy instead of mutate options
TODO: totalTime isn't that useful since it doesn't count paints/reflows
TODO: uncomment this test once we can run in phantom, which supports real submit events.
TODO: use content-type or other module
TODO: use media-typer
TODO: we could get rid of the need for the wrapper node by cloning a single child
TODO: we may just be able to pass in the fn instead of wrapping here
TODO: will remove when t10747769 is resolved.
TODO: wrap into separate React components.
TOOD: Put a better type for _picker
TTL() partially replaces the "expiry-time" parts of S5.3 step 3 (setCookie() elsewhere) S5.3 says to give the "latest representable date" for which we use Infinity For "expired" we use 0
Tab Behavior Soft Wrap Behavior Indentation
Tab, Return, Esc, Space
TabView checks for the existence of this method and uses it if it is available: https://github.com/atom/tabs/blob/master/lib/tab-view.coffee.
Tabs followed by one space followed by a block comment are allowed.
Tag files are often not perfectly in sync - filter out missing files.
TaggedTemplateExpression
Tags a `SyntheticEvent` with dispatched listeners.
Tags instances and associated tasks for easier debugging.
Take a sectionID and rowID of the row above and whether its adjacent row is highlighted.
Take a shortcut and set the context if the root selector is an ID
Take all the event args, and prefix with the viewmodel
Take an array of elements and push it onto the stack (returning the new matched element set)
Take an unsorted, potentially overlapping set of ranges, and build a selection out of it.
Take five seconds to "create" the process.
Take for example the value of -128.
Take note if the _read call is sync or async (ie, if the read call has returned yet), so that we know whether or not it's safe to emit 'readable' etc.
Take startTime and responseReceivedTime from timing data for better accuracy.
Take the "read" path and allow the get method to determine which value to return, respectively either:
Take the difference between one array and a number of other arrays.
Take the snapshot (returns a temp file uri)
Taken and modified from https://gist.github.com/SimplGy/a229d25cdb19d7f21231
Taken from http://csrc.nist.gov/groups/ST/toolkit/documents/dss/NISTReCur.pdf
Taken from http://ctags.sourceforge.net/FORMAT
Taken from the interface of GitRepository, which is also implemented by HgRepositoryClient.
Takes a data blob from the `data` array prop plus some meta info and should return a row.
Takes a line and cuts into visible segments.
Takes a loggingEvent object, returns string representation of it.
Takes a map returned by HgRepositoryClient.getBlameAtHead() and reformats it as a Map of line numbers to blame info to display in the blame gutter.
Takes a method from Node's fs module and returns a "denodeified" equivalent, i.e., an adapter with the same functionality, but returns a Promise rather than taking a callback.
Takes a node, returns a string.
Takes a string, returns an object with the correct log properties.
Takes a target as an argument.
Takes an argument an returns its human readable equivalent for help usage.
Takes an array of mappings and extracts values from each arg accordingly, then calls `setValue` on the mapped outputs.
Takes an autocomplete item from Flow and returns a valid autocomplete-plus response, as documented here: https://github.com/atom/autocomplete-plus/wiki/Provider-API
Takes an object, and recursively converts it to a Babel AST literal node.
Takes and returns the same types as `atom.config.getSchema`.
Takes and returns the same types as `atom.config.get` exception `keyPath` is not optional.
Takes and returns the same types as `atom.config.observe` except `keyPath` is not optional.
Takes and returns the same types as `atom.config.onDidChange` except `keyPath` is not optional.
Takes and returns the same types as `atom.config.setSchema`.
Takes and returns the same types as `atom.config.set`.
Takes care to render special characters separately.
Takes control over execution.
Takes in all the various params on the function in the docblock or inline comments and converts them into the format the annotator transform is expecting.
Takes in all the various params on the function in the docblock or inline comments and converts them into the format the bodyWrapper transform is expecting.
Takes target regex match and file path where given target is found as arguments.
Takes the contents of a service config JSON file, and formats each entry into a ConfigEntry.
Takes the info for a service call and returns a string description of the relevant arguments.
Tapping any button will fire the respective onPress callback and dismiss the alert.
Target is a commit, so it's a stale target (not a moving target) There's nothing to do in this case
Target is a range/version
Target is a revision, so it's a stale target (not a moving target) There's nothing to do in this case
Target is not a folder..
Targets - ignore those specified in ignoredDependencies
Task creates and manages communication with another Node process.
TaskQueue - A system for queueing and executing a mix of simple callbacks and trees of dependent tasks based on Promises.
TaskQueue instances are self contained and independent, so multiple tasks of varying semantics and priority can operate together.
Tasks will not be executed until `processNext` is called explicitly.
Teardown an instance, unobserves the data, unbind all the directives, turn off all the event listeners, etc.
Teardown partial linked directives.
Teardown the current child, but defers cleanup so that we can separate the destroy and removal steps.
Teardown the instance, simply delegate to the internal _destroy.
Teardown the watcher and call unbind.
Tell Flow this is definitely non-null now.
Tell merlin where to find its per-repo .merlin config file.
Tell the controller to re-render only if it exists so test runner services won't force construction if the panel is still invisible.
Tell the parent menu to sort itself.
Tell the user if we can't connect to the debugger UI.
Tells if a comment encompasses the entire line.
Tells if a given comment is trailing: it starts on the current line and extends to or past the end of the current line.
Temporarily attach in order to measure preferred dimensions.
Temporarily override touchstart while gesture is active.
Temporarily push properties named by string arguments given after the callback function onto this.stack, then call the callback with a reference to this (modified) FastPath object.
Temporary hack to disable listing dependencies not under this directory.
Temporary warning about using length
Temporary workarounds to support legacy schemas
Ten passes have been made.
Test also with the ignore property because the code is different
Test and measure when using this property.
Test config for events that aren't negotiation related, but rather result of a negotiation.
Test connection first.
Test extension against all types supported by image-size module.
Test for A's keys different from B.
Test for B's keys missing from A.
Test for IE10/11 textarea placeholder clone bug
Test if hasNew can be called again when done
Test if resolve can be called again when done
Test if the reference contains the values
Test only for the first 6 refs
Test only for the first 7 refs
Test performing a transaction in another transaction's close()
Test rejected connection.
Test set up: mock out dependency on hg.
Test setup: Mock out the dependency on HgRepository::_updateStatuses, and set up the cache state.
Test setup: force the state of the repo.
Test similar to GitHub but not real GitHub
Test suite for interactive UI tests.
Test that after unmounting each, they are no longer in the document.
Test that blasting away children throws a warning
Test that scalar constants are substituted, not only query fragments.
Test that two react roots are rendered in isolation
Test that unmounting at a non-root node gives a different warning
Test that unmounting at a root node gives a helpful warning
Test the same case with object equality because an early bailout doesn't work in this case.
Test time order of v1 uuids
Test tree nodes that provide no `fetchChildren` get a default fetcher that returns nothing.
Test whether a given character code starts an identifier.
Test whether a given character is part of an identifier.
Test whether a semicolon can be inserted at the current position.
Test whether there exists a collapsed span that partially overlaps (covers the start or end, but not both) of a new span.
Test with type 'branch' In this case, it should be the commit
Test with type 'commit'
Test with type 'version'
Test with type 'version' + build metadata
Test without name and target
Testing a random number generator is a bit more complicated than testing deterministic code, so we use different techniques.
Testing add after: adding id2 to end of range
Testing add before: adding id99 to end of range
Testing append: adding id98 to the end of the range
Testing harness file:/// results in 0.
Testing prepend: adding id3 to the front of the range
Testing that no exception is thrown here, as the timeout has been cleared.
Tests ToBeTested.functionToTest while mocking imported function toBeMocked.
Tests from Twitter documentation https://dev.twitter.com/docs/auth/oauth
Tests if a NodePath is a direct child of the Program node.
Tests if a variable declaration is a valid require declaration.
Tests network raw headers text.
Tests network sync size.
Tests network timing.
Tests that debugger works correctly if pause event occurs when DevTools frontend is being loaded.
Tests that pressing "Pause" will pause script execution if the script is already running.
Tests that scripts are not duplicaed on Scripts tab switch.
Tests that scripts list contains content scripts.
Tests that scripts tab can be open and populated with inspected scripts.
Tests that scripts tab is populated with inspected scripts even if it hadn't been shown by the moment inspected paged refreshed.
Tests that when a ref hops around children, we can track that correctly.
Tests whether parsed token is a contextual keyword.
Text editor context menu items.
Text nodes don't have owners but this is close enough.
Text nodes violate a couple assumptions that React makes about components:  - When mounting text into the DOM, adjacent text nodes are merged.
Text that appears under the icon.
Text to display for this item.
TextBuffer::deleteRows is inclusive:
TextInput is a controlled component, which means the native value will be forced to match this value prop if provided.
Thankfully, this version of Safari supports MutationObservers, so we don't need to fall back in that case.
That allows the results of this file to be untainted and therefore accurate.
That can be useful if you decide to make your subclass of this mixin a "PooledClass".
That could contain a resolution postfix, we need to find that image (or the closest one to it's resolution) in one of the project roots:  1.
That extends the `GitRepositoryAsync` implementation which takes a single file path.
That feature is not used in Nuclide and is instead treated as part of the path.
That feature is not used in Nuclide and is instead treated as part of the pathname.
That function will be invoked immediately, and its return value is the JSHINT function itself.
That is a collection of values used to instantiate the set.
That is why getPrototypeOf is used *twice* here: to skip the first level of repetition.
That is why we first need to collect information about the nodes in the first snapshot and then pass it to the second snapshot to calclulate the diff.
That is, if modifiedPath is /A/B/C/D and pathPrefixToSkip is /A/B/ (or /A/B), `directories` will be populated with '/A/B/C/', but not '/A/' or '/A/B/'.
That is, it's not explicitly set, so we're going to make it whatever the thing already is, or "File"
That is, this main process dies, but Atom sticks around.
That makes it easy to ignore the optional parameters, since they will be selected along with the last non-optional parameter and you can just type to overwrite them.
That may lead to a sequence calls: lockFileChange(false) then lockFileChange(true), stopping future events from being sent to the client.
That means anytime a fix is successfully applied, there will be another pass.
That means its a global variable
That means that for the web, `pageXOffset/pageYOffset` should be added to to getBoundingClientRect to make consistent with touches.
That means that we can run publish/postpublish in the dir, rather than in the cache dir.
That means when we tested that a failure is thrown, that would also count as a failure in the testing for RuleTester.
That means, no client new feature shall be enabled before the dependent server serice is in place, while it is OK to add a new server service before the client is ready.
That must be an a update triggered by an `amend` operation, done as part of diffing.
That must be done by the parent.
That particular tag will use this class instead of the generic one.
That said, although this attribute improves things, the resulting styles still do not match exactly what you see in Atom.
That way they can also disallow/undo/mutate the selection of certain values.
That way we can skip a lot of extra work when resolving symlinks for bundled dependencies in npm.
That way, we guarantee we only update the revisions state if the revisions are changed.
That way, we won't trigger cold observer side-effects when we don't need the results.
That we got here means that the readable side wants more data.
That works great a lot of the time, except that heavy operations like rendering may block the JS thread from responding quickly to events like taps, making the app feel sluggish.
That would leave this function as the only one doing side-effects.
That's a violation of a pretty basic assumption (that the debugger will be paused when your paused event callback is called) so instead we wait until the next tick.
That's because commit ids are unique and incremental.
That's fine for the purposes of testing because the tests are just relative to an ancestor location.
That's why this trick works.
That's why we first added them without selection.
That's why we mutate this so that if it's reused, we reuse the same resolved box.
The "+str" will convert a string containing only a number directly to a Number, or NaN for other strings.
The "cleanup" phase of a leaving transition.
The "cleanup" phase of an entering transition.
The "composite hash" is similar to the concrete instance hash, but it also differentiates between varying variable values or route names.
The "concrete fragment id" uniquely identifies a Relay.QL`fragment ...` within the source code of an application and will remain the same across runs of a particular version of an application.
The "core.customFileTypes" config was added in Atom v1.0.8.
The "linkedStylesheet" case.
The "nextTick" phase of a leaving transition.
The "nextTick" phase of an entering transition, which is to be pushed into a queue and executed after a reflow so that removing the class can trigger a CSS transition.
The "resolve" handles logic of re-downloading target if needed.
The "right thing" is very nuanced.
The "spec" is Bash code that defines the CLI options and subcmds for the template's completion code.
The "stall" time is defined as the amount of time in access of the acceptable threshold, which is typically around 100-200ms.
The "sweet spot" for number of options in a config seems to be two (severity plus one option).
The 'spelling' returned is the name of the clicked symbol.
The **guard** check allows it to work with `_.map`.
The .comments field of the Node type is hidden, so we only visit it if the visitor defines visitBlock or visitLine, and value.comments is defined.
The .hgignore file changes.
The .loc checks below are sensitive to some of the problems that are fixed by this utility function.
The .watchmanconfig file, amonst others that could also be configured define the project root directory.
The 2's-complement is (0x100 - n), and the 1's- complement is (0xFF - n).
The 2nd argument of deprecatedPropType is the deprecation message.
The 2nd element is the field name
The 4-value 'clock' properties like margin, padding, border-width seem to behave without any problems.
The ANSI escape sequences.
The API is designed to be compatible with the CommonJS AMD spec and RequireJS.
The ART API expects the radial gradient to be repeated at the edges.
The AlertsIOS utility provides two functions: `alert` and `prompt`.
The App is declared in `module.json` and the highest priority one is loaded by `Main`.
The AssertionError is defined in assert.
The Atom spec runner spies on setTimeout and neuters it, but we need it to work as intended.
The Atom status-bar uses this as a signal to refresh the 'shortHead'.
The BMP character to use as a replacement for astral symbols when translating an ES6 "u"-flagged pattern to an ES5-compatible approximation.
The BlameForEditor completely replaces any previous blame information.
The BlameGutter could have been destroyed while blame was being fetched.
The CA file can contain multiple certificates so split on certificate boundaries.
The CLI object should *not* call process.exit() directly.
The Callback to start editing the next/previous property/selector.
The ChangeSet ID will be null for uncommitted local changes.
The Clang server receives requests serially via stdin (and processes them in that order) so it's quite safe to assume that requests are processed in order.
The ConnectionMultiplexer makes multiple debugger connections appear to be a single connection to the debugger UI.
The ConnectionMultiplexer will close only if there are no connections and if either the attach or launch DbgpConnectors are closed.
The CookieJar itself will expose a "*Sync" API that converts from synchronous-callbacks to imperative style.
The CoverInitializedName check is deferred.
The CreateConnectionProfileForm will do basic validation on the inputs: It checks that the fields are non-empty before calling this function.
The DOM events that CodeMirror handles can be overridden by registering a (non-DOM) handler on the editor for the event name, and preventDefault-ing the event in that handler.
The DOM updates done when an operation finishes are batched so that the minimum number of relayouts are required.
The DOT code can be visialized with Graphvis.
The Darwin patch below results in callbacks first for the write and then for the error handler, so make sure we only call our callback once.
The DbgpConnectors will likely only close if HHVM crashes or is stopped.
The Def object d returned from Type.def may be used to configure the type d.type by calling methods such as d.bases, d.build, and d.field.
The Def type is used as a helper for constructing compound interface types for AST nodes.
The DiagnosticsProviderBase takes care of the details of event subscription.
The Diff View will open its main UI in a tab, like Atom's preferences and welcome pages.
The DiffViewEditor manages the lifecycle of the two editors used in the diff view, and controls its rendering of highlights and offsets.
The Doc methods that should be available on CodeMirror instances
The Drawer (typically used for navigation) is rendered with `renderNavigationView` and direct children are the main view (where your content goes).
The EACCES fallback is a workaround for npm's `sudo` behavior, where it drops the permissions before invoking any child processes (like node-gyp).
The ESTree way of representing a ...rest parameter.
The Esprima ModuleSpecifier type is just a string-valued Literal identifying the imported-from module.
The Firstname Lastname may not appear sometimes.
The Flow error on the following line is due to a bug in Flow: https://github.com/facebook/flow/issues/428.
The Flow team believes it's an error in Flow if it does.
The Flow type does not capture this, but the first message always has a path, and the diagnostics package requires a FileDiagnosticMessage to have a path.
The Function.prototype.inherits from lang.js rewritten as a standalone function (not on Function.prototype).
The Generated position, original position, and original source.
The HTTP Method to use.
The HTTP body to send with the request.
The IDs must not be the same, and there must exist a parent path between them.
The IE `textinput` event is not as useful, so we don't use it.
The Inspector uses TreeOutlines to represents object properties, so recursive expansion in some case can be infinite, since JavaScript objects can hold circular references.
The MarshallingContext is opaque to the TypeRegistry and allows for adding per-connection context to marshalling transformations.
The NavigationEvent interface represents any event of the navigation.
The ObservableManager keeps track of the streams we use to talk to the server-side nuclide debugger.
The ObservableManager takes ownership of its observables, and disposes them when its dispose method is called.
The Parser API calls this ArrowExpression, but Esprima and all other actual parsers use ArrowFunctionExpression.
The ProcessOutputStore that provides the data to display.
The PromiseQueue that holds all of these requests is returned by this function, along with a shutdown() function that should be used to disconnect from the UNIX socket.
The Quick Sort algorithm.
The RFC doesn't say what the default encoding is if there is a mediatype so we will return null.
The React Class to render for this route
The Relay backend implements this call and is initialized from the injected script whereas this file is called from the Panel.
The Rpc channel owns the socket.
The Set constructor creates an empty Set if passed null or undefined.
The Set of selected keys should be maintained as a flat list across all roots to maintain insertion order.
The Software shall be used for Good, not Evil.
The SourceNode we want to fill with the generated code and the SourceMap
The Sutherland-Hodgman clipping algorithm.
The Symbol used to tag the ReactElement type.
The Tab-key is considered non-printable and does not have a `charCode`, presumably because it does not produce a tab-character in browsers.
The Transform stream has all the aspects of the readable and writable stream classes.
The TypeRegistry is a centralized place to register functions that serialize and deserialize types.
The URI to load in the WebView.
The URL root from which all sources are relative.
The URL where the browser client can access the REST API is available Replace with a full url (including hostname) if your client is being served from a different server than your REST API.
The Vibration API is exposed at `Vibration.vibrate()`.
The Vibration API is exposed at `VibrationIOS.vibrate()`.
The View that contains both the actual drawer and the main view
The Windows implementation of `fs.access` has a bug where it will sometimes return access errors all the time for directories, even when access is available.
The XMLHttpRequest spec doesn't specify if duplicate keys are allowed.
The _derivedChange param is not for external use.
The _direct propery is saved by the manager when .newly is specified It may happen pkgMeta is undefined if package is uninstalled
The _dissected array is used later on by install method to move packages to config.directory.
The _revealAndSelectNode() method might find a different element if there is inlined text, and the select() call would change the selectedDOMNode and reenter this setter.
The `.action()` callback is invoked when the command `name` is specified via __ARGV__, and the remaining arguments are applied to the function for access.
The `Colorer` class manages both the background and foreground colors.
The `Component` must be a container created using `Relay.createContainer`.
The `Easing` module has tons of pre-defined curves, or you can use your own function.
The `PressRect` is an abstract box that is extended beyond the `HitRect`.
The `RCTNavigator` interprets changes in `requestedTopOfStack` to be pushes and pops of children that are rendered.
The `ResponderEventPlugin` will populate it appropriately.
The `ScrollResponder` is a natural place to put this logic since it can support not dismissing the keyboard while scrolling, unless a recognized "tap"-like gesture has occurred.
The `Transaction` class itself will supply one additional automatic invariant for you - the invariant that any transaction instance should not be run while it is already being run.
The `beforeExpr` property is used to disambiguate between regular expressions and divisions.
The `chars` string is truncated if the number of characters exceeds `length`.
The `compositeConnectionProfiles` is the combination of the default connection profile plus any user-created connection profiles.
The `controller` object has two methods.
The `dataBlob` is just an arbitrary blob of data.
The `event.nativeEvent` object passed to this callback will have following fields: - position - index of page that has been selected
The `feedback` field here only has a generated `id`, so is "empty".
The `field` variable is the field being linked (`actor` in the example).
The `flags` string should contain both the short and long flags, separated by comma, a pipe or space.
The `getLineInfo` function is mostly useful when the `locations` option is off (for performance reasons) and you want to find the line/column position for a given character offset.
The `indetify-function` result is text, but passing --json option will eliminate any hh status messages that's irrelevant.
The `initialRoute` will default to the last item in the `initialRouteStack`.
The `jsApiReporter` also receives spec results, and is used by any environment that needs to extract the results  from JavaScript.
The `keyboardWillShow` is called before input focus.
The `main` in `package.json` is rewritten to point to `./lib/main.js` at release time.
The `name` parameter can be either a function or a string.
The `onMoreTasks` constructor argument is used to inform the owner that an async task has resolved and that the queue should be processed again.
The `onResponderReject` won't fire in that case - it only fires when a *current* responder rejects our request.
The `onValueChange` callback will still work as expected.
The `options` argument may include: - width/height (number) - the width and height of the image to capture.
The `postPredicate` is invoked on the way up.
The `prepareVariables` function allows for variables to be modified based on the runtime environment or route name.
The `readyState` must be an accurate representation of the data that currently resides in the supplied `environment`.
The `remote` module provides functions related to communicating with the main Electron process.
The `removedNodes` loop below will actually remove the child.
The `render` callback can return `undefined` to continue rendering the last view rendered (e.g. when transitioning from one `queryConfig` to another).
The `rootNodeID` is sufficient for web `nodeHandle`s, because the position in a tree is always enough to uniquely identify a DOM node (we never have nodes in some bank outside of the document).
The `rowIdentities` is is a 2D array of identifiers for rows.
The `shell` module provides functions related to desktop integration.
The `size` property on a map object is a regular property and not a computed property on the prototype as described by the spec.
The `style` property functions differently from the DOM API.
The `this` value is used if it's the global object to avoid Greasemonkey's restricted `window` object, otherwise the `window` object is used.
The `tokenize` export provides an interface to the tokenizer.
The `type` property is "open", "close", "message", "error" respectively.
The `view` argument can be the literal string `window` if you want to capture the entire window, or it can be a reference to a specific React Native component.
The above call to lstatSync actually updates the value of atime.
The above call to statSync actually updates the value of atime.
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
The above should cover most cases, including BitBucket.
The absence of this method indicates to clients that they should not expose UI that depends on this functionality.
The absolute path to the .js file must be specified via the `file` property.
The activeElement will be null only if the document or document body is not yet defined.
The actual JSHINT function itself.
The actual container is created the first time a container is being constructed by React's rendering engine.
The actual fake scrollbars.
The actual meaning of the value depends on the users' keyboard layout which cannot be detected.
The actual message transformations are tested in the tests from linterMessageToDiagnosticMessage -- no need to duplicate them here.
The actual regexps go on exports.re
The added segments become the head.
The additional transforms applied here are only optimizations.
The affected array is used to mark entries which dominators have to be racalculated because of changes in their retainers.
The algorithm diffs the new data Array by storing a hidden reference to an owner vm instance on previously seen data.
The algorithm for detecting cyclic structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
The algorithm is based on the article: K.
The algorithm used to determine whether a regexp can appear at a given point in the program is loosely based on sweet.js' approach.
The alias has been declared and not assigned: check it was assigned later in the same scope.
The alternative is to run a watcher and always run transpiled code in Atom.
The alternative was to add a *lot* of extra cruft to that file, making it less readable and slower.
The am-pm flag is 0 for AM, and 1 for PM.
The amount by which the scroll view content is inset from the edges of the scroll view.
The amount by which the scroll view indicators are inset from the edges of the scroll view.
The any is just explicit now.
The argument 'writers' is an array of references.
The argument `x` may be specified as a number, in which case the range of values will be split uniformly into the given number of bins.
The argument is used by mocks to assert on what gets mounted.
The array could grow and shrink or be reordered.
The array is in longest-to-shortest order.
The array is in shortest-to-longest order.
The array is needed to remember order.
The array of messages is meant to completely replace any previous messages for this file path.
The array of messages is meant to completely replace any previous messages.
The array of messages is meant to completely replace any previous project-scope messages.
The array this resolves to contains the `nodeKey` of each child
The assert module must conform to the following interface.
The assert module provides functions that throw AssertionError's when particular conditions are not met.
The asset type, one of 'Photos', 'Videos' or 'All'
The assignment is located in a different scope.
The assignment of fine-grained, information-carrying type objects allows the tokenizer to store the information it has about a token in a way that is very cheap for the parser to look up.
The assumption is that looking up astral identifier characters is rare.
The async part of the method declaration lives below on the function expression....
The attached profile handlers will receive this as the second argument.
The await here is subtle, it ensures that the shutdown call is sent on the socket before the socket is closed on the next line.
The babel compiler is in the require cache, but use require so we fail fast if it ever goes missing.
The background color of the navigation bar
The background color of the refresh indicator
The background color of the refresh indicator.
The background color of the status bar.
The bad test run has no ID and so is not added to the TestSuiteModel's summary.
The base URL to be used for any relative links in the HTML.
The base argument can be used to pass a custom (recursive) walker, and state can be used to give this walked an initial state.
The base implementation of `_.assign` without support for multiple sources or `customizer` functions.
The base implementation of `_.clone` and `_.cloneDeep` which tracks traversed objects.
The base implementation of `_.create` without support for assigning properties to the created object.
The base implementation of `_.flatten` with support for restricting flattening.
The base implementation of `_.forOwn` without support for iteratee shorthands.
The base implementation of `_.has` without support for deep paths.
The base implementation of `_.indexOf` without `fromIndex` bounds checks.
The base implementation of `_.indexOf` without support for binary searches.
The base implementation of `_.keys` which doesn't skip the constructor property of prototypes or treat sparse arrays as dense.
The base implementation of `_.property` without support for deep paths.
The base implementation of `_.times` without support for iteratee shorthands or max array length checks.
The base implementation of `_.unary` without support for storing wrapper metadata.
The base implementation of `_.uniqBy` without support for iteratee shorthands.
The base implementation of `baseForIn` and `baseForOwn` which iterates over `object` properties returned by `keysFunc` invoking `iteratee` for each property.
The base implementation of methods like `_.difference` without support for excluding multiple arrays or iteratee shorthands.
The below two are really computed by update() -- but let's have something so that windowTimes() is happy.
The best solution would be to extract all whitespace rules out of parser.
The best way to interact with the Store (if you are a React Component) is to use the decorator in `decorate.js`.
The biggest problem with this is safety.
The binding context object includes static properties for the current, parent, and root view models.
The body part is a "blob", which in React Native just means an object with a `uri` attribute.
The boundaries changed, so all item graphs are stale.
The bridge is responsible for serializing requests between the Agent and the Frontend Store.
The bubble path could be the first common ancestor of all the `changedTouches`.
The buffer position and scroll top of the current location can also be updated in place with attemptUpdate.
The build metadata is not a capturing group, because it should not ever be used in version comparison.
The cache should be cleared before being fully refreshed.
The calculations performed here assume the scroll view takes up the entire screen - even if has some content inset.
The callback by which a provider is notified of text events, such as a file save.
The callback by which a provider is notified that a new consumer has subscribed to diagnostic invalidations.
The callback by which a provider is notified that a new consumer has subscribed to diagnostic updates.
The callback function of `codePath.traverseSegments()` method.
The callback function will be called with `bool supported` as the only argument  NOTE: As of iOS 9, your app needs to provide the `LSApplicationQueriesSchemes` key inside `Info.plist`.
The callback is auto-bound to the instance, and this avoids component modules having to rely on the global Vue.
The callback is called when the full transition is finished.
The callback will be called with a reference to this path object for each element of the array.
The callback will return a promise that resolves with a new callback when the next unit of work is available.
The caller is responsible for cleaning up the drectory.
The caller is responsible for cleaning up the file.
The caller only needs to be notified of changes if they did a "read" operation
The canonical ID of a range customarily excludes the calls
The canonical name for the referenced field in the schema.
The case that deserves a warning is when the container is empty.
The catch here is that IE's selection API doesn't provide information about whether the selection is forward or backward, so we have to behave as though it's always forward.
The cause argument can be null.
The center pixel of the image will be stretched to fill the track.
The challenging case is the Obj-C selector, e.g. 'objectForKey:usingBlock:', which may appear in code as multiple segments separated by other text.
The change handler is delayed to break the race with the `DiffViewModel` subscription.
The changed files status tree takes 1/5 of the width and lives on the right most, while being vertically splt with the revision timeline stack pane.
The changes haven't touched the filesystem, keep user edits.
The character just after the location occupied by oldNode.
The character just before the location occupied by oldNode.
The character stream used by a mode's parser.
The check on response.connection is a workaround for browserify.
The checking context is not initialized yet.
The checkout process could be similar to the GitRemoteResolver by prepending file:// to the source But from my performance measures, it's faster to copy the folder and just checkout in there
The child must be instantiated before it's mounted.
The children property is an OrderedMap instance keyed by child's name property.
The children should be in the tree if we `await` the promise.
The children shouldn't immediately be in the tree if we don't `await` the promise.
The chosen key is intentionally non-unique.
The chunk of new text may span several lines, each of which may contain ANSI escape characters.
The chunks are rendered sequentially using the `InteractionManager` queue, which means that rendering will pause if it's interrupted by an interaction, such as an animation or gesture.
The class contains multiple derived fields.
The class to analyze code paths.
The client seems to want a copy of this Lines object, but Lines objects are immutable, so it's perfectly adequate to return the same object.
The clone methods suck in the new data and compute a diff for each row so ListView knows whether to re-render it or not.
The closeScope is part of it's own scope, we don't want to pop too soon.
The closest enclosing scope that governs this node.
The closest match out of the 216 colors is picked.
The closing comment is removed by ReactMultiChild.
The code below should not be applied to text fields and text areas, hence _isTextEditingElement check.
The code is traversed twice: 1.
The code is written this way to avoid extra allocations
The code path of the upper function scope.
The code paths of nested function scopes.
The color of the refresh indicator.
The color of the textInput underline.
The color of the underlay that will show through when the touch is active.
The color used for buttons in the navigation bar
The color used for the track to the left of the button.
The color used for the track to the right of the button.
The colors (at least one) that will be used to draw the refresh indicator
The colors (at least one) that will be used to draw the refresh indicator.
The command should respond with an array.
The comment is completely contained by this child node.
The committed and filesystem state have changed, notify of override.
The component could have been unmounted by the time the promises are resolved.
The component will receive two props: `navigator` and `navState`.
The component's enqueued batch number should always be the current batch or the following one.
The composite hash is used to: - Avoid printing the same fragment twice, in order to reduce upload size.
The concurrency limit here is kind of magic.
The condition shall be fulfilled in normal case.
The config specifies the path within the payload that contains the connection ID.
The configuration file is a JS file named `rn-cli.config.js`.
The configuration for the file-tree.
The configuration object should be treated as immutable by its owner.
The configuration to use for this tester.
The connection may not be explicit in the fat query, but if it is, we try to validate it.
The connection profiles could change, but the rest of the props passed to the ConnectionDialog will not.
The constructor takes a LinterProvider as an argument, and the resulting LinterAdapter is a valid DiagnosticProvider.
The container might have been scrolled too far for the current elements
The content inset affects the valid area for Toolbar content other than the navigation button and menu.
The context stack is used to superficially track syntactic context to predict whether a regular expression is allowed in a given position.
The context-sensitive hack autocompletions are more relevant than snippets.
The continuation bit tells us whether there are more digits in this value following this digit.
The controller needs at least one test runner to run tests.
The controller should listen for changes rather than be told about them.
The controller uses the currently active file to decide when and what to reveal in the file tree when revealActiveFile is called.
The correct implementation of these is asserted in other tests.
The corresponding configure options aren't enabled through phpize, thus these dummy declarations are required.
The createChild() inherits the configuration instance and many of the options from the instance it was created from.
The current behavior of everything having its own algorithm is bad.
The current clipping API requires x and y to be ignored in the transform
The current composition is stored statically and must not be overwritten while composition continues.
The current head segments are removed.
The current height of the status bar on the device.
The current location can be updated with next/previous which return non-null if the current location has been updated, or null of current is already at the top/bottom of the stack.
The current merged values from the props stack.
The current navigation item is in the center stage.
The current owner is the component who should own any components that are currently being constructed.
The current scale of the scroll view content.
The current search needs to be performed again.
The current selection is outside the bounds of the next profiles list
The current spec forbids arrow generators, so I have taken the liberty of enforcing that.
The current stack should never go beyond the parent event's stack.
The current state of the Flow server in this directory
The current version of jQuery being used
The currently active debug mode names, and names to skip.
The currently open "tab".
The currently selected date.
The data arguments emitted will be passed to the listener function.
The data in the data source is immutable, so you can't modify it directly.
The data stored at the key
The data structure that holds a list of routes and the focused index of the routes.
The date picker mode.
The day this approach stops working, we'll re-evaluate the watcher.
The debouncer relies on `Date.now`.
The debug function is excluded entirely from the minified version.
The default WebSocket's close timeout is 30 seconds.
The default action to be passed into the reducer when getting the first state.
The default background color of the navigation bar
The default bin function will divide the values into uniform bins using Sturges' formula.
The default color used for buttons in the navigation bar
The default configuration options.
The default for flex children is to shrink as needed.
The default implementation traverses all nodes and maps each one to its original value (ie.
The default is to be loose and support older versions for compatibility.
The default length of a jQuery object is 0
The default location of assets bundled with the app, located by resource identifier The Android resource system picks the correct scale.
The default range is the extent (minimum and maximum) of the values.
The default task - build - to keep setup easy.
The default text color of the navigation bar title
The default value function is `Number`, which is equivalent to the identity function.
The default value is 1.0.
The default value is `false`.
The default value is false.
The default value is true for single-line fields and false for multiline fields.
The default value is true.
The default value is white.
The default value is zero, which results in the scroll event being sent only once each time the view is scrolled.
The default value of this property is 0, which means that no badge is displayed.
The default wrapper style for components in the navigator.
The default, SIGTERM, does not reliably kill the flow servers.
The deferred used on DOM ready
The depth is used to batch recursive updates to render markup more efficiently.
The derived fields are calculated from the options, from the configuration values and even from chieldren's properties.
The dialog has been dismissed.
The diff-view package can consume providers that return React components to be rendered inline.
The difference can be null if the entire query is pending.
The direct writing to the this._conf should be avoided.
The directive is a `ExpressionStatement` which has only a string literal.
The dirname of the path to the source map to be applied.
The dirstate gets modified in the middle of an update and at the end, but not the beginning.
The disambiguation code in `parseStatement` will already have parsed the init statement or expression.
The disjunction here is for better compressibility (see removeClass)
The dispatcher is a mechanism through which FileTreeActions interfaces with FileTreeStore.
The disposable to call to remove the message
The dispose method calls `_client.disposeRemoteObject` with the object's id as a parameter.
The distance from the edge of the navigator which gesture response can start for.
The div that contains all of the comments and their controls.
The div that contains the code but excludes the options strip.
The div that contains the comments proper.
The div that wraps the iframe with the code, as well as the drop down menu listing the different files.
The div.highlights element has 0 or more children, each child being a div.highlight with a child div.region.
The document is represented as a BTree consisting of leaves, with chunk of lines in them, and branches, with up to ten leaves or other branch nodes below them.
The domain module is executed on demand
The dot product of a and b, two 3-element vectors.
The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.
The downside would be that if someone added a closer file with fileName to pathToFile (or deleted the one that was cached), then we would have a bug.
The drawer can be locked in 3 states: - unlocked (default), meaning that the drawer will respond (open/close) to touch gestures.
The drawer may still be opened and closed programmatically (`openDrawer`/`closeDrawer`).
The duplication of string literals here is necessary to make the disjoint unions work properly.
The duration of the card animation in milliseconds.
The easiest solution for now is to accept the limitation of disallowing this altogether.
The easiest way to accomplish this is to never delete anything from this table.
The editor path may get changed (empiracally, prefixed with 'private/'), so we 'getPath()' here.
The editor that the result was computed from
The editor was destroyed, but the destroy handler haven't yet been called to cancel the timer.
The effect is that once partition is done, the pivot is in the exact place it will be when the array is put in sorted order, and it will not need to be moved again.
The element in which the editor lives.
The element is in the lower half.
The element is in the upper half.
The elements to wrap the target around
The emitter is designed to be generic enough to support all the different contexts in which one might want to emit events.
The empty .build() here means that an EmptyStatement can be constructed (i.e. it's not abstract) but that it needs no arguments.
The empty name of the main script file is displayed as "(program)".
The empty string is necessary to reset the run of markers.
The emptyLines object needs to be created all the way down here so that Lines.prototype will be fully populated.
The enabled connection will be shown in the debugger UI and all commands will go to the enabled connection.
The enter-key is technically both printable and non-printable and can thus be captured by `keypress`, no other non-printable key should.
The entire cache object 2.
The entire event registration state of the world should be "locked-in" at the time the event occurs.
The entry itself will be put there in onCloseFrame.
The env to use for 'env' entries in the option specs.
The equivalence assertion tests a deep equality relation.
The error message may change.
The error message thrown is suitable for display to a human.
The errorCatcherPlugin injects a series of import statements into the program body.
The event generator for AST nodes.
The event generator for comments.
The event has arrived at the event's currentTarget.
The event is being propagated through the currentTarget's ancestor objects.
The event is propagating back up through the currentTarget's ancestors in reverse order, starting with the parent.
The event must have a "type" attribute which corresponds to a type registered in the constructor.
The event was already handled before `fn` was added to the emitter, so we need to call it on all the existing editors.
The exact behavior triggered will depend on the platform and type of view.
The exact needle element was not found in this haystack.
The example is already open, we should avoid pushing examples twice
The examples above would become 'foo'.
The examples provided by Facebook are for non-commercial testing and evaluation purposes only.
The executor function passed to the constructor of a Promise is evaluated immediately.
The expectation is that N will be much, much greater than K.
The expected use for this is to *first* try `acorn.parse`, and only if that fails switch to `parse_dammit`.
The expected variable names is an array of string.
The export functions in this module mutate a dependency tree, adding items to them.
The exposed Vue constructor.
The expression must be a valid left-hand expression in an assignment.
The extendCallback function is provided when creating a child context or extending a context.
The extension ".cats" will match a file named ".cats".
The failed property is given by a URI with an irrelevant prefix.
The fallback uses a different scoring mechanism, so this will fail if the native module failed to load.
The feature is already disabled.
The feature is already enabled.
The fetched files can now be updated again.
The field names must exist as top-level fields in the fat query.
The file begins with an offset table that contains module ids and their lengths/offsets.
The file descriptor to write the `debug()` calls to.
The file is deleted in the current dirty status.
The file is likely untitled.
The file must be currently open in Atom, and the changes will be applied to the buffer but not saved.
The file name is dummy here.
The filename can't end with a dot because this is known to cause issues in Windows See: http://superuser.com/questions/230385/dots-at-end-of-file-name
The filename of the source file.
The final bounding box will be the inverse of this gap.
The final output of the value is unchanged.
The first ancestor Path whose value is a Node distinct from this.node.
The first and only argument is a Date object representing the new date and time.
The first argument is the value to be marshalled or unmarshalled.
The first bit is the signed bit, i.e. tells us whether or not the number should be positive or negative.
The first caller of `popInitialNotification` will get the initial notification object, or `null`.
The first character is a number, it might be a substitution index.
The first class data structure for NavigationContext to manage the navigation stack of routes.
The first element in info will be for the declaration itself, the second will be for its direct semantic parent (if it exists), etc.
The first element of the array is the .eslintrc in the same directory.
The first ensures that when we uglifyify, we have the right conditions to exclude requires.
The first git call fetches the tags for the provided source
The first insertion forces buffer tokenization and is much slower than subsequent mutations.
The first level of defense is to watch for the creation and deletion of the wlock and ignore events accordingly.
The first line is a JSON blob indicating the new cursor position.
The first line mapping in our package is basically the base64vlq code for zeros (A).
The first line mapping in our package is the base64vlq code for zeros (A).
The first line must be empty or start with * for a docblock.
The first line need not start with '*'.
The first line of the string should be the file path.
The first method defines the way we resolve an ID to its object.
The first part is blank if the path is absolute.
The first result should be NSObject, with an annotated type.
The first route is initially rendered using a different style than all future routes.
The first segment in the list should be cursors beginning at the top of the range (i.e. first(N)).
The first two steps are done by computing finite-differences: 1.
The fix is not applied until applyFixes() is called.
The fixtureName parameter must contain a directory named .hg-rename.
The flag is initialized when got at the first time.
The flag to indicate that the source code has Unicode BOM.
The flow is as follows:  1.
The flush function processes all tasks that have been scheduled with `rawAsap` unless and until one of those tasks throws an exception.
The following Regular Expressions can be used for tokenizing, validating, and parsing SemVer version strings.
The following are all specified in the HTML config already so we exclude here.
The following are all valid all will output this way when `--help` is used.
The following are exposed for advanced usage / plugins
The following code is a bit tricky to avoid code branching
The following default field values are used in the payload: important: false parsedOk: true implicit: false disabled: false
The following element types will not be recursed into during binding.
The following function is only used internally by this default provider.
The following functions can run at two different times: The first is when the whole array is being updated directly from this binding handler.
The following functions define the column width of an ISO 10646 character as follows: - The null character (U+0000) has a column width of 0.
The following generated structure is used under the MPL version 2.0 See public-suffix.txt for more information
The following is the 3.x allBindings API
The following keys are optional in `RemoteConnectionConfiguration`.
The following permissions are supported:  - `alert` - `badge` - `sound`  If a map is provided to the method, only the permissions with truthy values will be requested.
The following post provides a lot of thoughts into how to build this loop: http://gafferongames.com/game-physics/fix-your-timestep/
The following process is executed only when there is the `finally` block.
The following regular expressions will be used to split an object-literal string into tokens These two match strings, either with double quotes or single quotes
The following solution - ignore the breakpoint and resume the execution - should be good enough in most cases.
The following two fields are necessary to compute the Regex tokens.
The following two methods are the only places we need to integrate Bootstrap or jQuery with the components lifecycle methods.
The following two options specify which grammars the provider is interested in.
The following types of arguments are non-core: - Range calls such as `first` or `find` on connections.
The following values are invalid.
The following values work across platforms: - default - numeric - email-address
The following would normally be higher up the stack.
The for..of loop iterates in insertion order.
The forced null value here is compatible with the overridden definition of the "id" field in the Function interface.
The foreground color of the spinner (default is gray).
The form must be fully filled-out.
The format loop is as follows: original rgb(a) hsl(a) nickname (if the color has a nickname) if the color is simple: - shorthex (if has short hex) - hex
The format of this stream is
The foundational matcher ensures that elements are reachable from top-level context(s)
The fragment pointers are of the same shape as the `_fragmentPointers` property.
The frameMirror and scopeMirror can be accessed only while paused on the debugger.
The frequency of the events can be controlled using the `scrollEventThrottle` prop.
The fromString function should be used to create new Lines objects.
The front-end therefore needs to check for `consts.inspected` on received objects, and can thereby display object proxies and inspect them.
The full-screen overlay that ensures we don't lose track of the mouse while dragging.
The function does not return the proxy module directly, but rather returns a 'factory' method that should be called with a ClientComponent object.
The function is regular expression based for speed reasons.
The function is typically called after the user changes the window size.
The function passed takes a callback to start the animation which should be run after this onPress handler is done.
The function returns null if and only if v is on the highest level of its subtree.
The function sets the directories (terminated by a separator) as keys in the `directories` Map, and bumps the value accordingly.
The function to call when the underlined text is clicked.
The function will be called after it stops being called for N milliseconds.
The function will return all the default configuration functions overriden by those found on `rn-cli.config.js`, if any.
The function works for sorted array.
The fundamental problem is that the way a menu item is notified that it was selected is that the Atom command associated with the item is fired.
The gap string contained something other than whitespace.
The general approach is to iterate backwards, checking key characters.
The generate SourceNodes we need a code range.
The generated code Processed fragments are removed from this array.
The generated file this source map is associated with.
The gesture has enough velocity to complete, so we transition to the gesture's destination
The gesture may have been detached while responder, so there is no action here
The gesture to navigate backward.
The gesture velocity is so slow, is "not moving"
The given byteOffset must be a multiple of the element size of the specific type, otherwise an exception is raised.
The given file must be in the related files array.
The given node has the `alternate` node.
The global config is WAY too much.
The global store of un-instantiated modules
The global transform runs on deps.
The goal here is to simulate the "file close" step happening so slowly that the whole close/rename process could finish before the file is actually closed (and thus buffers truely flushed to the OS).
The goal is to check whether or not AST was modified when running the rule under test.
The grammar registry is cleared automatically after Atom 1.3.0+
The group where the photos will be fetched from.
The guessed name for anonymous functions.
The handler will be invoked with a hex string representing the deviceToken.
The handler will be invoked with an instance of `PushNotificationIOS`.
The hash being a unique property of our choosing that we associate with the object.
The head segments are the path of the `else` block here.
The head segments are the path of the `if` block here.
The head segments are the path of the `if` block.
The head segments are the path of the left-hand operand.
The head segments are the path of the right-hand operand.
The head segments are the path of the test expression.
The hidden input field that we use to hold the focus so that we can detect shortcut keypresses.
The higher this is, the more precedence the provider gets.
The highlight (and cursor on ios) color of the text input
The highlighted state of a row can be reset by calling highlightRow(null).
The hold can be released by calling the returned callback.
The host server is unreachable, could be in a VPN.
The how parameter can be "smart", "add"/null, "subtract", or "prev".
The id and name fields are used by Esprima.
The id field should not technically be optional in the Esprima AST format, but it must be optional in the Babel/Acorn AST format.
The id of a profile is its index in the list of props.
The idea is to track separately the objects owned by the page and the objects owned by debugger.
The identifier of this code path.
The ids are generated on the client API side and must be unique, so the check below shouldn't be hit unless someone is bypassing the API.
The iframe that holds the code (from Sourcerer).
The image will be stored in a temporary file that will only exist for as long as the app is running.
The image will not be scaled up.
The immediate parent Path of this Path.
The immutable route stack.
The implementation of "doGet" is simpler, follows redirects, and has more features than "get".
The indentation amount depends on previous lines.
The index in `props.values` of the segment to be (pre)selected.
The index points to the opening quote.
The initial code path segment.
The initial layout isn't measured.
The initial list of connection profiles that will be displayed.
The initial render is synchronous but any updates that happen during rendering, in componentWillMount or componentDidMount, will be batched according to the current batching strategy.
The initial state at startup.
The initial value can be a boolean or object so that's why it's forced to be a string.
The initialState is that the reducer will use when there is no previous state.
The initialization sequence occurs as follows: - the constructor is called - onStatus is called to hook up event handlers - initial breakpoints may be added here.
The input blob can be as simple as an array of strings, or an object with rows nested inside section objects.
The input field is not shown, but is a way for us to bring focus back to a place where we can detect keypresses.
The inputs to pre-fill the form with.
The instance here is TopLevelWrapper so we report mount for its child.
The instance is now retained.
The intent of this module is to interoperate with OpenSSL only, specifically the node crypto module's `verify` method.
The intention of this test case is not clear to me.
The interpretation of a dot depends on whether it is followed by a digit or another two dots.
The interval at which minutes can be selected.
The invariant message will be stripped in production, but the invariant will remain to ensure logic does not differ in production.
The inverse of countColumn -- find the offset that corresponds to a particular column.
The issue leads to call frames belong to the same function invocation being split apart.
The items are not rendered directly
The items in this array are fetchable and may have been filled in from other sources, so check them all.
The items in this array are not fetchable by ID, so nothing else could have fetched additional data for individual items.
The items in this declaration are available off of `require('atom')`.
The iterable is expected to be a collection of pairs.
The iteration stops once a given limit of nodes (both directories and files) were traversed.
The iterator protocol depends on `Symbol.iterator`.
The jQuery object is actually just the init constructor 'enhanced' Need init if jQuery is called (just allow error to be thrown if not included)
The key concept is that marshalling functions can be recursive, calling other marshalling functions, ending at the primitives.
The key contains one or more space characters.
The key is the key in the state object that the value should be mapped from.
The key will persist until the initial stack and its derived stack no longer contains this route.
The keys are expected to be directory paths (terminated by a separator) and the values are the number of times this directory path has been 'added' to this Map.
The keys are not important.
The ko.bindingContext constructor is only called directly to create the root context.
The labels for the control's segment buttons, in order.
The last case is where we split the previous run.
The last case, 'edit', is already filtered out above, but Flow doesn't know that.
The last column is inclusive.
The last comment that was selected.
The last index that native has sent confirmation of completed push/pop for.
The last line must be empty (leading whitespace before */ is allowed, though).
The last line of a file might not have a newline.
The last location update we've seen.
The last mapping for each line spans the entire line.
The last segment broken may be an empty string.
The last segment in the list should be cursors at the bottom of the range (i.e. last(N)).
The last status to merge is the dirty filesystem status.
The last two arguments are optional.
The latest version of Safari supports quoted cookie values, though.
The layout does not reflect the element as seen by the user, rather it reflects the position within the layout system, before any transforms are applied.
The layout of the containing view of the scenes.
The leaving child has been removed
The leaving-paths are paths from `return` statements and `throw` statements in a `try` block or a `catch` block.
The left/right label data are the same, so a before/after label can be replaced by an on-bar label.
The leftToken should be the last closing parenthesis, and the operatorToken should be the token right after that.
The leftmost pixel of the image will be stretched to fill the track.
The legacy API for Gradients allow for the bounding box to be used as a convenience for specifying gradient positions.
The legacy internal implementation provides "timeStamp", which has been renamed to "timestamp".
The length of the stack can be either even or odd, depending on whether or not we have a name for the root value.
The list of all possible AST node types.
The list of connection profiles that will be displayed.
The list of key/handler pairs that we will return
The list of original sources.
The loader has been reset.
The loading map being empty is a heuristic for when loading has completed.
The location is at its name string in a `/*global` comment.
The location of `boot.js` can be specified and/or overridden in `jasmine.yml`.
The location of the .flowconfig where these messages came from.
The location of the .hhconfig where these messages came from.
The location of the annotation.
The location of the report is always `eval` `Identifier` (or possibly `Literal`).
The location will be the start of the property or the callee.
The lock being created is a definitive start to a Mercurial action/arc build.
The lock being deleted is a definitive end to a Mercurial action/arc build.
The logic below matches latest versions of IE, Firefox, Chrome and Safari on some old platforms.
The logic there is setup to create a new buffer when there is a cache miss.
The loginUser will be used to authenticate before adding newUser.
The loose parser might parse badly indented code incorrectly, so **don't** use it as your default parser.
The lstat endpoint is the same as the stat endpoint except it will return the stat of a link instead of the file the link points to.
The main init sequence.
The main public entry point.
The main purpose of reusing them is to save allocations.
The main reason to extract a single pass is so that we can track in the system trace
The major downside of using request instead of our hand-rolled implementation is that it has a lot of dependencies of its own.
The manager also allows two callback to be passed.
The map type to be displayed.
The mapping object should have the following properties:  - generated: An object with the generated line and column positions.
The mappings are sorted by generated position.
The marker will be destroyed automatically when its associated TextBuffer is destroyed.
The markup is expected to render into a list of root nodes.
The markup must render into a single root node.
The marshaller will be called to transform the type before sending it out onto the network, while the unmarshaller will be called on values incoming from the network.
The match is an array that also has an index property, something that Flow does not appear to understand.
The matching of C against the element's language value is performed case-insensitively.
The math is pretty obscure, but this cool website has nice visual illustrations of what they represent: http://xaedes.de/dev/transitions/
The maximum allowed zoom scale.
The maximum number of characters to display in a URL.
The maximum number of elements this CircularBuffer can hold.
The maximum reconnect time is 5 seconds - advance clock to sip the reconnect time.
The maximum reconnect time is 5 seconds.
The message array may have more than one item.
The message channel technique was discovered by Malte Ubl and was the original foundation for this library.
The messages we're receiving from the worker process.
The messages will be cached and sent in order.
The method only receives the new child instance and the retrieval in from the map is performed by the child's name.
The method receives two predicates The first is invoked upon descent and with its return value controls whether need to traverse deeper into the tree.
The method updates the child to the new node (which create a new parent instance) and call recursively for the parent update.
The methods described here are available on most of the default components provided by React Native.
The minimal observed height makes a good default
The minimum allowed zoom scale.
The mixin will invoke these if they are defined on your component.
The mode given as the base argument takes care of most of the normal mode functionality, but a second (typically simple) mode is used, which can override the style of text.
The module id for the startup code (prelude, polyfills etc.) is the empty string.
The most common use-case is for tabs, where no transition is needed
The most important side effect is the `touchableHandlePress` abstract method invocation that occurs when a responder is released while in either of the "Press" states.
The most recent save request should trigger another change event, so we'll check for conflicts when that happens.
The motivation behind this approach is to provide a total order on menu item ordering rather than a partial order.
The name by which this field's results should be made available to the application.
The name for the field when serializing the query or interpreting query responses from the server.
The name indicates the start state and the transition being tested.
The name is in scope and defined in the current function.
The name is not defined in the function.
The name of the current property is always the penultimate element of this.stack, and always a String.
The name of the property of parentPath.value through which this Path's value was reached.
The name which Relay internals can use to reference this field, without collisions.
The named reference is known as a "ref".
The nanosecond component overflowed, so carry to the seconds field.
The native Promise implementation throws the following error: ERROR: Event loop not supported.
The native XMLHttpRequest in Chrome dev tools is CORS aware and won't let you fetch anything from the internet
The native scroll event is provided.
The navigation index that we wish to push/pop to.
The navigation state of the containing view.
The navigation view is initially not visible on the screen, but can be pulled in from the side of the window specified by the `drawerPosition` prop and its width can be set by the `drawerWidth` prop.
The navigation view that will be rendered to the side of the screen and can be pulled in.
The negating ANSI code for the rendering modes.
The new OpenSSH internal format abuses PEM headers
The new registry is intended to be analyzed to determine whether its rules should be disabled or set to warning.
The new scope is true if the nested function is strict mode code.
The new segments don't have connections for previous segments.
The new segments is always unreachable.
The new tab opens instantly, so this is no longer needed.
The newNode is assumed to be prevNode after some manipulateion done to it therefore they are assumed to belong to the same parent.
The next `test` node is processed in this path.
The next case is where we are at the end but cannont extend.
The next profiles list is longer than before, a new one was added
The next request should work as expected.
The node being currently traversed can be obtained by calling .traversedNode() .next() returns a promise that is fulfilled when the traversal moves on to the next directory.
The node child keys may either be available immediately (cached), or require an async fetch.
The node is hidden - unselect all nodes under it if there are any
The nodes have different types, and at least one of the types is not a subtype of the Expression type, so we cannot safely assume the nodes are syntactically interchangeable.
The non-equivalence assertion tests for any deep inequality.
The normal React way to do it won't work since the child will have already been removed.
The nth child of a DOMish component instance that is not falsy.
The number of elements contained in the matched element set
The number of messages outstanding
The number of photos wanted in reverse order of the photo application (i.e. most recent first for SavedPhotos).
The object schema could have multiple independent properties.
The offset fields are 0-based, but we use 1-based indices when encoding/decoding from VLQ.
The offset starts at 0x10000, and each pair of numbers represents an offset to the next range, and then a size of the range.
The old and new text editor contents use offsets to create a global line number identifier being the line number with offset.
The old path, line, etc.
The one method, `presentUI` is called by `Main` to attach the UI into the DOM.
The only argument is an object with the following properties:  - line: The line number in the generated source.
The only argument is an object with the following properties:  - source: The filename of the original source.
The only argument is the url of the original source file.
The only argument that is passed to the callback is the position of the action in the actions array.
The only case we haven't checked yet is keys that are in two but aren't in one, which means they are different.
The only exposed method is 'clearPassword'.
The only job of react-native-cli is to init the repository and then forward all the commands to the local version of react-native.
The only other requirement is that the `pageX, pageY` values be in the same coordinate system that events' `pageX/Y` are reported.
The only parameter is a raw source map (either as a JSON string, or already parsed to an object).
The only parameter is the raw source map (either as a JSON string, or already parsed to an object).
The only possible recovery here is reconnecting a new client, but the failed to serialize events will be missed.
The only reason to modify this file is to add more warnings and troubleshooting information for the `react-native init` command.
The only requirement of your class specification is that you implement a `render` method.
The only seemingly possible way to avoid erroring is to access a property that typically works for non-anonymous divs and catch any error that may otherwise arise.
The only thing that matters for this function is version number.
The only way to do this properly would be to shell out to git-check-ref-format, and as this is a fast sync function, we don't want to do that.
The operation field provides additional context.
The optimistic response may be a subset or superset of the actual response payload.
The option object of `codePath.traverseSegments()` method.
The optional arguments helps prevent the need to bind in many cases.
The optional boolean specifies whether the listener captures events.
The optional flag indicates whether parsing should use strict enforcement of the version draft-cavage-http-signatures-04 of the spec or beyond.
The optional string specifies the priority.
The options to configure a CLI engine with.
The order is important.
The order of iteration should follow the order of assignment, which happens to match numerical index order, but we don't rely on that.
The origin URL of this repository.
The original code assumed there will never be a package.json outside of the eslint workspace, but that cannot be guaranteed.
The original query that prompted this result, e.g. to highlight it in the UI.
The original state should have been restored
The original text source code.
The other editor isn't yet attached, while both editors were already in sync when attached.
The other important side effects are the highlight abstract method invocations (internal callbacks) to be implemented by the mixer.
The other resolvable query will resolve imminently and call `readyState.update` instead.
The output format was changed to support more detailed failure information.
The output won't be in the language's grammar.
The overlaid div used as a grab handle for sizing the code/comment panes.
The overlay decoration only works through the view registry.
The owner of the BufferedProcessStore should subscribe to this and handle any errors.
The package expects icons to have a `data-name` attribute with the name of the file and for the list item in the tree to have the class names 'entry', 'file', and 'list-item'.
The padding-right forces the element to have a 'border', which is needed on Webkit to be able to get line-level bounding rectangles for it (in measureChar).
The pane item specific properties.
The panel should be visible because of the last serialized state, initialize it immediately.
The parallel paths are used as leaving-paths.
The parameters are sorted by name, using ascending byte value ordering.
The parameters in human-readable form for use on the right label.
The parameters turned into snippet strings.
The parent directory or something it symlinks to must eventually be in a folder that npm maintains.
The parent fork context has two segments.
The parent forking context.
The parent of `node` might be `CallExpression`.
The parsed AST for the source code.
The partitioning chooses a pivot between `p` and `r` and moves all elements that are less than or equal to the pivot to the before it, and all the elements that are greater than it after it.
The pass through stream is from readable-stream and is thus a current streams3 implementation that is free of these bugs even on 0.8.
The passed `inst` can be a composite.
The passed in `el` can be a selector string, an existing Element, or a DocumentFragment (for block instances).
The passed-in node has been detached from the container it was originally rendered into.
The path does short-circuit if false.
The path does short-circuit if true.
The path that relative sources in the SourceMapConsumer should be relative to.
The path to private key
The path to the directory where the .flowconfig is -- i.e. the root of the Flow project.
The paths are returned in absolute from code analysis tools but github works on paths relative from the root of the project.
The paths of the stripped out objects are appended to the `cleaned` list.
The percent of a row that must be visible to consider it "viewable".
The picker is a controlled component.
The picker will conform to whatever width is given, but we do have to set the component's height explicitly on the surrounding view to ensure it gets rendered.
The plugin names must be in the ordering injected by `injectEventPluginOrder`.
The position of the next task to execute in the task queue.
The position should be `after` if the offset is at the end of the file.
The positions are in text editor screen coordinates and are rounded down to the last position on each line.
The positon is still away from scene's index.
The prefix a URI must have for `RemoteDirectoryProvider` to try to produce a `RemoteDirectory` for it.
The prefix is required to store "__proto__" in a object-based map.
The presence of `rangeInfo` indicates that we are traversing connection metadata fields, in which case `visitField` will ensure that `edges` and `page_info` are kept when necessary.
The pretty printer allows a dangling Comment node to act as a Statement when the Comment can't be attached to any other non-Comment node in the tree.
The prevInput test prevents this from firing when a context menu is closed (since the resetInput would kill the select-all detection hack)
The previous and the next sibling properties are too set when a child is assigned to its parent.
The primary difference between this and `createForFields` is whether or not the connection edges are re-fetched.
The primary purpose of this method is to "tap into" a method chain, in order to perform operations on intermediate results within the chain.
The print function is the right choice because it gives us the opportunity to reprint such nodes using their original source.
The priority is ignored for style(string, null).
The priority is ignored.
The private script context should be hidden behind an experiment.
The process is killed when there are no more subscribers.
The process should use its ordinary stderr for errors.
The profile passed to the function is the profile that the user has just created.
The progress bar style.
The progress value (between 0 and 1).
The progressive index of the containing view's navigation state.
The project paths may have changed during the delay time.
The project was removed from the tree.
The projections must have mutually exclusive clip regions on the sphere, as this will avoid emitting interleaving lines and polygons.
The properties of this type match the properties of the `atom` global.
The property was deleted, so remove this tree element.
The props will be merged in the order the `StatusBar` components were mounted.
The provided forEachFunc(child, index) will be called for each leaf child.
The provided mapFunction(child, index) will be called for each leaf child.
The provided mapFunction(child, key, index) will be called for each leaf child.
The proxyElement has been deleted, no need to remove listener.
The public lifecycle API includes events for keyboard interaction, responder interaction, and scrolling (among others).
The purpose is to make the initial prop values available inside `created` hooks and `data` functions.
The query will be run for each arg.
The range of the temporary ports for connection are all taken, This is temporal with many http requests, but should be counted as a network away event.
The range of this Marker doesn't matter, only the line it is on, because the Decoration is for a Gutter.
The range returned should just be the range of the original text + 1 for the colon.
The range returned should just be the range of the original text.
The range(s) to underline to provide as a visual cue for clicking.
The ranges returned should be all the ranges of all the segments, including the colons.
The read would fail since `name` is missing from cached data.
The read-only commands can be executed in parallel, but the rest must be executed serially.
The readdir endpoint accepts the following query parameters:  path: path to the folder to list entries inside.
The ready event handler and self cleanup method
The reason being is that we simply want to support ES3 environments which doesn't implement computed properties.
The reason being is we store a "hash" on the object for fast access to it's place in the internal map entries.
The reason for not requiring a module top-level is to lazy load it.
The reason we want to know the amount a wheel event will scroll is that it gives us a chance to update the display before the actual scrolling happens, reducing flickering.
The reason why we need this two-phases process is to deal with composite props such as transform which can receive values from multiple parents.
The reasoning: It's strange to get an `onMoveShouldSetResponder` when you're *already* the responder.
The recommended way of destroying a decoration is by destroying its marker.
The ref can change if you swap the keys of but not the refs.
The ref conceptually lives on the element.
The reference is every reference of the upper scope's variable we are looking now.
The refresh is serialized, so it is safe to call it multiple times in succession.
The regexp is used much further down.
The region is defined by the center coordinates and the span of coordinates to display.
The region to be displayed by the map.
The relative require() itself.
The remaining code is added without mapping
The remaining middle components should all be completed messages.
The remaining view should be activated.
The remote server command will only be saved if the user changes it from this default.
The remove actions need to happen in the opposite of their normally defined order.
The rendered element will be initialized as unchecked (or `defaultChecked`) with an empty value (or `defaultValue`).
The rendered element will be initialized with an empty value, the prop `defaultValue` if specified, or the children content (deprecated).
The replaced method (if any) is returned for easy wrapping.
The repo type is not supported.
The reprinting code leaves leading whitespace untouched unless it has to reindent a line, or you pass false for this option.
The require parameter is needed because require is bound differently in each file, and we need to execute this in the caller's context.
The require profiling is really noisy during tests.
The requisite check alone could cause these fields to be added back when not needed.
The resolvedType will already have been checked to be a valid alias type.
The response data is expected to be an array of item objects.
The response data is expected to be array of edge objects.
The response data is expected to be scalar values or arrays of scalar values.
The rest ConnectivityStates are hidden by the Android API, but can be used if necessary.
The result can be null if `node` only contains empty fragments or fragments that only contain empty fragments.
The result can be nullish if a mock or a custom function is used.
The result is not valid JSON but it's what we get.
The result is under this root, but not the root itself - skipping it and searching recursively
The result of the dependency extraction is an de-duplicated array of dependencies, and an array of offsets to the string literals with module IDs.
The result should be HTML-escaped before insertion into the DOM.
The result that we publish when an editor event is emitted
The resulting component re-renders on updates to the observable.
The resulting data structure is an array.
The resulting promise will resolve on upload.
The return value has a flag that whether or not `this` keyword is valid.
The return value must NOT be mutated, and should be treated as an immutable borrow.
The return value of each callback will be passed in as an argument to the next callback.
The return value will be used as the initial value of `this.state`.
The return value will not be consistent across nodes or browsers, but two identical selections on the same node will return identical objects.
The return value will only ever equal itself, and will not equal the return of any subsequent call of this function.
The return values are unbounded, unlike `getScrollPosition`.
The return values of the following functions must be JSON-serializable so they can be sent across a process boundary.
The returnType is not wrapped in a TypeAnnotation, so the colon needs to be added separately.
The returned Promise is resolved with null if another showPanel() gets called while this.panel(panelName) Promise is in flight.
The returned Promise will resolve when results have been published.
The returned RelayMutationTransaction can be committed or rolled back at a later time.
The returned `trackedNode` is never tracked directly: instead it serves as an indicator to `diffConnection` that the entire connection field must be tracked.
The returned completions may have unrelated results, even though the offset is set on the end of the prefix.
The returned composite link function, when called, will return an unlink function that tearsdown all directives created during the linking phase.
The returned object contains the DOM node, this map, and information about line-wide styles that were set by the mode.
The returned observable emits updates as the data changes over time.
The returned promise will resolve when the request completes (or reject on failure).
The returned value does not conform to the GUID standard, but should be globally unique in the context of the browser.
The revisions haven't changed if the revisions' ids are the same.
The right-associative version of reduce, also known as `foldr`.
The rightmost pixel of the image will be stretched to fill the track.
The root directory that is opened in Atom, which this Repository serves.
The root is a Pane (it isn't split yet).
The root is a PaneAxis (it's already split).
The roundtrip delay d and system clock offset t are defined as:
The same TextEditor must be returned to prevent Atom from creating multiple tabs for the same file, because Atom doesn't cache pending opener promises.
The same as NuclideRemoteConnectionParams, minus `remoteServerCommand`.
The same would be true for `ReactNative`, but we must maintain a mapping that we can send efficiently serializable strings across native boundaries.
The scene isn't focused.
The scheduling function is invoked with a callback that will execute the next unit of work.
The scope descriptor marks the text with semantic information, generally used for syntax highlighting.
The script should be in infinite loop.
The script who simluate behavior of scribe_cat.
The second argument is the actual type object that represent the value.
The second argument is the type object, which encodes all of the information required to marshal / unmarshal the value.
The second defines the way we resolve a node object to its GraphQL type.
The second is when an observable value for a specific array entry is updated.
The second responds to changes in the model value (the one associated with the checked binding)
The selected key is a node's index modulo the amount of the rendered nodes.
The selection changes after keydown and before keyup, but we check on keydown as well in the case of holding down a key, when multiple keydown events are fired but only one keyup is.
The semihidden textarea that is focused when the editor is focused, and receives input.
The separators above and below will be hidden when a row is highlighted.
The serialization key is derived from all calls/values and hashed for compactness.
The serializer function keeps state inside the returned function and so far I'm not sure how to not do that.
The server is asking for replies to the given prompts for keyboard-interactive user authentication.
The server is started in a separate process than the caller's.
The service path could be in one of following forms: 1.
The set of transforms to blacklist.
The setState call is queued and then executed as a second pass.
The shasum's already been checked, but we haven't ever had a peek inside, so we unpack it here just to make sure it is what it says it is.
The side effects after this try/catch capture the purpose of this test.
The sign of `-0` is preserved.
The simplest use case is to plop down a `TextInput` and subscribe to the `onChangeText` events to read the user input.
The size (dimensions) of the cropped image, specified in the original image's coordinate space.
The size of the LoadingSpinner.
The size of the buttons within the group.
The sole purpose of wrapping the task is to catch the exception and recycle the task object after its single use.
The source can't be part of the message because we want to be able to populate a filter menu before we even have any messages.
The source code split into lines according to ECMA-262 specification.
The source of this file and that of plugins is used as part of the hash as a way to version our transforms.
The sourceLoc can stay the same because the contents of the targetLoc have not changed.
The spans will have null for their from/to properties when the marker continues beyond the start/end of the line.
The spec defines that the filename must be in quotes, though a wide range of servers do not follow the rule
The spring has finished catching up to a gesture in progress.
The spring is at zero, so the gesture is already complete
The stack maintains a current location which may be any element in the stack, not just the top.
The standard, styleable ANSI colors.
The start/move should occur on the original responder if new one is rejected
The starting position of invalid leading comments.
The starting position of invalid trailing comments.
The stat endpoint accepts the following query parameters:  path: path to the file to read
The state have changed since the update started, and there must be another scheduled update.
The state is encoded in 3 booleans: enabled: is there an enabled connection break: are there any disabled connections in break status running: are there any connections in running status
The status is fetched by merging the changes right after the `compareCommitId` if specified, or `HEAD` if not.
The status update stream will be completed when a root is disposed, so there is no need to use takeUntil here to truncate the stream and release resources.
The string that will be rendered before text input has been entered
The string to show in generated help for options of this type.
The structural type of the return here is pretty obvious.
The style name `name` should be logical (no hyphens), as specified in `CSSProperty.isUnitlessNumber`.
The style of the scroll indicators.
The stylesheets will be loaded asynchronously, so there might be a slight visual glitch if the widget is drawn before the stylesheets are loaded.
The subscribe function will put the given callback and the returned disposable in the variables above for inspection.
The subscription may have been removed during this event loop.
The subscription should fail again, but the children should be refetched and match the changed structure (i.e. include the new 'bar.baz' file).
The subtasks will be run in order so we can take advantage of that and only run build-modules once.
The subtree of data from this record contains partial data.
The subviews must also have overflow: hidden, as should the containing view (or one of its superviews).
The summary output we get should be unfiltered, showing everything installed, so we clear these options before calling `ls`.
The supplied `callback` will be invoked whenever data returned by the last invocation to `resolve` has changed.
The supplied `node` must be flattened (and not contain fragments).
The supplied mapping may contain multiple field names.
The symptoms were that if your mouse is not moving over something contained within that mount point (for example on the background) the top-level listeners for `onmousemove` won't be called.
The synchronous exist check is used to avoid the race condition of fast updates, when the watcher is called twice as the file is created/removed.
The system is best designed when setNativeProps is implemented.
The system should check `isPersistent` to determine whether the event should be released into the pool after being dispatched.
The systrace module will expose itself on the require function so that it can be used here.
The tag will be used for the clone call.
The tags package looks in the directory, so give it a sample file.
The target or something it symlinks to must eventually be in the parent or something the parent symlinks to
The temp directory will be deleted automatically when the current process exits.
The test file doesn't need any special flags.
The test function is applied sequentially to each element in items until one returns a Promise that resolves to a non-null value.
The test only needs to verify that CLIEngine receives the correct opts.
The tests below break the MarkerTracker abstraction so that they can ensure that disposal happens properly.
The tests for the nuclide-atom-script package cannot live in pkg/nuclide-atom-script/spec because nuclide-atom-script specifies a custom test runner as part of its implementation in its package.json.
The text 'OK' should be probably localized.
The text can contain spaces, but leading or trailing spaces are skipped.
The text color of the navigation bar title
The text color of the placeholder string
The text is set via diffs to keep the cursor position when updating the file that is already active.
The text node might have been inlined if it was short, so try to find the parent element.
The text that's read by the screen reader when the user interacts with the image.
The textarea is kept positioned near the cursor to prevent the fact that it'll be scrolled into view on input from scrolling our fake cursor out of view.
The texture can just be re-used and re-composited with different parameters.
The thing that currently has focus is not a text editor.
The third array item flags that the option name is "raw" (non-i18n-izable).
The three productions have the relationship:
The threshold (in pixels) to finish the gesture action.
The threshold (in pixels) to start the gesture action.
The threshold to invoke the `onNavigate` action.
The timer will continue to fire until callback returns true.
The tint color of the progress bar itself.
The tint color of the progress bar track.
The title and subtitle are expanded so the logo and navigation icons are displayed on the left, title and subtitle in the middle and the actions on the right.
The title displayed in the nav bar and back button for this route
The title displayed under the refresh indicator.
The title of the quick-open tab that exclusively contains results from this provider.
The title will be updated in onattach.
The toType function should of course be idempotent.
The toggle command first negates this, and then if this is true shows a datatip, otherwise it hides the current datatip.
The toggle command first negates this, and then if this is true shows a type hint, otherwise it hides the current typehint.
The toolbar makes an effort to keep track of which BuckProject to act on, based on the last TextEditor that had focus that corresponded to a BuckProject.
The top node is always a branch node, and is the document object itself (meaning it has additional methods and properties).
The top-left corner of the cropped image, specified in the original image's coordinate space.
The top-level component (defined by a shell) is generally responsible for creating the Store connecting it up to a bridge, and putting it on `context` so the decorator can access it.
The top-level value will be displayed, and it can be expanded to reveal its children.
The top-most container isn't resizable so exclude that immediately.
The total time for this node has already been accounted for iff one of it's parents has already been visited.
The total time of this ancestor is accounted for if we're in any form of recursive cycle.
The touch handling system considers one or more active touches to be an 'interaction' and will delay `runAfterInteractions()` callbacks until all touches have ended or been cancelled.
The trailing space is needed to prevent the trailing backslash that is part of the build dir flags (CFLAGS_BD_XXX) from being seen as a line continuation character
The transition between pages will be *not* be animated.
The transition between pages will be animated.
The transition effect when showing and hiding the status bar using the `hidden` prop.
The transpiled version of "Foo" would've looked like this:
The traversal is a map operation from `RelayQuery` nodes to nodes.
The tree is used both to go from line numbers to line objects, and to go from objects to numbers.
The tricky part is the 'jumps', where RTL and LTR text touch each other.
The two 'H' nodes have the same label but both should render and be part of the length.
The type gymnastics here are so `fn` can be garbage collected once we've used it.
The type is `valid` or `invalid`.
The type of the report is `CallExpression` if the parent is `CallExpression`.
The type provided to service consumers.
The type signature of this function cannot be expressed in Flow.
The typechecks transform has a static-only mode that doesn't actually perform a transform but validates the types.
The types are slightly different, so we need to copy to make Flow happy.
The underlying switch might have changed, but we're controlled, and so want to ensure it represents our value.
The upcoming format changes described elsewhere in this file fix the issue, but for now we must still work around it.
The update configurations are each expected to have a `parentNode` property.
The update doesn't happen until the next flush.
The uppercase one should be returned first.
The url field will require support for asynchronicity.
The use of frozen objects as keys.
The use preview tabs setting was removed from 'tabs' package in atom 1.6 and moved to core instead.
The user added a new project root and the currently active working sets did not let it show.
The user could have selected that from the timeline view.
The user deleted everything and never applied a new property value via Up/Down scrolling/live editing, so remove the tree element and update.
The user has the responsibility to ensure the private key is valid or that this results in a safe protocol.
The user have edited since the last update.
The user is either in another app or on the home screen - `inactive` - This is a transition state that currently never happens for typical React Native apps.
The user may use createPseudo to indicate that arguments are needed to create the filter function just as Sizzle does
The user should never get here because projects are inited by using `react-native-cli` from outside a project directory.
The user's intent is to create a new item for the list.
The user's intent is to create a new profile.
The user's intent is to delete the currently-selected item.
The user's intent is to delete the currently-selected profile.
The user-agent can also be set in native using WebViewConfig.
The usual file-wide error is 'too many errors emitted, stopping now'.
The validate method will return an array of validation errors.
The validation flag is currently mutative.
The value 'justify' is only supported on iOS and fallbacks to `left` on Android.
The value displayed inside the badge.
The value of the current property is always the final element of this.stack.
The value of the first ancestor Path whose value is a Node.
The value of the switch, if true the switch will be turned on.
The value of the switch.
The value should be between 0 and (maximumValue - minimumValue).
The value should be between minimumValue and maximumValue, which default to 0 and 1 respectively.
The value to be passed to picker's `onValueChange` callback when this item is selected.
The value to show for the text input.
The values 'normal' and 'bold' are supported for most fonts.
The values may be functions that are evaluated for each element.
The values must be serializable.
The variable mapping is represented by `variableMapping`, a dictionary that maps from names of variables in the parent scope to variables that exist in the fragment.
The various interpolators supported by the `line` class.
The version of the source mapping spec that we are consuming.
The version of tough-cookie that serialized this jar.
The vertices used for the traversals are vi+, vi-, vo-, and vo+, where the superscript o means outside and i means inside, the subscript - means left subtree and + means right subtree.
The vibration is asynchronous so this method will return immediately.
The visually param controls whether, in right-to-left text, direction 1 means to move towards the next index in the string, or towards the character to the right of the current position.
The walking function is called for each source file content and is passed the filename and source content.
The walking function is called once for each snippet of JS and is passed that snippet and the its original associated source's line/column location.
The warning() and invariant() functions take format strings as their second argument.
The whole query must be fetched if the root dataID is unknown.
The widgets for all of them need to be drawn.
The width of each tab will be the number of spaces to the next tab stop.
The wildcard interop (used for ImportNamespaceSpecifier) may substitute the default interop.
The wlock is surest way to detect the beginning and end of events.
The workaround for this bug involves attaching an empty click listener on the target node.
The working directory of this repository.
The wrapper function should do some stuff, and return a presumably different callback function.
The writeFile endpoint accepts the following query parameters:  path: path to the file to read (it must be url encoded).
The writeFile endpoint accepts the following query parameters:  path: path to the file to written.
Then a camel case identifier (or possibly title case based on file name).
Then create the item itself
Then if a code path exits by a control statement (such as `break`, `continue`) from the `finally` block, the destination's segments may be half of the source segments.
Then insert AUTO332 in at this offset.
Then it will re-register everything in this._items once it has been sorted.
Then kill the appropriate duplicates in the run.
Then perform the search again the with same query and callback.
Then perform the search again with the same query and callback.
Then pick the closest resolution (rounding up) to the requested one
Then reports the references which are outside of groups.
Then reports this function if the segment is reachable.
Then restore the pointer events and top value for this scene
Then take last path component.
Then test what we need to kill.
Then this module would export it.
Then this problem will be solved.
Then this raises a looped event.
Then try to pick platform-specific asset records 5.
Then when you perform binary negation on that, it turns it into a negative number.
Then, depending on that, we'll figure out whether it's a single-file module, gzipped tarball, or naked tarball.
Then, during evaluation, we cross off any that are in fact still being used.
Then, get the parsed diff info.
Then, if a user attempts to emit an event that is not one of those specified types the emitter will throw an error.
Then, it will spawn a new flow process, and we want that to be successful
Then, merge any ranges that overlap.
Then, move the extraLookupPath to the top of the lookup paths list so it will be searched first.
There *must* be a type, no attaching namespace-only handlers
There already is a shorthand this longhands falls under.
There are 3 cases we handle.
There are 3 stages: left, center, right.
There are 3 valid forms of ObjectId.
There are a number of idiomatic ways of expressing types, so this function serves to coerce them all to actual Type objects.
There are also other events, such as `onSubmitEditing` and `onFocus` that can be subscribed to.
There are circumstances in which it will raise an error and give up, but they are very rare.
There are definitely other cases, but it's not a big issue.
There are differences (eg, we don't want to use the DEV plugin).
There are div.tile elements, each of which has its own div.highlights element and many div.line elements.
There are gaps in between the segments.
There are legitimate times when there may be no current bookmark, such as during a rebase.
There are no visible top level nodes with such className.
There are other reasons why the keyboard could be dismissed.
There are so many media events, it makes sense to just maintain a list rather than create a `trapBubbledEvent` for each
There are still more digits in this value, so we must make sure the continuation bit is marked.
There are three events that may outdate the status of ignored files.
There are three productions that can be parsed in a parentheses pair that needs to be determined after the outermost pair is closed.
There are two additional methods for controlling the traversal:  - `traverse(parent, state)`: Returns a cloned copy of the parent node after processing all of its children.
There are two additional methods for controlling the traversal:  - `traverse(parent, state)`: Visits all children of `parent`.
There are two situations when this happens, when a garbage timer ID was given and when a previously existing timer was deleted before this callback fired.
There are two types of components in the world.
There can be at most one connection to a given remote machine at a time.
There can be string log and string eval result.
There can only be one selection per document in IE, so it must be in our element.
There is *some* kind of drag-and-drop support in IE6-8, but I couldn't get it to work yet.
There is a `IfStatement` which doesn't have `alternate` node in the trailing statement chain of the `consequent` node.
There is a folder in the components directory that has this name, but it was not installed by bower.
There is a small chance that the add/remove of the Repository could happen so quickly that the entry for the repo in _subscriptionForRepository has not been set yet.
There is also an `extra` field where additional details about certain kinds of errors are provided.
There is also some nuance with how we handle multiple moved touches in a single event.
There is an explict shorthand property this longhands falls under.
There is an old bug in Chrome that causes onpopstate to fire even upon initial page load.
There is another benchmark of this run to do.
There is another iteration of this benchmark to do.
There is another repetition of this iteration to do.
There is currently no dedicated 'shortHeadDidChange' event.
There is no current transition, so we need to transition back to the presented index
There is no defined way to represent negative deltas, so it's illegal to diff B from A where the time denoted by B is later than the time denoted by A.
There is no expression, so the completion should happen against global properties.
There is no guarantee that `this.state` will be immediately updated, so accessing `this.state` after calling this method may return the old value.
There is no guarantee that calls to `setState` will run synchronously, as they may eventually be batched together.
There is no guarantee that that has happened yet.
There is no keyword or literal with only one character.
There is no modified character for this key combination and no character is inserted into the document, but FF fires the keypress for char code `100` anyway.
There is no new line in between.
There is no reason to include directories in these updates, and in fact they may make us overfetch statuses.
There is unfortunately no standard format to report an error, so we have to write a specific converter for each tool we want to support.
There isn't a best yet.
There may be an unlock assigned to this node, if there is no entry for this "owner", create one inline and set the unlock as though an owner entry had always existed
There may be connections in break-disabled state and running state as well.
There may be more than one error.
There may be some cases where scroll views actually should return `true` from `onStartShouldSetResponder`: Any time we are detecting a standard tap that gives priority to nested views.
There might already be a marker because there can be multiple TextEditors open for a given file.
There might have been a widget with a focused element that got hidden or updated, if so re-focus it.
There must be exactly one argument.
There seem to be some invisible characters (not newlines) at the end of lines that result in a newline.
There should be a slight delay before showing a highlight when starting a touch.
There should be an opening element for every single closing element so we can just look for opening ones
There should be at least main page script.
There should be no remaining scopes after this method.
There should be two scripts: one for the main page and another one which is source of console API(see InjectedScript._ensureCommandLineAPIInstalled).
There should have been no additional calls on the spies.
There should just be one child component at this time.
There was an initial heartbeat, but we can't be sure if it went before or after we do listen here.
There will be no effect on devices that do not support Vibration, eg.
There will be no transtion.
There will only be one connection at a time.
There's a minimum requirement for re2c..
There's a race condition if we try to navigate to the specified example from the initial props at the same time the navigation logic is setting up the initial navigation state.
There's an existing editor process already and it's attached to the terminal, so go kill it.
There's at least one case where the property error message is confusing at best.
There's callers to various `reset` functions, so it's probably safer to have this.
There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it
There's no need to have 404 in the message as well.
There's no other great way for a consumer of this service to specify a ProcessOutputHandler.
There's no way, short of windows system calls or execing the chcp command line program to figure this out.
There's only work to do if current dataType is non-auto
Therefore it's a bit noisier of a signal, and is prone to both false positives and negatives.
Therefore the CoverInitializedName check is conducted.
Therefore the parent property is never given to the node's constructor, but rather set by the parent itself when the node is assigned to it.
Therefore this copy cannot throw.
Therefore we can remove all '..' parts directly after the root.
Therefore we need to treat these inline callbacks differently.
Therefore we remove and store these parts in a temporary array, and restore them after the path rewrite.
Therefore, `PanResponder` does not call `onResponderMove` passed the first dispatch.
Therefore, calls to `require('moduleId')` are not replaced with numeric IDs TODO(davidaurelio) Scan polyfills for dependencies, too (t9759686)
Therefore, if a file is included in the WorkingSet, then the file-tree must have a way to know that it must include its parent directories.
Therefore, if we detect that there was a change during the fetch we schedule another right after the first has finished.
Therefore, in this implementation, we overwrite the previous value.
Therefore, it's not very easy to tie the action to the result.
Therefore, the second time it runs, defineProperty will fatal :(
Therefore, we allow the gadget creator to provide a hook that creates a custom version of those events.
Therefore, we have to catch them here, at initialization time, instead.
Therefore, we include the Systrace module before the main module, and it will set itself as property on the require function.
Therefore, we need the third state, firstCoverInitializedNameError, to track the first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.
Therefore, we need to create a placeholder item that we later replace.
Therefore, we only create a DiagnosticsPanel for the first call to consumeDiagnosticUpdates.
Therefore, we only need to diff the first record to figure out which fields have previously been fetched.
Therefore, we will just skip decoding for such URIs.
These APIs used to exist on classic React classes but since we would like to deprecate them, we're not going to move them over to this modern base class.
These annotations are copy/pasted from the built-in Flow definitions for Native Promises with some non-standard APIs added in
These are JSHint boolean options which are shared with JSLint where the definition in JSHint is opposite JSLint
These are JSHint boolean options which are shared with JSLint where the name has been changed but the effect is unchanged
These are all accepted but ignored, since Javascript has no notion of the physical size of an argument.
These are all legacy features and therefore not already part of the modern ReactComponent.
These are all of the transforms that may be run via `transform`.
These are assigned lazily the first time the responder is set to make plain text nodes as cheap as possible.
These are defined only for code executing in the chrome devtools webview.
These are displayed as icons or text on the right side of the widget.
These are helpers for using ecc-jsbn (for node 0.10 compatibility).
These are necessary to maintain contiguous runs of markers when relevant.
These are needed for tests only.
These are not provided by the FBIDE algorithm.
These are not valid tokens in an identifier so we have to remove them.
These are only applied when a character is found to actually have a code point above 128.
These are packages we want to activate, including some which come bundled with atom, or ones widely used in conjunction with nuclide.
These are paths to files that can be imported.
These are probably edge cases, though, and the information will be refetched the next time the file is edited.
These are special markers that can be used to identify special handling.
These are status codes used by Mercurial's output.
These are the JSHint boolean options.
These are the JSHint options that can take any value (we use this object to detect invalid options)
These are the options that are necessary to get a require out of a ModuleMap.
These are the things we should try to remove.
These are the ways in which an identifier might be declared, note that these identifiers are safe to use in code.
These are the ways in which one might access an undeclared identifier.
These are used when `options.locations` is on, for the `startLoc` and `endLoc` properties.
These arrays only have two items show up in the AST, so we need to look at the token to verify that there's no dangling comma.
These benchmarks need to load packages fast, and re-use native module info in localstorage.
These can be seen as the default options of every Vue instance.
These carry several kinds of properties to help the parser use them properly (the presence of these properties is what categorizes them as operators).
These cases should already be caught by validateMethodOverride.
These characters have special meaning to the parser and must not appear in the middle of a token, except as part of a string.
These checks are adapted from es6-shim https://fburl.com/34437854
These closures persist for as long as at least one touch is active.
These configurations are used to generate the query for the mutation to be sent to the server and to correctly write the server's response into the client store.
These decisions, particularly to marginalize MessageChannel and to capture the MutationObserver implementation in a closure, were integrated back into ASAP proper.
These do not bubble capture.
These do not expose the same capabilities.
These don't have to be accurate -- the result of them being wrong would just be a slight flicker on the first wheel scroll (if it is large enough).
These elements are added from paging to extend the the range.
These fields are similar to connections, but do not support range calls such as `first` or `after`.
These fields do not really need to be reset since this object is no longer accessible.
These first two properties are not needed, but including them is easier than getting Flow to accept a disjoint union.
These functions are passed from above to facilitate testing.
These functions cut an array of spans at a given character position, returning an array of remaining chunks (or undefined if nothing remains).
These functions return arrays of errors, potentially one for every key.
These headers are derived from URL (except "version") and would be added by cURL anyway.
These helpers are all encapsulated into a single module, because they use mutation as a performance optimization which leads to subtle shared dependencies between the code paths.
These hold state related to a line, including highlighting info (the styles array).
These hold the "current" state
These hooks are used by animate to expand properties
These identifiers are useful for assigning response payloads to their corresponding queries when sent in a single GraphQL request.
These items are ordered based on the specified priority with which they are added to this object.
These items don't get rendered directly.
These manage event subscriptions.
These members handle local objects which have been marshalled remotely.
These members handle remote objects.
These methods are added for backwards compatibility with Devtools CodeSchool extension.
These methods are overriding the base class.
These methods are similar to DEFINE_MANY, except we assume they return objects.
These methods may be defined by both the class specification and mixins.
These methods may be defined only once by the class specification or mixin.
These methods must return void.
These multiple individual change touch events are are always bookended by `onResponderGrant`, and one of (`onResponderRelease/onResponderTerminate`).
These node references were useful for breaking ties, but we don't need them anymore, and they create cycles in the AST that may lead to infinite recursion if we don't delete them here.
These non-standard Blink-specific properties augment the InheritedProperties.
These operations should leave the cache unchanged.
These options are recognized:
These options control both how installs happen AND how `ls` shows output.
These paths are all relative to the remote fs.
These properties are a subset of our styles that are consumed by the layout algorithm and affect the positioning and sizing of views.
These properties required to conform to the PendingTransaction interface:
These properties used to be assigned to each new object in the Lines constructor, but we can more efficiently stuff them into the secret and let these lazy accessors compute their values on-the-fly.
These regions will now be 'modified' regions.
These represent groups of soft breaks.
These routes are in production
These should always be used as a pair.
These should be set up in the constructor, but as a convenience for simpler class abstractions, we set them up after the fact.
These should be set up in the preview window if this error is seen it is because the function tried to run before the iframe has completely loaded
These should be sorted in the final output.
These special components do the magic of binding the animated values to the properties, and do targeted native updates to avoid the cost of the react render and reconciliation process on every frame.
These styles will be applied to the scroll view content container which wraps all of the child views.
These systems should generally use pooling to reduce the frequency of garbage collection.
These tags we do not allow editing their tag name.
These technically contain all the fields listed above, but we don't really have a good use for them so they are omitted.
These tend to be super spammy.
These test cases test the state machine for mulitple connections.
These tests are a part of the continues build and are executed by the devtools_sanity_unittest.cc as a part of the Interactive UI Test suite.
These tests are set up so that calls to getHackService() will delegate to this function, so make sure to define this function at the start of your test to mock out this behavior.
These tests have to do with https://github.com/eslint/eslint/issues/963
These tests target the non-watchman-dependent features of LocalHgService.
These top-level fields are used to re-fetch any data that has changed for records identified by the data IDs.
These touches don't just represent all active touches, rather it also includes any touches that are not active, but are in the process of being removed.
These two 'protected' variables are accessed by ListView to iterate over the data in this class.
These two are populated during finalization.
These two are, on init, called from the constructor because they have to be initialized before the editor can start at all.
These two empty containers will cause all calls to ActionId.SOMETHING or MarkerId.OTHER to equal 'undefined', unless they are given a concrete value elsewhere.
These two fields are used by the DOM and ART diffing algorithms respectively.
These two functions are to defend against undocumented Node functions.
These two private variables are accessed by outsiders because ListView uses them to iterate over the data in this class.
These two should be hidden by the ConnectionMultiplexer
These types are unprintable because they serve as abstract supertypes for other (printable) types.
These values are established by empiricism with tests (tradeoff: performance VS precision)
These values describe which phase the event flow is currently being evaluated.
These variables form the "input" to the mutation query sent to the server.
These variables should be serialized and sent in the GraphQL request.
These will be called for *every* additional finger that move/start/end, dispatched directly to whoever is the current responder at that moment, until the responder is "released".
These will be regexps, except in the case of "**", which is set to the GLOBSTAR object for globstar behavior, and will not contain any / characters
These will be sent along with the mutation query to the server.
These will return the module if already loaded, or load it if not.
They also handle cleanup on unmount so they are safe by default.
They also must match algorithms, if given
They are essentially special getter/setters
They are implemented in all modern browsers.
They are meant for development use only, and aren't included in Nuclide builds.
They are opaque tokens that are used by Relay containers to read data that is then passed to the underlying React component.
They are optimized for boyer-moore parsing.
They aren't valid JSON but nothing actually enforces that we are getting valid JSON and we are using a full JS parser so we have to handle cases like this.
They can just handle serializing only the state (if they need serialization at all) by implementing `serializeState()`.
They can modify and replace the state parameter that's threaded through the walk, and can opt how and whether to walk their child nodes (by calling their third argument on these nodes).
They don't provide any bells and whistles such as fat queries or tracked queries.
They may be stage 0 proposals for example.
They only reflect updated `gestureState` for start/end events that bubble/capture to the Node.
They represent a single page of children of the value represented by fullname.
They represent multiple pages of children of the value represented by fullname.
They should be built independently and not share any injection state.
They should be considered private APIs.
They should not include types that have been declared.
They should not interfere with messages from the first provider.
They should overwrite existing messages from ProviderA at the same scope.
They should probably be skipped.
They were generated by tools/generate-identifier-regex.js
They will change that to require('react-native') which should work after this release and we can remove it from here.
They will have gone through all possible matchers
They will usually fail anyways because `this._renderedComponent` is empty, however, if a component is *reused*, then that won't be the case and things will appear to work in some cases.
They would set the afterBind hook to indicate that.
They'll simply get appended as additional form data parts in the request body, leaving the server to deal with them.
Thin wrapper to reprint requires, it's wrapped in a new function in order to easily attach comments to the node.
Things are good as long as we don't get that error when invoking `dispose()`.
Things like chmod in particular, which in turn results in the dreaded ENOENT errors.
This "getter" function checks if the index has previosly been "set", and if so returns the index * the value previously set.
This "in your face" style of warning allows developers to notice and correct these issues as quickly as possible.
This "route" is the mount-point for the middleware, when given a value other than _/_ the middleware is only effective when that segment is present in the request's pathname.
This API assumes the caller knows the contents of the data type.
This API is defined at https://github.com/atom/status-bar.
This API should be called `delete` but we'd have to make sure to always transform these to strings for IE support.
This AST should be created from the text that BOM was stripped.
This Disposable will also be automatically disposed when the process exits.
This GraphQL query executes against the schema in the 'schema' tab above.
This Higher Order Component decorator function is the way the components communicate with the central Store.
This JS code is a simple facade that provides a clear JS API, real Error objects, and simple non-multi functions.
This `verify()` takes the instance and tests that the instance was not modified.
This accepts a class that receives the tag string.
This accepts a keyed object with classes as values.
This accepts a text component class that takes the text string to be rendered as props.
This actualizes the forced markers we already have.
This adds a drop shadow to the item and affects z-order for overlapping views.
This adds only reachable and used segments.
This allowed us a way to explicitly key a set a fragment of components.
This allowed us a way to explicitly key a set or fragment of components.
This allows a developer to provide an event object that can remove the listener (or listener map) during the invocation.
This allows a way to hold onto a reference that won't be added back into the pool.
This allows any listeners to automatically be informed that this type of node has been found and react accordingly.
This allows computing of touch centroids that have moved after `touchesChangedAfter` timeStamp.
This allows for customized welcome messages, but should be used judiciously.
This allows for types defined in one service to include types from another service in another file.
This allows having multiple StatusBar components and the one that is added last or is deeper in the view hierachy will have priority.
This allows other programs to use the CLI object and still control when the program exits.
This allows public methods to accept the user facing instance as an argument and map them back to internal methods.
This allows simple future calls of the service by name and arguments or http-triggered endpoint calls with arguments serialized over http.
This allows that identifier to appear as the first word in a comment even if it begins with a lower-case letter.
This allows the client to fall back to default autocomplete, ctags, etc.
This allows the creation of custom validation functions.
This allows the ordering to be decoupled from injection of the actual plugins so that ordering is always deterministic regardless of packaging, on-the-fly injection, etc.
This allows the user to expose every crumb.
This allows these props on both the top level and the nested style level.
This allows to use the fake timing by default and is a direct port from Atom's `spec-helper.coffee`
This allows us to achieve O(n) which is better than a levenshtein distance based algorithm, which is O(m * n).
This allows us to keep track of children between updates.
This allows us to provide an API that is similar to CSS, where transforms may be applied in an arbitrary order, and yet have a universal, singular interface to native code.
This allows us to restore them all to their original state when we revert.
This allows us to transclude a template node/fragment before the instance is created, so the processed fragment can then be cloned and reused in v-for.
This allows working on multiple files at once, and simplifies per-file state handling.
This allows you to undo the more aggressive polyfills, should you need to.
This along with iOS quirks, justifies restricting top-level listeners to the document object only, at least for these movement types of events and possibly all events.
This also allows easier test coverage control by unsetting the global jQuery variable in tests.
This also allows us to have uniquely named links even with headings of the same name.
This also applies to the non-standard "watch" and "unwatch" in Mozilla Firefox.
This also cheapens cache invalidation, since you can just reset path.__childCache to null.
This also creates the "reactRoot" ID that will be assigned to the element rendered within.
This also explains the alternative use.
This also makes Tooltip rerender the tooltip component, which shouldn't throw.
This also needs to be changed if minimumPrefixLength goes above 1, since after you type a single alphanumeric character, autocomplete-plus no longer includes the dot in the prefix.
This also removes closing tag element.
This also removes the nodes from their current parent
This ammounts to a call either to _client.marshal or _client.unmarshal.
This approach works across all browsers, whereas `change` does not fire until `blur` in IE8.
This array contains the last path segment if it's reachable.
This array includes unreachable segments.
This array is a mix of `returnedSegments` and `thrownSegments`.
This array of profiles may change in the lifetime of `openConnectionDialog` flow.
This assignment may be for a regular (data) property, and for an accessor property (with getter/setter).
This assumes all keys have a value, so will not preserve sparsely populated inputs.
This assumes noBreaks have already been removed and will not be encountered.
This assumes that merlin's protocol is line-based (results are json objects rendered on a single line).
This assumes that the scene's navigation state is immutable.
This assumes the module map has been built.
This avoids doing potentially large sorts while the diagnostics pane is hidden.
This avoids infinite recursion.
This avoids parser's peek() to give the lexer a false context.
This background type is available on Android API level 21+.
This behavior can be useful for fine-grained formatting decisions like inserting blank lines.
This behavior ensures that when a connection is reestablished, a buffer exists with that path.
This behavior is undefined though so we're free to change it to suit the implementation details.
This behaviour does not work properly on Macs :(
This bogus view is needed to load/unload CodeMirror-related CSS on demand.
This breaks all scopes as necessary.
This breaks up the work into smaller chunks to reduce the chance of dropping frames while rendering rows.
This brings us in line with the same behavior we have on initial render.
This call is not really meant to be called directly, as callers have to manipulate the internal buffer afterwards.
This call might fail if we try to watch a non-existing directory, or if permission denied.
This call will error, because the socket will be closed on the next statement synchronously.
This call would trigger complete reconstruction of the tree, to reflect the possibly changed derived properties.
This callback gets called whenever there is a text editor event, such as a file save, that should trigger a run of diagnostics.
This callback will be called once ViewPager finish navigating to selected page (when user swipes between pages).
This can be  useful when getting the "command line too long" linker errors.
This can be any valid color string, or you can use one of the predefined PinColors constants.
This can be called from a native bug reporting flow, or from JS code.
This can be replaced with a WeakMap once they are implemented in commonly used development environments.
This can be safely used if you're in a single- threaded environment, otherwise you need to create new hashes to use.
This can be used for horizontal pagination.
This can be used for paginating through children that have lengths smaller than the scroll view.
This can be used to attach properties to mode objects from outside the actual mode definition.
This can be used to log issues in development environments in critical paths.
This can be used to make sure the first task is fully resolved (including asynchronous dependencies that also schedule more tasks via `enqueue`) before starting on the next task.
This can be used to set an existing socket, bypassing normal UI flow to improve iteration speed for development.
This can be useful in cases when you want to focus a view or measure its on-screen dimensions, for example.
This can happen if the user manages to scroll and escape disposal.
This can happen if the user triggered the save while closing the file.
This can happen if users switch between 'none' and 'uncaught' states.
This can happen in a variety of normal situations, such as Network module not being available, or when running locally
This can happen on startup when reloading remote files.
This can happen when the concrete nodes are different but structurally identical, or when the route/variables are different but do not have an effect on the structure of the query.
This can happen when using defaults in an object pattern.
This can happen when we step.
This can happen without the full execution of the command to fail, but we want to learn about it.
This can improve scrolling performance on long lists.
This can include modes separated by a colon and wildcards.
This can lead to `trackTiming` counting 49ms for 50ms of a 1ms-resolution clock elapsing.
This can lead to leaky behavior if the user retains a reference to the request object.
This can occur on a reconnect, where the old socket has been closed but its close event is sent asynchronously.
This can only be determined after we consumed up to the left parentheses.
This can only be useful for other `ui/tree` usages, like the `DiffViewTree`.
This can only happen none of the project folders are Mercurial repositories.
This can only happen via state.decoder -- no other venue exists for pushing a zero-length chunk into state.buffer and triggering this behavior.
This can only match a corresponding "" at the end of the file.
This can probably just move into the constructor now.
This can re-enter discardMenu due to blur.
This can return a richer element for a node and will be used instead of the label if present.
This can still be an instance in case of factory components but we'll count this as time spent rendering as the more common case.
This can take some time
This can't be done in the main node process, because otherwise node would be running as that user from this point on.
This cannot go into editingEnded(), as it should always happen first for any editing outcome.
This cannot handle circular references.
This catches EF BB BF (the UTF-8 BOM) because the buffer-to-string conversion in `fs.readFileSync()` translates it to FEFF, the UTF-16 BOM.
This causes Atom to transpile those files twice in production releases.
This changes where the output is stored.
This check could be removed once we do not send this context to frontend.
This check ensures that there is a rule configuration and that it has fewer than the max combinations allowed.
This checks if the buffer is instance of NuclideTextBuffer.
This checks the callee name and that there's an argument, but not the type of the argument.
This checks tokens from a specified token to a next MethodDefinition or the end of class body.
This child node falls completely after the comment.
This child node falls completely before the comment.
This class *must not* mutate the underlying `concreteNode`.
This class creates and stores the output of a process and can push updates to listeners.
This class currently relies on the Nuclide WatchmanClient, which requires fb-watchman.
This class encapsulates all the state of the packager so as to keep the Activation class (which brings together various RN features) clean.
This class implements common easing functions.
This class implements the EventGenerator interface.
This class is a wrapper around the native RCTNetworking module.
This class is meant to be stubbed out.
This class keeps the PathSets passed to it up to date by using file system watchers to observe when relevant file additions and deletions occur.
This class manages creating and canceling delayed events.
This class provides a central callback channel to communicate with debugger client.
This class represents a React Native debugging session in Nuclide.
This class represents a collection of context menu items that have been registered with Atom's ContextMenuManager under a single CSS selector.
This closes square brackets for Objective-C message calls.
This code assumes that it is not, however, and Flow points out that it may produce `parseInt('undefined')`.
This code changes such instances back 'var' and 'closure' so that the code in JSHINT.data() doesn't think they're unused.
This code implements the NuclideFs service.
This code is optimized and not intended to look beautiful.
This code is taken from deepmerge repo (https://github.com/KyleAMathews/deepmerge) and modified to meet our needs.
This code was originally written by Brian White (mscdex) for the io.js core querystring library.
This code works only for 0-width border.
This code would be cleaner if the drawer layout provided an `isOpen` prop and allowed us to pass a `onDrawerClose` handler.
This codepath will be exercised when Flow finds type errors as the exit code will be non-zero.
This command is exposed in the nuclide-working-sets menu config.
This command requires interactive to be enabled
This completely disregards comments in making the determination, so comments count as zero-length substrings.
This component contains the entire view in which the user inputs their connection information when connecting to a remote project.
This component is used inside a ScrollView or ListView to add pull to refresh functionality.
This component is used to indicate that the app is loading or there is some activity in the app.
This component is used to wrap strings between comment nodes so that they can undergo the same reconciliation that is applied to elements.
This component is used to wrap strings in elements so that they can undergo the same reconciliation that is applied to elements.
This component should be used when you know that a subtree of components will never need to be updated.
This config is turning all core rules on.
This considers a property set to undefined to be equivalent to a property that was not set at all.
This constructor and its argument is currently used by mocks.
This constructor gets overridden by mocks.
This constructor is overridden by mocks.
This context menu wrapper exists to address some of the limitations in the ContextMenuManager: https://atom.io/docs/api/latest/ContextMenuManager.
This context will automatically populate the "sourceEvent" and "target" attributes of the event, as well as setting the `d3.event` global for the duration of the notification.
This contrasts with JSMs which are singletons, Domains allows us to optionally load a CommonJS module twice with separate data each time.
This controls how often the scroll event will be fired while scrolling (as a time interval in ms).
This convenience function would create such OrderedMap instance from a plain JS Array of FileTreeNode instances
This corresponds to what atom calls a 'root path' in a project.
This could be a little smarter by checking context.getScope() to see how warning/invariant was defined.
This could be represented in 16 bits (big-endian) as 0xff80.
This creates a mocha test suite and pipes all supplied info through one of the templates above.
This currently contains TopLevelWrapper until purge so we only check it at the very end.
This data is commonly needed by many different interaction logic modules so precomputing it is very helpful to do once.
This data is hard coded for the sake of the demo, but you could imagine fetching this data from a backend service rather than from hardcoded JSON objects in a more complex demo.
This data structure is designed to hold the top K scores from a collection of N scores where scores become available one at a time.
This data structure is implemented as immutable data and mutation (e.g. push, pop...etc) will yields a new instance.
This default may be noticeable and undesired in the case where the View you are setting an opacity on has multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).
This defines a basic set of data for our Star Wars Schema.
This defines how far a touch event can start away from the view.
This defines how far your touch can start away from the button.
This designed for logging on both Nuclide client and Nuclide server.
This determines how frequently events such as scroll and layout can trigger a re-render.
This determines the config defaults and it's what is shown by the Settings view.
This did not get segments from the child choice context.
This differs from the traditional DOM API because value is usually set as PCDATA children.
This directly kills the servers without removing the RemoteConnections so that restarting Nuclide preserves the existing workspace state.
This diverges from the typical responder callback pattern (without using `PanResponder`), but avoids more dispatches than necessary.
This does *not* handle instances of other classes.
This does NOT verify the signature.
This does influence the API, so keep that in mind when it seems a little trickier to do something compared to a fully synchronous system.
This does not include node_modules in the path so it can be used for all references relative to a config file.
This doesn't accept stack item `id`s, which implies that all existing items are destroyed, and then potentially recreated according to `routeStack`.
This doesn't change the context hierarchy.
This doesn't happen in normal use but it's useful to be able to truncate the stream for testing.
This doesn't work if there are strings/comments that contain `:`.
This effectively defers execution of previously queued tasks until the promise resolves, at which point we allow the new queue to be popped, which happens once it is fully processed.
This element is in an array.
This element was passed in a valid location.
This enables Relay to synthesize a complete query to fetch the data necessary to render your app.
This enables consumers to force hide/show without first asking for the visibility state.
This enables us to create wrapped "child constructors" for prototypal inheritance and cache them.
This enforcement intentionally transcends traverseFragmentReferences boundaries.
This ensures it exists in the dependency graph and can be `require`d.
This ensures that the hackery done here doesn't break future Nuclide compatibility with Atom, or tooling like flow and eslint.
This ensures that this logic can operate on stateless trees without any backing instance.
This ensures that users of atom-script can pipe output to head, etc., without error.
This ensures that we have consistent behavior.
This ensures that we will begin flushing on the next task the task throws an error.
This ensures the context menu option only appears in supported projects.
This ensures we get package data in a consistent, stable format.
This entered again before it fully left.
This event fires after `onKeyPress` and `onCompositionEnd`, but before `onInput`.
This event fires at a time when it's possible to change the element's value without seeing a flicker.
This event plugin is based on the native `textInput` event available in Chrome, Safari, Opera, and IE.
This event will not fire on an `touchEnd/mouseUp` event, only move events while the user is depressing the mouse/touch.
This example creates a `View` that wraps two colored boxes and custom component in a row with padding.
This excludes situation where we have two plugins with same name.
This exists as its own class to make it possible to reuse instances when multiple callers observe on text editors with the same grammar scopes.
This exposes the native ToastAndroid module as a JS module.
This expression is here for better compressibility (see addClass)
This extra module enables adding spies during testing.
This factory method does not connect with `allPrevSegments`.
This factory method returns the remote module with the client object 'closed over,' and used to make the RPC calls.
This falls back to returning the start of the editor.
This feature is deprecated and unavailable in open source.
This feature is exclusively for expanding to a node deep in a tree.
This fetches the 'default' connection configuration supplied to the user regardless of any connection profiles they might have saved.
This field is only used to for a sticky value in the status bar, and is not to be sent.
This file (and this file only) is licensed under the same slightly modified MIT license that JSLint is.
This file automatically generated from win32/build/confutils.js
This file contains a set of custom matchers for jasmine testing, which can be used to get more detailed / useful diffs on various reults.
This file contains the tokenizer/parser.
This file contains utilities for getting an expression to specify a certain revision in Hg (i.e. something that can be passed to the '--rev' option of an Hg command).
This file defines the main parser interface.
This file installs the logic that modifies Node's built in require() function to transpile .js files that start with either `'use babel'` or `"use babel"`.
This file may not exist.
This file must be usable in the browser, so no Node-specific code can be here.
This file must be written in ES5.
This file provided by Facebook is for non-commercial testing and evaluation purposes only.
This file provides methods to do this.
This file should be loaded after `jasmine.js`, but before any project source files or spec files are loaded.
This fills out the data for genericTransform.
This filters out extraneous properties from `GraphQL.*` nodes such as `fields` or `fragments`, and reduces metadata down to compare only truthy values.
This finds listeners by a given phase.
This finds the start of the visual line that the given line is part of (usually that is the line itself).
This fixes issues in IE where sometimes it splits up a single text node into multiple ones.
This for-in loop skips the holes of the sparse array.
This formats requires based on the left hand side of the require, unless it is a simple require expression in which case there is no left hand side.
This fragment should be added when some/all implementors of the node's type also implement `Node` but a `Node` fragment is not already present.
This fucks up the positions but without it, babel won't parse the text as an expression
This function allows that to be increased.
This function assumes that the nuclide server has been started in insecure mode, e.g. with using the integration-test-helpers.startNuclideServer function.
This function assumes the string has already been percent encoded
This function bypasses the SSH authentication that the server normally uses.
This function can be used to generate a unique id for fragments constructed at runtime and is guaranteed not to conflict with statically created ids.
This function checks that the required inputs to a connection profile are non-empty (i.e. required strings are at least length 1).
This function computes a percentage in terms of the total loading time of a specific event.
This function detects whether we're in an environment that behaves this way.
This function does exactly that.
This function drops the highest order bit in a signed number, maintaining the sign bit.
This function dumps long stack traces for exceptions having a cause() method.
This function ensures its callback to be called after a transition has started by waiting for double raf.
This function exhibits some of the quirky behavior of Node APIs that accept a variable number of arguments in the middle of the parameter list rather than at the end.
This function facilitates waiting for that to happen.
This function generates the definitions if the they don't exist, and caches the proxy module if it has already been generated before.
This function helps you with (2) by freezing the object and throwing if the user subsequently modifies the value.
This function is abstracted in case the (undocumented) Atom API beneath ever changes.
This function is called by advance() to get the next token.
This function is called on long press.
This function is called on press.
This function is like `arrayIncludes` except that it accepts a comparator.
This function is like `copyObject` except that it accepts a function to customize copied values.
This function is probably the single most critical path for performance optimization.
This function is to try to parse a MethodDefinition as defined in 14.3.
This function is used because child instances need access to assets defined in its ancestor chain.
This function is used for the DH key-exchange protocol.
This function is used if the binding provider doesn't include a getBindingAccessors function.
This function is used recursively from IndexedSourceMapConsumer.prototype.sourceContentFor.
This function is used to prevent us from adding any id that already exist in the range.
This function is used to raise exceptions on parse errors.
This function is used to rule out sources where no transform applies.
This function is useful for accumulating several hrtime intervals into a counter.
This function makes it optional and just removes a leading slash if the baseDir is not given.
This function returns HgRepositoryDescription filled with a repoPath and originURL iff it finds that the given directory is within an Hg repository.
This function returns a human usable string.
This function sends props straight to native.
This function should be used with `await` inside `waitsForPromise()`.
This function should not be called directly, but rather added as a Jasmine custom matcher.
This function shouldn't be used, really, but it's pretty convenient sometimes, when you just want to work with a regex.
This function shows up in stack traces - make the name distinct.
This function supports circular references by default, but if you are certain there are no circular references in your object, you can save some CPU time by calling clone(obj, false).
This function takes a previous set of keys and a new set of keys and merges them with its best guess of the correct ordering.
This function takes in a file path, and computes all directories that would be considered a parent of it, i.e., the file path is contained by all of these directories.
This function terminates when one of the following is true:
This function tries to parse a single expression at a given offset in a string.
This function uses `eval` (non-lexical) to produce such a predicate from a space-separated string of words.
This function will be re-bound in render multiple times.
This function will call the getter on every array index of the object.
This function will not work for those who use that option.
This function will perform any checks over the JS source that doesn't require injecting in source code.
This functions purpose is to give a reasonable API.
This generates a 50 character boundary similar to those used by Firefox.
This generates a configure script for win32 build
This generates events of comments before/after events which are generated the original generator.
This gesture is to an overswiped region or does not have enough velocity to complete If we are currently mid-transition, then this gesture was a pending gesture.
This gets all concatenated module descriptors in the release mode.
This gets deleted in finishOperation(), which is called both on success and failure.
This gets deleted in finishOperationAndMoveEditor(), which is called both on success and failure.
This gets us out of timeout issues and allows us to default to Connection:keep-alive.
This gives another reason to use the configuration object sparingly - it is expensive to rebuild the entire tree.
This gives us much nicer output when logging instances in the console.
This got segments already from the child choice context.
This guarantees only one diff view will be opened per URI.
This hack (see related code in patchDisplay) makes sure the element is kept around.
This hack adds a delay to avoid this scenario.
This hack is necessary because drawer layout provides an imperative API with open and close methods.
This handles more types than `getPropType`.
This handles strings, numbers, booleans, basic objects, and Arrays.
This happens at the end of a transition started by transitionTo, and when the spring catches up to a pending gesture
This happens for UnimplementedView.
This happens for each frame of either a gesture or a transition.
This happens for errors like bad function args.
This happens if the stream completes since we opened a new buffer when the previous record ended.
This happens when Incremental is disabled and _onOffscreenRenderDone is called faster than layout can happen.
This hard cutoff should work for sane code.
This has a complexity linear to the value of the code.
This has a few false positives w/r/t empty components.
This has a fork list and manages it.
This has a function 'show' which takes the following parameters:  1.
This has the advantage that Git will take care of using stored credentials and any additional negotiation that needs to take place.
This has the drawbacks of 1) adding an event listener even when we don't have a callback for it and 2) needing to add explicit support for each event type we want to support.
This has the same purpose as `omittedCloseTags` except that `menuitem` should still have its closing tag.
This has to be object, not boolean, otherwise its value doesn't update properly.
This has to happen immediately otherwise we could crash, e.g. if the data array has gotten shorter.
This helper class stores information about text content of a target node, allowing comparison of content before and after a given event.
This helps determine if we should show the datatip when toggling it via command.
This helps determine if we should show the type hint when toggling it via command.
This helps to capture the propType error at run-time, where as `NavigationTypeDefinition` capture the flow type check errors at build time.
This hook exists purely for testing purposes.
This hook is a the first initialization code that happens before any jasmine test case is executed.
This ignores it if the body is a breakable statement.
This implementation (a modified version of the SheetJS version) has been optimized for our use case, at the expense of conforming to the adler32 specification for non-ascii inputs.
This implementation assumes that characters are encoded in ISO 10646.
This implementation is based on the one in prototype.js
This implementation of ReactPerf is going away some time mid 15.x.
This implementation relies on the "phabdiff" template being available as defined in: https://bitbucket.org/facebook/hg-experimental/src/fbf23b3f96bade5986121a7c57d7400585d75f54/phabdiff.py.
This implementation reuses the `Touch` objects themselves as the `Event`s since we dispatch an event for each touch (though that might not be spec compliant).
This implements "is array index" which the ECMAString spec defines as:
This implements `PooledClass`, so you should never need to instantiate this.
This implements below interface.
This includes any client changes (new feature or whatever) that do not work with the older servers.
This includes initializing the `HtmlReporter` instance and then executing the loaded Jasmine environment.
This index will be parsed back out below.
This indexOf lookup may be O(n), but the typical number of base names is very small, and indexOf is a native Array method.
This indicates that this server command should be filled in when this profile is used.
This influences support for strict mode, the set of reserved words, support for getters and setters and other features.
This inheritance gives us the pause/resume/pipe behavior that is desired.
This introduced many problems with legit comments.
This invalidates the errors in the current file.
This is *not* part of the readable stream interface.
This is a BreakStatement or ContinueStatement.
This is a BreakStatement or a ContinueStatement.
This is a BreakableStatement.
This is a FunctionExpression or an ArrowFunctionExpression.
This is a LabeledStatement.
This is a MemberExpression.
This is a Pattern or a Property.
This is a Template token.
This is a basic end-to-end test, designed to demonstrate the various capabilities of a Relay-compliant GraphQL server.
This is a bit hacky but it avoids heavy changes to directive parser and watcher mechanism.
This is a bit tricky.
This is a brutally ugly hack to make sure that our error handler is attached before any userland ones.
This is a bug, filed against Atom Linter here: https://github.com/AtomLinter/Linter/issues/150 TODO(jjiaa): remove this hack when the Atom issue is closed
This is a catch all that can render any kind of tag.
This is a clear syntax error, so we should get an error on save.
This is a command-line utility to transpile a .js file in the same way that Atom would.
This is a controlled component that requires an `onValueChange` callback that updates the `value` prop in order for the component to reflect user actions.
This is a convenience way to test against the same authoritative function multiple times.
This is a counter that will be incremented after every successful save request.
This is a crude lookahead trick to try and notice that we're parsing the argument patterns for a fat-arrow function before we actually hit the arrow token.
This is a diviation from the spec.
This is a full integration test for (local) Objective-C support in Nuclide.
This is a function scoped option only.
This is a future proof way of duck typing.
This is a hack to force an ObjectPattern node to be printed on one line
This is a helper function for getting values from parameter/options objects.
This is a heuristic to improve performance.
This is a hook provided to support rendering React components while ensuring that the apparent scroll position of its `container` does not change.
This is a kludge to keep keymaps mostly working as raw objects (backwards compatibility) while at the same time support features like normalization and multi-stroke key bindings.
This is a little hard to test directly.
This is a little weird because state changes are triggering commands that trigger state changes.
This is a map from identifier to literal that can be imported.
This is a map from identifier to path that can be imported.
This is a map of common aliases.
This is a non-standard method that Atom adds to Jasmine via spec-helper.coffee.
This is a path after switch statement.
This is a precision specifier.
This is a regression test.
This is a shallow copy.
This is a shortcut to avoid jQuery.event.remove's overhead
This is a silly query (we don't need the `first(1)` call here) but was seen in the wild and should be handled gracefully.
This is a simple utility that allows us to reason about a collection of items, but handling the case when there is exactly one item (and we do not need to allocate an array).
This is a simple way to tell that the function is actually a bound function (we are not told).
This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews, most of which are offscreen.
This is a special performance property exposed by RCTView and useful for scrolling content when there are many subviews, most of which are offscreen.
This is a special property available only in browsers with JavaScript 1.7 implementation.
This is a special property that Atom's view registry knows to look for.
This is a stateless functional component.
This is a strict positional notation, most significant digit first.
This is a stub for flow to make it understand require('./icon.png') See packager/react-packager/src/Bundler/index.js
This is a tag to indicate that the use of these method names is ok, since it's used with createClass.
This is a tarball we probably downloaded from the internet.
This is a temporary workaround that allow calculating important characters on the fly rather than relying on the index.
This is a transitional API and not recommended for general use.
This is a trick taken from Esprima.
This is a unified interface for event plugins to be installed and configured.
This is a useful default which helps finding memory leaks.
This is a very rudimentary check Complete checks are made in the 'describe' below
This is a very simple program that can be used to test nuclide-debugger-node.
This is a very strange case in the AST where we are in a shorthand property but key and value do not have the same type.
This is a very useful default that happens to satisfy many common user experiences.
This is a way to detect if Component is a stateless arrow function component, which is not newable.
This is a web interface for the HTML to JSX converter contained in `html-jsx-lib.js`.
This is a whole-line replace.
This is a workaround for git's autocrlf option on Windows.
This is a workaround that should be removed when Atom 2.0 comes out.
This is actually variadic, but we only support one or two other observables.
This is added to `pressRetentionOffset` when moving off of the button.
This is also accessible via `React.DOM`.
This is also our approach for IE handling, for the reason above.
This is an API that works both on iOS and Android and can show static alerts.
This is an Identifier node.
This is an advanced optimization that is not needed in the general case.
This is an all or nothing operation.
This is an array of bottom offsets for the lines that make up a drawn line.
This is an implementation of binary search which will always try and return the index of the closest element if there is no exact hit.
This is an implementation of binary search which will always try and return the next lowest value checked if there is no exact hit.
This is an indication of a bug in the state machine.
This is an object that lives in the main process that delegates calls to the FileSearch in the forked process.
This is an undocumented way to reach the Electron BrowserWindow.
This is auto generated from the unicode tables.
This is autogenerated with esprima tools, see: https://github.com/ariya/esprima/blob/master/esprima.js
This is based on the GraphQL spec for what constitutes a valid field name.
This is based on the protocol description at: https://github.com/the-lambda-church/merlin/blob/master/doc/dev/PROTOCOL.md https://github.com/the-lambda-church/merlin/tree/master/src/frontend
This is better than having plugins be ordered in the same order that they are injected because that ordering would be influenced by the packaging order.
This is bound to the instance
This is breaking encapsulation of the React package.
This is cached, and also looks for line-wide styles.
This is called after the leave transition if there is any.
This is called after we execute any command we receive from native but before we hand control back to native.
This is called at the last of functions or the program.
This is called for every instance, including ones that are created from extended constructors.
This is called from popLoopContext().
This is called from the native side.
This is called on a code path looped.
This is called when the user changes the date or time in the UI.
This is called with the following parameters: - `itemValue`: the `value` prop of the item that was selected - `itemPosition`: the index of the selected item in this picker
This is coming in Atom 1.4.0 - https://github.com/atom/atom/issues/9974
This is coordinated outside this component so the parent can syncronize this re-render with managing the placeholder sizing.
This is currently used to help focus on child textviews, but can also be used to quickly scroll to any element we want to focus.
This is defined as the width of a thin line on the platform.
This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.
This is done by increasing prelim(w+) and mod(w+) by shift.
This is done by swiping from the left to the right or from the top to the bottom.
This is done to avoid each rule needing to do so separately.
This is done to follow the internal behavior of `fetchWithRetries`.
This is done when closing unnamed editors and when closing remote directories.
This is done without actually changing the view hierarchy, and in general is easy to add to an app without weird side-effects.
This is effectively a (possibly async) `while` loop
This is enabled by default.
This is encoded in array form.
This is equivalent to doing 'robustnessIters+1' robustness iterations starting with all robustness weights set to 1.
This is equivalent to the AST produced by `babel-relay-plugin` and is intended for use in serializing RelayQuery nodes.
This is especially important since we create Watchman watches on the temp directories.
This is essential when multiple graceful-fs instances are in play at the same time.
This is essentially a heuristic for "mouse cursor is to the left or right of text content".
This is essentially the state of our panel.
This is exactly how markdown.pl works.
This is extended further to allow Objects to describe the values they represent, by way of `valueOf` or `equals` (and `hashCode`).
This is filled in for unions of object types during validation.
This is fired during the first correctMkdir call, after the stat has finished but before the chownr has finished Buggy old code will fail and return a cached value before initial call is done
This is fixed by doing the contains() check on the node's parentNode instead of the node itself.
This is for `asap.js` only.
This is for demo purposes only, and rate limited.
This is handled later in a known way, so just don't overwrite here.
This is hard-coded to 'localDirectory' in `getFilesFromCommand`, which is what we want.
This is implemented by various UI views, but is not declared anywhere as an official interface.
This is intended as a generic filter module and therefore contains no special logic for handling requisite or generated fields.
This is intended to be used only in DEV and could be replaced by a static type checker for languages that support it.
This is intended to test classic JS without JSX.
This is intentionally an invariant that gets caught.
This is intentionally serial.
This is invoked after the DOM representation of a component has been created or updated.
This is irrelevant for commands that do etag / last-modified caching, but ls and view also have a timed cache, so this keeps the user from thinking that it didn't work when it did.
This is irritatingly implicit, but significantly more concise than alternatives.
This is just a bogus formula that detects when the editor is resized or the font size changes.
This is just a thin wrapper around an RxJS Subject.
This is just for unit tests.
This is just like flattenObject(data, depth).forEach(callback), except that the intermediate array is never created.
This is just the literal transformer inlined ...
This is kind of sad but the babel-core parser doesn't seem to do any error recovery.
This is known as bubbling, and occurs only if event propagation isn't prevented.
This is like a hard break except duplicates will be preserved.
This is like scope break but is replaced with a space if not broken.
This is likely to the be the same as the directory the PathSet was created from.
This is made injectable via `ReactComponent.DOMIDOperations`.
This is maintained as a set of strings for two reasons: (1) It is straightforward to serialize.
This is meant to be overridden in specific implementations if you want specialized behavior for metadata (i.e. caching).
This is meant to be subclassed, of which instances are supplied to `RelayRootContainer`.
This is meant to be the single point through which all pane item creation goes (new pane item creation, deserialization, splitting, reopening, etc.).
This is meant to collect and log performance data in production, which means it needs to have minimal overhead.
This is more than default timeout of 5 seconds.
This is mostly exposed for testing purposes since, unlike `trackActions`, it's side-effect free.
This is much lower-level than asyncExecute.
This is necessary because assert.deepEqual() gets confused when properties are in different orders.
This is necessary because handling an `edges` field also requires information about the parent connection field (see `_writeEdges`).
This is necessary because safari throws when a user disables cookies/localstorage and you attempt to access it.
This is necessary for `node`s that do not have an `id`, which would cause the generated ID here to not match the ID generated in `_writeLink`.
This is necessary in case native updates the text and JS decides that the update should be ignored and we should stick with the value that we have in JS.
This is necessary to avoid http-parser leaks.
This is needed (at least) to remove caret from console when focus is moved to some element in the panel.
This is needed because words with escape sequences must not be interpreted as keywords.
This is needed for elevation shadow
This is needed in order to move 'visually' through bi-directional text -- i.e., pressing left should make the cursor go left, even when in RTL text.
This is needed to prevent middle-click pasting on linux when tabs are clicked.
This is needed, because require callis in polyfills are not processed as other files.
This is never allowed, and only causes problems
This is nonsensical, but should not be transformed.
This is not a controlled component*, e.g. if you don't update the value, the component won't be reset to its initial value.
This is not a controlled component*, you don't need to update the value during dragging.
This is not a drop-in replacement for `ListView` - many features are not supported, including section headers, dataSources, horizontal layout, etc.
This is not an official DOM interface.
This is not called by default due to perf overhead but it's useful if you want to find traces which spend too much time in JSON.
This is not complete: see https://www.npmjs.com/package/request for details.
This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost certainly didn't intend infinite re-evaluations).
This is not fully correct, since some scripts/fonts/browsers also treat other configurations of code points as a group.
This is not how UNIX pipes work: if the reader closes, the writer needs to also close (otherwise the writer process may hang.) We have to manually close the writer in this case.
This is not ideal, but at least the compilation will succeed...
This is not optimal but fast enough that we don't really need to care right now.
This is not part of the official Atom 1.0 API, but it really should be.
This is not part of the official Atom 1.0 API.
This is not technically correct, as didSearchPaths is also supposed to count files for which no matches were found.
This is not the complete set of editor methods.
This is not to be confused with a return value of `null`, which may result from the lack of a node.
This is now being replaced with an opaque data structure.
This is nuanced and is necessary.
This is obviously a huge hack.
This is okay though because the state will be the same, and the render will be cheap.
This is one of "functions", "arrowFunctions", "generatorFunctions", "asyncFunctions", "methods", "generatorMethods", "asyncMethods", "getters", "setters", and "constructors".
This is one of FunctionExpression or ArrowFunctionExpression.
This is one of Program, FunctionDeclaration, FunctionExpression, and ArrowFunctionExpression.
This is one of a ThisExpression and a Super.
This is one of an ArrowFunctionExpression, a FunctionDeclaration, or a FunctionExpression.
This is one of the primary reason a "web" app doesn't feel "native".
This is only for side-effects.
This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.
This is only needed for iOS, which puts the constants in the ViewManager namespace instead of UIManager, unlike Android.
This is only to have a better contract semantic, i.e. another safety net to catch a logic error.
This is only used by garbage collection.
This is only used for the onToken callback and the external tokenizer.
This is only used to make this work with a dynamic instanceof check.
This is only visible while scrolling, pages are still edge-to-edge.
This is overridden by BlankStylePropertiesSection.
This is part of jsdifflib v1.0.
This is particularly useful to know when a touch has just started or ended.
This is particularly useful when dealing with streams (Observables).
This is passed to and called by the watcher.
This is preserved between calls to `flush` so that it can be resumed if a task throws an exception.
This is pretty polymorphic but unavoidable with the current structure we have for `_renderedChildren`.
This is primarily useful for literal values like toType(null), but it has the additional advantage of allowing toType to be a total function.
This is primarily useful idiomatically for overridable function endpoints which always need to be callable, since JS lacks a null-call idiom ala Cocoa.
This is probably always true.
This is probably bad practice.
This is probably confusing for Flow because it cannot tell which properties are defined during initialization since this is not the constructor.
This is pulled out into its own function rather than using localeCompare directly in case we every choose another sorting algorithm.
This is really a ReactText (ReactNode), not a ReactElement
This is really rather hacky, but it should work and get the job done which is our goal here.
This is really to solve DER cases, but whatever for now
This is recursively awful.
This is required as Atom's builtin coffeescript package need to show coffeescript stacktrace by customize Error.prepareStackTrace.
This is required because Firefox fires `keypress` events for key commands (cut, copy, select-all, etc.) even though no character is inserted.
This is required only for synthetic events (e.g. dispatched in tests).
This is responsible for managing (creating/disposing) multiple HackLanguage instances, creating the designated HackService instances with the NuclideClient it needs per remote project.
This is safe because the items are immutable (within this React component).
This is sane, and allowed by the spec.
This is separated into its own decorator so that only those who want to use the holding functionality have to and others can just use an emitter.
This is similar to Atom's `Pane::findOrCreateXmostSibling` methods, but these positions are absolute (i.e. don't depend on the active pane).
This is similar to local branches and tracking branches of git.
This is simpler than registering handlers using emitter events directly, as there's less messy bookkeeping regarding lifetimes of the unregister Disposable objects.
This is simply a synonym for nextLine() method with a friendlier public name.
This is so the user can easily refresh the Clang + Buck state by reloading Atom.
This is something done with the help of the children-derived fields.
This is something of an integration test: we dig into the internals a little bit in our Session class so this test ensures we won't be surprised if it changes.
This is somewhat involved.
This is special cased so that the bundled examples work out of the box.
This is state of forking.
This is still better than before.
This is stronger than any kind of break, a break will not happen if a noBreak is within the break's contiguous chain of markers.
This is supported only by Chrome for now.
This is temporarily available for custom components that are not string representations.
This is testing the interface of the options object.
This is the Disposable that represents adding all of this object's menu items to Atom's own ContextMenuManager.
This is the Node.js implementation of `debug()`.
This is the abstract API for an update queue.
This is the behavior as of Mar 3, 2015.
This is the case when event.relatedTarget is null (no element is being focused) and document.activeElement is reset to default (this is not a window blur).
This is the collection of transforms that affect requires.
This is the common logic for both the Node.js and web browser implementations of `debug()`.
This is the core prime.
This is the decorator pattern.
This is the default case for all projects created using 'react-native init'.
This is the error handler that is called when we encounter an exception when loading a module.
This is the first call to updateWidth, so the resizers need to be created.
This is the format commonly used in other libraries and for test vectors, and is equivalent to the hex dump of the key in little-endian binary format.
This is the heart of JSHINT, the Pratt parser.
This is the high-level entry point for sending queries to the GraphQL endpoint.
This is the job of DebuggerProxyClient.
This is the length with which reprint will try to keep each line within.
This is the main entry point into the generic function transforming.
This is the main insertion point for starting nuclide-server.
This is the normal mode, where it connects to the react native packager
This is the object that user code is usually dealing with.
This is the only place were we actually don't know the mapping ahead of time.
This is the only way for the debounced function to be called immediately for each test.
This is the only way to test support for the `wheel` event in IE9+.
This is the only work that occurs in the main thread.
This is the opposite of `focus()`.
This is the port that the V8 debugger usually listens on.
This is the ratio that is used to calculate the absolute font size, so any elements that heavily depend on that should use this to do calculations.
This is the same as the process at the 1st `consequent` node in `preprocess` function.
This is the same logic used by the ESLint CLI executable to determine configuration for each file it processes.
This is the set of built in modules that do not need to be required.
This is the set of built in types that do not need to be imported.
This is the set of modules that are "built-in" and never need to be required.
This is the set of types that are "built-in" and never need to be imported.
This is the total length of the segment including the deleted edges.
This is the type that will be the root of our mutations, and the entry point into performing writes in our schema.
This is the type that will be the root of our query, and the entry point into our schema.
This is the versioning of Nuclide client-server protocol.
This is the web browser implementation of `debug()`.
This is the workaround to prevent user from firing multiple `pop()` calls that may pop the routes beyond the limit.
This is to (at least) handle the case where the user is moving three fingers, and then one of the fingers stops but the other two continue.
This is to eliminate the need for template loading/saving logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)
This is to force React to reuse nodes when scrolling is performed, rather then delete one and create another.
This is to handle cases like `if (foo) /blah/.exec(foo)`, where looking at the previous token does not help.
This is to maintain compatibility with W3C touch "end" events, where the active touches don't include the set that has just been "ended".
This is to resolve many edge cases that come about from a listener on a lower-in-DOM node causing structural changes at places higher in the DOM.
This is to squash any breaks from the body.
This is to work around flow's missing support of enums.
This is tricky because listeners can be invoked with varargs.
This is typically caused by a large rebase or a Watchman re-crawl.
This is undocumented, but Nuclide uses it in the AtomTextEditor wrapper.
This is used by `ReactDOMComponent` to mount, update, and unmount child components.
This is used by a bazillion of npm modules we don't control so we don't have other choice than defining it as an env variable here.
This is used by delete mutations to ensure both the current and past edges are no longer accessible.
This is used by delete mutations.
This is used by ko.applyBindingsToNode and getBindingsAndMakeAccessors.
This is used by ko.applyBindingsToNode.
This is used by the `RelayQueryTransform` subclass to implement mapping and filtering behavior, but purely-visitor subclases do not need to follow this convention.
This is used for changes that span multiple lines, or change the way lines are divided into visual lines.
This is used for dispatching mouse events in the text editor.
This is used for routes, containers, and mutations.
This is used for such as IfStatement which does not have "else" chunk.
This is used for the browser version of ESLint.
This is used for the root of new forks.
This is used for unary operators (e.g. `typeof`), `function`, and `super`.
This is used in a process for switch statements.
This is used in order to check whether or not `this` binding is a reference to the global object.
This is used to auto-alias fields in generated queries, so that developers composing multiple components together don't have to worry about collisions between components requesting the same fields.
This is used to conserve memory by avoiding array allocations, and thus sacrifices API cleanness.
This is used to conserve memory by avoiding array allocations.
This is used to detect a mix of reassigned and never reassigned in a destructuring.
This is used to detect the first throwable node in a `try` block.
This is used to enforce the order in which `ReactUpdates` updates dirty components.
This is used to ensure the scrollable area is big enough.
This is used to help find tests that are not terminating on their own.
This is used to keep track of cells that are in the process of rendering.
This is used to run all specs in a project.
This is used to: - Determine if the scroll view has been scrolled and therefore should refuse to give up its responder lock.
This is useful because there is no way to synchronously read the value because it might be driven natively.
This is useful for creating resizable rounded buttons, shadows, and other resizable assets.
This is useful for mocking a module that the module under test requires.
This is useful for renaming files.
This is useful when a client is cleaning up a React tree, and also knows that the container will no longer be needed.
This is useful when performing operations that could remove dom nodes and place them back in, resulting in focus being lost.
This is useful when using a semi transparent status bar color.
This is very convenient when implementing things like cascading dropdowns.
This is very different than taking all of the recently moved touches and storing their centroid as `dx/dy`.
This is weird because we want to remove the module but not it's node_modules folder allowing for this allows us to not worry about the order of operations
This is woefully incomplete.
This isn't a perfect solution, since it can still leave diagnostics up in other files, but this is a corner case and doing this is still better than doing nothing.
This isn't ideal and should be fixed but will do for now...
This isn't ideal but realistically iterating through even a few hundred editors shouldn't be a real problem.
This isn't quite as efficient as Q's implementation of denodeify, but it's considerably less code.
This isn't strictly necessary (since all the information can be derived from the original event), but it makes our dashboard a little easier to process.
This isn't strictly necessary, but keeps the cache as small as possible.
This just makes things easier to debug for us.
This kind of test is performed by the .containsDir() method.
This kind of test is performed by the .containsFile() method.
This lets us to test the null cases all at once.
This line needs to be generated.
This list is generated using: `require("repl")._builtinLibs.concat('repl').sort()` This particular list is as per nodejs v0.12.2 and iojs v0.7.1
This list is limited to the properties that will perform best when animated off the JS thread.
This list is not complete.
This list of root files almost always has .git in it.
This little function builds a map of line number in the file to line number in the patch file
This loads the CLI for jasmine-node.
This local field is used by Babel/Acorn.
This logic can technically be fooled if the node has parentheses but there are comments intervening between the parentheses and the node.
This logic is common to all providers and should be abstracted out (t7813069)
This logic protects us from incorrect indices passed from above, and allows us to passively account for profiles being deleted.
This looks DOM specific but these are actually isomorphic helpers since they are just generating DOM strings.
This loop continues until one of the following is true:  1.
This loses some information about the filesystem, but creates tarballs that are supported by more versions of tar, especially old non-spec-compliant copies of gnutar.
This makes it hard to reliably measure the position of things, since that requires inserting an extra span.
This makes it possible for get-def to operate on the unsaved content in the user's editor rather than what is saved on disk.
This makes it's proxies unsuable, and calls the `dispose` method on the remote object.
This makes sense because C++ will likely remain faster than JS when doing raw CPU-intensive sorting.
This makes sure that own properties are retained, so that decorations and such are not lost along the way.
This makes sure that the popup disappears when you ctrl+tab to switch tabs.
This makes sure that we're using the plugins installed in the react-native package.
This makes the loop below, which gathers the positions of all the characters on the line, do an amount of layout work quadratic to the number of characters.
This makes the node inspector not load all the source files on startup.
This makes the node inspector not load all the source files on startup:
This makes the progress smoother.
This map is a disambiguator.
This marker adds some UI to the gutter.
This marker underlines text.
This matches the Backbone example, which displays all todos on an invalid route.
This matches the property of native CompositionEventInterface.
This matches the semantics of the native select event.
This may add duplicates, but they will eventually be flattened.
This may be called after this package has been deactivated and the SearchResultManager has been disposed.
This may be done in the worker thread.
This may change the aspect ratio of the image, distorting it.
This may create dispatch behavior that differs than web touch handling.
This may get expensive in the future as the module map becomes smarter.
This may have a message, node type, line, and/or column.
This may have side effects, but any external subscriptions or data created by this method must be cleaned up in `componentWillUnmount`.
This may make flow types annoying though.
This may not always be desirable.
This may not always be true forever.
This may not be an interface due to "instanceof WebInspector.RemoteObject" checks in the code.
This may occasionally result in a false positive: cancelling events that were generated by a user action (not Mercurial) that occur shortly before Mercurial modifies the working directory.
This may only happen if setPage() was called while we were evaluating the expression.
This may only occur in the main thread and is the responsibility of ReactEventListener, which is injected and can therefore support pluggable event sources.
This may or may not contain a space character, in such a case we'll deal with multiple class names at once.
This means character offsets will differ between the two APIs.
This means its state is no longer 'ignored', as it was listed in the cache.
This means its state is no longer 'modified', as it was listed in the cache.
This means that any field below `like_sentence` may change as a result of feedback_like.
This means that any state that affects the height, such as tap to expand, should be stored outside the row component to maintain continuity.
This means that it is extremely difficult to have them upgrade the version and because there's only one global version installed, it is very prone to breaking changes.
This means that it is non-negative.
This means that the information is first class (it can be passed around), but cannot be inspected.
This means that the node does not have to be contained by a document in order to be considered valid.
This means that the parser, at that point, had already added its arguments to the undefs array and here we undo that.
This means that the returned x, y are relative to the origin x, y of the ancestor view.
This means that the server exists, but it is not responding, typically because it is busy doing other work.
This means that there are rare edge cases where one JavaScript engine complains about your regular expression while others don't.
This means that we need to avoid the state when same node node is contained in the .children map of several other nodes.
This means that we need to proxy up their entry events so that those entries won't be missed, since .pipe() doesn't do anythign special with "child" events, on with "entry" events.
This means the group will be presented to the user as one unit, rather than pieces popping in sequentially.
This means the production the parser parses is only used as an expression.
This means the production the parser parses is used as a part of a potential pattern.
This means the values in this map must be absolute paths.
This means they may be negative or exceed the element boundaries (which is possible using inertial scrolling).
This means we can check all the application code without having to worry about issues caused in the parser tokens.
This means we expect the on*Change handlers to be in charge of updating our `selectedValue` prop.
This means we need to wrap the appropriate functions so they do not include the extra information added by Chromium's chatty logger.
This means, of course, that it'll only work if you already have a tar implementation, and some of them will not properly unpack the fixtures anyway.
This meant that empty fields, would be stripped instead of being used to produce an intersection with the tracked query.
This method `__method` is protected.
This method assumes console is available.
This method assumes the pathSet should be populated with file paths that are *RELATIVE* to the localDirectory passed into PathSetUpdater::startUpdatingPathSet.
This method attempts to mirror the text the given keystroke would have if displayed in a system menu.
This method auto-registers the "-V, --version" flag which will print the version number when passed.
This method can fail if the image cannot be found, or fails to download.
This method cannot throw.
This method checks variables on the node of the type.
This method creates the baseline options instance
This method doesn't care whether the new component and the old one are actually the same.
This method has side effects and is not idempotent.
This method has side effects because events get registered.
This method is designed to be overridden by subclasses that need to handle missing properties, etc.
This method is invoked as part of initialize(), and so, it should be safe to invoke any of the getter methods on this class in this method.
This method is invoked before `getInitialState` and therefore cannot rely on `this.state` or use `this.setState`.
This method is like `_.clone` except that it recursively clones `value`.
This method is like `_.isArrayLike` except that it also checks if `value` is an object.
This method is meant to be triggered by the context-menu click.
This method is platform dependent: it accepts almost any regular expression values but then tries to compile and run them using system's RegExp object.
This method is required by the service framework.
This method is required in order to use this view as a Touchable* child.
This method may return `null` if the call to `hg diff` fails.
This method must be invoked after this._items has been modified.
This method needs to be present for TabView.
This method returns the first argument provided to it.
This method should always* be called before rendering a child component whose fragment was deferred (unless that child can handle null or missing data).
This method should be used as the callback to onFocus in a TextInputs' parent view.
This method should only be called when value type is Object.
This method skips over all space characters.
This method supports all numeric literals described in section 7.8.3 of the EcmaScript 5 specification.
This method takes the same arguments that `Array.prototype.forEach` takes.
This method will fail if this._instance is a primitive component.
This method's implementation was heavily influenced by the scanNumericLiteral function in the Esprima parser's source code.
This method's implementation was heavily influenced by the scanPunctuator function in the Esprima parser's source code.
This might be better in normalize-package-data if it had access to the file path.
This might be fixed in react-router 2.0
This might need to be done one level higher within main.js.
This might not apply to all properties...*
This might not be safe.
This might not be true in the case of a simple test that only requires React and the TestUtils in conjunction with an inline-requires transform.
This mimics the output that `arc lint` can provide.
This mixin provides safe versions of InteractionManager start/end methods that ensures `clearInteractionHandle` is always called once per start, even if the component is unmounted.
This mock relieves their tests from depending on the real ErrorUtils module.
This modifies pattern object to impose strict mode.
This modifies pattern object to make modules.
This modifies pattern object to make strict mode.
This module calls into get-uid-gid.js, which sets the uid and gid to the supplied argument, in order to find out their numeric value.
This module contains internal Relay modules that we expose for development tools.
This module contains some utilities for dealing with "container" (pane or pane axis) visibility.
This module doesn't export anything
This module helps support a hack to easily introduce new lines into the AST.
This module monkey-patches Atom's babel compiler so that we can apply custom transforms on Nuclide code only.
This module only has the hooks: see ReactDefaultPerf for the analysis tool.
This module provides an alternative parser (`parse_dammit`) that exposes that same interface as `parse`, but will try to parse anything as JavaScript, repairing syntax error the best it can.
This modules adds a jasmine matcher toEqualSpecsIn that can be used to compare the specs in two different "describe" functions and their result.
This must be a "directory"
This must be a static image resource inside the app.
This must be a valid UTF-8 string, and will be sent exactly as specified, with no additional encoding (e.g. URL-escaping or base64) applied.
This must be constructed after the query parameters have been parsed.
This must be done after setting the new `this._localPath`.
This must be done before setting the new `this._localPath`.
This needs to be the canonical type definition so that we can use these in the service framework.
This never happens, but you can't be sure without tests
This new dialog will be prefilled with the info from the default connection profile.
This next line isn't necessary in a proper browser environment, but jsdom doesn't uncheck the others in a group (which makes this whole test a little less effective)
This no longer adheres to the class pattern, so do not use new to call it.
This node is a FunctionExpression or a FunctionDeclaration node.
This node is an ArrowFunctionExpression.
This node is not intended to have any features besides containing text content.
This node is one of BinaryExpression or ConditionalExpression.
This node is used like a Builder.
This node isn't populated in the cache, so presumably none of its descendants are.
This node might be from another React instance, so we make sure not to examine the node cache here
This node must not be part of a React tree (or is unmounted, potentially).
This node type is one of `Program`, `FunctionDeclaration`, `FunctionExpression`, and `ArrowFunctionExpression`.
This nomenclature is not completely final.
This number seems to be a good enough number to avoid any memory leak while not slowing down initial builds.
This object does a char-by-char scan of the provided source code and produces a sequence of tokens.
This object exists in other packages outside of any model, so objects vended early must still always manipulate the latest model's state.
This object is reused in hasOpeningParen and hasClosingParen to avoid having to allocate a temporary object.
This object is used as prototype for any node created by a builder.
This object must be spread into the container using the spread attribute operator.
This occurs on startup with the loader breakpoint.
This often requires the cursor offset to move more than one unit, in order to visually move one unit.
This one is used to ensure that `someSymbol instanceof Symbol` always return false
This one works, and the last quote is simply ignored
This one works, but since the filename is truncated once a space is found the extraction will not happen because the file has no .zip extension
This only exists because _pendingState is internal.
This only gets called for lazy watchers.
This only handles basic scalars (strings, numbers, booleans) and arbitrarily deep arrays and objects containing these.
This only has an effect when the `usePreviewTabs` setting is enabled in the "tabs" package.
This only really matters for multiline Block comments, but it doesn't hurt for Line comments.
This only works in a few limited cases (where there is no function return value, and the function operates mutatively on parameters).
This opens the view and focuses the search box.
This optimistic response is used to pre-emptively update the client cache to simulate an instantaneous response.
This option is here so that it's accessible and defaults to false when `ReactDOMComponent` and `ReactTextComponent` checks it in `mountComponent`.`
This order of things is important.
This output is in the form of the REVISION_FILE_CHANGES_TEMPLATE in hg-revision-state-helpers.
This package creates, queries and decomposes NuclideUris.
This package only expects one gutter UI.
This parameter is needed when the two source maps aren't in the same directory, and the source map to be applied contains relative source paths.
This path does not leave.
This path is used with the highest priority.
This path may be a symlink.
This pattern is used for parsing the output of grep.
This pattetn is also followed with atom's TextEditor.
This performs the same function as the `cloneWithRows` function but here you also specify what your `sectionIdentities` are.
This pipes all of our console logging functions to native logging so that JavaScript errors in required modules show up in Xcode via NSLog.
This plugin creates an `onChange` event that normalizes change events across form elements.
This plugin creates an `onSelect` event that normalizes select events across form elements.
This plugin is also responsible for emitting `composition` events, thus allowing us to share composition fallback code for both `beforeInput` and `composition` event types.
This prevents logging too much when using transferPropsTo.
This prevents the possibility of an infinite loop if onpopulate were to call expand.
This prevents us having to loop through all of the touches all the time in the most common case.
This prevents zombie buck/java processes from hanging the tests
This primes the cache for the new variables and notifies the caller of changes via the callback.
This probably breaks for non-sibling dirs, but that is not a problem as buildconf only checks for pecl as either a child or a sibling
This probably shouldn't be used publicly.
This problem does not impact ASAP because Safari 6.0 supports mutation observers, so that implementation is used instead.
This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).
This prop will overwrite that config.
This property is only present if an `error` has occurred.
This property will be overridden as true by individual Def instances when they are finalized.
This property will be used as the internal size variable to disallow writing and to issue warnings for writings in development.
This provides a merging strategy that is not available to deep properties which is confusing.
This provides improved Objective-C indentation by aligning colons.
This re-assigns the method in order to preserve function names in stack traces (which are detected by modern debuggers via heuristics).
This reference is inside of a loop condition.
This reference is outside of a loop condition.
This reference is the result of 'getWriteReferenceIfShouldBeConst(variable)', so it's nullable.
This registry keeps track of the React IDs of the components that rendered to `null` (in reality a placeholder such as `noscript`)
This registry keeps track of wrapper classes around native tags.
This relative positioning is to work around the issue that `position: 'head'` doesn't work for overlay decorators are rendered on the bottom right of the given range.
This relies on an implementation detail of the rendering system.
This removes all but the first cursor.
This removes the unwanted click events.
This removes the unwanted keypress events.
This removes trailing whitespace and extra new lines.
This replaces the "persistent-flag" parts of S5.3 step 3
This reporter paints the dots, stars, and x's for specs, as well as all spec names and all failures (if any).
This represents 'moving the cursor to previous line':
This request should fail, but cleanup should occur.
This requires Atom 1.6 or later because it relies on this fix: https://github.com/atom/atom/pull/10486.
This resizer is associated with the column to its right.
This resolves all markers.
This returns `true` when below:  1.
This returns a list of all the contiguous runs of markers within this set of lines.
This returns true if the highWaterMark has not been hit yet, similar to how Writable.write() returns true if you should write() some more.
This row doesn't have a breakpoint: We want to show Add Breakpoint and Add and Edit Breakpoint.
This row has a breakpoint, we want to show edit and remove breakpoint, and either disable or enable.
This rule enforces a naming standard for external modules.
This rule handles a given node as multiline when the closing parenthesis and the last element are not on the same line.
This rule handles the `*` token in module declarations.
This rule prevents requiring Node or Atom builtin modules outside of the top-level scope.
This runs AFTER install or link are completed.
This runs as long as the editor is focused.
This runs in O(n) time.
This saves allocations.
This script bumps a new version for open source releases.
This script expects at least one argument, which is the path to the JavaScript file to run as an Atom test.
This script expects to be passed a directory from which `apm test --one` should be run.
This script publishes a new version of react-native to NPM.
This second call should not kick off a second `hg diff` call, because the first one should be still running.
This section is almost same as "with no BOM".
This seems like it is likely a bug in Atom.
This seems to be tricky given how the DOM of a TextEditor works today.
This segment will leave at the end of this finally block.
This sets up genericTransform so that it can be queried above.
This setting is needed for backwards compatibility with Devtools CodeSchool extension.
This should also be the path prefix checked by the handler we register with `atom.project.registerOpener()` to open remote files.
This should always be ignored.
This should be called when the image renderer is changed to tell the component to re-render its assets.
This should be deprecated.
This should be kept the same as the one in ContentSearchUtils.cpp.
This should be merged into headers.
This should be ok because it will reuse that last suggestion until the mouse moves off of it.
This should be removed once Closure provides standard externs for Map et al.
This should be used for very hot functions.
This should be used to clean up children when this component is unmounted.
This should be used to execute Flow commands that do not rely on a Flow server.
This should contain pixel information such as width, height and resolution to know what kind of buffer needs to be allocated.
This should correspond to the spec/ directory with a fixtures/ subdirectory.
This should fail with an exception Gecko does not error, returns false instead
This should get silently ignored (maybe with a warning), but it shouldn't break React.
This should match resultList.length and markupList.length when we're done.
This should match the paddings in the CSS plus room for the scrollbar.
This should never happen because the server must be started with stderr redirected to a log file.
This should never happen with proper flags, but ignore them to be safe.
This should normally be set to the same value as the `contentInset`.
This should not be named `constructor` since this may not be the function that created the element, and it may not even be a constructor.
This should not happen, but we hide previous popup to be on the safe side.
This should not happen.
This should not happen: `hg log` does not error even if it does not recognize the template.
This should only add '/A/B/C/'.
This should only apply to actual code, not accessing undeclared types.
This should only be called after all configs have been added to the instance.
This should only be called from native code by sending the didUpdateDimensions event.
This should only be for declared types that are not actual modules.
This should only be invoked when it is known with certainty that we are **not** in a DOM transaction.
This should only be used in two-way directives e.g. v-model.
This should only be used on the server.
This should only be used to update DOM properties in `DOMProperty`.
This should only remove '/A/B/C'.
This should probably use disjoint unions.
This should remove whitespace and allow us to have a consistent formatting of all requires.
This should work the same regardless of whether you can use DOM or not.
This shouldn't affect performance though, since LinterAdapter requires this anyway.
This shouldn't be used for the `file-tree` as it's replaced by the `FileTreeContextMenu` API.
This shouldn't happen very often, though, since usually all providers will get registered at startup.
This shouldn't happen, but let's not break things if the API starts returning different things.
This shows at most 3 iterations
This simulates the case where: 1.
This situation also defers the determination of all the expressions nested in the pair.
This skips testing argument types because type metadata for scalar arguments may be omitted by the Babel plugin.
This source code is licensed under the BSD-style license found in the LICENSE file in the root directory of this source tree.
This source code is licensed under the license found in the LICENSE file in the root directory of this source tree.
This source map could also be indexed, but doesn't have to be.
This special property was deprecated and then re-introduced for ES6.
This specific case is a silent failure in cp, install, tar, and most other unix tools that manage permissions.
This splits on whitespace.
This squashes all duplicates that should not be kept.
This squashes all no break markers and any nearby breaks.
This step must come before calling `unloadPackage`.
This stream is shared so that only one client is created when there is more than one subscriber.
This stream won't complete unless the connection closes.
This string is not user-facing.
This style is good against a black content background.
This style is good against a white content background.
This successor is either given by the leftmost child of v or by the thread of v.
This suffices in most situations outside of unit tests, since interface conformance is checked whenever new instances are created using builder functions.
This supertype is shared/abused by both def/babel.js and def/esprima.js.
This supports only FunctionDeclaration.
This tag allow us to uniquely identify this as a React Element
This takes a config object with the following properties:  isCustomAttribute: function that given an attribute name will return true if it can be inserted into the DOM verbatim.
This takes an object and a property name instead of a value to allow us to define the arguments for use by chain before the property exists yet.
This takes in a require node and reprints it.
This target will never produce compilation flags, so make sure to ignore it.
This task is async...
This task is enqueued with a scheduler that defers the work
This task is enqueued with no scheduler
This technique is intended for KO's internal use only and shouldn't be documented or used by application code, as it's likely to change in a future version of KO.
This terribly fragile set of tests matches the character combinations that suffer from this phenomenon on the various browsers.
This test also verifies that if multiple transitions are created at the same time, the last transition becomes the owner.
This test can't actually perform a search because path-search uses watchman and we don't have a good way to mock dependencies.
This test doesn't really have a good home yet.
This test ensures that the broad matching is not done when the matched module is not a direct child of the module doing the requiring.
This test exists to protect against implementation details that incorrectly query escaped IDs using DOM tools like getElementById.
This test for a "thenable" appears to be consistent with the ES6 spec.
This test hinges on these two calls happening within 50 ms of each other.
This test is disabled due to differences in the behavior of Mercurial between v3.3 (where hg grep searches the revision history), and v3.4 (where hg grep) searches the working directory.
This test is executed only once but we still do memoizing since we can use the boxSizingReliable pre-computing.
This test is testing client-side behavior.
This test merely checks if the public API exists.
This test might look like it's just testing ReactMultiChild but the last bug in this was actually in DOMChildrenOperations so this test needs to be in some DOM-specific test file.
This tests that after the install we have a freshly installed version of `bundle-update` (in alignment with the package.json), instead of the version that was bundled with `top-test`.
This throws an error if Object.hasOwnProperty isn't used.
This timeout sets the amount of time to wait *between* bytes sent from the server, and may or may not correspond to the wall-clock time elapsed from the start of the request.
This top level compile function would normally be called on instance root nodes, but can also be used for partial compilation if the partial argument is true.
This translates a scope marker into the appropriate marker based on if the scope was broken or not.
This transport only deals with cross domain requests
This traverses a node to find the first identifier in nested expressions.
This traverses an entire ast and determines which trailing comments are duplicates of other leading comments.
This type represents a Transformer function, which takes in a value, and either serializes or deserializes it.
This type should not be saved -- it contains the user's password.
This unlinks it from tracking this.state.panX
This update shouldn't create a DOM node
This updates state of analysis and calls `enterNode` of the wrapped.
This updates state of analysis and calls `leaveNode` of the wrapped.
This updates the model value from the view value.
This updates the relevant part of the line's DOM structure.
This updates the view value from the model value.
This url style is the one Atom uses for the welcome and settings pages.
This uses a specific scheme in order to traverse the DOM efficiently (e.g. in order to simulate events).
This uses the fact that children names (derived from their uris) are unmodifiable.
This utility unwraps contiguous leading and trailing markers from lines and then inserts pre and post before adding the markers back.
This value will be replaced with the value form the config.
This value, if given, is stored in every node, whether `locations` is on or off.
This variant does not make sure that the private key is valid.
This verifies that CircularBuffer implements Iterable correctly by demonstrating that it works with for/of.
This verifies that the server-side stuff still works.
This version is suitable for Node.js.
This version of slice children ignores empty child components.
This version of the code is stale.
This view assumes it's always inside the main split view element, not a sidebar.
This view contains the ConnectionDetailsForm on the left side, and a NuclideListSelector on the right side that displays 0 or more connection 'profiles'.
This was already updated to a diff result earlier.
This was factored out into this ASAP package.
This was fixed in io.js version 1.5.0 As of 2015-07-20, it is still unfixed in node: https://github.com/joyent/node/issues/25657
This was heavily benchmarked.
This was present in node-ignore 2.x, but dropped for now as of 3.0.10.
This was removed before it had fully appeared.
This was removed before it had fully entered.
This was the last one, and no stats were needed
This watchman subscription is used to determine when and which files to fetch new statuses for.
This way the intermediate state isn't to go to 0 and trigger this expensive recursive detaching to then re-attach everything on the very next operation.
This way you can provide both, but tell Nuclide to ignore the `linter` provider so that duplicate results do not appear.
This way, another package could require nuclide-logging during activation without worrying about introducing a significant startup cost.
This way, back-pressure is actually determined by the reading side, since _read has to be called to start processing a new chunk.
This way, enabling the preference by default should still work fine for non-Differential users.
This way, it might trigger a nextTick recursion warning, but that's not so bad.
This way, when a node is scrolled out of the view, another is added with just the same index.
This will add the toplevel forms of the parsed file to the `Program` (top) node of an existing parse tree.
This will affect runs, whereas before we were careful to not affect runs of markers.
This will also help to normalize flags and to not to insert duplicates.
This will always throw an exception, but that's irrelevant to this test.
This will assert below
This will be a proper iterable 'Map' in engines that support it, or a fakey-fake PseudoMap in older versions.
This will be added to the SourceMapGenerator in the sourcesContent field.
This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode
This will be called when we need to handle an action on a sub-state.
This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode
This will be non-null if the user has entered distraction-free mode without toggling it off, but has manually opened one or more of the providers.
This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable key:                 The key identifying the property to be written.
This will be set to an array of strings when copying, so that, when pasting, we know what kind of selections the copied text was made out of.
This will be un-marked in unmarkExtraneous, where we mark as not-extraneous everything that is required in some way from the root object.
This will be useful for building up registries manually.
This will behave strangely in the face of multiple cursors.
This will bubble up and cause runCommand() to reject.
This will fail fast (faster than infoService) when we don't have cached credentials yet.
This will generally include most components that you define in your own app.
This will get a list of all flow types that are declared within root's AST
This will get a list of all identifiers that are declared within root's AST
This will get a list of all identifiers that are not from a declaration.
This will get a list of all identifiers that are used but undeclared.
This will get a list of all types that are not from a declaration.
This will get a list of all types that are used but undeclared.
This will get a list of identifiers for JSXElements in the AST
This will hit the cache.
This will log a single deprecation notice per function and forward the call on to the new API.
This will make our error show up in all files.
This will make sure it's marked and won't warn when setting additional properties.
This will make sure we have a repository stack active whenever we have a mercurial repository added to the project.
This will make tests way more readable.
This will never resolve.
This will not invoke `shouldComponentUpdate`, but it will invoke `componentWillUpdate` and `componentDidUpdate`.
This will not only add missing keys, but will also modify values to match.
This will only be an issue if the system cannot find `pythonExecutable`.
This will remove empty strings but that's OK.
This will report any errors encountered before ExceptionsManager is configured.
This will return a GraphQLFieldConfig for our ship mutation.
This will return a new config with `"extends": "eslint:recommended"` and only the rules which have configurations different from the recommended config.
This will schedule next retry or return false
This will scroll viewport and trigger its refresh.
This will show a warning if data has already been added to the instance.
This will sort by: - errors before warnings - local before remote - Remote machine name/port - full path
This will speed things up and remove lag.
This will stop any animations running on the value and update all the bound properties.
This will test the various cases for the root node in `restoreFragmentDataFromCache`.
This will throw if it's invalid anyway
This will throw if package.json does not exist
This will throw later in _renderValidatedComponent, but add an early warning now to help debugging
This will traverse through all node_modules folders, resolving the dependencies object to the object corresponding to the package that meets that dep, or just the version/range if unmet.
This will undo the transform `getRawPosition` makes to position.
This will usually be snapped to a 4 milisecond delay, but once we're flushing, there's no delay between events.
This will walk up the DOM if a node's siblings have been exhausted.
This will work in simple cases, anyway.
This won't be valid JSON, but since we are using a real JS parser we need to make sure that this sort of input doesn't do really weird stuff.
This won't remove the comment, it'll leave an empty comment block.
This works except for the last case of open into the current file.
This works in io.js as of v2.4.0 (possibly earlier versions, as well).
This works well thanks to a neat trick defined on the sourcemap spec that makes use of of the `sections` field to combine sourcemaps by adding an offset.
This would be a good time to rethrow if any of the event handlers threw.
This would be easier to follow with a .once() handler in flow(), but that is too slow.
This would be easy if we had a single node to watch, but binding contexts can be used by many different nodes, and we cannot assume that those nodes have any relation to each other.
This would be more elegant with a .once() handler in flow(), but adding and removing repeatedly is too slow.
This would feel broken - better deactivate the working sets.
This would probably be pretty rare, though.
This wrapper holds altered versions of all the underscore functions.
This wraps each word onto its own line.
This, combined with our use of diff queries (see `diffRelayQuery`) means that we only go to the server for things that are not in (or not on their way to) the cache (`RelayRecordStore`).
Those are errors in deserializing a stream of changes.
Those are from the current case and the body of the previous case.
Those are needed for Travis or not configured git environment
Those are warned by prefer-smaller-scope.
Though groups can be nested, the most useful to hide is almost certainly the topmost, so that's what we do.
Though once we start supporting ordinary .cpp files, then we likely need to be even more careful about choosing the architecture flavor.
Though this field can have subselections, there is no way we can infer this from `address: null`.
Threads are used to traverse the inside and outside contours of the left and right subtree up to the highest common level.
Threshold in pixels (virtual, not physical) for calling onEndReached.
Throttle the progress reporter to 1 time each sec
Throughout this file we use Object.defineProperty to prevent redefinition of exported properties.
Throw all the other errors in a setTimeout, which will throw each error one at a time
Throw an exception because of the token.
Throw away obsolete uncommitted text.
Throw out the first chunk (anything before the first '--- ' sequence), because it is not part of a complete diff.
Throws EEXIST error if the directory already exists.
Throws ENOENT if the path given is nested in a non-existing directory.
Throws if a named type referenced in an RPC interface is not defined.
Throws if no updates are currently being performed.
Throws if the input is not valid xml.
Throws if the message is malformatted.
Throws the supplied error in a new execution loop.
Thus this file can also be used to customize Jasmine for a project.
Thus we have to make sure the key only gets set for valid values.
Thus we need to do this adjustment.
Thus we need to figure out the ranges the segments occur in.
Thus we won't ever have a problem locating the value that we need to replace.
Thus whenever the parent context is updated, this context will also be updated.
Thus, `textInput` is the best available event to identify the characters that have actually been inserted into the target node.
Thus, an array of style objects (instances of StyleSheet.create), are individually resolved to, their respective objects, merged as one and then returned.
Thus, decide if should route.
Thus, for all IE versions, we use the old IE API to create our selections.
Thus, if the conversion succeeds, we use it (this is the milliseconds-since-epoch case).
Thus, it must be an identifier.
Thus, the path returned from editor.getPath() (which is what is used in HgRepository) would fail a real 'contains' method.
Thus, the script id of the event is not know by Node Inspector, but the break even must not be ignored.
Thus, when it does the binary negation, it casts it into a signed value, (positive 0xff80).
Thus, when possible, initialize the data lazily.
Ticks, or domain values for ordinal scales.
Time since last uuid creation (in msecs)
Time to dust off the old binary search robes and wizard hat.
Timeouts occur quite frequently when the network is unstable.
Timer for updating the native module values at the end of the frame.
Timezone offset in minutes.
Timing's requestTime is a baseline in seconds, rest of the numbers there are ticks in millis.
Title for the custom pane item being created.
To "stop" an application when a view should be destroyed, call `AppRegistry.unmountApplicationComponentAtRootTag` with the tag that was pass into `runApplication`.
To accomplish this, provide route objects to the navigator to identify each scene, and also a `renderScene` function that the navigator can use to render the scene for a given route.
To achieve this, we create a UNIX domain socket whose location we pass to Atom so we can redefine `console.log()` to write to the UNIX domain socket.
To add a View as an Atom workspace pane, we return `DiffViewElement` which extends `HTMLElement`.
To allow " " to not assume the default value
To avoid a cyclic dependency, we create the final class in this module
To avoid this mutable state leaking across modules, I've kept them isolated to this module.
To avoid this, ReactMultiChild calls `prepareToManageChildren` before we change `_renderedChildren`, at which time the container's child nodes are always cached (until it unmounts).
To be discussed, but that's the implementation now
To be later called using the check() function by the parser.
To be updated as jquery-tmpl evolves.
To cancel, call clearInterval on the returned interval handler.
To change the animation or gesture properties of the scene, provide a `configureScene` prop to get the config object for a given route.
To change this behavior this comparator return -1 in the case events startTime's are equal, so both events got placed into the result array.
To create a new one, you must pass an object with the following properties:  - file: The filename of the generated source.
To create a new type of `ReactClass`, pass a specification of your new class to `React.createClass`.
To create a new type of component that handles interaction using the `Touchable` mixin, do the following:  - Initialize the `Touchable` state.
To create an empty directory as leaf pass a name with '/' suffix.
To detect code like `window.window.eval`.
To do that, we need a hook into the service framework so we can learn when a given service instance is gone.
To enable debugging, we need to set our pattern or append it to any existing pre-configured pattern to avoid disabling logging for other packages
To ensure no conflicts with other potential React instances on the page
To execute code outside of any domain, the following dance is necessary.
To extract it current and last mapping is used.
To get around this without having to rewrite the whole thing in one go, we just use the store API directly.
To get that we add dummy leading spaces to those rows.
To get the entire config object, use `atom.config.get`.
To get the length of the sequence, call `Reader.length`.
To have the roots colored consistently we manually add all parents of all of the modified nodes up till the root
To help development we can get better devtools integration by simulating a real browser event.
To ignore the first text "global".
To improve this, find a way to disable the `UIScrollView` after a touch has already started.
To know if global events are to be dispatched
To know if the callbacks have already been called at least once
To learn how to use the Navigation API, take a look at the following example files:
To learn more about React, visit: https://facebook.github.io/react
To learn more about Relay containers, visit: https://facebook.github.io/relay/docs/guides-containers.html
To learn more about Relay root containers, visit: https://facebook.github.io/relay/docs/guides-root-container.html
To learn more about Relay routes, visit: https://facebook.github.io/relay/docs/guides-routes.html
To learn more about Relay.QL, visit: https://facebook.github.io/relay/docs/api-reference-relay-ql.html
To learn more about writing GraphQL schemas for Relay, visit: https://github.com/graphql/graphql-relay-js
To listen to changes on all key paths, use `atom.config.onDidChange`.
To maintain consistency, we validate that any new mapping being added falls in to one of these categories.
To make it easier for developers it uses some logic to identify with which version to publish the package.
To make sure we actually installed the local version of react-native, we will create a temp file inside the template and check that it exists after `react-native init
To make sure we only have one copy of sessionId, we store it as a property of `global` object with SESSION_ID_KEY as key.
To make sure we only have one instance of log4js logger initialized globally, we save the logger to `global` object.
To make this really solid, we should also probably trigger the linter for the active text editor.
To not mess with JSON output
To observe changes on the entire config, use `atom.config.observe`.
To override this default behavior, override `touchableLongPressCancelsPress` to return false.
To override, use `Relay.injectNetworkLayer`.
To port this to other platforms, provide an alternate code path for defining the md5_hash_hex function.
To prepare the shifts, we have to adjust change(w+), shift(w+), and change(w-).
To prevent further calls using add
To prevent memory excaustion, the task queue will periodically truncate already-completed tasks.
To prevent memory exhaustion, the task queue will periodically truncate already-completed tasks.
To publish a new version, just release a valid semver tag.
To recognize this format: 1.
To request a high priority event, we induce a mutation observer by toggling the text of a text node between "1" and "-1".
To return the position we are searching for, we must first find the mapping for the given position and then return the opposite position it points to.
To separate the current and the head is in order to not make useless segments.
To show and hide the registered view inside the side bar, dispatch the named event via `atom.commands.dispatch(atom.views.get(atom.workspace), 'command-name')`.
To signal this, we wrap them into an opaque-ish object to discourage reaching into it until the API stabilizes.
To simulate this we render the gradient twice as large and add double color stops.
To skip nested scopes.
To solve this problem, we patch the errors in loggingEvent.data and convert it to an Object with 'name', 'message', 'stack' and 'stackTrace' as fields.
To split while stripping out any leading/trailing space, we match on all non*-whitespace.
To test against the in-memory cache, we create a folder manually and request the versions
To update the data in the datasource, use `cloneWithRows` (or `cloneWithRowsAndSections` if you care about sections).
To use the validator call the validate function with an instance object and an optional schema object.
To work around this, we introduce an artificial delay for the watchman updates for our files of interest, which allows time for a wlock watchman update (if any) to arrive and cancel them.
To work around this, we special-case evaluation at the current stack depth.
To workaround this, we reach into the internals of the ViewRegistry and update the entry in the map manually.
Todo: Check that internal state is preserved across transitions
Toggle state similarly to user click.
Toggle whole class name
Toggle with Inspector.
Toggles the Codewalk description between being shown and hidden.
Toggles the existence of a value in a set.
Token on the next line, or comment without blank line
Token to look for to determine if an error occurred.
Token-specific context update code
Tolerate 1-pixel error due to double-to-integer rounding errors.
Top level file pragmas that must not exist for the meta transform to be applied.
Top row - transform empty array into new array via additions
Top-level should never reach here.
Touch objects can fulfill the role of `DOM` `Event` objects if we set the `changedTouches`/`touches`.
Touch position/time tracking information by touchID.
Trace is a subtype of LinterTrace, so copying works but aliasing does not.
Track a set of values against a named event.
Track an analytics event and send it off immediately.
Track dismiss gesture
Track each event in a stream of TrackingEvents.
Track the current IME composition fallback object, if any.
Track the files that we have seen updates for.
Track the input node that has focus.
Track the last registered view ID in case no user selection is ever made.
Track timings of all function calls, method calls, and object creations.
Track unmatched elements for set filters
Track whether a listener exists for this plugin.
Track whether we've ever handled a keypress on the space key.
Tracked nodes are returned if either a child field was tracked or missing fields were split into a new query.
Tracker uses tracked children and keeps requisite fields
Tracking directory status isn't straightforward, as Hg only tracks files.
Tracking of "internal" scripts, like eval containing a static string
Tracks requests for expression evaluation, keyed by the expression body.
Tracks the maximum line length so that the horizontal scrollbar can be kept static when scrolling.
Tracks velocity state to create fluid motions as the `toValue` updates, and can be chained together.
Tracks when resetInput has punted to just putting a short string instead of the (large) selection.
Tracks when resetInput has punted to just putting a short string into the textarea instead of the full selection.
Tracks which cursorActivity handlers have been called already
Trailing optional means all optional parameters that have only optional parameters after them.
Trailing punctuation in header
Transaction can be applied (optimistic) or committed (sent to server).
Transaction can be committed or rolled back.
Transaction can be recommitted or rolled back.
Transaction has been created but an optimistic update has not been applied.
Transaction hasn't yet been sent to the server.
Transaction was committed but another transaction with the same collision key is pending, so the transaction has been queued to send to the server.
Transaction was queued for commit but another transaction with the same collision queue failed to commit.
Transaction was sent to the server for comitting and a response is awaited.
Transaction was sent to the server for comitting but was failed.
Transactional plugin API: - A module that has an `initialize` method that returns any precomputation.
Transclude, compile and link element.
Transfers results to upper context if this context is in test chunk.
Transform Relay.QL`...`.
Transform `git` bit numbers to `StatusCodeNumber` format.
Transform cannot find this call site.
Transform dot notation to bracket notation
Transform filePath's to absolute paths.
Transform lines into file matches.
Transform that operates on the raw string output.
Transform the matched element range to the hint range.
Transform the messages into actions and merge them into the action stream.
Transform the state based on the given action and return the result.
Transformer's are added to a registry and indexed by the name of the type they handle (eg: 'Date').
Transforms a TemplateLiteral node into a RelayQLDefinition, which is then transformed into a Babel AST via RelayQLPrinter.
Transition back and unmount the current scene.
Transition property/event sniffing
Transition to an existing scene without unmounting
Translate PickerIOS prop and children into stuff that RCTPickerIOS understands.
Translate SPDY v3 headers to HTTP headers.
Translate and scale the layout to fit the requested size.
Translate native top level events into event types.
Translate prop and children into stuff that the native picker understands.
Translates Chrome dev tools JSON messages to/from dbgp.
Translates a 255 RGB value to a 0-5 ANSI RGV value, then returns the single ANSI color code to use.
Translates the CLI options into the options expected by the CLIEngine.
Translates this object's internal representation of a menu item to Atom's representation.
Translating matVar by opVar
Translation from modifier key to the associated property in the event.
Transpile this code (since it will use anonymous classes and arrow functions).
Transports bindings 1) key is the dataType 2) the catchall symbol "*" can be used 3) selection will start with transport dataType and THEN go to "*" if needed
Traps a top-level event by using event capturing.
Traps top-level events by using event bubbling.
Traverse `node` splitting off deferred query fragments into separate queries.
Traverse a language definition with Depth First Search
Traverse a node ID, calling the supplied `cb` for each ancestor ID.
Traverse connection edges, reusing existing edges if they exist
Traverse from `start` to `stop` one depth at a time.
Traverse its children
Traverse prototype chain until we find the owner.
Traverse the parent chain of `node` wrapping it at each level until it is either:  - wrapped in a RelayQuery.Root node - wrapped in a non-root node that can be split off in a "ref query" (ie.
Traverse the path until we see the first logical expression.
Traverse until we hit another separator or we reach the end of `destinationID`.
Traverse upwards looking for context.
Traverses 2 Pattern nodes in parallel, then reports self-assignments.
Traverses a given code path then returns the order of traversing.
Traverses a query and payload in parallel, writing the results into the store.
Traverses all segments in this code path.
Traverses an input query, updating the passed in `SplitQueries` state object to contain a nested structure representing the required and deferred portions of the input query.
Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that should would receive a `mouseEnter` or `mouseLeave` event.
Traverses the parent path between two IDs (either up or down).
Traverses up the ancestors of the supplied node to find a node that is a DOM representation of a React component rendered by this copy of React.
Traversing the AST is an error-prone process and it's hard to be sure we've handled all the cases.
Treat `mockQuerySet.bar` as deferred.
Treat all other whitespace like ' '.
Treat all queries as deferred.
Treat array-ish objects as a byte array.
Treat each array item as a scalar.
Treat fieldName as regex or object containing predicate
Treat undefined as null
Treated specially to make sure line objects move the way they are supposed to.
Tree outline should be marked as edited as well as the tree element to prevent search from starting.
Tries to be smart about the fixes and won't apply fixes over the same area in the text.
Tries to concat segments at segmentIndex and segmentIndex + 1.
Tries to find a URL that contains more information about the revision.
Tries to find a line with a stateAfter, so that it can start with a valid state.
Tries to rebase an array of history events given a change in the document.
Tries to stringify with JSON.stringify and toString, but catches exceptions (e.g. from circular objects) and always returns a string and never throws.
Trigger Hyperclick on NSLog(...)
Trigger a token event.
Trigger a websocket reconnect.
Trigger an event on self.
Trigger any bound ready events
Trigger autocompletion.
Trigger first state change after onLayout fires
Trigger mock 'file add' and 'file remove' events, and check that they result in changes to the pathSet.
Trigger the fetch through the **internal-only** API.
Trigger the memory usage check but do not wait for it.
Trigger this event next time we switch to an editor with this buffer.
Triggered event must either 1) have no namespace, or 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
Trim absolute bower path from json
Trim and add an extra new line
Trim leading and trailing spaces from the string
Trim leading and trailing whitespace to prevent bad filenames.
Trim leading whitespace.
Trim out all falsy values from an array.
Trim possible empty head/tail text and comment nodes inside a parent.
Trim the `dirName` off the `filePath` since that's shown by the group
Trim the new sides of the new root.
Trim the selector passed to compile to avoid treating leading and trailing spaces as combinators
Trim trailing and leading spaces
Trim trailing slashes
Trim trailing whitespace, if the end location is not already the same as the start location.
Trim whitespace, otherwise indexOf won't work as expected
Trivial case: no characters to skip.
Trivial, but provided for completeness.
True - descend, False - don't.
True enables recommend rules and environments.
True if Object.defineProperty works as expected.
True if the error was already emitted and should not be thrown again
True if the supplied DOM node has a direct React-rendered child that is not a React root element.
True when shift is held down.
Truncate HTML string and keep tag safe.
Truncate `str` into total width `max` If `str` is shorter than `max`,  will return `str` unaltered.
Truncate long types for readability
Trust units reported by jQuery.css
Try `accumulate` for something cleaner.
Try again - we've informed the component about the error, so they can render an error message this time.
Try again on failure, for up to 1 second.
Try convertible dataTypes
Try executing a function n times recursively.
Try finding flags for a related source file.
Try finding line comments
Try locating the manifest tool
Try running search commands, falling through to the next if there is an error.
Try the string as a key before any manipulation
Try them in reverse order
Try to detect the user choosing select-all
Try to extract the actual "matched" text.
Try to generate a proxy from the file.
Try to get a cached instance of the current component.
Try to get everything in between slashes.
Try to get extractor from mime type
Try to match dirty file changes in the selected directory, Then lookup for changes in the project directory.
Try to minimize operations if there is only one group
Try to open the given `url` with any of the installed apps.
Try to parse the output of grep.
Try to remove any existing exception breakpoint.
Try to remove the temp file if renaming failed.
Try to return a field with matching arguments, but still return a field if the arguments do not match.
Try to skip some text, based on the error message, and then continue
Try to unlink, but ignore errors.
Try with type "junction" on Windows Junctions behave equally to true symlinks and can be created in non elevated terminal (well, not always..)
Trying to access random objects can cause a crash due to insonsistent state of internal properties of wrappers.
Trying to get currentState when mounting App component will likely to have the initial value here.
Trying to go above the root is a no-op.
Trys to print the value out in the best way possible given the different types.
Tuned to spread 3 attempts over about a minute.
Tunnel HTTPS by default.
Turn a Provider into a plain "spec" object consumed by QuickSelectionComponent.
Turn mouse into crosshair when Alt is held on Mac.
Turn off the Microsoft logo on Windows
Turns an array-like object into a real array.
Turns columns into rows and rows into columns.
Turns rgb 0-5 values into a single ANSI color code to use.
Two are provided by default: 1.
Two elements created in two different places should be considered equal for testing purposes and therefore we hide it from enumeration.
Two intersection points.
Two patterns for ignoring dotfiles
Two possible strategies.
Two snapshots live in different workers isolated from each other.
Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.
Type Annotations for Facebook Flow, typically stripped out or transformed away before printing.
Type consumed by the side bar service's `registerView` function.
Type declarations for Atom's extensions to Jasmine v1.3 https://github.com/atom/atom/blob/master/spec/spec-helper.coffee
Type declarations for Jasmine v1.3 https://jasmine.github.io/1.3/introduction.html
Type imports will still be generated for these modules unless they are also provided in 'builtInTypes'.
Type must be one of "text", "gutter", "class", "widget"
Type names may either be simple Identifiers, or they may be qualified identifiers.
Type of HTTP method: 'GET', 'POST', 'PUT', etc.
Type of containing ancestor
TypeScript will look for the .d.ts files in each ancestor directory, so there may not be a file at the referenced path as it climbs the hierarchy.
Types are exported only once they have been finalized.
Types can be a map of types/handlers
Types for the old `flow status` output -- v0.22 and below
Types longer than this will be truncated.
Types of raw signals from the browser caught at the top level.
Types that Relay framework users may find useful.
Typical interface guidelines recommend touch targets that are at least 30 - 40 points/density-independent pixels.
Typically only used internally, but could be used by a custom Animation class.
Typically only used internally.
Typically this is true for all but the "bool" type.
Typically this is used to append Bash "complete_TYPE" functions for custom option types.
Typically, we'll only see IDs with a range of 1-20 (they are recycled when touches end and then start again).
UA sniffing for working around browser-specific quirks
UNC paths are always absolute
UPDATING Compute the position of the end of a change (its 'to' property refers to the pre-change end).
URL is probably better than nothing.
URL without anti-cache param
UTF-16 represents each of Surrogate Pair by 2-bytes
UTF-8 needs 4 bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
UUID timestamps are 100 nano-second units since the Gregorian epoch, (1582-10-15 00:00).
Uint8Array automatically masks with 0xff
Ultimately a bad thing.
Ultimately, Buck should queue things up, but for now, Nuclide should.
Ultimately, we should have a dropdown to let the user specify the Buck project when it is ambiguous.
Un-match failing elements by moving them back to matcherIn
Unable to implement the favicon check due to the WebKit limitations.
Unable to test private variable `resolver`
Unbalanced brackets mean we've reached the start of a method call.
Unbiased estimate of a sample's variance.
Unbind all events (on this namespace, if provided) for the element
Unclear what the contract of this is, but we will not be using it.
Uncomment Javadoc generation
Uncomment these to see the output of the commands.
Uncontrolled selects shouldn't change the value after first mounting
Underlying request is cacheable
Underscore may be freely distributed under the MIT license.
Underscore templating handles arbitrary delimiters, preserves whitespace, and correctly escapes quotes within interpolated code.
Underscore.js 1.4.4 http://underscorejs.org (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.
Undocumented properties
Undoing moves events from done to undone, redoing moves them in the other direction.
Unexpected character.
Unexpected control character
Unexpected escaped character
Unfinished key sequence
Unfortunately an Observable cannot pass an argument (e.g. an exit code) on completion.
Unfortunately jquery-tmpl doesn't expose a version number, so we have to infer it.
Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and Desktop to a lesser extent) that renders both setImmediate and MessageChannel useless for the purposes of ASAP.
Unfortunately we can't elegantly reuse isFunction and isString, here, because this code is executed while defining those types.
Unfortunately we have to support ES3 and cannot have `Map.prototype.size` be a getter method but just a regular method.
Unfortunately, Atom does not give us a way to exclude the 'Inspect Element' item from a custom context menu.
Unfortunately, TestUtils does not seem to turn a click into a change event for a checkbox.
Unfortunately, `hg log -Tjson` is not Observable-friendly because it will not parse as JSON until all of the data has been printed to stdout.
Unfortunately, `onScrollBeginDrag` also fires when *stopping* the scroll animation, and there's not an easy way to distinguish a drag vs.
Unfortunately, due to historical reasons, the `state` has been exposed as public members of the navigator, therefore we'd keep private state as private members.
Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.
Unfortunately, negative numbers aren't quite that straightforward.
Unfortunately, page-title-set never seems to fire, so we listen for frame loads and update the title based on those instead.
Unfortunately, the analogous change was rejected in Node v0.12.x: https://github.com/joyent/node/issues/8997.
Unfortunately, the current set up puts the style properties on the top level props object.
Unfortunately, there is no Promise.isPromise() akin to Array.isArray(), so we use the heuristic that the argument is an object with a then() method.
Unfortunately, there is no way to register for resize events on a DOM element: it is only possible to listen for resize events on a window.
Unfortunately, this does not seem to kill Atom appropriately when the output of atom-script is piped to another process.
Unfortunately, this solution changes the semantics of console.log() to be asynchronous rather than synchronous.
Unfortunately, this wouldn't be noticed until `dispose()` was called on the result when an error would be thrown.
Unfortunately, we can't interrupt the user action, but we can at least reopen the buffer.
Unfortunately, when the temp files in these tests are opened in the editor, editor.getPath() returns the original file path with '/private/' appended to it.
Unhandled 'error' event
Unhandled types below.
Unhide children item.
Unicode character for a right-pointing triangle.
Unicode strings/chars.
UnicodeEscapeSequence
UnicodeNormalizer 1.0.0 Copyright (c) 2008 Matsuza Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.
Union types break the layout chain.
Unique for each copy of jQuery on the page
Unit can be "page" or "line".
Unit tests should use this method to expect and silence console logs.
Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and plain browser loading.
Unknown commands are simply ignored.
Unknown export declaration.
Unknown option `flag`.
Unknown, will loop the values.
Unless errors are allowed to bubble, catch and return them
Unless node process is terminated or `reset()` is called, the session id will keep identical.
Unless the array is empty, in which case we default to 1
Unless we *know* we can detect duplicates, assume their presence
Unless you have a specific reason you should use asyncExecute instead.
Unless you know exactly what you are doing, you should not use this variant, please use 'curve25519' instead.
Unlike `setVariables`, this forces data to be fetched and written for the supplied variables.
Unlike `writePayload`, the payload is not transformed first.
Unlike other browsers, IE doesn't change the checked state of checkboxes/radiobuttons when you trigger their "click" event so to make it consistent, we'll do it manually here
Unlike unsigned numbers, we're going to have to worry a bit more about how we put values into arrays.
Unmark the component as having rendered to null: it renders to something now.
Unmarshal and object using the appropriate unmarshal function.
Unmock timer functions.
Unmount children that are no longer present.
Unmount component at container ID by iterating through each child component that has been rendered and unmounting it.
Unmount the ConnectionDialog and clean up the host element.
Unmounted components are inactive and cannot receive new props.
Unmounts a component and removes it from the DOM.
Unmounts a component and sends messages back to iOS to remove its subviews.
Unmounts a rendered child.
Unmounts all rendered children.
Unmounts and destroys the React component rendered in the `container`.
Unordered list indentation
Unowned projects shouldn't invoke Buck again.
Unpack sign, exponent, fraction
Unpack to disk so case-insensitive filesystems are consistent
Unpipe a stream from all destinations.
Unreachable control statements.
Unregister for all remote notifications received via Apple Push Notification service.
Unresolvable or dynamic expressions are ignored.
Unrolls an array comparison specially for matrices.
Unsafe characters that are silently deleted by one or more browsers (cx)
Unsafe comment or string (ax)
Unset styles on `lastProp` but not on `nextProp`.
Unset working flag when done
Unshift should *always* be something directly out of read()
Unsign crc32 hash so we do not base62 encode a negative number.
Unsubscribe before the process is "created".
Unsubscribe from removedRepos.
Unsubscribe from the old `this._localPath`.
Unterminated `patternNode` is the same as containing every descendant sub-field, so `subjectNode` must be in the intersection.
Until ECMAScript supports array subclassing, prototype injection works well.
Until it is fixed, mocking the entire node module makes the problem go away.
Until then, collect all events.
Until then, let's just try really hard to minimize the number of things we do that the component can see.
Unwrap any wrapped objects.
Update _fileToProviders.
Update _providerToFileToMessages.
Update `lastIndex` before `_mountIndex` gets unset by unmounting.
Update `savedContents` on buffer save requests.
Update a component using a new element.
Update a connection with newly fetched edges.
Update a node or a branch under any of the roots it was found at
Update a prop's value on a vm.
Update active repository stack, if needed.
Update centroids step.
Update current marker set
Update expand all button.
Update function for both resolve and progress values
Update information inside of the loop.
Update information of the code path segment when a code path was looped.
Update its line number if needed.
Update metrics unless they are being edited (if a CSS property is added, a StyleSheetChanged event is dispatched).
Update previous button.
Update references in other language definitions
Update scale, tolerating zero or NaN from tween.cur() And breaking the loop if scale is unchanged or perfect, or if we've just had enough
Update server info that is needed for setting up client.
Update special based on newly reset type
Update styles that changed since `lastProp`.
Update the DiagnosticCount for the updater.
Update the actions whenever the build system changes.
Update the active file, if changed.
Update the attributes on the current element.
Update the bounds as we recurse.
Update the brush extent for each dimension.
Update the configuration for the file-tree.
Update the current prop values.
Update the display with the current set of breakpoints for this editor.
Update the expanded Flex scale whenever the user starts dragging a handle.
Update the file change state comparing the dirty filesystem status to a selected commit.
Update the height of a line, propagating the height change upwards to parent nodes.
Update the messages from the given provider.
Update the origin, for when the ALT key is released.
Update the props for the item.
Update the props that have changed using the merged values from the props stack.
Update the provided container's expanded flex scale to its current flex scale.
Update the range to include only what was matched
Update the scroll position of the list view to ensure the selected item is visible.
Update the selection.
Update the source and position after all transforms are done.
Update the statuses individually.
Update the stored bounds.
Update the tasks to match the active build system.
Update the text buffer with the initial contents of the store.
Update the text in the datagrid that we typed
Update the v-ref on owner vm.
Update the width of the gutter according to the new contents.
Update tween properties
Update v-ref for component.
Update view hierarchy
Update, no type change
Updated line heights might result in the drawn area not actually covering the viewport.
Updates a DOM node with new property values.
Updates a component's children by processing a series of updates.
Updates a native DOM component after it has already been allocated and attached to the DOM.
Updates a single child in the map of children.
Updates a single range in the selection.
Updates are not recorded for newly created records.
Updates bookkeeping about the number of subscribers on each record.
Updates the "modified" flags of given loop conditions with given modifiers.
Updates the `false` path with the end of the `else` block.
Updates the `true` path with the end of the `if` block.
Updates the cache in response to any number of (non-.hgignore) files changing.
Updates the code path due to node's position in its parent node.
Updates the code path due to the position of a given node in the parent node thereof.
Updates the code path due to the type of a given node in entering.
Updates the code path due to the type of a given node in leaving.
Updates the code path to finalize the current code path.
Updates the code path.
Updates the component's currently mounted DOM representation.
Updates the component's currently mounted representation.
Updates the current location if the editors match.
Updates the current segment with empty.
Updates the current segment with the head segment.
Updates the diff information for the given paths, and updates the cache.
Updates the display.view data structure for a given change to the document.
Updates the line diff state on active file state change.
Updates the map from the client id to the server id for optimistically added nodes.
Updates the native status bar with the props from the stack.
Updates the parent with the latest layout.
Updates the rendered children and returns a new set of children.
Updates the rendered children with new children.
Updates the root repositories to match the provided directories.
Updates the roots, maintains their sibling relationships and fires the change event.
Updates the top-level record which existed in node data and creates the linked record.
Updates the viewer by changing the height of the comments and code so that they fit within the height of the window.
Updates the widths of the table, including the positions of the column resizers.
Updates this component by updating the text content.
Updating children of a component may trigger recursive updates.
Updating the indices that we're deleting and that's all.
Updating with computed style.
Upstream version of event listener.
Use "inherit" for "stdio" so jasmine-node inherits our TTY, and can properly determine whether to show colors or not.
Use "peek" to avoid creating a subscription in any computed that we're executing in the context of (for consistency with mutating regular observables)
Use ANSI-C quoting syntax.
Use Array.prototype.toString().
Use Babel to generate code from the AST.
Use IE sourceIndex if available on both nodes
Use Late Binding here to solve the circular dependency.
Use RocksDB if available, then SQLite, then file storage.
Use ServerConnection.getOrCreate() instead.
Use `:exit` to prevent double reporting
Use `DatePickerIOS` to render a date/time picker (selector) on iOS.
Use `Linking` instead.
Use `Navigator` to transition between different scenes in your app.
Use `ProgressViewIOS` to render a UIProgressView on iOS.
Use `RefreshControl` instead.
Use `SegmentedControlIOS` to render a UISegmentedControl iOS.
Use `StatusBar` instead.
Use `Vibration` instead.
Use `any` because we already check `isConnection` before validating.
Use `indefinite mode` to indicate an initializing period, Prefer using the `LoadingSpinner` component for surfacing non-deterministic progress.
Use `renderComponent` in `beforeEach` to return the component so the test methods have a chance to modify the default props.
Use `resolve` to strip trailing slashes because renaming a file to a name with a trailing slash is an error.
Use `setImmediate` because warnings often happen during render, but state cannot be set while rendering.
Use `setPage` method to update the page, and `onPageSelected` to monitor page changes
Use `spawn` here to process the, possibly huge, output of the file listing.
Use `this._path` on the instance 3.
Use a PromisePool if you have a sequence of async operations that need to be run in parallel and you also want control the number of concurrent executions.
Use a PromiseQueue if you have a sequence of async operations that need to use a shared resource serially.
Use a TextEditor instead of a path so that: - If there are multiple editors for a file, we always jump to outline item locations in the correct editor.
Use a big enough value that exceeds the max recording time.
Use a class that inherit the GitResolver to see if it uses late binding when clearing the cache
Use a class that inherit the SvnResolver to see if it uses late binding when clearing the cache
Use a closure to provide a true imperative API for synchronous stores.
Use a comparator function to figure out the smallest index at which an object should be inserted so as to maintain order.
Use a consistent null 'falsy' value for the empty string, undefined, etc.
Use a custom d3.transform to parse a decomposed transform, since JSDOM doesn't support consolidating SVG transform strings.
Use a fake platform so the platform's PATH is not used in case the test is run on a platform that requires special handling (like OS X).
Use a generous timeout for doing a Buck build in CI.
Use a local so Flow can refine the type.
Use a regex and not the "semver" module so the result here is the same as from python code.
Use a stripped-down indexOf if we can't use a native one
Use a temporary span container for the HTML.
Use an empty directory for the templates, creating it (and setting its permissions) if necessary.
Use an extremely generous timeout when running a method of BuckProject that runs Buck because we have seen tests time out in CI with a timeout of 20s.
Use an object with optional keys to mimic the union.
Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers
Use an ssh tunnel if server is not secure
Use annotation onFocus and onBlur instead.
Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings
Use commands here to trigger package activation.
Use console.log, not the outfd config.
Use container size to avoid changes of table width caused by change of column widths.
Use data converter to retrieve json after script execution
Use defaults if times not passed
Use dummy image instead of default browsers image.
Use either a real or a synthetic keyCode (for events originating from extensions).
Use fakeSetTimeout, fakeClearTimeout, fakeSetInterval and fakeClearInterval to mock Node.js's Timer utils, and using advanceClock to advance the fake timer to trigger timed callback.
Use findOrCreate instead.
Use fragment because all inline violations are caugh at transform time.
Use fromIndex when we move back
Use hackDummyRequestFilePath if possible.
Use hasOwn because a branch/tag could have a name like "hasOwnProperty"
Use https if we have key, cert, and ca
Use https:// rather than git:// if on a proxy
Use ie_gt10 to handle incompatibilities in that version.
Use integer dirruns iff this is the outermost matcher
Use invariant() to assert state which your program assumes to be true.
Use it with multiline set to true to be able to fill the lines.
Use markdown-preview to generate the HTML.
Use mv as fs.rename doesn't work across partitions.
Use native parsing where available
Use null to represent the set containing everything.
Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated
Use of this method is a temporary fix (more like optmization) until something better comes along, since it was removed from specification and supported only in FF
Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
Use offsetHeight instead of clientHeight to avoid being affected by horizontal scroll.
Use options.max or 2 as default
Use previous segments if unused.
Use previously-cached element index if available
Use replay/connect on exit for the final concat.
Use require.resolve to be resilient to file moves, npm updates, etc
Use same guid so caller can remove using origFn
Use single quote strings even when we are given double quotes
Use single quote syntax.
Use spec-helper.coffee utils to test the the heartbeat interval.
Use the Number constructor to forget the fixed precision, so 1.100000 will print as 1.1.
Use the `click` event to detect changes to checkbox and radio inputs.
Use the `path` argument to this function 2.
Use the already-created iframe if possible
Use the capture phase since resize handles stop propagation of the event during the bubbling phase.
Use the correct document accordingly with window argument (sandbox)
Use the cross-platform Slider as a drop-in replacement with the same API.
Use the default value.
Use the dummy copy instead of just returning to be more constant time.
Use the fastest means possible to execute a task in its own turn, with priority over other events including IO, animation, reflow, and redraw events in browsers.
Use the fastest means possible to execute a task in its own turn, with priority over other events including network IO events in Node.js.
Use the filePath as the event name.
Use the first export statement location
Use the first range from the diagnostic as the range for Linter.
Use the fix-ed jQuery.Event rather than the (read-only) native event
Use the handy event callback
Use the href attribute of an A element since IE will modify it given document.location
Use the index of each profile as its id.
Use the left/right/detailsCalloutView props instead.
Use the more specific Def (vDef) to perform the deep check, but shallow-check fields defined by the less specific Def (this).
Use the name "MapPolyfill" so that we don't get confusing error messages about "Using Map instead of Map".
Use the name "SetPolyfill" so that we don't get confusing error messages about "Using Set instead of Set".
Use the one from WillShow and do not assign.
Use the personal config file if there are no other local config files found.
Use the port from config setting if set, otherwise generate a random port.
Use the pre-built, native module if available.
Use the predicate function to update one or more of the roots in the file tree
Use the predicate to update a node (or a branch) of the file-tree
Use the same callback both for applyItemCallback and acceptItemCallback.
Use the same loop as above to seek `elem` from the start
Use the same protocol as the registry.
Use the same single mechanism to support "private" and "user" data.
Use this as an opportunity to `return false` when you're certain that the transition to the new props/state/context will not require a component update.
Use this as an opportunity to deallocate any external resources.
Use this as an opportunity to operate on the DOM when the component has been mounted (initialized and rendered) for the first time.
Use this as an opportunity to operate on the DOM when the component has been updated.
Use this as an opportunity to perform preparation before an update occurs.
Use this as an opportunity to react to a prop transition by updating the state using `this.setState`.
Use this for application/x-www-form-urlencoded (URL-Encoded Forms).
Use this for features that should work despite gatekeepers not being available.
Use this for multipart/form-data (Multipart Form Uploads).
Use this for the top level methods that result in large amounts of computation/mutations that would need to be safety checked.
Use this function to simulate keyboard shortcuts or special keys, e.g. cmd-v, escape, or tab.
Use this if you need multiple line breaks to be preserved.
Use this inside `PanelComponent` rather than just file-tree so any scrollable panels created with this component are styled accordingly.
Use this instead of implementing the logic in JS to avoid flicker.
Use this one by default *only if jquery.tmpl is referenced*
Use this to inject integration with an existing touch handling system etc.
Use this to make it so that the first screen worth of data appears at one time instead of over the course of multiple frames.
Use this to perform an action on all text editors of the given grammar set.
Use this to perform an action on every text editor with its latest grammar.
Use this to provide a suggestion for single-word matches.
Use this to provide a suggestion if it can have non-contiguous ranges.
Use this to wrap methods you want to measure.
Use to disable incremental rendering when not wanted, e.g. to speed up initial render.
Use toIndex animation when we move forwards.
Use user supplied template.rc if it exists
Use void here to explictly disallow async function in react component.
Use webcrypto if available
Use which to retrieve the full command, which puts the extension in the end
Use window.getComputedStyle because jsdom on node.js will break without it.
Used as a reference to the global object.
Used as references for various `Number` constants.
Used as scratch variables to communicate multiple values without consing up tons of objects.
Used as the `TypeError` message for "Functions" methods.
Used as the size to enable large array optimizations.
Used both to provide a JSON-safe object in .getHistory, and, when detaching a document, to split the history in two
Used by `GraphQLQueryRunner` to enqueue new queries.
Used by jQuery.camelCase as callback to replace()
Used by replaceSelections to allow moving the selection to the start or around the replaced test.
Used by the high-level `createTransaction` API, but also enables us to run legacy and low-level mutations.
Used by the isClean() method
Used by the reveal active file functionality.
Used for built-in method references.
Used for checking whether or not there is a trailing semi-colon
Used for cursor motion and such.
Used for example by "svn checkout" and "svn export"
Used for horizontal relative motion.
Used for intermediate scroll updates.
Used for lines that aren't currently visible.
Used for marking async begin/end events for row rendering.
Used for measuring wheel scrolling granularity
Used for native method references.
Used for performance optimization.
Used for setting prototype methods that IE8 chokes on.
Used for sniffing in tests.
Used for testing configuration file output.
Used for the algorithm that adjusts markers for a change in the document.
Used for un/re-doing changes from the history.
Used in combination with `snapToAlignment`.
Used in run-ci-e2e-test.js and executed in Travis and Circle CI.
Used internally by fetch
Used internally by packager.
Used mostly as an implementation detail internal to `GraphQLRange`.
Used mostly to find indentation.
Used printValue to get the string otherwise there was issues with template strings.
Used to 'clip' out readOnly ranges when making a change.
Used to add methods to editor and doc instances, wrapping them in operations.
Used to be accepted by normalizeColor
Used to cancel the message later.
Used to cheaply estimate the coordinates for a position.
Used to check objects for own properties.
Used to compose unicode capture groups.
Used to compose unicode character classes.
Used to compose unicode regexes.
Used to convert symbols to primitives and strings.
Used to create React components that directly wrap native component implementations.
Used to create `Animated.View`, etc.
Used to create a custom walker.
Used to detect bad signed hexadecimal string values.
Used to detect binary string values.
Used to detect if a method is native.
Used to detect maps, sets, and weakmaps.
Used to detect need to update scrollbar
Used to detect octal string values.
Used to detect unsigned integer values.
Used to determine if values are of the language type `Object`.
Used to determine which lines need their line numbers updated
Used to display paths in a friendly way.
Used to ensure that the line number gutter is still the right size for the current document size.
Used to ensure the version we serialized is the same version we are deserializing.
Used to force a redraw
Used to identify `toStringTag` values supported by `_.clone`.
Used to indicate that some work is ongoing while the given asynchronous function executes.
Used to invalidate the layout so the parent knows it needs to compensate for the height in the placeholder size.
Used to iterate over a part of the tree.
Used to locate the item in end-to-end tests.
Used to locate this view in UI automation tests.
Used to locate this view in end-to-end tests.
Used to log perf events for async row rendering.
Used to make read(n) ignore n and to make all the buffer merging and length checks go away
Used to manually set the starting scroll offset.
Used to match `RegExp` flags from their coerced string values.
Used to match leading and trailing whitespace.
Used to measure text size
Used to modify several properties at once and skip unnecessary construction of intermediate instances.
Used to only resize the line number gutter when necessary (when the amount of lines crosses a boundary that makes its width change)
Used to position while dragging
Used to read escaped characters
Used to render the associated keybinding.
Used to resolve the decompiled source of functions.
Used to restore the item to the correct size when you show its pane.
Used to scroll to a specific position
Used to set the toolbar direction to RTL.
Used to signal to callers of `readWord1` whether the word contained any escape sequences.
Used to signify the start of a potential arrow function
Used to stand-in for `undefined` hash values.
Used to start an HHVM instance running the given script in debug mode.
Used to start the HHVM instance that the dummy connection connects to so we can evaluate expressions in the REPL.
Used to store ancestor hierarchy in top level callback
Used to store breadth-first search state in findComponentRoot.
Used to store marked span information in the history.
Used to style and layout the `MapView`.
Used to style and layout the `Slider`.
Used to track when changes can be merged into a single undo event
Used to track when rendering is in progress so the parent can avoid wastedful re-renders that are just going to be invalidated once the cell finishes.
Used to track whether anything happened since the context menu was opened.
Used to truncate the text with an ellipsis after computing the text layout, including line wrapping, such that the total number of lines does not exceed this number.
Used when measurement is needed for a line that's not in the viewport.
Useful for compensating things like the start of a pan gesture.
Useful for debugging observable code.
Useful for e.g. reducing the delay for cheap queries (e.g. opened files).
Useful for ensuring that all callbacks defined on an object belong to it.
Useful for hacks that want to inspect the mode state (say, for completion).
Useful for lazy initialization.
Useful for less-flexible providers like clang-format.
Useful for overriding the default view of a quick-open result.
Useful for parsing mixed-language formats that embed JavaScript expressions.
Useful for simple use-cases where you don't want to deal with listening to events and updating the value prop to keep the controlled state in sync.
Useful for temporary DOM ids.
Useful for trimming whitespace from the end of a source node, etc.
Useful for warning in `render`, `unmountComponentAtNode`, etc.
Useful if you want to validate JS without comments overriding rules.
Useful method to split an array into groups of the same number of elements.
Useful when BUCK targets or headers change, since those are heavily cached for performance.
Useful when looking at prod-mode timeline profiles in Chrome, for example.
Useful when paired with the `accumulate` module.
Useful when searching for a mapping with a stubbed out mapping.
User agent shadow root, keep climbing up.
User clicked on a new directory or the user isn't using the "Preview Tabs" feature of the `tabs` package, so don't toggle the node's state any further yet.
User code or addons can define them.
User has 500ms (this._hideTimeout) to reach the popup.
User has made a change then tabbed, wiping all the original treeElements.
User is entering float value, do not suggest anything.
User is trying to submit connection details.
User just tabbed through without changes.
User manually opens something
User-defined eval methods.
Users can temporarily prevent apps from receiving remote notifications through the Notifications section of the Settings app.
Users may not have xcrun installed, particularly if they are using Buck for non-iOS projects.
Users shouldn't use this in the future.
Users that need a persisted event should invoke `persist`.
Uses "command" matrices, which are reusable.
Uses a copy-on-write scheme for the positions, to avoid having to reallocate them all on every rebase, but also avoid problems with shared position objects being unsafely updated.
Uses a set of changes plus the current scroll position to determine which DOM updates have to be made, and makes the updates.
Uses easing functions
Uses props from `this.props` and state from `this.state` to render the structure of the component.
Uses the .containsSelection child-derived property to efficiently build the list of the currently selected nodes
Uses the data we get back from the server to overwrite data in the cache.
Uses the old format that flow autocomplete used to use.
Uses the xml2js package.
Using "appendTo" forces jQuery/jQuery.tmpl to perform necessary cleanup work
Using Maps as children gives a single warning
Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an infinite loop, because it iterates over the newly added props too.
Using `ps x` on OSX we can find out which editor is currently running.
Using `style` or not is an implementation detail of the platform.
Using `unshift` here ensures that parent edges are processed before children.
Using a different port so that you can publish the website and keeping the server up at the same time.
Using a local variable here to allow better type refinement.
Using a new mechanism (e.g. starting a new animation, or calling `setValue`) will stop any previous ones.
Using a setter is necessary to circumvent timing issues when using the dispatcher.
Using a value of 10 fixes (1), but breaks (2).
Using default flags typically results in poor diagnostics, so let the caller know.
Using object.assign() was proven to be less performant than direct named assignment Since in heavy updates, nodes are created by the thousands we need to keep the creation flow performant.
Using plain for loops here because this will be called in the getter of any watcher with filters so it is very performance sensitive.
Using the `...` operator causes null/undefined errors, and `Object.assign` bypasses type checking.
Using the following algorithm: https://github.com/mozilla/sweet.js/wiki/design
Using this ID scheme, the nearest common ancestor ID is the longest common prefix of the two IDs that immediately preceded a "marker" in both strings.
Usually a node ends exactly at a token, but due to ASI, sometimes a node's range extends beyond its last token.
Usually the current owner is the offender, but if it accepts children as a property, it may be the creator of the child that's responsible for assigning it a key.
Usually the mixer will want to unhighlight the `VisualRect`.
Usually the spelling is the same as the word that was clicked.
Usually this optional callback is used for informing an owner of a leave animation and telling it to remove the child.
Utilities - intentional extra space at the end of each string
Utilities for making it easy to test React components.
Utilities used by GraphQLStore for storing ranges  GraphQLStore stores all of the parts of a range in a single GraphQLRange object.
Utility Functions ----------------- Run Underscore.js in *noConflict* mode, returning the `_` variable to its previous owner.
Utility class to provide the component owner hierarchy to native code for debugging purposes.
Utility for apply fixes to source code.
Utility for applying a change to a line by handle or number, returning the number and optionally registering the line as changed.
Utility for debugging.
Utility for getTokenAt and getLineTokens
Utility for getting refreshed connections.
Utility function that returns a wrapper logger for input category.
Utility that builds the style for the card in the cards list.
Utility that builds the style for the card in the cards stack.
Utility that builds the style for the navigation header.
Utility to build a tree of nodes.
Utility to generate locally scoped auto-incrementing IDs.
Utility to make it easier to register a file extension with a grammar, overwriting existing registrations or adding duplicates.
Utilize the given middleware `handle` to the given `route`, defaulting to _/_.
V8 debugger protocol does not support manual release
V8 debugger protocol does not support object groups
V8 is reusing the same scriptId for multiple eval() calls and DevTools front-end does not update the displayed source code when a content of a script changes.
VIEW TRACKING These objects are used to represent the visible (currently drawn) part of the document.
Valid continuation commands
Valid events are:  - `notification` : Fired when a remote notification is received.
Valid key names are a single, lowercased letter, i.e. "n".
Validate dispose method has a reasonable signature
Validate presence of correct fields.
Validate response data.
Validate server response
Validate server timestamp (not used to update clock since it is done via the SNPT client)
Validate the JSDoc node and output warnings if anything is wrong.
Validate the form inputs.
Validates a rule's options against its schema.
Validates a type which is not directly a return type.
Validates a type which must be a return type.
Validates an entire config object.
Validates edge to ensure it has all the fields needed to be store properly.
Validates that a type does not directly contain any types which are known to directly or indirectly contain it.
Validates that the given AST has the required information.
Validates the options given as input to transform.
Validates the spacing around a comma token.
Validates the spacing around single items in lists.
Validates the spacing before function parentheses.
Validates the transition as well.
Validates variables inside of a node's scope.
Validation function for `value` and `defaultValue`.
Validation problems are reported via `console.error`.
Valides the options used to construct a module map.
Valides the options used to get requires out of a module map.
Value if present, subject to encoding if present
Value matching value of one of the items.
Value x means that (1 - x) fraction of the page at "position" index is visible, and x fraction of the next page is visible.
Values are continually appended onto it.
Values are wrapped in a function so that each value can be accessed independently
Values in the mapping will be set on `this.props` if that prop is not specified (i.e. using an `in` check).
Values of this mapping must be objects that contain `registrationName` or `phasedRegistrationNames`.
Values outside the specified range will be ignored.
Values which have either 00 or 11 as the high order bits qualify.
Vararg function that assumes that all elements except the last are numbers, as the last argument is a callback function.
Variable has the applied value, not initial value.
Variable is in global scope and defined as exported.
Variables for tracking where and when a key was pressed, and the time before it had an effect.
Variables that are used outside of the current file.
Variables which are declared by `const` is safe.
Variables which are declared by `let` in the loop is safe.
Variadic argument with `name` is not the last argument as required.
Various changes have been made
Vectors from the intersection point to vertices of the quad
Vectors reduce boilerplate.
Velocity is based on seconds instead of milliseconds
Velocity makes it move
Velocity to start at when transitioning without gesture
Velocity to transition with when the gesture release was "not moving"
Verifies an EdDSA signature of a message with the public key.
Verifies correct vertical alignment of a group of properties.
Verifies if we should report an error or not based on the effective parent node and the identifier name.
Verifies spacing of each property in a list.
Verifies spacing of property conforms to specified options.
Verifies that a Promise fails with an Error with specific expectations.
Verifies that the internal representation of a set of `renderedChildren` accurately reflects what is in the DOM.
Verifies that the rendered `StatusDisplay` instances match the `props` that were responsible for allocating them.
Verifies the object is a ReactElement.
Verifies the text against the rules specified by the second argument.
Verifies this is an Android project
Verifies vertical alignment, taking into account groups of properties.
Verifies whether the server supports shallow cloning.
Verify HMAC against shared secret.
Verify RSA/DSA signature against public key.
Verify a file's signature.
Verify adjacent ids across a msec boundary are 1 time unit apart
Verify clock regression bumps clockseq
Verify empty tail component for completed response.
Verify explicit options produce expected id
Verify mercurialness.
Verify ordering of v1 ids created using default behavior
Verify ordering of v1 ids created with explicit times
Verify parameters of the clone call.
Verify required header attributes
Verify that CLIEngine receives correct opts via cli.execute().
Verify that RCTSnapshot is part of the UIManager since it is only loaded if you have linked against RCTTest like in tests, otherwise we will have a warning printed out
Verify that a --log-file argument has been specified.
Verify that disposing the Disposable stops updates to the pathSet.
Verify that our own "shouldCompile" is matching Atom.
Verify that the remote could be parsed and that a protocol is set This case is unlikely, but let's still cover it.
Verify that the root exists.
Verify that the selection does not partially select any atomic marked ranges.
Verify that there is a useable event (so that ctrl-z won't needlessly clear selection events)
Verify that there is an actual destination to break or continue to.
Verify that we can't get another message without completing previous one.
Verify the expected results were returned by delegating to the HackService, and that local file paths are converted to NuclideUris.
Verify the expected results were returned by delegating to the HackService.
Verify throw if too many ids created
Verify vertical alignment
Verify whether the server supports shallow cloning
Version 1.1: new BigInteger("0", 10) returns "proper" zero Version 1.2: square() API, isProbablePrime fix (public)
Version a new file under Hg.
Version has a -pre, but it's not one of the ones we like.
Version isn't set yet so we can't just ++ it
Version number getter.
Version of ServerConnectionConfiguration that uses string instead of Buffer for fields so it can be translated directly to/from JSON.
Version of `ReactBrowserEventEmitter` that works on the receiving side of a serialized worker boundary.
Vertical widget resizes height (along y-axis).
Vertices of the quad with transform matrix applied
Very basic readline/emacs-style bindings, which are standard on Mac.
Very handy helper to map input ranges to output ranges with an easing function and custom behavior outside of the ranges.
Very often, a third option (usually an object) is available to address edge cases, exceptions, or unique situations.
Vibration patterns are currently unsupported.
View for setting up a new debugging session.
ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when pageX/pageY isn't supported (legacy browsers).
Views that are only used to layout their children or otherwise don't draw anything may be automatically removed from the native hierarchy as an optimization.
Visibility Comparing to another cursor Utilities
Visit all the children of the given `node` and merge their results.
Visitor methods return false to indicate that they have handled their own traversal needs, and we should not complain if this.needToCallTraverse is still true.
Visitors: Ensure that only one read is ever in flight for a given root/node.
Visual Studio is the default toolset.
Visually groups Buttons passed in as children.
Vue and every constructor that extends Vue has an associated options object, which can be accessed during compilation steps as `this.constructor.options`.
WARNING: EXPERIMENTAL.
WARNING: These callbacks will fire even if a keyboard is displayed in a different navigation pane.
WARNING: This file is not the entry point in releases.
WARNING: This is an optimized version that fails on hasOwnProperty checks and non objects.
WARNING: This method returns internal data without copying, for performance.
WARNING: This method will not be used in production mode as in that mode we replace wrapper component View with generated native wrapper RCTView.
WEBPACK VAR INJECTION
WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
WILL be set to something else
WINDOW-WIDE EVENTS These must be handled carefully, because naively registering a handler for each editor will cause the editors to never be garbage collected.
WON'T be set to something else
Wait for 'resume' event from Bridge.js to guarantee we've passed the loader breakpoint.
Wait for `scribe_cat_mock` to flush data into disk.
Wait for a primary to be selected
Wait for a primary to be selected.
Wait for all source control providers to register.
Wait for our watch to have seen all of the Counters.
Wait for some time to make sure that inspected page is running the infinite loop.
Wait for the client to restore subscriptions.
Wait for the connection to exist on the server.
Wait for the counter1 Observable to complete.
Wait for the current last know promise to resolve, or a next run have started.
Wait for the promise to call the next chain That isn't synchrnously guranteed because it happens on `process.nextTick`.
Wait for the stdout buffer to drain.
Wait for watchman to watch the directory.
Wait for writeStream to cleanup after itself...
Wait until all files have been read and resolve with the decomposed endpoints
Wait until all links have been read and resolve with the decomposed endpoints
Wait until all scripts are added to the debugger.
Wait until all secondaries are healthy
Wait until all secondaries are not healthy
Wait until an `EventPluginOrder` is injected.
Wait until the JS environment has been initialized before requiring them.
Wait using `setTimeout` and not `process.nextTick` or `setImmediate` because those queue tasks in the current and next turn of the event loop respectively.
Waits delayMs before actually showing the notification (to prevent flicker).
Waits for current throttler invocations, if any.
Waits for dbgp init connection message for each connection.
Waits for script pause, checks expectations, and invokes the callback.
Waits for the specified file to become the active text editor.
Waits until all the scripts are parsed and invokes the callback.
Walk down the tree looking for a discrepancy
Walk down to populate each ancestor's children, to fill in the tree and the cache.
Walk in lockstep until we find a match.
Walk over the tree of JS snippets in this node and its children.
Walk over the tree of SourceNodes.
Walk the down the tree, gathering dependants of the package
Walk the down the tree, gathering dependants of the packages
Walk the node structure and identify styles with inherited properties.
Walk the prototype chain
Walk through each property and convert them into getter/setters.
Walk through the file-system "database" of installed packages, and create a data object related to the installed versions of each package.
Walk up the parent pointers from the desired node
Walk up the tree finding all resizable descendants.
Walk up the tree until we find an ancestor whose DOM node we have cached.
Walk up the tree until we find an ancestor whose instance we have cached.
Walks over the tree and concatenates all the various snippets together to one string.
Want to be able to visit Property Nodes.
Warm the cache with theDog
Warm-up data for drag'n'drop
Warn about a control character in a string.
Warn about a leading decimal point.
Warn about a trailing decimal point.
Warn about script URLs.
Warn against setting non-existent root path on a vm.
Warn but don't crash if resolved with the wrong fragment.
Warn if HOME is not SET
Warn if the element doesn't have an explicit key assigned to it.
Warn if the package meta version is different than the resolved one
Warn if there's no key explicitly set on dynamic arrays of children or object keys are not valid.
Warning about the missing transitionLeaveTimeout prop
Warning instead of Error
Warning is float right block, it goes first.
Warning, this may be called several times for a single keyboard opening.
Warning: Never call x.concat(y) when you are not certain that x is an Array (x could be a string with concat method).
Warning: Some of these properties may not be supported in all releases.
Warning: maxLength not taken into account in base64Write
Warnings help guard against subtle yet significant issues that can impact the quality of the app.
Warns functions which are using modified variables.
Warns if an assignment expression uses operator assignment shorthand.
Wasn't a variable length
Watch an expression, trigger callback when its value changes.
Watch config files (TARGETS/BUCK/compile_commands.json) for changes.
Watch for a new set of requests
Watch the config to manage toggling features
Watchman doesn't support rename event, if needed, will need to be fuzzily implemented.
Watchman returns paths relative to the subscription root, which may be different from (i.e. a parent directory of) the localDirectory passed into PathSetUpdater::startUpdatingPathSet.
We *are* long pressing..
We `.toString()` the function in some places and inject the source into the page.
We accept any tag to be rendered but since this gets injected into arbitrary HTML, we want to make sure that it's a safe tag.
We accumulate these as we go, so we can be sure to trigger them after the whole `Program` entity is parsed, even for top-of-file comments.
We add .fud to Pratt's model, which is like .nud except that it is only used on the first token of a statement.
We add the code from "lastMapping" to "mapping": First check if there is a new line in between.
We add the generated code until the first mapping to the SourceNode without any mapping.
We add the length of the term so we can be ranked alongside the scores generated by `scoreCommonSubsequence` which also factors in the length.
We allow actual time window to be arbitrarily small but don't want the UI window to be too small.
We allow an optional additional field, providerName, to indicate the display name of the linter.
We allow auto-mocks to proceed as if they're returning null.
We allow headers from the older spec drafts if strict parsing isn't specified in options.
We already hit an unbalanced node and are now just scooping up all subsequent nodes
We already printed in xcode, so only log here if using a js debugger
We also implement a workaround for non-visible tags disappearing into thin air on IE8, this only happens if there is no visible text in-front of the non-visible tags.
We also need to add the nested form for API compatibility.
We also need to allow remote nuclide files.
We also need to get node version of the debugged process, therefore the dummy request is `evaluate 'process.version'`
We also need to ignore callbacks in componentWillMount.
We also want to style the changeset differently if it is clickable.
We always kill to empty here.
We always want it to match that of the bottom panel.
We always want the second context for the service worker targets.
We append correct sourceURL to script for consistency only.
We are building an index here to search for the longest url prefix match faster.
We are calling _loadNodeAttributes asynchronously, it is ok if node is not found.
We are currently silencing these warnings when using TestUtils.Simulate to avoid spurious warnings that result from the way we simulate events.
We are ending a word so there can be whitespace.
We are explicit about breaks because we generally want the algorithm to condense lines for us.
We are guaranteed to have a single remaining string after this.
We are happy to update UI if user is not editing.
We are in a build directory where this script lives in deps/npm/node_modules/node-gyp/lib
We are in a node install directory where this script lives in lib/node_modules/npm/node_modules/node-gyp/lib or node_modules/npm/node_modules/node-gyp/lib depending on the platform
We are looking for the longest pathPrefix match.
We are making a copy of the buffered messages list, so that the messages are sent event when pauseEvents() is called before the next tick.
We are not inside a char nor string literal.
We are not small enough yet, return false so the caller knows.
We are not testing transition-related stuff here, those are tested in transition_spec.js.
We are out of luck if disk doesn't have the node either.
We are over limit so we'll add it to the queue.
We are passed an array of timerIDs, and
We are skipping the edges from non-page-owned nodes to page-owned nodes.
We are starting a word so there can be whitespace.
We are using a fixed time step and a maximum number of iterations.
We assume an 'any' and 'mixed' types require no marshalling.
We assume that getBoundingClientRect is available when computed position is fixed
We assume that it's the callback
We assume the child nodes are in the same order as the child instances.
We avoid the cracks by checking slightly above and slightly below the mouse and seeing if we hit the same element each time.
We build the application inside a function so that we produce only a singleton variable.
We cache scroll values so that application code can access them without triggering reflows.
We calculate the window dimensions in JS so that we don't encounter loss of precision in transferring the dimensions (which could be non-integers) over the bridge.
We can at least abort if the line isn't long enough.
We can come up with an optimistic estimate, however, by assuming that mappings are contiguous (i.e. given two consecutive mappings, the first mapping ends where the second one starts).
We can concat the two segments when there is no gap.
We can construct the hash from it and avoid memory leaks from the IE cloneNode bug.
We can delete multiple nodes as long as no root node is selected
We can do this check in this style because we are traversing the tree in pre-order.
We can exploit this fact by caching the parsed variable length fields of each segment, allowing us to avoid a second parse if we encounter the same segment again.
We can fire global events as of now if asked to
We can help them out when they expect file:// URIs to behave like it would if they were running a local HTTP server.
We can ignore unchecked radio buttons, because some other radio button will be getting checked, and that one can take care of updating state.
We can just use `flow status` if the contents are unchanged.
We can later filter the errors when they are found to be not an issue in nodes we don't care about.
We can make a "ref query" at this point, so stop wrapping.
We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)
We can put this in the class definition once we have computed props transform.
We can safely remove these options.
We can short-circuit the comment checks if we're already out of comments to check.
We can subscribe to updates for this.
We can't add displayedDisposable directly because its value may change.
We can't cloneNode fragments that contain checked, in WebKit
We can't hang onto stmtPath outside of this function, because it's just a reference to a mutable FastPath object, so we have to go ahead and print it here.
We can't just use HGPLAIN because we have not found a way to get colored output when we do.
We can't let that create a file with the initial working directory path.
We can't make these lazy as Map checks the global.Map to see if it's available but in our case it'll be a lazy getter.
We can't produce one of these solely with `Relay.QL`, so we use a node from `Relay.QL` as a basis and attach the appropriate args and ref params.
We can't pull in nuclide-find-references as a dependency, unfortunately.
We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
We can't use arrow function here as it will bind `this` to the context of enclosing function which is trackTiming, whereas what needed is context of originalMethod.
We can't wrap only `onSocket` for handling all requests, there is one case, when `onSocket` will be never called (Agent + no free sockets)
We cannot initialize it here as localized strings are not loaded yet.
We cannot perform a single traversal for the entire collection of events because each event may have a different target.
We cannot use pure touch, because Windows
We cannot use value of natively driven nodes this way as the value we have access from JS may not be up to date
We check and warn about this sceanrio over in validate-tree.
We check for the length of arguments to see if the hook expects a `done` callback.
We check the existence of the report file to be sure.
We check the prototype of the type that will get mounted, not the instance itself.
We check to find a matching directory in one of the project roots 3.
We choose a length that should be long enough to uniquely identify a ChangeSet with an Hg repo, while also being compact enough to display efficiently in a UI.
We consider all functions equal
We could derive the token from the json text and the range, but since hyperclick provides it we may as well use it.
We could make shallow copies here but are opting not to for performance.
We could send backtrace in such case, but that isn't working well now.
We could use Nuclide's own babel-core (even babel 6), but we want the exact babel Atom would use in a stock setup- to be able to fallback to Atom transpiling if needed.
We could use the golang.org/cl/ handler here, but avoid some redirect latency and go right there, since one is easy.
We create a MarkdownPreviewView to call its getMarkdownPreviewCSS() method.
We create an overlay to always display the resize cursor while the user is resizing the panel, even if their mouse leaves the handle.
We create extra timeline grid here to reuse its event dividers.
We create tags in the namespace of their parent container, except HTML tags get no namespace.
We create unlink functions with only the necessary information to avoid retaining additional closures.
We currently don't have a way to track moves here but if we use iterators instead of for..in we can zip the iterators and check if an item has moved.
We deal with groups in the next pass
We decided not to allow and simply throw an error.
We decided to go with this for now since it's fairly understandable behavior for the end-user and easy to "correct" (by dragging and dropping) if it's not the desired result.
We define a connection between a faction and its ships.
We define our basic ship type.
We define our faction type, which implements the node interface.
We delete this global property so the window mouse listener gets recreated.
We deserialize them as regular TextBuffers since at this point in the Atom lifecycle, there is no remote connection that can be associated with the NuclideTextBuffer.
We did not find an exact match, return the next closest one (termination case 2).
We did not find the exact element, and there is no next-closest element than the one we are searching for, so we return -1.
We did not find the exact element, and there is no next-closest element which is less than the one we are searching for, so we return null.
We did not find the exact element, but we can return the index of the next-closest element.
We did not find the exact element, but we can return the next closest element that is less than that element.
We didn't find the version in the doc.
We didn't force the installation
We dispatch a timeout with a specified delay of 0 for engines that can reliably accommodate that request.
We distinguish between them based on message type.
We do a constructor.name check to make sure that the developer is trying to ReactDOM.render() a Relay.RootContainer into the playground
We do a partial read in this case to try to make the best out of a sorry situation.
We do a require here instead of just importing at the top of the file because the describe block below needs to mock things, and has to use uncachedRequire.
We do allow records for unrelated threads to arrive out-of-order, so there's a chance we're getting records from the past.
We do not cache the result of this check because we have unit tests that temporarily redefine the value of process.platform.
We do not count brackets we encounter inside string/char literals.
We do not handle killing the debugger.
We do not require precise (breakpoint) location but limit the number of lines to search or mapping.
We do not show "scroll beyond end of file" span for one line documents, so we need to check if "document has one line" changed.
We do not support content retrieval for WebSockets at the moment.
We do not want to emit a warning for this, though, as this will already be reported as resource loading failure.
We do the first update...
We do this during transclusion instead at compile time so that the distribution is decoupled from the compilation order of the slots.
We don't control this item's serialization so no use in storing the size on it.
We don't currently support accessors nor proxies.
We don't have `all` collection in NodeJS
We don't have a way of changing the path on the dev server after a connection is made so this shouldn't change over time.
We don't have actual page title here.
We don't have any data stored on the element, so use "detach" method as fast way to get rid of the element
We don't know the real source of linked packages Instead we read its dependencies
We don't know where we are, try working it out from the location of the node binary
We don't know whether the change to the dirstate is at the middle or end of a Mercurial action.
We don't mutate the input, just in case the caller wants to do something with it after using it to instantiate a component
We don't need an array for one selects
We don't need global templates when cloning.
We don't need to add it if it's already there, or this is the very first regex part.
We don't need to call the someFunction anymore or wait any longer.
We don't need to check nested functions, so this ignores those.
We don't need to check nested functions.
We don't need to dispose of the contextDisposable when the provider is disabled - it needs to be handled by the provider itself.
We don't need to dispose of the menuItemDescriptions when the provider is disabled - it needs to be handled by the provider itself.
We don't need to rebuild the crumbs, but we need to adjust sizes to reflect the new focused or root node.
We don't need to remove spy_fileA_subscription -- it shouldn't be called anyway.
We don't send undefined values over JSON.
We don't sort by project relative path as that will interleave diagnostics from different projects.
We don't suggest this since it silences all sorts of warnings, but we shouldn't blow up either.
We don't support symbols so they won't be transferred.
We don't use String(obj) because String could be overridden.
We don't use SyntheticEvent.getPooled in order to not have to worry about properly destroying any properties assigned from `eventData` upon release
We don't use for-in here because it couldn't be optimized.
We don't want any responder events bubbling out of the modal.
We don't want default browser shortcut to be executed, so pretend to handle this event.
We don't want exception behavior to differ between dev and prod.
We don't want the user to see this, so destroy it as soon as possible.
We don't want to be precise, but rather pick something least affected by animationtransforms, so that we don't change scale too often.
We don't want to cache moving targets like branches
We don't want to call getRunCommandInNewPane() multiple times because it has unwanted side effects.
We don't want to do any synchronous 'hg status' calls.
We don't want to enqueue any updates if any cells are in the middle of an incremental render, because it would just be wasted work.
We don't want to save this getter unless it's an actual getter and not an ES6 concise method
We don't want to see default details.
We don't want to warn there because we already warned for the corresponding lifecycle method.
We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node
We enable /opt:icf only with the debug pack, so /Gw only makes sense there, too.
We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
We exclude the path to the file to compile from compilation database generated by Buck.
We expect an error if the bookmark file doesn't exist.
We expect the element creation to succeed and there will likely be errors in render.
We expect the onChange* handlers to be in charge of updating our `date` prop.
We expect the string to end with a ')', so the last entry in copiedFiles will be an empty string.
We expect these times to be measured at least as 70ms.
We expect what plugins doesn't have equal methods, events or types, otherwise we throw an error, because this is unsolvable situation.
We explicitly check for the existence of an owner since it's possible for an element created outside a composite to be deeply mutated and reused.
We extract error from statusText then normalize statusText and status for non-aborts
We fall back to timers in workers in most engines, and in foreground contexts in the following browsers.
We feature detect to determine the best RNG source, normalizing to a function that returns 128-bits of randomness, since that's what's usually required
We find the exact element we are looking for.
We first parse the directory of the asset 2.
We force tree update so that it processes dom events and is up to date.
We found a ReactDOM.render(...) type call.
We found a component instance.
We generally only want to see the flags for 'compile' commands, since they'll usually be the same for all other commands (barring an unexpected restart).
We generally want to terminate all variable declarations with a semicolon, except when they are children of for loops.
We generate random numbers for React root IDs and if there's a collision the events and DOM update system will get confused.
We get the node interface and field from the Relay library.
We have a method named auth, which is completely different from the http.request auth option.
We have already handled mixins in a special case above.
We have already missed the change events from the disconnect time, watchman could have died, so the last clock result is not valid.
We have found a match.
We have found either the exact element, or the next-closest element than the one we are searching for.
We have installed package with the same name 2.
We have no evidence that its status is out of date, so it should remain 'ignored' in the cache.
We have no evidence that its status is out of date, so it should remain 'modified' in the cache.
We have processed all mappings.
We have read data for this `dataID` from disk, but we still don't have data for the relevant field.
We have to be particularly careful of recursion with this mode because a root node can represent itself AND an ancestor.
We have to break on the first error to avoid infinite loops.
We have to cast here because the test case purposely subverts the type system.
We have to check in order to avoid consecutive spaces when the scope is not broken.
We have to create an invariant function that is a lie because using invariant() with an instanceof check is the only way to convince Flow of the type of an unbound `this`.
We have to create the listener before setting the state so it can pick up the changes from `setState`.
We have to destroy panes themselves, not merely the pane items, in order to trigger the callbacks that ArcanistDiagnosticsProvider registers on atom.workspace.onWillDestroyPaneItem.
We have to do this assignment b/c Flow doesn't think "symbol" is something typeof would return.
We have to do this post-`Program` to deal with top-of-file comments.
We have to make sure that the value is a valid integer.
We have to make sure that we've also supplied enough views to satisfy our request to adjust the `requestedTopOfStack`.
We have to manually update the contents of an existing ConnectionDetailsForm, because it contains AtomInput components (which don't update their contents when their props change).
We have to set these values before destroying the text editor because they depend on it.
We have to suppress default finish emitting, because ordinarily it would happen as soon as `end` is called on us and all of the data has been written to our target stream.
We have to use our parent class directly because we suppress `finish` events fired via our own emit method.
We have two types of multine line method calls.
We hide the horizontal overflow in the PanelComponent because the presence of the scrollbar throws off our height calculations.
We include this code here in anticipation of the Node/io.js merger.
We initialize the default updater but the real one gets injected by the renderer.
We invoke require() in the context of a Domain so we can have multiple sets of modules running separate from each other.
We isolate the try/catch so it doesn't affect the optimization of the parse function when it is not called.
We jump through these hoops because there can be many thousands of mappings, and parsing them is expensive, so we only want to do it if we must.
We just skip all the descriptor links when calculating distances.
We just unwrap everything at every level in the object graph
We just use `POSITIVE_INFINITY` here to conform to the AppState type defintion.
We just want those dicts so we use `flatMap()`.
We keep a whitelist for those special cased tags.
We keep a whitelist for those special-case tags.
We keep track of past indices to ensure we can delete them completely.
We keep track of the last colon that we see (i.e. the colon that is closest to the beginning of the document) and terminate once we've reached the start of the method.
We know *for certain* that we have a complete entry once we see the metadata for the next one.
We know that `field` exists because we have just checked it above.
We know that it's not enough to fill up a whole block, because otherwise it would have been emitted above, but there may be some offset.
We know that we reached the popup, but we might have moved over other elements.
We know that we're about to delete this one, and also what the next least recently used key will be, so just go ahead and set it now.
We know there is no more after cursor100 since that is the last edge
We know there is no more before cursor1 since that is the first edge
We know they are different because the previous case would have triggered otherwise.
We know they exist, since readdir returned them.
We know two is also an array because the constructors are equal
We leave it up to Babel to do that automatically and apply the transforms accordingly (which works because we pass in `filename` and `sourceFilename` to Babel when we transform).
We listen for bubbled touch events on the document object.
We loop through each of the changed touches and receive it as a single event.
We maintain an internal array for all the entries.
We maintain indices in objects for fast look ups.
We maintain this state in a "context" object that gets passed around.
We make `this` look like an actual native component class.
We make a best effort to throw an exception when given a format string we don't understand, rather than ignoring it, so that we won't break existing programs if/when we go implement the rest of this.
We massage the output to ensure that every argument has an entry in the output.
We may as well declare these outside of Activation because most of them really are nullable.
We may call cancel multiple times so let's make sure it's idempotent.
We may get here on the first dock side change while loading without BeforeDockSideChange.
We may receive an `observedTopOfStack` without ever requesting it - native can instigate pops of its own with the backswipe gesture.
We may revisit and try to do something more clever later.
We may want to extend this logic for similar errors in top-level render calls, so I'm abstracting it away into a function to minimize refactoring in the future
We may want to figure out which other paths we want to invalidate if it turns out that linters regularly return messages for other files.
We may want to make date formatting customizable via props.
We may want to make this configurable, but if it is ever higher than one we need to make sure it works properly when the user manually activates it (e.g. with ctrl+space).
We missed the requestWillBeSent.
We mock out the method here to get the expected behavior.
We mock vms here so we can assert what the generated linker functions do.
We must always have either seed elements or outermost context
We must be resilient to `targetInst` being `null` on `touchMove` or `touchEnd`.
We must fill this in.
We must loop through each event and perform the traversal for each one.
We must optimistically mark mod as initialized before running the factory to keep any require cycles inside the factory from causing an infinite require loop.
We must pass in the updated filenames to catch the case when a cached status turns to 'clean'.
We must track the order they appear in so transforms are applied in the correct order.
We navigate to a file if it's already open, instead of opening it in a new tab.
We need a cast to `any` here because this test purposefully sends data that Flow does not allow.
We need a peek function.
We need native-key-bindings so that delete works and we need _onKeyUp so that escape and enter work
We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real first node needs to be in the array).
We need the view attached to the DOM for the mouse events to work.
We need there to be exactly one child: a text node.
We need this in array formats.
We need this level of indirection to ensure that if fakeAsyncExec is rebound, the new one gets executed.
We need this module here because environments such as IE and Rhino don't necessarilly expose the 'console' API and browserify uses it to log things.
We need to be able to dispose of this computed observable when it's no longer needed.
We need to check all keys in case some are required but missing from props.
We need to collect RegExp flags and append they to description, or open issue in NodeJS same as 'RegExp text serialized without flags'
We need to create a new Pane and then wrap it and the existing PaneAxis in a new PaneAxis.
We need to create iframe again each time because contentDocument is deleted when iframe is removed from its parent.
We need to create this custom HTML element so we can hook into the view registry.
We need to do both for both the gutter UI and the diagnostics table to get updated.
We need to ensure the fragment is properly populated first, breaking out of our lazy approach for just this level.
We need to escape once for the string literal here, and once for the RegExp compilation.
We need to exclude those.
We need to figure out a way to handle this across the board.
We need to fix this case.
We need to implement onDidRename and onDidDelete in RemoteDirectory first.
We need to invoke _sort for the management of this._disposable and atom.contextMenu.add.
We need to maintain the instance methods of the provided gadget (since that's how Atom will interact with it), so we create our new one by subclassing.
We need to make sure all properties of the original fn are copied over.
We need to make sure that this is an operator and not a regular expression.
We need to make sure that updates occur to the actual node that's in the DOM, instead of a stale cache.
We need to make sure we don't end up in a deadlock where the first reconnection attempt blocks subsequent ones.
We need to move the mouse once, so Hyperclick knows where it is.
We need to provide this childFactory so that ReactCSSTransitionGroupChild can receive updates to name, enter, and leave while it is leaving.
We need to reallocate debug context - restart frame and step into.
We need to register types cache and search in it for conflicts.
We need to reject the previous promise, so it doesn't get leaked.
We need to remember the position of "remainingLines"
We need to reset cache because tests are reusing temp directories
We need to send this information to handleHttpResponse.
We need to turn these into URIs.
We need to update isRunning flag before we continue with debugging.
We need to use leading comments of the next SwitchCase node because trailing comments is wrong if semicolons are omitted.
We need to use spawn directly to get access to the ChildProcess object.
We never resolve Mirror by its handle so to avoid memory leaks caused by Mirrors in the cache we disable it.
We now have to re-walk the contents of the would-be class to re-translate any characters that were passed through as-is
We now move onto our friends in the signed number category.
We offset those back to the first line.
We only care about global hotkeys, not about random text
We only do this simple test to make sure it's delegating to the connection.
We only handle completions in which non-placeholder and placeholder chunks alternate, starting with non-placeholder chunk.
We only need an additional one if there was an update, otherwise we just ended with a scopeBreak.
We only save the relevant properties to prevent retaining a reference to the event.
We only should remove it from the list of the disposables we maintain.
We only show text nodes inline in elements if the element only has a single child, and that child is a text node.
We only support unencrypted keys.
We only want to blacklist this root if the Flow processes actually failed, rather than being killed manually.
We only want to ever record a key latency time once, and so we reset it.
We partially apply readableID and nodeConfig, as they change in the parent closure across iterations.
We pass old _resolution (if hasNew has been called before contents).
We pass the current contents of the buffer to Flow via stdin.
We probably want to replace all existing uses of "get", replace them with "doGet()", and then rename "doGet()" to "get()".
We provide our own default comparer because we want to be more strict (by default) than RxJS is.
We put it on an external backing store so that we can freeze the whole object.
We queue errors to ensure they are thrown in right order (FIFO).
We reached the end of the DOM children without finding an ID match.
We reached the end of the list before the expected number of results
We recommend creating one `RelayEnvironment` instance per user: client apps may share a single instance, server apps may create one instance per HTTP request.
We relativize the paths to mimic hg's behavior.
We release all dispatched `SyntheticEvent`s after each event loop, adding them back into the pool.
We rely exclusively on `insertBefore(node, null)` instead of also using `appendChild(node)`.
We replace location rather than set so as not to create a history for code navigation.
We require isEventSupported before React so it's pre-mocked before React would require it.
We reserve all tags that are 1 mod 10 for native root views
We restrict the label to a string to ensure this component is pure.
We return an event with a bunch of fields including: url, title, loading, canGoBack, canGoForward
We run all of our assertions twice: once for finish, once for close There are 6 assertions, two fixed, plus 4 lines in the file.
We save the initial value so that `ReactDOMComponent` doesn't update `textContent` (unnecessary since we update value).
We save the last `MouseEvent` so the user can trigger Hyperclick by pressing the key without moving the mouse again.
We set children in the constructor.
We set this to true at first, because any actions that shouldn't happen until "later" should generally also not happen before the first write call.
We set this to true at first, becuase any actions that shouldn't happen until "later" should generally also not happen before the first write call.
We should also find a way to make this work for Git.
We should always get a number back from opacity
We should consider consuming this from a built fbjs module from npm.
We should consider dropping this API.
We should ensure that this is not required for ES6 classes with Flow.
We should get another mount event and we should get different markup, as the IDs are unique each time.
We should have accessibility support here too even though hovering doesn't work.
We should make it null instead, in that case (t8644340)
We should mount again, but the markup should be unchanged.
We should never depend on the order of registration of the `onDidChangePaths` event, which also dispose consumed service's resources.
We should never have UNCACHED status, since we remove frames with UNCACHED application cache status from the tree.
We should not cache results for files that failed, in order to guarantee that next execution will process those files as well.
We should not invoke closers for inits that failed.
We should not invoke the actual method when any of the initializers fail.
We should not render these
We should only update the revision state when the repository is active.
We should pass init return values to closers when those inits are successful.
We should replace this with functionality exported by graphql.
We should restore all the providers that we have previously hidden.
We should show a better message but properly doing so probably requires refactoring how we load the panel and communicate with the bridge.
We should stop to avoid infinite recursion, since Babel traverses replaced path, and again would hit our transform.
We should subscribe to the position here.
We should update SSP on main frame navigation only.
We shouldn't ever be calling this on the server
We show only warnings, errors and fatals (2, 3 and 4, respectively).
We simply start parsing an expression, and afterwards, if the next token is a colon and the expression was a simple Identifier node, we switch to interpreting it as a label.
We skip installing decEndpoint, if: 1.
We special case these because, practically speaking, they're probably the only ones that will ever be used.
We stat first, because we can't rely on ENOTEMPTY from Windows.
We store the last suggestion since we must await it immediately anyway.
We store the original promise that we use to retrieve the last suggestion so callers can also await it to know when it's available.
We strip the extra chars out here.
We subscribe to its resize events and use that as a proxy for the panel being resized and update the width of the FixedDataTable accordingly.
We support ES6 inheriting from React.Component, the module pattern, and stateless components, but not ES6 classes that don't extend
We support HgRepositoryClient and GitRepositoryAsync objects.
We test this separately because we traverse pageInfo as though it were a linked field.
We then build a map of all assets and their scales in this directory 4.
We then measure the offsets of the keyboard, and compensate both for the scroll view's "contentInset".
We track the timing above, but we still want to know the number of popups that are shown.
We tried really hard, but the data doesn't exist.
We try to match it up with something in the root call mapping first.
We try to merge the keys of the return values of all the mixed in functions.
We try to re-use cached diffs.
We use `concat` to create a new array - mutating `this._data`, e.g. with `this._data.push(newRowData)`, would be an error.
We use `self` instead of `window` for `WebWorker` support.
We use `stopTogether: false` here because otherwise tracking will break because the second animation will get stopped before it can update.
We use a map rather than an array because indices can become negative when prepending.
We use a regex to parse the "name-value-pair" part of S5.2
We use attributes for everything SVG so let's avoid some duplication and run code instead.
We use concatMap instead of flatMap to ensure that the order doesn't change, in case one event takes especially long to marshal.
We use requireInject to get a fresh copy of the npm singleton each time we require it.
We use the element instead of the public this.props because the post processing cannot determine a ref.
We use the seedrandom module to get around this non-deterministic aspect -- so it is safe to assume that if the tests fail, then d3's RNG is broken.
We use this technique instead of startsWith() so this works on Node 0.12.0.
We use this to accurately detect changes on disk - conflicts should not be reported if any saves finished while fetching the updated contents.
We use try/finally and a threw flag to avoid messing up stack traces when we catch and release errors.
We used to allow keyed objects to serve as a collection of ReactElements, or nested sets.
We validate only after retrieving the data, to give our `invariant` checks below a chance to fail fast.
We wait what request will be sent by one of functions in `callers` list.
We want a new line separating cases if they had a consequent.
We want to avoid storing pending events if this event was generated by the same buffer as the current editor, to avoid duplicating events when multiple panes have the same file open.
We want to be the furthest left on the right side of the status bar so as not to leave a conspicuous gap (or cause jitter) when nothing is busy.
We want to delete these instead, because those directories aren't valid/useful if they are not true RemoteDirectory objects (connected to a real real remote folder).
We want to ensure that we don't block potential future ES APIs.
We want to get ranked higher than the snippets provider.
We want to get rid of owner and replace string `ref`s with arrow functions, and as long as `this` and owner are the same, there will be no change in behavior.
We want to ignore the watchman updates caused by these modifications, so we do two things: 1.
We want to invalidate aggressively because an incorrect fix application is far worse than a failed application.
We want to keep track of past edges as well.
We want to know when currentFocusElement loses focus to nowhere.
We want to make sure if a listener is attached using jQuery, it is also removed with jQuery, that's why we do the check for each directive instance and store that check result on itself.
We want to map to most recent edge.
We want to observe changes in the saved connection profiles during the lifetime of this connection dialog, because the user can add/delete a profile from a connection dialog.
We want to override the extra space within the first node of a class body, so we do one hard break and then throw in a no break.
We want to represent the fact that it's not part of the tracked contents, so we manually add an exception for it via the _isPathWithinHgRepo check.
We want to show *both* since we want to simultaneously animate elements in and out.
We want to trim stack trace to display user caller function.
We want to trim the last line when checking the length in case it causes the break.
We warn in this case but don't throw.
We will allow the scroll view to give up its lock iff it acquired the lock during an animation.
We will append a sentinel at the end of innerHTML to be sure that innerHTML was not changed.
We will check that later using the RegExp object.
We will create a GraphQL schema that describes the major factions and ships in the original Star Wars trilogy.
We will prefer to use a config with specificity of two.
We will simply ignore them.
We will want to customize this soon
We won't worry about edge cases like new String('x') or new Boolean(true).
We work around this by piping into a pass through stream that has unlimited buffering.
We work around this here.
We wrap `fn` instead of passing it directly to `.forEach` so it only gets called with one arg (i.e. it matches the Flow annotation).
We wrap tasks with recyclable task objects.
We'll add the real item first and then remove the old one so that we don't risk dropping down to zero items.
We'll call the `moveRef()` function several times and make sure that the hop ref points to the correct divs.
We'll define two components A and B, then update both of them.
We'll just create it.
We'll just report that the repository state changed, which should trigger a full client refresh.
We'll need a version of findHgRepository which is aware of remote paths.
We'll normalize this here so that /bla/ passes PropTypes.object.
We'll use this to ensure that an old version is not cached when it is reallocated again.
We're already fetching or have all the elements so noop
We're assuming that snapshots can only be added.
We're at the end of input
We're being more tolerant here: if someone uses a FutureReservedWord as a label, we warn but proceed anyway.
We're including it because of https://github.com/npm/npm/issues/12012
We're probably calling from enqueueCallback.
We're recursing automatically into (real or virtual) child nodes without changing binding contexts.
We're running in a browser.
We're specifically looking for exports.
We're too late and there's a new generation of tiles being loaded.
We're using a lockfile with an artificially old date, so make it use that instead of ctime.
We're using the "flipnegate" flag here, which tells minimatch to set the "negate" for our information, but still report whether the core pattern was a hit or a miss.
We've captured a click outside the popup
We've reached a new message so the other one must be done.
Web desktop polyfills only need to construct a fake touch event with identifier 0, also abandoning traditional click handlers.
WebInspector classes are not es6 classes, but babel forces a super call.
WebInspector.Searchable implementation
WebInspector.SourceMap indirectly needs this in order to load inline source maps.
WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right Work around by temporarily setting element display to inline-block
WebKit Web Facing API
WebSocket inherits from EventEmitter, and doesn't dispose the listeners on close.
Webkit browsers on OS X abort momentum scrolls when the target of the scroll event is removed from the scrollable element.
Webkit offers a very useful `textInput` event that can be used to directly represent `beforeInput`.
Webkit seems to refuse to render text nodes longer than 57444 characters
Webkit, Firefox, IE9+ which:  1 2 3 button: 0 1 2 (standard)
Weight of CSS properties based on their usage from https://www.chromestatus.com/metrics/css/popularity
Well, we weren't given a shasum, so at least sha what we have in case we want to compare it to something else later
Were React allowed to delete and creates nodes at its will it would have caused an abrupt stop in the scrolling process.
Were this schema executing on the server side, you could write a resolve method that fetches live data from a database.
What these nodes do is not well defined.
What we can do to mitigate use getters and setters in development to disallow and issue a warning for changing the `size` property.
What we have here, is three divs with refs (div1/2/3), but a single moving cursor ref `hopRef` that "hops" around the three.
What we really need to do is identify the currently running app and only show its messages.
What we're going to want to do is basically create the unsigned equivalent of our representation and pass that off to the wuint* functions.
What we're testing here is that updates use the parent module's path to install from.
Wheel target shouldn't be removed from DOM to preserve native kinetic scrolling.
When A's componentDidUpdate handlers is called, B's DOM should already have been updated.
When Atom is killed, clang_server.py should be killed, too.
When DevTools are opening in the inspect element mode, the first target comes in much later than the InspectorFrontendAPI.enterInspectElementMode event.
When Javascript ends up seeing the constant 0xff80, it has no notion that it is actually a signed number.
When _read(n) is called, it transforms the queued up data, calling the buffered _write cb's as it consumes chunks.
When `accessible` is true, the system will invoke this function when the user performs the magic tap gesture.
When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.
When `compareCommitId` is null, the `HEAD` commit contents is compared to the filesystem, otherwise it compares that commit to filesystem.
When `len` is given, this will return `null` unless the integer has exactly `len` digits.
When `locations` is on, you can pass this to record the source file in every node's `loc` object.
When `snapToInterval` is set, `snapToAlignment` will define the relationship of the snapping to the scroll view.
When `this` keyword was found, the checking context is initialized.
When `true`, this component does not wrap its children in a scrolling container and instead provides a simple container with visible (the default in CSS) overflow.
When a "parent" context is given, register a dependency on the parent context.
When a New file is created, it will be "untitled" and getPath() will return null.
When a StatusBar is unmounted, remove itself from the stack and update the native bar with the next props.
When a buffer is deserialized, it is looked up in the buffer cache by this key.
When a checkbox is bound to an array, being checked represents its value being present in that array
When a checkbox is bound to any other value (not an array), being checked represents the value being trueish
When a component's children are updated, a series of update configuration objects are created in order to batch and serialize the required changes.
When a function is provided to setState, it will be called at some point in the future (not synchronously).
When a key in this map is used in a way that would cause it to be required, the value is the module that is required rather than the key.
When a node has grown, check whether it should be split.
When a request is sent to the server, mutations can optionally construct an optimistic response that has the same shape as the server response payload.
When a root call is not fetched since it only contained empty fragments, we shouldn't throw.
When a route is added to a stack, the stack creates a key for this route.
When a text editor that we were observing is destroyed, we need to do clean-up even if its grammar hasn't changed.
When a top-level event is fired, this method is expected to extract synthetic events that will in turn be queued and dispatched.
When adding a fat query, consider *all* of the data that might change as a result of the mutation - not just data that we currently use in Relay.
When aggressive is false (typically set to true for forced single-line indents), empty lines are not indented, and places where the mode returns Pass are left alone.
When an 'electric' character is inserted, immediately trigger a reindent
When an aspect of a line changes, a string is added to lineView.changes.
When an event has just come in that is likely to add or change something in the input textarea, we poll faster, to ensure that the change appears on the screen quickly.
When an obsevable view model is used, the binding context will expose an observable _subscribable value.
When animation stops, the `diff` can still be very a small non-zero value (e.g. 0.00000002).
When another view is shown, the active view's React element is unmounted.
When bindings are static (won't be updated because of a binding context update), just return the value accessor from the binding.
When blockBindings is enabled, CatchClause creates its own scope so start from one upper scope to exclude the current node
When called from a file in a spec/ directory that has a subdirectory named fixtures/, it copies the specified subdirectory of fixtures into a temp directory.
When called on a transition, use a transition to update.
When capturing/bubbling the "shouldSet" event, we want to skip the target (deepest ID) if it happens to be the current responder.
When children are declaratively added or removed, special lifecycle hooks are called.
When cloning on Windows it's possible carrets are used
When closing a project path, we remove all stack entries contained in that path which are not also contained in a project path which is remaining open.
When closing editors, convert all locations for that editor to URI locations.
When console.log() (or .warn() or .error()) is called, it enqueues a request to atom-script via the UNIX socket to print the specified message.
When constructed, RemoteDirectorySearcher must be passed a function that it can use to get a 'FindInProjectService' for a given remote path.
When customizing `templateSettings`, if you don't want to define an interpolation, evaluation or escaping regex, we need one that is guaranteed not to match.
When data is initially created, via ("key", "val") signature, keys will be converted to camelCase.
When doing a forwards/backwards nav-stack move, ignore all events until the move is complete.
When done, call onFetchSuccess
When dragging, reduce the range by the extent size and position.
When enabled, a return at the top level is not considered an error.
When enabled, hashbang directive in the beginning of file is allowed and treated as a line comment.
When enabled, import/export statements are not constrained to appearing at the top of the program.
When enabled, parenthesized expressions are represented by (non-standard) ParenthesizedExpression nodes
When events start coming in, we need to reset user-friendly 0 - 1000ms calculator.
When executing asynchronously, it's easier to just have this method be the one that calls for removal of the view.
When false, it disables all bouncing even if the `alwaysBounce*` props are true.
When false, once tracking starts, won't try to drag if the touch moves.
When false, tapping outside of the focused text input when the keyboard is up dismisses the keyboard.
When false, the content does not scroll.
When flipping the order, the refs should update even though the actual contents do not
When focusing and collapsing we modify lots of nodes in the tree.
When focusing, we keep just the members of the callstack.
When focusing, we keep the entire callstack up to this ancestor.
When found, cache indexes on `parent` and break
When headers are not properly owned, we should look for source files in the same directory.
When implementing your own store, this SHOULD retain the order too
When in attach mode we are guaranteed that the two ports are not equal.
When including a file with a negated rule, it's relevant if a directory partially matches, since it may then match a file within it.
When it comes to ES6 classes and HTML5 custom elements, "constructors don't really work yet":
When it ends, see if any dragging actually happen, and treat as a click if it didn't.
When it's a new module (and not the first) the lineno mapping is 0 (current) - number of lines in prev module.
When line wrapping is off, we try to improve things by first subdividing the line into a bunch of inline blocks, so that IE can reuse most of the layout information from caches for those blocks.
When lineObj is true, the Pos objects returned contain a line object, rather than a line number (used to prevent looking up the same line twice).
When lineWrapping is on, there might be more than one height.
When lines outside of the viewport are measured, they are drawn in this.
When listener(s) are available those callbacks are invoked, otherwise the "*" event is emitted and those actions are invoked.
When matching at the start, ignore leading whitespace, and there's no need to worry about word boundaries.
When merged lines are present, we might have to reduce the intact ranges because changes in continued fragments of the intact lines do require the lines to be redrawn.
When modifying some of the properties a new instance needs to be created with all of the properties identical except for those being modified.
When more than one state update is enqueued, we have the same behavior
When mounted, `component` will be the component.
When mounting, calls to `setState` by `componentWillMount` will set `this._pendingStateQueue` without triggering a re-render.
When moving two touches in opposite directions, the cumulative distance is zero in each dimension.
When new test runners are added, the dropdown in the UI needs to update.
When node is a comment, we set node.loc.indent to node.loc.start.column so that, when/if we print the comment by itself, we can strip that much whitespace from the left margin of the comment.
When not focused on a crumb we can be biased and collapse less important crumbs that the user might not care much about.
When nothing is selected, the cursor sits after previously seen text (can be empty), which is stored in prevInput (we must not reset the textarea when typing, because that breaks IME).
When opening a new editor, convert all Uri locations on the stack to editor locations.
When outside is true, that means the coordinates lie outside the line's vertical range.
When padding, recompute the layout using scaled padding.
When parsing a new function, store it in our function stack.
When parsing a template, adds the created fragment to a cache
When pasing N lines into N selections, insert one line per selection
When piping a LinkReader into a LinkWriter, we have to already have the linkpath property set, so that has to happen *before* the "ready" event, which means we need to override the _stat method.
When popping, removes the rest of the routes past the current index.
When possible, the class strives not to recompute the derived fields, but reuses the previous values.
When pushing, removes the rest of the routes past the current index.
When records are collected after calls to `scheduleCollection` or `scheduleCollectionFromNode`, records are collected in steps, with a maximum of `stepLength` records traversed in a step.
When refs are used, they should only be done to control data that is not handled by React's data flow.
When required the import WILL be relativized.
When required the import will NOT be relativized.
When running REPL, main application file is null and node inspector returns an empty string to the front-end.
When running a test where a Promise is expected to fail, it is important to verify that it failed in the expected way to avoid false positives in test results.
When running as root, or if other types of errors are encountered, then it's strict.
When set, causes the scroll view to stop at multiples of the value of `snapToInterval`.
When setting, use the specified priority.
When something is selected, it is present in the textarea, and selected (unless it is huge, in which case a placeholder is used).
When strict match is enabled give priority to non-pre-releases We do this by filtering every pre-release version
When that happens it will enqueue the operation and retry it.
When the "+" button is clicked (the user intends to add a new connection profile), open a new dialog with a form to create one.
When the ALT key is released, we clear the center.
When the DEBUG_ATOM_SCRIPT environment variable is set, we forward stdout and stderr from the Atom process to stderr so that the stdout is only what is written by `console.log()` in the Atom process.
When the Electron app is running in "server mode"
When the ScrollView is at `scrollY: 0`, swiping down triggers an `onRefresh` event.
When the `name` is "*" an un-matched command will be passed as the first arg, followed by the rest of __ARGV__ remaining.
When the active pane isn't a text editor, e.g. diff view, preferences, ..etc., We don't show a connection status bar.
When the commit mode changes, load the appropriate commit message.
When the component changes or unbinds before an async constructor is resolved, we need to invalidate its pending callback.
When the component is added, turn it into a modal
When the current declaration uses a different member syntax, then check if the ordering is correct.
When the cursor moves the next time we do a toggle we should show the new datatip
When the image has rounded corners, specifying an overlayColor will cause the remaining space in the corners to be filled with a solid color.
When the image is resized, the corners of the size specified by capInsets will stay a fixed size, but the center content and borders of the image will be stretched.
When the message is an array with multiple elements, the second element onwards comprise the trace for the error.
When the number of subscriptions reach 0, the file is unwatched.
When the number to be pluralized exceeds the length of the args, it will use the last entry in the array.
When the operation throws, the transaction should throw, but all of the error-free closers should execute gracefully without issue.
When the option is `"never"`, `true` if there are not any spaces between given tokens.
When the popup is shown, we want to dispose it if the user manages to move the cursor off of the gutter glyph without moving it onto the popup.
When the pretty printer encounters a string instead of an AST node, it just prints the string.
When the process exits, we want to remove the reference to the process.
When the scroll view is disabled, this defines how far your touch may move off of the button, before deactivating the button.
When the user chooses password-based authentication, we specify the config as follows so that it tries simple password auth and failing that it falls through to the keyboard interactive path
When the value is a function, the function is still evaluated only once per element even if there are multiple class names.
When the window loses focus, we want to show the editor as blurred
When the window resizes, we need to refresh active editors.
When there are more than three length categories, an outer switch first dispatches on the lengths, to save on comparisons.
When there are previous segments, aggregates these.
When there is a gap from after().last() query, this is the same as just storing a last().
When there is a gap from before().first() query, this is the same as just storing a first().
When there is no exact match, BasicSourceMapConsumer.prototype._findMapping returns the index of the closest mapping less than the needle.
When there is no init part (semicolon immediately after the opening parenthesis), it is a regular `for` loop.
When there is only one `default` chunk and there is one or more `break` statements, even if forks are nothing, it needs to merge those.
When there's a single (program) sample between two call stacks sharing the same bottom node, it is replaced with the preceeding sample.
When these are undefined, the vertical/horizontal position does not need to be adjusted.
When this child view is at `scrollY: 0`, swiping down triggers an `onRefresh` event.
When this happens, the Promise returned by this method will resolve to that non-null value.
When this happens, the help text has already been printed to stdout.
When this is the case, this prop will fill the rest of the scrollview with a color to avoid setting a background and creating unnecessary overdraw.
When this object is garbage collected the subject should be too.
When this option has the value "never", reserved words and keywords can also not be used as property names.
When this option is provided, it validates the hash value itself.
When this transform is fully supported we can rename it.
When translucent is set to true, the app will draw under the status bar.
When traversing a specific connection edge only look at `edges`
When traversing connection metadata fields, edges/page_info are only kept if there are range extension calls.
When true, call console.time() before and .timeEnd() after each top-level render (both initial renders and updates).
When true, gestures can drive zoom past min/max and the zoom will animate to the min/max value at gesture end, otherwise the zoom will not exceed the limits.
When true, indicates that the view is an accessibility element.
When true, indicates the image is an accessibility element.
When true, no visual change is made when text is pressed down.
When true, shows a horizontal scroll indicator.
When true, shows a vertical scroll indicator.
When true, the ScrollView will try to lock to only vertical or horizontal scrolling while dragging.
When true, the scroll view bounces horizontally when it reaches the end even if the content is smaller than the scroll view itself.
When true, the scroll view bounces vertically when it reaches the end even if the content is smaller than the scroll view itself.
When true, the scroll view bounces when it reaches the end of the content if the content is larger then the scroll view along the axis of the scroll direction.
When true, the scroll view scrolls to top when the status bar is tapped.
When true, the scroll view stops on multiples of the scroll view's size when scrolling.
When true, the scroll view will not catch taps, and the keyboard will not dismiss automatically.
When true, the scroll view's children are arranged horizontally in a row instead of vertically in a column.
When two touches move in parallel five pixels in the same direction, the cumulative distance is five, not ten.
When un/re-doing restores text containing marked spans, those that have been explicitly cleared should not be restored.
When unmounted, `component` will be null.
When unreachable, all paths are returned or thrown.
When updating an existing node with innerHTML whitespace in root TextNodes is also collapsed.
When used to scope for completion on a *sub-command* (e.g. for "git log" on a "git" tool), then it would have a value (e.g. "__log").
When we are in "define" state of the list comp,
When we are in "filter" state,
When we are in "use" state of the list comp, we enqueue that var
When we are in the "generate" state of the list comp,
When we have an estimated pixels/delta value, we just handle horizontal scrolling entirely here.
When we have enough space, no page size override is required.
When we move forward in the navigation stack, we perform a right-to-center transition on the new navigation item and a center-to-left transition on the current navigation item.
When we open a file for the first time, make sure we pass 'clean' to getDiagnostics to reset any server state for the file.
When we print trailing comments as leading comments, we don't want to bring any trailing spaces along.
When we reached the correct line, we add code until we reach the correct column too.
When we're done saving bundle output and the assets, we're done.
When we're first setting up this computed, don't change any model state.
When we're responding to the checkedValue changing, and the element is currently checked, replace the old elem value with the new elem value in the model array.
When we're responding to the user having checked/unchecked a checkbox, add/remove the element value to the model array.
When writing this code also evaluating per node was missing out connecting tokens in some cases.
When you call detach, it removes the element from the parent list of children.
When you call read(), that calls _read(n) until there's enough pending readable data buffered up.
When you write(chunk), that calls _write(chunk,cb) internally, and returns false if there's a lot of pending writes buffered up.
When you're adding or removing children some may be added or removed in the same render pass.
When/if this matters, use `semver`.
Whenever a change occurs method `updateConf()` has to be called on the root(s) of the tree to notify about the change.
Whenever a particular type of node is found, an event is fired.
Whenever the active pane item changes, we check to see if there are any pending events for the newly-focused TextEditor.
Where possible, ignore which event was raised and determine focus state using activeElement, as this avoids phantom focus/blur events raised when changing tabs in modern browsers.
Where to show the bar that displays your current selected hue.
Where to show the little circle that displays your current selected color.
Where values can be any JavaScript value.
Whether `edges` fields are expected to have `source` fields.
Whether function has TargetFunction internal property.
Whether or not to initially select the base name of the path.
Whether or not we are making a navigator request to push/pop.
Whether or not we are updating children of navigator and if so (not `null`) which index marks the beginning of all updates.
Whether splits are allowed on the pane item.
Whether the indicator should hide when not animating (true by default).
Whether the pin drop should be animated or not
Whether the pin should be draggable or not
Whether the pull to refresh functionality is enabled
Whether the pull to refresh functionality is enabled.
Whether the selection needs to be redrawn
Whether the view should be indicating an active refresh
Whether the view should be indicating an active refresh.
Whether this CircularBuffer has reached its capacity.
Whether this is width or height depends on the orientation of this panel.
Whether this provider can render in a dedicated tab.
Whether this reset should be careful to leave existing text (for compositing)
Whether this type of option takes an argument on process.argv.
Whether this view should be rendered as a bitmap before compositing.
Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.
Whether to allow devtools inspection.
Whether to allow interspersed arguments (non-options) and options.
Whether to print debug messages.
Whether to reset the input textarea
Whether to show the indicator (true, the default) or hide it (false).
Whether to suppress warnings.
Whether to throw on unknown options.
Whether to use async rendering.
Whether to warn against errors caught when evaluating expressions.
Which of the authentication methods in `SupportedMethods` to use.
Whichever timer succeeds will cancel both timers and execute the callback.
While `isCollapsed` is available on the Selection object and `collapsed` is available on the Range object, IE11 sometimes gets them wrong.
While `parent` is still responder, we create new handlers that verify the ordering of propagation, restarting the count at `0`.
While browsers typically do this as necessary, jsdom doesn't.
While inside a line, override point to moveTo then lineTo.
While inside a polygon, override lineEnd to closePath.
While processing a navigation stack move we don't update the nav stack.
While rebasing, the common ancestor of `HEAD` and `BASE` may be not applicable, but that's defined once the rebase is done.
While rendering inherited stylesheet, reverse meaning of this property.
While restore opened files, the remote port might have been changed if the server restarted after upgrade or user killed it.
While source maps are intended to be compressed and deduplicated, the TypeScript compiler sometimes generates source maps with duplicates in them.
While the APIs remain compatible with Navigator, it is built with good intention by using the new Navigation API such as `NavigationAnimatedView`...etc.
While the output is causally related to the input, it's not a necessarily symmetric or synchronous transformation.
While this class is private it will create objects that will be passed around publicily.
While this isn't a technically possible situation, the parser doesn't care.
While traversing the tree, a scope chain is built and passed to the visitor.
While user keyboard layout determines the actual meaning of each `keyCode` value, almost all function keys have a universal value.
While we plan to keep most of the API, the actual format of measurements will change dramatically.
Whitespace-only lines don't tell us much about the likely tab width of this code.
Whoever instantiates a transaction can provide enforcers of the invariants at creation time.
Why: Because `dangerouslyReplaceNodeWithMarkupByID` relies on being able to unmount a component with a `rootNodeID`, then mount a new one in its place,
Widely adopted global names that are not part of ECMAScript standard
Width of keys, including quotes
Will allow on actual dom nodes.
Will attempt to reconnect.
Will be automatically unsubscribed here.
Will be called (before `onClose`) if the user confirms.
Will be called by the batcher.
Will be called regardless of whether the user confirms.
Will be called when a dependency changes.
Will be called with the new route of each scene after the transition is complete or after the initial mounting
Will be non-null for class-like containers only.
Will be non-null for functions and methods only.
Will be non-null for variables/typedefs only.
Will be overridden after an instance lazily calls scanScope.
Will be used to validate and trace mixins.
Will catch circular structures.
Will check for reserved words when necessary.
Will close all the open connections, we don't care
Will contain the actual code, positioned to cover the viewport.
Will contain the gutters, if any
Will contain the gutters, if any.
Will create a new bound function without a prototype, much like a native arrow function.
Will do that if anyone whines about this irl.
Will emit the target route upon mounting and before each nav transition
Will fill in all missing node type properties with the defaults.
Will keep most recently used items while discarding least recently used items when its limit is reached.
Will later move into MultiChildComponents.
Will perform a transition between touchable states, and identify any highlighting or unhighlighting that must be performed for this particular transition.
Will reject quickly if the connection looks unhealthy.
Will return a named type if and only if the alias resolves to a builtin type, or an interface.
Will set `this.props`, `this.state` and `this.context`.
Will trigger an update immediately if no other async call is active.
Will trigger the complete reconstruction of the entire tree branch
Win8 apps: Allow all html to be inserted
Windows URIs usually parse all wrong, so we just take matters into our own hands, in this case.
Windows expects an absolute path
Windows, by contrast, gives the generic EPERM of a folder already exists.
Wire up the batched bridge on the global object so that we can call into it.
With "allowForLoopAfterthoughts" allowed
With a long trailing comment.",
With a top-level Navigator, you have more control over how to present the modal scene over the rest of your app by using the configureScene property.
With memory, if we're not firing then we should call right away
With minimal changes (the exports stuff) it should work on any JS platform.
With no query, load latest movies
With renderToString (for example), we don't know where we're mounting the tag so we must err on the side of leniency.
With that in mind you can use the ScrollView's contentContainerStyle prop to style the items.
With the "9", that bumps the length up to 10.
With the notable exception of surrogate pairs, each wchar represents the corresponding unicode code point.
With the way `ReactNativeEventEmitter` dispatches touches as individual events, multiple touches generate two 'move' events, each of them triggering `onResponderMove`.
With this parameter, it is possible to force a certain timezone offset.
With three, it iterates over the range given by the first two (with the second being non-inclusive).
Within a range, each contiguous group of edges is modeled using a `GraphQLSegment`, but this is an implementation detail that `GraphQLRange` hides from its callers.
Without a file name, the source map is not used.
Without prefix, nothing will ever work
Without that plugin, notifications are always issued immediately so we wouldn't be queueing up more than one.
Without the `TouchableWithoutFeedback`, taps on this inspector pane would change the inspected element to whatever is under the inspector
Without the alias check these queries would be considered empty.
Without this first invariant, passing a non-DOM-component triggers the next invariant for a missing parent, which is super confusing.
Without this, controlled components don't work properly in conjunction with event bubbling because the component is rerendered and the value reverted before all the event handlers can run.
Won't happen, except if the developer has manually removed some DOM elements (then we're in an undefined scenario)
Work around IE7 z-index bug
Work around IE7 z-index bug (not perfect, hence IE7 not really being supported)
Work around an IE7/8 bug where it will sometimes have randomly replaced our pre with a clone at this point.
Work around bug in node v0.10.0 where the CryptoStream gets stuck and never starts reading again.
Work around flow refinements.
Work around nonsense dimensions being reported for stretches of right-to-left text.
Work around problem with bounding client rects on ranges being returned incorrectly when zoomed on IE10 and below.
Work around the jQuery "click events on checkboxes" issue described above by storing the original checked state before triggering the handler
Work out how much base64 we used, then drop all non-base64 chars from the beginning up to this point in the the string.
Work with a copy of dataTypes in case we need to modify it for conversion
Workaround IE 6/7 issue - https://github.com/SteveSanderson/knockout/issues/197 - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/
Workaround closure compiler bug.
Workaround flow's (over)aggressive nullability detection
Workaround for Chrome issue 412723: the touchstart listener must be set after the touchmove listener.
Workaround for Firefox 2 and 3, which steal focus from the main document whenever the iframe content is (re)loaded.
Workaround for IE bug
Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread right after you've changed the set of OPTION nodes on it.
Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.
Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209
Workaround for browserify.
Workaround for flow bug t7737108
Workaround for https://github.com/SteveSanderson/knockout/issues/122 IE doesn't fire "change" events on textboxes if the user selects a value from its autocomplete list
Workaround for node 0.8
Workaround require cycle from requireNativeComponent
Workarounds to enable setTimeout, as suggested by: https://discuss.atom.io/t/solved-settimeout-not-working-firing-in-specs-tests/11427/17
Worker will timeout if one of the callers timeout.
Workers call into this with no frames available.
Workers don't share same V8 heap now so there is no need to complicate stuff with the context id like we do to discriminate between scripts from different pages.
WorkingSet is an implementation of a filter for files and directories.
Works around a throw-scroll bug in OS X Webkit
Works for Android only.
Works on Unix and Mac OS X.
Works on facebook.com as of 10/28/15 (use a test user).
Works with buffers and strings...
Worse yet, some (in particular, `type`) vary depending on the type of element.
Worse, Flow will assume that *any* string key will yield a valid ServerStatus result, so we won't get protection against typos.
Worst case scenario is requiring restarting Nuclide after changing the hh_client path.
Would be nice to make a specialized implementation
Wouldn't work with setEncoding()
Wrap `componentDidUpdate` to notify Atom of changes.
Wrap a `key` value explicitly provided by the user to distinguish it from implicitly-generated keys generated by a component's index in its parent.
Wrap a keyed object in an opaque proxy that warns you if you access any of its properties.
Wrap all of the elements of an array into arrays.
Wrap each callback so that we don't leak the fact that subscribe is implemented with observables (by accepting Observers as well as callbacks).
Wrap help description normally.
Wrap help text in helpCol..maxCol bounds.
Wrap in an IIFE to avoid unwanted function hoisting.
Wrap the "checkFile" error.
Wrap the data in an object, because if `data` is a primitive data type, finding it in an array would return the first matching item, not necessarily the same inserted item.
Wrap the gadget so it has Atom-specific stuff.
Wrap the ref query node with a reference to the required query that is its context.
Wrap the remoteModule construction in a function that takes a ClientComponent object as an argument.
Wrapped in a function rather than a module constant to facilitate testing.
Wrapped objects may be chained.
Wrapper around BufferedProcess that runs the command using unix `script` command.
Wrapper around `WebInspector.Object` to act like `atom.Emitter`.
Wrapper around `buildRQL.Fragment` with contextual error messages.
Wrapper around an estraverse controller that ensures the correct keys are visited.
Wrapper around android native recycler view.
Wrapper around buildLineContent which will reuse the structure in display.externalMeasured when possible.
Wrapper around the Android native module.
Wrapper for Chrome Devtools frontend view.
Wrapper on-top of `optimist` in order to properly support boolean flags and have a slightly less akward API.
Wrapper to help mocking during tests.
Wrappers are extremely simple - they only require implementing two methods.
Wrapping a sequence in extra parens indicates intent
Wrapping function allows the final function to contain state (for caching).
Wraps `descriptor` in a new top-level ref query.
Wraps a function in an operation.
Wraps and hides input textarea
Wraps everything that needs to exist inside the vertically-padded coordinate system
Wraps scriptSafeSpawn with an Observable that lets you listen to the stdout and stderr of the spawned process.
Wraps the supplied function with one that provides the `attachHandler` and `detachHandler` methods.
Writable ctor is applied to Duplexes, though they're not instanceof Writable, they're instanceof Readable.
Write Ignore writes if the value hasn't changed
Write a json response text with an optional status code.
Write a string to a Scribe category.
Write a text or convert to text response with an optional status code.
Write an ANSI color code, ensuring that the same code doesn't get rewritten.
Write data for the edge, using `nodeID` as the id for direct descendant `node` fields.
Write everything written to the stream to a temp file.
Write full data for 3 of 5 records, nothing for edges 4-5
Write full data for all 3 items
Write out the in-memory buffer.
Write per-project conf file
Write response message to ipc for sync message.
Write the file to a temp file first and then move it so the write to the cache is atomic.
Write the head of the configure script
Write the results of a query into the base record store.
Write the results of an update into the base record store.
Write these indices to the end of the array.
WriteBatch Clean up test database
WriteReferences which exist after this border are unsafe because those can modify the variable.
Writeable dependent observable
Writes a GraphMode payload into a Relay store.
Writes a configuration file in JSON format.
Writes a configuration file in JavaScript format.
Writes a configuration file in YAML format.
Writes a configuration file.
Writes a plural linked field such as `actors`.
Writes data for connection fields such as `news_feed` or `friends`.
Writes the node data for the given field to the store and prepends/appends the node to the given connection.
Writes the value for a 'scalar' field such as `id` or `name`.
Writing to "text" is still supported, but then the template data will not be available as DOM nodes.
Writing to the final column wraps the line We have to use stdout here, because Node's magic SIGWINCH handler only updates process.stdout, not process.stderr
X-Requested-With header For cross-domain requests, seeing as conditions for a preflight are akin to a jigsaw puzzle, we simply never set it to be sure.
XDebug's eval returns xml without a `fullname` attribute.
XHP class name, usages omit the leading ':'.
XPath indices start with 1.
XPath treats CDATA as text nodes.
XXX - default Optional.
XXX If --json is set, then look up the data from the package.json
XXX It would be good to set a maximum BufferEntry filesize, since it eats up memory.
XXX Make this work in node.
XXX This function is beastly.
XXX This is different on 0.10, because SSL is strict by default
XXX This should be more like how -C works, so you can explicitly set a root dir, and also explicitly set a pathname in the tarball to use.
XXX check whether some manifest was originally supplied, otherwise keep using the default.
XXX enable PGO in phpize mode
XXX fix comment handling
XXX hard links are just files.
XXX https://github.com/joyent/node/issues/3555 Remove when node 0.8 is deprecated.
XXX remove this slice.
XXX something better were to write here
XXX this should match ls --parseable and install --parseable look up the data from package.json, format it the same way.
XXX(isaacs): Remove when npm 1.4 is no longer relevant
XXX: It's lame that node doesn't expose this API out-of-the-box.
XXX: Not sure how old this node bug is.
XXX: file:// URIs and absolute paths lead to unexpected behavior for many users.
XXX: if anyone complains about this, either fix it or tell them to grow up and stop complaining.
YUI variables should be predefined
YUI variables should be predefined Obsolete options
Yeah, technically it's Corellian.
Yellow/warning if the class skipped tests.
YellowBox renders warnings at the bottom of the app being developed.
Yes, Virginia, circular definitions are permitted.
Yes, it is deeply ugly to write APIs this way, but that still doesn't mean that the Readable class should behave improperly, as streams are designed to be sync/async agnostic.
Yes, this will be wrong 1/1000 times on platforms with subsecond stat precision, but that's acceptable in exchange for not mistakenly removing locks on most other systems.
You are expected to pass in an object that was returned from `parse()`.
You can also attach to the special name '*' which is a catch all.
You can choose any rendered node you like.
You can compute the current centroid involving all touches moves after `touchesChangedAfter`, or you can compute the previous centroid of all touches that were moved after `touchesChangedAfter`.
You can do this by implementing a custom ProcessOutputHandler.
You can generate new channels where WebSocket features live using the rails generate channel command.
You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.
You can omit it if you prefer to register the command manually.
You can optionally configure a limit to set the maximum number of async operations at a time.
You can override this with the `stopTogether` flag.
You can provide an optional callback that will be executed when the call to setState is actually completed.
You can provide custom extraction and `hasChanged` functions for section headers and rows.
You can set style properties like `padding` or `backgroundColor` for each child.
You can tell JSHint that you don't use break intentionally by adding a comment /* falls through */ on a line just before the next `case`.
You can use it to generate grids, rows, pages...
You can use other URLs, like a location (e.g. "geo:37.484847,-122.148386"), a contact, or any other URL that can be opened with the installed apps.
You can use the options object to pass in extra constraints.
You can use this (for example) to update UI before starting the animation.
You can't really "read" from a socket.
You cannot just pass `console.error` as a failure callback - it's not properly bound.
You could assign state here, but not access members of it, unless you had provided a getInitialState method.
You don't really gain a lot from having a large number of commands spawned at once, so it isn't super important for this number to be large.
You don't want to commit any code that uses this helper, but it is useful when developing tests.
You hook your `ResponderEventPlugin` events into `Touchable`.
You may also use string shortcuts `"normal"` and `"fast"` which match the underlying iOS settings for `UIScrollViewDecelerationRateNormal` and `UIScrollViewDecelerationRateFast` respectively.
You may call 'push' zero or more times.
You may need to apply reactive updates to a child as it is leaving.
You may obtain a copy of the License at
You may pass an object with the following properties:  - file: The filename of the generated source.
You may want to call this when you know that some deeper aspect of the component's state has changed but `setState` was not called.
You may want to put this in your afterEach.
You might use this to e.g. open a website: `opener("http://google.com")`
You must provide a renderRow function.
You must provide both or neither methods, one must not exist without the other.
You overwrite the "get" Symbol in your subclass.
You overwrite the "set" Symbol in your subclass.
You probably don't want to call this - use removeItem or multiRemove to clear only your own keys instead.
You should call this method in rare circumstances only, such as when a new version of the app removes support for all types of remote notifications.
You should not use this outside of the ReactDOM controlled form components.
You should treat `this.state` as immutable.
You specify the mutation, the inputs, and the query.
You will never need to instantiate `PushNotificationIOS` yourself.
You will not notice a difference between values set between 1-16 as the JS run loop is synced to the screen refresh rate.
You would typically create a single instance of a `Transaction` for reuse multiple times, that potentially is used to wrap several different methods.
Your output will go here.
Your testing code goes here....
Yuck, program temporarily in invalid state.
Zero by itself with no other piece of number.
Zero length arguments are considered not equal.
Zero out remaining bytes if string was short
Zero out saved percentage sizes, and they will be restored to defaults.
Zero overhead in production.
Zero score for a match that contains the token without case-sensitive matching.
Zero width and height mean default size.
Zero-length keys should get filtered out.
Zip together multiple lists into a single array -- elements that share an index go together.
_Never_ expose "private" data to user code (TODO: Drop _data, _removeData) 5.
__DEV__-only mapping from reactRootID to root elements.
__proto__ is used because we must return a function, but there is no way to create a function with a different prototype.
__typename: 'FriendsConnection',
__typename: 'FriendsEdge',
__typename: 'Screenname',
__webpack_public_path__
_client.callRemoteFunction(name, kind, args)
_client.callRemoteMethod(this, methodName, returnType, args)
_transform does all the work.
_updateSize is only ever bound within these.
`*` is a marker for JSDoc comments.
`+` or `-` means we've reached the start of a method declaration.
`-c 1` tells HHVM to send stdout to the normal destination, as well as forward it to nuclide.
`.length` getter operation implementation.
`:exit` is needed for the `node.parent` property of identifier nodes.
`AlertIOS.prompt` allows you to prompt the user for input inside of an alert popup.
`Animated.ValueXY` is handy for 2D animations, like panning, and there are other helpful additions like `setOffset` and `getLayout` to aid with typical interaction patterns, like drag-and-drop.
`Animated.Value` can also bind to props other than style, and can be interpolated as well.
`AppRegistry` is the JS entry point to running all React Native apps.
`AppRegistry` should be `require`d early in the `require` sequence to make sure the JS execution environment is setup before other modules are `require`d.
`AppStateIOS` can tell you if the app is in the foreground or background, and notify you when the state changes.
`AppState` can tell you if the app is in the foreground or background, and notify you when the state changes.
`ArrayPattern` which has `RestElement` disallows it.
`CameraRoll` provides access to the local camera roll / gallery.
`Clipboard` gives you an interface for setting and getting content from Clipboard on both iOS and Android
`Definitions` encodes all of the information in a service defintion file that is required to generate a remote proxy.
`FriendsStatusDisplay` renders nulls as empty children (it's a convention of `FriendsStatusDisplay`, nothing related to React or these test cases.
`IntentAndroid` gives you a general interface to handle external links.
`LinkingIOS` gives you a general interface to interact with both incoming and outgoing app links.
`Linking` gives you a general interface to interact with both incoming and outgoing app links.
`Map` is not actually immutable, but use the immutable paradigm to keep updating consistent for all values in `state`.
`NaN`s are equivalent, but non-reflexive.
`NativeMethodsMixin` provides methods to access the underlying native component directly.
`NativeMethodsMixin` will look for this when invoking `setNativeProps`.
`Option` is missing an argument, but received `flag` or nothing.
`PanResponder` reconciles several touches into a single gesture.
`PathArray` constructor.
`PooledClass` looks for `destructor` on each instance it releases.
`PooledClass` looks for this, and will invoke this before allowing this instance to be reused.
`PooledClass` looks for this.
`ReactBrowserEventEmitter` is used to attach top-level event listeners.
`ReactInstanceMap` maintains a mapping from a public facing stateful instance (key) and the internal representation (value).
`ReactNativeEventEmitter` is used to attach top-level event listeners.
`RecentFileService` listens for `onWorkspaceDidStopChangingActivePaneItem`, which debounces calls to `onDidChangeActivePaneItem`.
`RelayQueryNode` provides access to information such as the field name, generated alias, sub-fields, and call values.
`ResponderEventPlugin` must occur before `SimpleEventPlugin` so that preventing default on events is convenient in `SimpleEventPlugin` handlers.
`Scope.through` contains references of nested functions.
`Selection.isCollapsed` is available natively, but IE sometimes gets this value wrong.
`Session` is particular about what order everything is closed in, so we manage it carefully here.
`Set` maintains items in insertion order, so the ordering is determinate on each render.
`Simulate` does not currently support mouseEnter: https://github.com/facebook/react/issues/1297.
`StatusDisplay` contains a unique number that allows us to track internal state across ordering movements.
`TestRunnerPanel` expects an Array so it can render the test runners in a dropdown and maintain a selected index.
`Touchable.Mixin` self callbacks.
`TouchableMixin` provides touchable hooks (`this.touchableHandle*`) that we forward events to.
`Touchable` will measure time/geometry and tells you when to give feedback to the user.
`Touchable`: Taps done right.
`View`, `Text`, and `Image` are already provided, and you can create custom ones with `createAnimatedComponent`.
`__generatedMappings` and `__originalMappings` are arrays that hold the parsed mapping coordinates from the source map's "mappings" attribute.
`__typename` property is typed as `string`
`_generatedMappings` is ordered by the generated positions.
`_originalMappings` is ordered by the original positions.
`_renderHeader` is always called before `_renderCard`.
`_repositoryRemoved` could probably be inlined here.
`_rowHasChanged` understands the shape of the row data and knows how to efficiently compare it.
``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
`address` will be encountered twice, both occurrences must be tracked
`advanceClock` relies on Date.now exclusively.
`babel.transform` will attempt to resolve all base plugins relative to the file it's compiling.
`backtick` should not warn computed property names.
`backtick` should not warn import/export sources.
`backtick` should not warn property names (not computed).
`backtick` should not warn the directive prologues.
`basePath` should be the directory where the .hhconfig file is located.
`beforeInput` is spec'd but not implemented in any browsers, and the `input` event does not provide any useful information about what has actually been added, contrary to the spec.
`binop`, when present, specifies that this operator is a binary operator, and will refer to its precedence.
`body` only exists on `Comment` which does not match the record type
`brokenForkContext` is used to make the next segment.
`buck query` does not include entries in the JSON for params that did not match anything.
`buffer` is defined in the parent scope and used in a closure it exists for the life of the Request.
`buffer` is defined in the parent scope and used in a closure it exists for the life of the request.
`callback` is invoked with the final value after stopping the animation, which is useful for updating state to match the animation position with layout.
`callback` will be invoked with a `permissions` object:  - `alert` :boolean - `badge` :boolean - `sound` :boolean
`charCode` is the result of a KeyPress event and represents the value of the actual printable character.
`charCode` represents the actual "character code" and is safe to use with `String.fromCharCode`.
`clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
`close` is invoked when the wrapped process is completed, or has failed.
`close` is the token type that ends the list, and `allowEmpty` can be turned on to allow subsequent commas with nothing in between them to be parsed as `null` (which is needed for array literals).
`close` restores the previous value.
`componentWillMount` is the closest thing to a  standard "constructor" for React components.
`connectionName` Name of the connection field from which the edge is being deleted.
`connectionName` Name of the connection field into which the edge is being inserted.
`cur` is used to keep the node that we are currently adding statements to.
`data-name` is support for selectors in the "file-icons" package.
`data-name` is support for the "file-icons" package.
`debounce` calls `Date.now` to determine whether to call callbacks.
`deletedIDFieldName` can also be a path from the response root to the deleted node.
`diagnostics` is likely to be inaccurate if this was the case.
`diffModel` is acting as the action creator for commit view and needs to be passed so methods can be called on it.
`ecmaVersion` indicates the ECMAScript version to parse.
`edgeName` Name of the top-level field in the fat query that corresponds to the newly inserted edge.
`edges` have not been fetched, should be kept
`enabled` may be `undefined` if `atom.config.get` is called before the the default config is built.
`encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
`enqueue` takes a Task object with either a simple `run` callback, or a `gen` function that returns a `Promise` and puts it in the queue.
`equals` takes another object, presumably of similar type, and returns true if the it is equal.
`exit` with a non-zero error code should reject the Promise and return the generic ENOENT (End Of ENTity) exit code.
`filter` Promise utility that allows filtering an array with an async Promise function.
`findReferences` will only be called if `isEditorSupported` previously returned true for the given TextEditor.
`finishOp` simply skips the amount of characters it is given as second argument, and returns a token of the type given by its first argument.
`flow server` will start a server in the foreground.
`flush` will attempt to exhaust the event queue before yielding to the browser's own event loop.
`foo` resolver is re-used, `bar` is added
`forEachCachedNode` iterates over the root, but it should remain selected.
`friends` connection, reusing client id.
`friends` is null, should not refetch it.
`function (option, optstr, arg)` parser that takes a string argument and returns an instance of the appropriate type, or throws an error if the arg is invalid.
`getKeyForClientData` should be called on every field.
`global` is a provision of Browserify, Mr, Mrs, or Mop.
`hg sl` is likely user-defined.
`hg status -i` does not list the repo (the .hg directory), presumably because the repo does not track itself.
`hg` already comes from `HgRepositoryClient` in `StatusCodeNumber` format.
`hh_client` doesn't currently support `onTheFly` diagnosis.
`id` should always be fetched, but should work correctly regardless
`index` specifies the route in the stack that should be replaced.
`init` is called in `AppRegistry.runApplication`, so you shouldn't have to worry about it.
`init` is outside of the loop.
`initialRoute` must be a route in the `initialRouteStack` if both props are provided.
`input` should be the code string that the offset refers into.
`isLoop` marks a keyword as starting a loop, which is important to know when parsing a label, in order to allow or disallow continue jumps to that label.
`join('http://', 'www.example.com')`
`join(foo, '//www.example.org')`
`keyCode` is the result of a KeyDown/Up event and represents the value of physical keyboard key.
`key` is set to force React to treat this as a new element when the `value` attr should be removed.
`left` is deeper than `right` normally.
`left` is executed always, so it uses the current path.
`left` is the left-hand side of the operator.
`minPrec` provides context that allows the function to stop and defer further parser to one of its callers when it encounters an operator that has a lower precedence than the set it is parsing.
`min` is implicitly set to `0`.
`name(if:true)`, `name(unless:false)`, and `name` are equivalent.
`name` added range not updated, only the node changed
`nativeEventTarget` is probably a window object.
`nextIndex` will increment for each child in `nextChildren`, but `lastIndex` will be the last index visited in `prevChildren`.
`nodeHandle`: A sufficiently unambiguous way to refer to a lower level resource (dom node, native view etc).
`node` is `Identifier` or `MemberExpression`.
`node`s within a connection are a special case as the ID used here must match the one generated prior to storing the parent `edge`.
`npm test` dumps a ton of npm_config_* variables in the environment.
`npm.config.get(...)` are: a) Simple strings, and not variables b) Documented c) Defined in the `npmconf` package.
`null` and `undefined` values are not allowed.
`observedTopOfStack` merely represents what we've observed and this first `setState` is only executed to update debugging overlays/navigation bar.
`of` is not a keyword token.
`onCompleted`: Not called.
`onError`: Currently not called.
`onInsertedSemicolon` can be a callback that will be called when a semicolon is automatically inserted.
`onMomentumScrollBegin` (when animation begins after letting up) ...
`onMomentumScrollEnd`   (Makes no sense why this occurs first during bounce) 3.
`onMoreTasks` is invoked when `PromiseTask`s resolve if there are more tasks to process.
`onMoreTasks` will be called after each `PromiseTask` resolves if there are tasks ready to run at that point.
`onResponderRelease`    (when lifting up - you could pause forever before * lifting) 5.
`onStartShouldSetResponder` is used when the next move/end will trigger some UI movement/action, but when you want to yield priority to views nested inside of the view.
`onTouchEnd`            (You could hold the touch start for a long time) 6.
`onTouchStartCapture`   (immediately after `onMomentumScrollEnd`) 4.
`onTouchStartCapture`   (when you press down to stop the scroll) 3.
`onTouchStart`          (same, but bubble phase) 4.
`onTouchStart`          (same, but bubble phase) 5.
`onTrailingComma` is similar to `onInsertedSemicolon`, but for trailing commas.
`otherParam` is not passed to the root fragment since the variable is not defined in the component's `initialVariables`.
`parentID` ID of the parent record containing the connection which may have metadata that needs to be re-fetched.
`parentName` Name of the top-level field in the fat query that corresponds to the parent record.
`path.normalize` and `path.join` are used to turn forward slashes in the file path into backslashes on Windows.
`pathToConnection` is a path from `parentName` to `connectionName`.
`patternNode` is expected to be flattened (and not contain fragments).
`pendingSearchPromises` is used to temporally cache search result promises.
`popForkContext()` exists at `AssignmentPattern:exit`.
`popForkContext()` exists at `IfStatement:exit` and `ConditionalExpression:exit`.
`prefix` and `postfix` mark the operator as a prefix or postfix unary operator.
`prepareVariables` output is used to prime the cache...
`projectPath` is a path to a local directory.
`propValue` being instance of, say, date/regexp, pass the 'object' check, but we can offer a more precise error message here rather than 'of type `object`'.
`push` returns new array length, so the first asset will get id 1 (not 0) to make the value truthy
`queuedRecords` is unchanged
`quotes` has 7 possible configurations
`reachable` meant fall through because statements preceded by `break`, `return`, or `throw` are unreachable.
`records` is unchanged
`requestFlush` is an implementation-specific method that attempts to kick off a `flush` event as quickly as possible.
`requestFlush` is implemented using a strategy based on data collected from every available SauceLabs Selenium web driver worker at time of writing.
`requestFlush` requests that the high priority event queue be flushed as soon as possible.
`requestFlush` will only be called recursively from `asap.js`, to resume flushing after an error is thrown into a domain.
`require` calls int  the require polyfill itself are not analyzed and replaced so that they use numeric module IDs.
`require` calls will resolve as if made by a file that is a sibling to this module's `lib/main.js`.
`right` is outside of the loop.
`rootNodeID`, uniquely identifies a position in the generated native view tree.
`runTests` needs to be called with no arguments.
`screenPositionForMouseEvent.column` cannot exceed the current line length.
`script` ensures terminal-like environment and commands we run give colored output.
`sectionIdentities` is an array of identifiers for  sections.
`segments` becomes doubly in a `finally` block.
`setImmediate` is slower that `process.nextTick`, but `process.nextTick` cannot handle recursion.
`setTimeout` does not call the passed callback if the delay is less than approximately 7 in web workers in Firefox 8 through 18, and sometimes not even then.
`size` should be a getter on `Map.prototype`.
`someDataID_first(10)`) for the connection identified by `connectionID`.
`someDataID`) will be returned instead.
`someID_first(25)`) and unpack if present, overriding `state`.
`someID_first(25)`), and if so, unpacks the range metadata, stashing it into (and overriding) `state`.
`some` Promise utility that allows `some` an array with an async Promise some function.
`source` added to edge
`stats` contains a `mode` property, a number which can be used to determine whether this file is executable.
`stdout` would be empty if there is no such command.
`style` should be one of 'default', 'cancel' or 'destructive'.
`super(...arguments)` passes all arguments through.
`this._previousEvaluationSubscriptions` can change at any time and are a distinct subset of `this._disposables`.
`this._rangeDecoration` is guaranteed to exist iff `this._marker` exists.
`this.eval` is found.
`this.eval` is possible built-in `eval`.
`this` binding is different.
`this` can be invalid only under strict mode.
`this` is invalid only under strict mode.
`time_high_and_version`
`topLevelComments.count` is already fetched and should be diffed out, `edges` is not fetched and should be retained
`topLevelComments.count` is not fetched and should be retained, `edges` is fetched and should be diffed out
`topLevelComments.totalCount` is not fetched and should be retained
`topLevelTarget` is probably a window object.
`touchHistory` isn't actually on the native event, but putting it in the interface will ensure that it is cleaned up when pooled/destroyed.
`trackTiming` rounds .001ms resolution timestamps whereas `setTimeout` uses 1ms precision.
`traverseChildren` should be called on every field with children.
`true` paths go to looping.
`true` to parse the query param as an object.
`undo: 'skip'` disables the TextEditor's "undo system".
`updateDirectories` joins providers and directories, which don't know anything about each other.
`url.parse` seems to apply encodeURI to the URL, and we typically don't want this behavior.
`validthis` is valid only within a function scope.
`version` will be added here by ReactIsomorphic.
`which` is an alias for either `keyCode` or `charCode` depending on the type of the event.
a ** at the end will just swallow the rest.
a 409 is typical here.
a DirWriter has an add(entry) method, but its .write() doesn't do anything.
a binary plus on non-strings doesn't guarantee a string
a computed property for the polygon's points
a custom directive to wait for the DOM to be updated before focusing on the input field.
a double definition of a let variable in same block throws a TypeError
a duplex stream is just a stream that is both readable and writable.
a flag to avoid this being observed
a flag to be able to tell if the onwrite cb is called immediately, or on a later tick.
a flag to know if we're processing previously buffered items, which may call the _write() callback in the same tick, so that we don't end up in an overlapped onwrite situation.
a flag to see when we're in the middle of a write.
a function is generally allowed to be empty
a listener might have stopped us in _onUpdate
a non-standard Set polyfill that only works with primitive keys.
a noop _transform function
a normal leaf has changed
a passthrough stream.
a right bracket shall lose its special meaning and represent itself in a bracket expression if it occurs first in the list.
a root call with a ref param that references another query)  Additionally ensures that any requisite sibling fields are embedded in each layer of the wrapper.
a sequence of one of exception patterns.
a sequence of the exception pattern.
a slice, we need something to copy in to
a string precedes the next number in b
a sub component for the labels
a tar reader is actually a filter, not just a readable stream.
a transform stream is a readable/writable stream where you do something with the data.
a very common use-case of npm's, but not so common elsewhere.
a warning about the ignored file
a/* should match a/b/
a_roundoff + b_roundoff
abort out of the list early if we hit a cycle
abort, and try a different orientation
aborting is no longer a cancellation
absent boolean value defaults to false
abstract __iterateUncached(fn, reverse)
abstract __iteratorUncached(type, reverse)
accept either a plain-jane object, or a config object with a "get" method.
accept parent modules recursively up until all siblings are accepted
acceptSuggestion will be always called after call to applySuggestion with isIntermediateSuggestion being equal to false.
access a property to cause the warning
accessing global.localStorage can trigger a DOMException in sandboxed iframes
according to the spec, return null if no response has been received
account for the `foo + "a" + "b"` case
action, add listener, listener list, final state
actor has an ID and is refetchable
actor has an ID and is refetchable, but the type of actor is unknown.
actor is refetchable by ID
actually close the project
actually not a matter of opinion or taste.
actually, that's a lie, because babel6 omits _extends and createRawReactElement
adapted from https://github.com/atom/underscore-plus/blob/master/spec/underscore-plus-spec.coffee
adapted from https://github.com/atom/underscore-plus/blob/master/src/underscore-plus.coffee
add all the node types as listeners
add coverage post loader
add custom disposition as third element or keep it two elements if not
add data from old challenge
add delay here for firefox to catch up
add executable arguments to spawn
add head and tail and detect loops
add leave class (trigger css transition) 4.
add optional properties to make validation successful
add original filename for better debuggability
add parameters to the new scope
add routes here as they slowly get reactified remove their individual controllers
add rx methods to express
add the `color` if not set
add the new bytes to the char buffer
add the new listener, if any
add the node to every connection for this field
add the notEmpty lines in there with a placeholder
add the store type, to make humans happy:
add the user-defined options to the config
add to cache, then cp to the cwd
add url(namespace/latest.tarball)
addEventListener expects its callback to take an Event.
addNestedProperty takes a single set of props and valid attribute attribute configurations.
addProperties adds all the valid props to the payload after being processed.
added more in the interim.
adding '"key":' (as in "key":"value") to object values
adding leading whitespaces according to detected codestyle
adding new elements, so going forward
additional parameters
additional restrictions imposed by json
address has no id and receives a generated client id
address is not refetchable, has client ID
adds the utimes syscall, but remove another stat.
adler32 is not cryptographically strong, and is only used to sanity check that markup generated on the server matches the markup generated on the client.
advance to the next closing parenthesis
advances to an open parenthesis.
after composition unlock it should work
after().last() calls can produce gaps
again, to make sure unlinking works properlyt
alias because "alert" is an ambiguous name
alias include/columns, prefer columns if supplied
align to multiples of 8 bytes
all *.gyp files are renamed to binding.gyp for node-gyp but only when they are in the same folder as a package.json file.
all bobbles return to zero
all nodes are unreferenced and should be removed
all other fields are null-padding text or a number.
all precedence boundaries
all that streamy business can't handle numbers
all the props have been set, so we're completely done.
all the rest of the stuff, copy over from the source.
all the rest we skip, but still set the _entry member, so that we can skip over their data appropriately.
all the smarts are in the couch.
all watchers as an array
allow "loose" semver 1.0 versions in non-strict mode enforce strict semver 2.0 compliance in strict mode
allow `--no-blah` to set 'blah' to null if null is allowed
allow all input since we have user submitted images for public profile
allow caching by d3.geo.path
allow event listeners
allow explicit disabling of proxy in environment via CLI
allow filename as single option
allow for some time for each lock acquisition and release.
allow further extension
allow generators without a yield Obsolete options
allow if callee is Date.UTC
allow it to be empty array
allow multiline strings
allow null glob expansion
allow optional `in` delimiter because why not
allow proxy to be disabled explicitly
allow to opt out of linking binaries.
allow unknown things to be arrays if specified multiple times.
allow users to override npm's insistence on not prompting for passphrases, but default to just failing when credentials aren't available
allow vue-loader/vueify scoped css attributes
allow: " + item.allow,
allowInlineConfig: true is the default
allowMultiplePropertiesPerLine: true
allowSingleLine: true
allows `this`/`super` after `super()`.
allows `this`/`super` in nested executable scopes, even if before `super()`.
allows colors to passthrough
almost everything passes through here.
already emitting newline events
already have the tardata on the root object just merge in existing stuff
already replaced the hyphen ranges turn into a set of JUST comparators.
already resolved, call callback async
already scheduled, active hold, or nothing to do
already warned once for the same component and owner
also - reusing 'index' from above because we have the correct "name"
also install missing dependencies.
also need at least ES6 for modules
also throw some unicode in there, just for good measure.
also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty common in the npm registry.
also, that means that the chunk and cb are currently being processed, so move the buffer counter past them.
always - arraysInArrays
always - arraysInArrays, objectsInArrays
always - arraysInArrays, objectsInArrays, singleValue
always - arraysInObjects
always - arraysInObjects, objectsInObjects
always - arraysInObjects, objectsInObjects (reverse)
always - destructuring
always - destructuring assignment
always - empty object
always - import / export
always - object literals
always - objectLiteralComputedProperties
always - objectsInArrays
always - objectsInObjects
always - unrelated cases
always fetch the origin, even right after mirroring, because this way permissions will get set correctly
always load default environments upfront
always remove trailing comma in one-lined arrays
always returns true in newer browsers as per the standard.
always set permissions on the cached remote
always subscribe to the root ID
always update the store to ensure the value is present in the appropriate data sink (record/queuedRecords), but only record an update if the value changed.
always update the store to ensure the value is present in the appropriate data sink (records/queuedRecords), but only record an update if the value changed.
always want to follow redirects for fetch
always warn (Line breaking error)
always write docs into the next major directory (so 2.0.0-alpha.0 writes to 2.0.0)
always-destructuring trailing comma
always-objectsInObjects
am2 avoids a big mult-and-extract completely.
an API action prevent link from opening
an error right away is a bad sign.
an extra layer to test components deep inside the tree
an identical 'prototype' property.
an object describing the capabilities of the inspected runtime.
an overlay marker at a buffer range with row x renders under row x + 1 so, use range at bufferRow - 1 to actually display at bufferRow
anchors for fragment instance passing in `persist: true` to avoid them being discarded by IE during template cloning
and Contributors, All Rights Reserved.
and add the remaining lines without any mapping
and an array of objects is returned, each with the following properties:  - line: The line number in the generated source, or null.
and an object is returned with the following properties:  - line: The line number in the generated source, or null.
and an object is returned with the following properties:  - source: The original source file, or null.
and finally change dismissable to false and type to 'WARNING'.
and if it has been defined
and interpolate pixel distance
and other Node contributors.
and other contributors Released under the MIT license http://jquery.org/license  Date: 2014-01-13
and other contributors Released under the MIT license http://jquery.org/license  Date: 2014-01-23T21:10Z
and overlapping ranges
and therefore doesn't parse.
and try removing it and make sure that succeeds
and we are only interested in console evaluation.
angela should now be the tail
animate back open if released early
animate back to center or off screen
animate to the value specified
animates layout update as one batch (step3: uncomment)
another cached, for watcher test
any block comment with TODO, FIXME or XXX
any error other than ENOTDIR means it's not readable, or doesn't exist.
any other block is only allowed to be empty, if it contains a comment
any proprietary headers.
any single thing other than / don't need to escape / when using new RegExp()
any strings here are unmet things.
anything else (e.g. building).
anything not (start or / followed by .
anything that IS a* matches
anything that is NOT a* matches.
apm/npm and internal releases don't package the base `.flowconfig`, so we use this to figure if we're packaged or not.
append all the suffixes
append shouldn't affect 'first' call
append/prepend the item to the range.
apply any `formatters` transformations
apply environment configs
are *never* matched by **, for explosively exponential reasons.
are string literals and comments.
arg is for internal usage only
args + multiple modifiers
args is a list of folders.
args is for internal usage only
arr has the most read first
array comprehension parsing function parses and defines the three states of the list comprehension in order to avoid defining global variables, but keeping them to the list comprehension scope only.
array element refinements not yet enabled in Flow
array or object members
array, check boundary
arrays are lists of types.
arrays are objects, NodeLists are functions in Safari
arrow functions don't always have blocks and implicitly return
arrow functions have the precedence of an assignment expression
arrows functions are still alright
as an optimistic update).
as are function expressions
as if it were a sibling to this file.
as long as you're the child of a function at this point you should be asked to return
as soon as we resolve a package start the loop again
ascending for time: a CMP b
assert and code used within the eval
assert the file was not processed because the cache was used
assert the first warning for accessing `type`
assert the output is not updated yet because of debounce
assert(isArray(pointer))
assert.AssertionError instanceof Error
asset collections must be a plain object.
assume a boolean indicates passing
assume api returns string when fails
assume deprecated range function
assume it's an Object
assumes a single number if not a string
assumes non-root on a *nix system
assumes test does not contain arrays This is a patch until all test fall into this pattern
assuming that range calls will only have a single argument
assumption: T is Observable
async component factory
async state changes with arbitrary logic
asyncExecute will not resolve the promise until the process exits, which in this case is never.
at *some* point we statted all of these
at least one of the found-day-of-month, found-month, found- year, or found-time flags is not set,
at one point, customBaseConfig.format would end up equal to "foo"...that's bad
at the start of calling end()
at this point if we're concise or if we're "never" we can leave
at this point the configs are all set.
at this point, extra isn't border nor margin, so remove border
at this point, extra isn't content nor padding, so add border
at this point, extra isn't content, so add padding
at this point, n is the parts, and we know it's not a comma set with a single entry.
at this point, no one needed a drain, so we just ran out of data on the next readable event, start it over again.
at this point, the user has presumably seen the 'readable' event, and called read() to consume some data.
at this point, this.set is a 2d array of partial pattern strings, or "**".
at this point, we don't know if it's a dir or not.
at this point, we know that the specified man page exists
atime and ctime are octal numeric values 3.
atime and ctime have ' ' in their last byte
attach callbacks from options
attribute interpolations
attributeNamespace propertyName: Used on DOM node instances.
attrs on context container (context scope) 2.
attrs on the component template root node, if replace:true (child scope)  If this is a fragment instance, we only need to compile 1.
augment global scope with declared global variables
auto binding only occurs on top level functions in class defs.
autoCapitalize and autoCorrect are supported in Mobile Safari for keyboard hints.
autoFocus is polyfilled/normalized by AutoFocusUtils autoFocus: HAS_BOOLEAN_VALUE,
autoSave allows WebKit/Blink to persist values of input fields on page reloads
autocompletion support 2.
avoid accidental fallback
avoid counting lines with inline comments twice
avoid fetching duplicates
avoid flicker before next event
avoid leaking arguments: http://jsperf.com/closure-with-arguments
avoid overwriting another watcher that is being collected.
avoid picking up midnight commander from cygwin
awaiting a value for a non-bool config.
b is considered the new max if the comparator declares them equal, but they are not equal and b is in fact a nullish value.
b would be valid till 20 + 70
b.components is guarded and converted to object hash
back up so that we process this one again.
backwards compatibility.
base records are not modified
base records are updated: edge/node added
base store is unchanged
base64 is 4/3 + up to two characters of the original data
based on a header, extendedHeader, and globalHeader
based on transition type: - transition or animation: wait for end event, remove class, then done if there's no explicit js callback.
based on transition type: - transition: remove class now, wait for transitionend, then done if there's no explicit js callback.
basic support for a proxy server
basically have only 1 elements from each line except the variable declaration line.
basically just a no-op, since we got all the info we have from the _stat method
basically just a no-op, since we got all the info we need from the _stat method
basically just get replace the getter/setter with a regular value
basically just the most minimal sort of Transform stream.
batch them into arrays of twenty documents
batch up computations
be careful of https://github.com/substack/node-resolve/issues/78
because __proto__ isn't enumerable
because clipping requires a counterclockwise source polygon
because js doesn't support the 'dotall' regex modifier.
because of weirdness in react-routers match function we replace the wrapped returned in props with the first one we passed in.
because optimistic payloads may not contain all fields, we loop over the data that is present and then have to recurse the query to find the matching fields.
because rootMarkup is retrieved from the DOM, various normalizations will have occurred which will not be present in `markup`.
because v-model has a lower priority than v-for, the v-model is not bound here yet, so we have to retrive it in the actual updateModel() function.
before we confuse everything by switching the platform
before().first() calls can produce gaps
begin channelling Boole and deMorgan...
begin or end will be NaN if they were provided as negative numbers and this iterable's size is unknown.
beginEvent/endEvent for starting and then ending a profile within the same call stack frame
beginning of the array/object, so we should remove trailing comma instead
beginning of the line
between cores *.75 and cores / 2
beware instance of d3_Colorr
beware instanceof d3_Color
bfs for the rest of objects
binary search in table of non-spacing characters
binary/unary operators
bind for use in tracker's on-change listener temporarily stop emitting, but don't drop
bindingContextsMayDifferFromDomParentElement:
bins should always be executable.
bisect the current node
bit of special logic to read the specified sort of ignore files, and a filter that prevents it from picking up anything excluded by those files.
bitwise floor for symmetry
block comment at array end
block comment at array start
block comment at block end
block comment at block start
block comment at object end
block comment at object start
block comment at object-like end
block comment at object-like start
block comment at switch case end
block comment at switch case start
block statements are part of functions and most if statements
blocked by task 1 promise
blog is copied separately
blog is versionless, we always build it in root file
border-box includes padding, so remove it if we want content
both Node.js and Modules have an extra scope
both box models exclude margin, so add it if we want it
both initialized and uninitialized
both scalar fields are updated
both values are arrays here
both values are objects here
bower EFOOBAR       Hello error
bower foobar        hello world
bower http://bower.io Package not found.
bower short-origin             generic message bower very-very-long-origin-string          generic message bower short-origin                          generic message
brace sets trump all else.
branches and tags are both symbolic labels that can be attached to different commits, so resolve the commit-ish to the current actual treeish the label corresponds to
break ties for the same millisecond (precision of JavaScript's clock)
broadcasts for created ids
broadcasts for updated ids
browser.js: Browser specific functionality for director.
buffer the incomplete character bytes we got
buffer until ready, or while handling another entry
bug in vows where topic is not propagated automatically
build a translation table of field paths.
build list of modules for which we'll send HMR updates
build the global stuff.
build the obj out dir and use it as a key
build up a base-256 tuple from the least sig to the highest
bulk insert into new collection for loopback
bumped when mode/overlay changes, used to invalidate highlighting info
but if it fails again, then report the first error.
but note that everything is flipped for the "ltr" function.
but only if the block is part of a function
but only if the callback is immediately before
but the reference is marked as deferred
by default, let ansi decide based on tty-ness.
c is in a separate form and shouldn't be affected at all here
cURL command expected to run on the same platform that DevTools run (it may be different from the inspected page platform).
ca option is only relevant if proxy or destination are https
cache and ls are easy, because the completion is what ls_ returns anyway.
cache directive isntance before destroy
cache is a Map (or PseudoMap) that matches the keys to the Yallist.Node object.
cache not updated on optimistic range update
cache object styles so that only changed props are actually updated.
cache original method
cache stats for top-level entries that fit the range entirely.
cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function
cache the resulting module object for next time
calculates the path of the project including ESLint as dependency
call back into native to remove all of the subviews from this container
call beforeEnter hook 3.
call beforeLeave hook 3.
call drain immediately if there are no tasks
call enter hook (with possible explicit js callback) 6.
call expressions create a new substack
call factory function for non-Function types
call fstream.Reader(dir) to get a DirReader object, etc.
call fstream.Writer(dir) to get a DirWriter object, etc.
call internal read method
call leave hook (with possible explicit js callback) 5.
call the last hook...
call the same method recursively on child fragments, depth-first
callback based API for a synchronous operation.
callback should have been called, but only once, by the js callback
callback() all you want outside of a function
callback() called twice
callbacks inside of functions should  return
callbacks provided by client
called after A resolves, but A should have been invalidated so no Ctor should be set
callee is not the same
calling `this.props.onChange` or `this.props.onChangeText` may clean up the input itself.
calls hierarchy.revalue
calls setState in an componentDidMount.
camelCase, specialEasing and expand cssHook pass
camper just completed last challenge
can be either exactly the req, or a descendent
can match anything, as long as it's not this.
can only change the link path by clobbering For hard links, let's just assume that's always the case, since there's no good way to read them if we don't already know.
can only match patterns starting with ., even when options.dot is set.
can only reveal it if we find the file path
can only run this test if there's a home directory
can only swallow ".foo" when explicitly asked.
can skip cli install for non sudo mode
can skip if `node` only has an `id` field
can't have global return inside of modules
can't match this one without negative lookbehind.
cancel form submission
cannot swipe past first or last scene without overswiping
canonicalize the hostname, so that 'oogle.com' won't match 'google.com'
capture log messages with level
case: CustomAttributeConfiguration
casper.mouseEvent can't set keyCode
cast to lowercase string
catch this mistake early:
cater for pre-defined getter/setters
caughtErrors with other combinations
caughtErrors with other configs
caused by another VError, with annotation.
caused by another WError, with annotation.
caused by another error, with annotation
caused by another error, with no additional message
caution: break is omitted intentionally
cb(er, parsed, raw, response)
center - The image will be scaled down such that it is completely visible, if bigger than the area of the view.
certain elements can have dimension info if we invisibly show them however, it must have a current display style that would benefit from this
certificate of certificate authority.
challenge file has no challenges...
challenge find query stream
change should trigger change instantly without debounce
change to mixed case name
change to mixed-case name
change two dependencies at once
changelogs should never be ignored.
changing the dynamic segment in path
char code values for comparison
char has no uppercase variant, so it's non-alphabetic
characters per data chunk
characters that need to be escaped in RegExp.
check bindDir calls: skip literal and one time, but not literal with filter
check content shasums
check control characters, if RegExp object used
check css transition type
check each className given, space separated list
check element directives
check existing edges for missing fields
check for a builtin if provided.
check for a hook script, run if present.
check for a new version of pkg If no packages are specified, then run for all installed packages.
check for array end comments
check for array start comments
check for attributes that prohibit interpolations
check for block end comments
check for block start comments
check for default configuration
check for entry in docs index
check for newline after
check for newline before
check for object end comments
check for object start comments
check for octal string first
check for proper doc format
check for the nvm.sh standard mirror env variables
check for valid data (has an ID or is an array) and write the field
check for vendor prefixed names
check if argument value is in restricted modules array
check if component newly created
check if is a valid package.json file
check if not concatenation
check if picture was found check if user has no picture check if user has default picture set user.picture from oauth provider
check if prev token is a separator AND they're at the same level
check if the Array was converted from an Object
check if the node is inside a variable
check if the thing is a flag or not.
check if the variable has been used previously
check if there's a command already.
check if this is a multiple select
check if we are in firefox, which has different attribute interation order
check if we click arrow and expand if yes.
check if we're drained
check inline-template
check next gypi filename
check non-settable path for two-way bindings
check possible camelCase prop usage
check ref for v-for and router-view
check tag preferences
check that rule is not on in default config but not recommended
check that rule is not recommended in docs but off in default config
check that this is what we expected.
check the SHA of the package we have, to ensure it wasn't installed from somewhere other than the registry (eg, a fork)
check the protocol, and then see if it's git or not
check to avoid let declaration not within a block
check to see if it's a new style call
check to see if username is on blacklist
check to see what framework is in use, if any
check variable is `var` type and not `let` or `const`
check whether this is array comprehension or regular array
checking first if we're out of time prevents setTimeout(0) scheduled in a funcToRun from forcing an extra iteration
checks if a file to be extracted from the tarball is valid.
checks if the number of opening comments(/*) matches the number of closing comments(*/)
cheesy hackaround for test deps (read: nock) that rely on setImmediate
child should be already detached so the hook should not fire again
chown starting from the first dir created by mkdirp, or the root dir, if none had to be created, so that we know that we get all the children.
chunks are strings of all 0s (special case)
classList isn't in the defs of HTMLElement...
className should be '', not 'null' or null (which becomes 'null' in some browsers)
classy, since V8 prefers predictable objects.
clean out the bower folder in case we're removing files
clean up and get some utility properties
cleanup and close stdin
cleanup event handlers once the pipe is broken
cleanup the extracted package and move on with the metadata
clear all existing settings for a new file
clear out dotted names from test environment
clear out the buffer, if there is one.
clear up the last queue stop function
clearNestedProperty takes a single set of props and valid attributes.
clearProperties clears all the previous props by adding a null sentinel to the payload for each valid key.
client certificate for https connection.
client specific sagas
climb to the component root.
cloning null always returns null
close all the files associated with the project before closing
closing quotation mark
closure for web browsers
coalesce with previous string
code for previous point
coerce number arguments to strings, since Buffer(number) does uninitialized memory allocation
coerces to literal Infinity
collect everything without pausing
collect in a single pass by default
collect the bytes as they come in.
color - true for red, false for black
color is for Safari mask-icon link
combine matching lines of each rows
combine the passed globals after we've assumed all our options
comment or other unrecognized codestyle
common case: find next delimiter or newline
common namespace all classes should be stored here called at the beginning of dom ready
commonFramework depend on iFrameScripts and faux.js
comparator for ascending sort by x-coord first, y-coord second
compare old object and new one, and change differences only
compare the 2 identity array and get the dirtied rows
comparison function for sorting lists of numeric tuples
compile and link the rest
compiler Directives and Region tags
complete against the npm commands
completely not allowed, even escaped.
complex values such as "rotate(1rad)" are returned as is.
complex with nested values
component compilation can be cached as long as it's not using inline-template
component resolution related state
componentWillUnmount called right before unmount.
components.length can be 1, 2 or more than 3: 1: The whole data block is part of a full message(xml-partX).
comprised of xranges, tildes, stars, and gtlt's at this point.
compute quadtree center of mass and apply charge forces
computed properties http://vuejs.org/guide/computed.html
computed property for form validation state
concurrency is optional, shift the args.
conditional field calls/values
config can be null in tests.
config changed so we need to calculate the hash of the config and the hash of the plugins being used
config is void during startup, signifying no config yet
connection metadata is merged into the queued store
connection nodes with an ID are refetchable
connections and edges must be refetched through the parent
console is retrieved with V8Window.getAttribute method which is slow.
console.error("    FR create", props.path, props.size, new Error().stack)
console.error("    Tar Entry _read", this.path)
console.error("    Tar Entry resume", this.path)
console.error("   W Finish", what, todo)
console.error("  DR emit child - try again later") pause the child, and emit the "entry" event once we drain.
console.error("  numeric", num)
console.error(" LW _create")
console.error(" W Finish Stale Stat", self._path, self.size)
console.error(" W Finish Stated", self._path, self.size, current)
console.error(" W Finish Stating", self._path, self.size)
console.error(" W Finish", self._path, self.size) set up all the things.
console.error("* DW Child end", child.basename)
console.error("-- -- set current to null in ctor")
console.error("-- -- writer close", writer.path) console.error("-- -- set current to null", wprops.path)
console.error("-- -- writer error", writer.path)
console.error("-- entry is not ready", entry)
console.error("-- is the root, don't auto-add")
console.error("-- p addGlobal")
console.error("-- p ctor")
console.error("DR Entry", p, stat.size)
console.error("DR emit child", entry._path)
console.error("DR pausing child entry")
console.error("DW Child Ready", child.type, child._path) console.error("  resuming", entry._path)
console.error("DW Drain")
console.error("DW Entry", entry._path)
console.error("DW not recursive") chop off the entry's root dir, replace with ours
console.error("FR _read done") that's about all there is to it.
console.error("FW open", self._buffer, self._path)
console.error("Hardlink detected, switching mode", self._path, self.linkpath) Setting __proto__ would arguably be the "correct" approach here, but that just seems too wrong.
console.error("LW finish in end")
console.error("PACK DATA")
console.error("PACK END")
console.error("R Pipe apply Stream Pipe")
console.error("Reader has nlink", self._path, k)
console.error("Reader._stat", self._path, currentStat)
console.error("Reader._stat, statCb", self._path, props_, props_.nlink)
console.error("W created", path.dirname(self._path), er)
console.error("calling stat", props.path, currentStat)
console.error("finished with "+this._key)
console.error("ustar:", val, val.toString())
console.error('DR Emit Resume', self._path)
console.error('DR Re-paused', self._path)
console.error('DW Exit (recursive)', entry.basename, self._path)
console.error('FR Buffering Close', self._path)
console.error('FR Buffering End', self._path)
console.error('FR Pause', self._path)
console.error('FR Read Re-pausing at '+i, self._path)
console.error('FR Read emitting buffered close', self._path)
console.error('FR Read emitting buffered data', self._path)
console.error('FR Read emitting buffered end', self._path)
console.error('FR Resume', self._path)
console.error('FR _getStream calling', self._path)
console.error('FR _read has buffer', self._buffer.length, self._path)
console.error('FR _read paused', self._path)
console.error('FR _read', self._path)
console.error('FR close 1', self._path)
console.error('errorHandler', er)
console.error('ps2', prefix, exists)
console.error(parsed)
construct Cookie header
construct a hashmap of the existing (old) id arrays
construct headers objects
construct new options
construct query objects
construct the polygon, removing possible duplicate endpoints
construct utility properties
constructor will be called exactly once, future invocations will return the result of the constructor call.
constructs that contain expressions
contain - The image will be resized such that it will be completely visible, contained within the frame of the View.
contains appended edge
contains prepended edge
contains the token of the "in" or "of" operator
content comes after length.
content-type is 'application/json' -- metadata
context and single paged ids require getting children from the debuggee and converting them from dbgp to chrome format.
context: if this is a transcluded component, context will be the common parent vm of this instance and its host.
contextual keyword: 'partial'
contextual keyword: 'yield'
continue with the questions otherwise...
continue with the style questions otherwise...
continue with this orientation
controls the foreground and background colors
convenience location creator
conversion for NodeLists
conversion from interpolation strings with one-time token to expression is differed until directive bind time so that we have access to the actual vm context for one-time bindings.
convert "normal" to computed value
convert all the md files on every request.
convert array messages to Error Objects with Traces
convert from long name to a single char.
convert new value to a fragment do not attempt to retrieve from id selector
convert plain object to array.
convert the '/' into an escaped local file separator
convert to 0-based all around.
convert to IDN if any non-ASCII characters
convert to an old-style stream.
convert to serialized 'raw' cookies
converts the output into a string
convince addLocal that the checkout is a local dependency
copied from npm's lib/util/error-handler.js
copy descriptor properties
copy into clean area so as not to get "infected" by this project's .eslintrc files
copy manifest file to dest
copy revisioned assets to dest
copy the keys over in a well defined order because javascript objects serialize arbitrarily
copy, need to copy individual buffers
copy/slice everything
correct for occasional, weird Euler synonyms for 2d rotation
corresponding edge is deleted for every range this node appears in
cos(minimum angular distance)
could dig in, but really just wanna make tests pass, whatever.
could not parse the version string with semver
count buffered requests
count how many times insert completes
count the number of elements in the range.
count the number of formatting substitutions, plus the first two args
counterEvent registers the value to the profileName on the systrace timeline
cover - The image will be resized such that the entire area of the view is covered by the image, potentially clipping parts of the image.
covers: export default ...
create User Identities
create a copy of the argv array with aliases mapped
create a fake CLIEngine to test with
create a new block scope
create a new block scope we use only for the current expression
create a new export function, used by both the main export and the .ctor export, contains common logic for dealing with arguments
create a new writer, and pipe the incoming entry into it.
create a range record
create a stream of all the challenges
create a stream of an array of all the challenge blocks
create a stream of challenge blocks
create an anchor and insert it synchronously, so that we can resolve the correct order without worrying about some elements not inserted yet
create an instance and run some tests
create an instance of DebugServer, and get its ws port.
create and append a hidden preview frame
create and merge manifest
create asset registers, so extended classes can have their private assets too.
create async console.logs
create directory structure
create form-data object
create iteration scope
create leaves of the tree
create listener for each media event
create mock registry.
create new pledge for user
create node to store cluster info
create normalized, 2d array matrix and normalized 1d array perspectiveMatrix with redefined 4th column
create random username username will be assigned when camper signups for Github
create temp and build directory
create the bundle we'll work with
create the edge record
create the modules directory first
create the mutation and payload
create the two objects needed to store the corked requests they are not a linked list, as no new elements are inserted in there
create token store methods
createConfig will only add rules that have one configuration in the registry.
created at 0 a would be valid till 0 + 50
created at 20 b would be valid till 20 + 50
cross and scale return new vectors, whereas add and normalize operate in-place
cross-browser compatiblity functions ////
ctags does not escape regexps properly.
ctags doesn't have a true limit API, so having too many results slows down Nuclide.
ctags line numbers start at 1
ctrl + enter or cmd + enter
current character index
current is optionally the current stat, provided here so that subclasses can avoid statting the target more than necessary.
current searched package is the linked package on first call
currentItemToken could be a comma.
currently used by HMR
custom element, defined
custom element, not defined
custom errors thrown in graphql-server may not have locations
custom filename takes precedence fs- and request- streams have path property
custom parser unsupported in browser, only test in Node
custom types to the AST type system (in particular, the File type), but those types are now incorporated into ast-types, so this module doesn't have much to do anymore.
d3_geo_cartesianDot(n1, n2),
dashdash - A light, featureful and explicit option parsing library for node.js.
data: file contents to write.
dataBindAttributeValue:
dataTypeExpression is optional and defaults to "*"
day count between two epochs (inclusive)
de-zalgo, just in case, but don't call again.
debug("     BS data emission loop", this._bufferLength)
debug("    BS data inner emit loop", this._bufferLength)
debug("    BS entering loops")
debug("    BS no longer emitting", flush, this._paused, this._emitting, this._bufferLength, this._chunkSize)
debug("    BS out of loops", this._bufferLength) whatever is left, it's not enough to fill up a block, or we're paused
debug("    BS paused, leaving", this._bufferLength)
debug("    BS push zeroes", this._bufferLength) push a chunk of zeroes
debug("   BS paused, return false, need drain")
debug("   BS pausing")
debug("   BS resume")
debug("   BS write", c)
debug("emitting drain", this._bufferLength)
debug("emitting end", this._bufferLength)
debug("padBytes", padBytes, this._zeroes.slice(0, padBytes))
debug("pushed onto buffer", this._bufferLength)
deep, once, only, part
default "config.defaults"
default "config.variables"
default depth for `outdated` is 0 (cf.
default directive priority
default field diffing algorithm
default separators for testing
default status code to 500
default text/* to utf-8
default to ESLint project path since it's unlikely that plugins will be in this directory
default to empty string because `track` enforces string-only values
default to expose experimental APIs for now.
default to onObject if no preference is passed
default to the ctx value, if there is one
default warning function
default: This is a nested attribute configuration where all the properties were removed so we need to go through and clear out all of them.
default: fallthrough case when nested properties are defined
default: use aws-sign2
defaultVersion should come from process.version so ought to be valid semver
defaults to "safe" mode
deferred from S5.3 non-RFC: allow retention of expired cookies by choice
define all public properties here
define custom matcher for warnings
define like this to please codeintel/intellisense IDEs
define scope properties important: define the scope alias without forced conversion so that frozen data structures remain non-reactive.
define the `disabled` version
define the `enabled` version
define the item component
define this here so it's available to all scripts.
delay end/close until then.
delegates dismiss action to parent
delete build/react-core for fresh start
delete restores the original property definition
delete so no callers rely on this existing
delete the second edge
deleteData leaves an empty `TextNode` which offsets the index of all children.
deleted edge in the input segment
deleted edge in the original segment
deleting the record calls onNext
deltaInMilliseconds defaults to 1.
dependency is statically built-in to PHP
deprecated, put this inside the rect argument instead
descending for length: b CMP a
description wins over value in display
description: Props.string,  A required enum prop named "category".
destdir only is respected on Unix
destroy - closes for reading and writing.
destroy all children.
destroy all keep-alive cached instances
details is an object containing:  - `alertBody` : The message displayed in the notification alert.
details is an object containing:  - `fireDate` : The date and time when the system should deliver the notification.
detect a destructuring assignment
detect mode if not set manually
detectIncompleteChar determines if there is an incomplete UTF-8 character at the end of the given buffer.
detects if there is JavaScript in the first script tag
determine and set charLength / charReceived
determine how many bytes we have to check at the end of this buffer
determine how many remaining bytes this buffer has to offer for this char
determine if the variables match the supplied if/unless conditions
determine order (last argument)
diagnostics for errors 3.
didRecalcStyle handles style invalidations that occur before the recalc style event but we need to handle style recalc invalidations during recalc style here.
didn't get any data, stop spinning.
didn't increment anything
diff non-`edges` fields such as `count`
diffProperties takes two sets of props and a set of valid attributes and write to updatePayload the values that changed or were deleted.
different types of agents are in different pools
different values of the 'type' field paths match the values of Stats.isX() functions, where appropriate
differentiate node-gyp's logs from npm's
dir1 is dir2's previous sibling
dir1 is foo.txt's parent
dir1 is the first child, parent (root) should get selected
dir1 is the first child, should get selected
dir2 is dir1's next sibling
dir2 is the bottommost node
dir2 is the next sibling, should get selected
dir2 is the second child, previous sibling (dir1) should be selected
dirty if the section is new, row is new or _rowHasChanged is true
dirty if the sectionHeader is new or _sectionHasChanged is true
disable 'flex:1' when hiding a View
disable --fix for piped-in code until we know how to do it correctly
disable -T "thin" static archives by default
disable comments and negation in Minimatch.
disable default heading transform if we wrote to column.name
disable git integration tests on Travis.
disable the pager extension so that 'hg sl' terminates.
disable the watchers on all the directives so that the rendered content stays the same during removal.
disabling eslint due to express parity rules for error handlers
disallows `this`/`super` before `super()`.
disallows `this`/`super` in arguments of `super()`.
disallows all `this`/`super` if `super()` is missing.
display warning if we're inside of typeof or delete.
dispose method is generated custom at the end
dispose of the old one before overwriting
do a bit of filtering at this point, so that we don't need to fetch versions for more than one thing, but also don't accidentally a whole project.
do delete on constant value (not considering identifier in this tree based constant folding)
do it again, but more
do like the shell, and spit out the literal glob
do not cache length because more watchers might be pushed as we run existing watchers
do not complete to URLs
do not flag anything inside of comments
do not go single mode if the only node is an anchor
do not run any scripts
do not set value attribute for textarea
do not update state if the query is stale
do nothing, file was removed
do this in animation frame until componentDidMount actually runs after the component is laid out
doNotPauseOnExceptionsAndMuteConsole
doWrite is always async, defer these to save a bit of time as the hot path ends with doWrite
doc.activeElement occasionally throws on IE
document.all is reported as undefined, but we still want to process it.
documentation comments
does not contain removed edge
does not refetch `feedback.topLevelComments.count` but keeps other range fields
does not refetch `feedback.topLevelComments.edges` but keeps `count`
doesn't check anything but the first argument
doing so could cause problems in cases where the `node` executable was compiled on a different machine (with different lib/include paths) than the machine where the addon is being built to
doing this makes sure that the complete handler will be called before this completes
dollar signs and underscore
domainMatch() tests confirm this
don't accept directories.
don't allow modification of this object
don't allow recursive copying
don't asyncMap these, because otherwise build script output gets interleaved and is impossible to read
don't bother doing a readdir in that case.
don't cache optimistic data
don't copy dev libraries with nodedir option
don't disable if there's no mention of the varname
don't do it more than once.
don't emit entry events for dirs, but still walk through and read them.
don't even try to do this for now
don't ever re-use connections that had server errors.
don't generate a warning if it's listed in dependencies
don't get/set attributes on text, comment and attribute nodes
don't get/set properties on text, comment and attribute nodes
don't have that much.
don't have to worry about the last arg being implicitly boolean'ed, since the last block will catch that.
don't include anything that's always handled just fine in the normal header, or only meaningful in the context of nodetar
don't inherit the "defaults" from node's `process.config` object.
don't let it be called more than once
don't match elem in the :animated selector
don't modify the actual publishConfig object, in case we have to set a login token or some other data.
don't much care about listening to the child's results just wanna make sure it hits the server we just set up.
don't need to do anything, since we're just proxying the data up from the _stream.
don't pre-fill search input if selection is longer than this
don't reassign to the original descriptor.
don't rescroll if not visible
don't reset if already set
don't skip over falsy values in objectMode
don't slice `arguments`, it prevents v8 optimizations
don't treat true/false as paths
don't try too hard to hold on to a remote
don't use readJson, because we don't want to do all the other tricky npm-specific stuff that's in there.
don't want this polluting the configuration
don't write mutation/subscription metadata fields
done: boolean Whether all data dependencies have been fulfilled.
doneEdit triggered by blur
dont add already expired items
double length of THUMBS
double quoted strings
double-check that originals were not changed
draft-ietf-appsawg-json-pointer-08 has special array rules
drag answer, compute response
dummy key into uriToHackLanguage for local projects.
dummy return, so js linters don't complain about unused variable f
duplicate selection key
during _initProps(), before the created hook is called.
e.g. 'Apache Version 2'
e.g. 'Attribution-NonCommercial'
e.g. await awaitMilliSeconds(1000), pauses the async flow execution for 1 second.
e.g. converts "client:1_first(5)" to "client:1".
e.g. for streaming directly from a remote server, w/ a known file a size, and not wanting to wait for incoming file to finish to get its size.
e.stack is customized.
e.stack is still customized.
e.stackTrace won't be availabe until e.stack is called.
each character / char code is assumed to represent an UTF-16 wchar.
each item in the tree is a top-level thing that should be saved to the package.json file.
each item is now an array of lines.
early exit if you are using a style guide
early exit if you are using automatic style generation
easy, cheap case where it's a subset of one of the buffers
edge added but never referenced
edge deleted `commentID` is not modified
edges are never nodes, so this will not infinitely recurse
eg "todo" in a string such as "mastodon".
eg: /foo/bar/ or foo/bar/
either a beginning of the array (no last element) or other weird situation
either a fresh object, or a clone of the passed in obj
either integer or percentage
either not a dep, or explicitly bundled
either paused, or buffered
either specified a script locally, in which case, done, or a package, in which case, complete against its scripts
either we've reached the base or we've reached the root
either zeroes or a header
else it must be a fragment
else we have a proper url to a .lib, just make sure it's the right arch
else we're a regular line, and we shouldn't be touched
else, assume location was provided, so node may be omitted
else: fixture for invalid code, nothing to update
emit 'readable' now to make sure it gets picked up.
emit prefinish if the only thing we're waiting for is _write cbs This is relevant for synchronous Transform streams
emit removeListener for all listeners on all events
emits a 'removeListener' event iff the listener was removed
empty YAML file can be null, so always use
empty babelrc Let's look for the .babelrc in the first project root.
empty or either doesn't have path or not an http response
empty path, must be postfix
empty patterns and comments match nothing.
empty string to avoid regexp issues
empty the queue first
enable appropriate rules
enable authentication
enable finishing flag on private data
enable recursive self-lookup
enable setTimeout: https://discuss.atom.io/t/solved-settimeout-not-working-firing-in-specs-tests/11427
end - Sends the FIN packet and closes writing.
end of multiline comment
end with action so we know it is ok to transition
ending a block with a return is also ok
ending line error, so show it after the last char
ending without the eof null blocks is not allowed, however.
enforce the invariant that there be no empty maps or sets
enforce use of the "binding.gyp" file
ensure A is resolved only once
ensure a hooks for this queue
ensure no double-callbacks happen
ensure pack logic is applied https://github.com/npm/npm/issues/6400
ensure plugins are properly loaded first
ensure switching before ready event correctly cleans up the component being waited on.
ensure sync upward before parent sync down.
ensure that .ignore files always show up at the top of the list that way, they can be read before proceeding to handle other entries in that same folder
ensure that severities are normalized in the config
ensure that similarly-named remotes don't collide
ensure that the target node version's dev files are installed
ensure the last result properly reflects if fixes were done
ensure the parent node exists and is an expression
ensure the record exists and then update it
ensure there are no ".." in the path
ensure there's range and text properties, otherwise it's not a valid fix
ensure we get *exactly* the results we expect by comparing in both directions
ensures that any boolean values from `process.config` get stringified
enter hook that expects a second argument indicates the user wants to control when the transition ends.
enter transition triggered 2.
enter/leave shouldn't fire anything on the parent
entry: - module_id: NUL terminated utf8 string - module_offset: uint_32 offset into the module string - module_length: uint_32 length in bytes of the module
env_name is the optional name of an env var specifying the default path to search
eof is *at least* 2 blocks of nulls, and then the end of the file.
equivalent to `getQuery('foo')` without variables
error Expected space(s) before "as".
error handling in production.
error indicates that nothing is installed here
error means no bundles
error with the same message should not match
eslint babel/no-await-in-loop:0
eslint consistent-return: 0
eslint eqeqeq:0, curly: 2
eslint global-strict:0, no-extend-native:0, no-bitwise:0
eslint no-alert:1 no-console:0
eslint no-alert:1 no-console:1
eslint no-alert:1, no-console:0
eslint no-bitwise:0,quotes:0,global-strict:0
eslint no-cond-assign:0
eslint no-console: "off"
eslint no-fallthrough:0
eslint no-octal-escape: 0
eslint no-process-exit: 0
eslint no-process-exit:0
eslint no-script-url: 0
eslint no-unused-vars: 0
eslint no-use-before-define: "off", no-console: "off"
eslint no-use-before-define: 0
eslint test-plugin/test-rule: 0
eslint test-plugin/test-rule: 2
eslint test-plugin/test-rule:0
eslint-disable babel/no-await-in-loop
eslint-disable block-scoped-var, no-undef
eslint-disable camelcase
eslint-disable consistent-this
eslint-disable dot-notation
eslint-disable dot-notation, no-dimensions-get-window
eslint-disable eqeqeq
eslint-disable fb-www/object-create-only-one-param
eslint-disable fb-www/sprintf-like-args
eslint-disable fb-www/sprintf-like-args-uniqueness
eslint-disable fb-www/typeof-undefined
eslint-disable fb-www/unsafe-html
eslint-disable global-strict
eslint-disable indent
eslint-disable jasmine/no-disabled-tests, no-unused-vars
eslint-disable jsx-no-undef-with-namespace
eslint-disable max-len
eslint-disable no-alert
eslint-disable no-alert, no-console
eslint-disable no-bitwise
eslint-disable no-cond-assign
eslint-disable no-console
eslint-disable no-constant-condition
eslint-disable no-debugger
eslint-disable no-eval
eslint-disable no-eval, no-process-exit
eslint-disable no-extend-native
eslint-disable no-extra-boolean-cast
eslint-disable no-func-assign
eslint-disable no-multi-str
eslint-disable no-new
eslint-disable no-new-func
eslint-disable no-path-concat
eslint-disable no-process-exit
eslint-disable no-proto
eslint-disable no-self-compare
eslint-disable no-sequences
eslint-disable no-shadow
eslint-disable no-undef
eslint-disable no-undef, no-unused-vars, no-native-reassign
eslint-disable no-undefined
eslint-disable no-unused-expressions
eslint-disable no-unused-vars
eslint-disable no-unused-vars, no-eval
eslint-disable no-useless-concat
eslint-disable no-var
eslint-disable no-var, no-console
eslint-disable no-var, prefer-const
eslint-disable no-var, prefer-const, no-console
eslint-disable nuclide-internal/command-menu-items
eslint-disable nuclide-internal/license-header
eslint-disable prefer-const
eslint-disable prefer-object-spread/prefer-object-spread
eslint-disable react/display-name
eslint-disable react/display-name,  react/prop-types
eslint-disable space-after-keywords
eslint-disable space-infix-ops
eslint-disable strict
eslint-disable-line accessor-pairs
eslint-disable-line babel/no-await-in-loop
eslint-disable-line babel/no-await-in-loop Then try again.
eslint-disable-line callback-return
eslint-disable-line consistent-return
eslint-disable-line consistent-this
eslint-disable-line guard-for-in
eslint-disable-line handle-callback-err
eslint-disable-line jasmine/no-disabled-tests
eslint-disable-line max-len
eslint-disable-line no-alert
eslint-disable-line no-alert"
eslint-disable-line no-alert",
eslint-disable-line no-alert, quotes, semi",
eslint-disable-line no-bitwise
eslint-disable-line no-console
eslint-disable-line no-console"
eslint-disable-line no-console",
eslint-disable-line no-constant-condition
eslint-disable-line no-control-regex check substr, if regex literal used
eslint-disable-line no-eval
eslint-disable-line no-new
eslint-disable-line no-path-concat
eslint-disable-line no-underscore-dangle
eslint-disable-line no-unused-expressions
eslint-disable-line no-unused-vars
eslint-disable-line nuclide-internal/command-menu-items
eslint-disable-line require-jsdoc
eslint-disable-line respect err.status
eslint-disable-line some-rule
eslint-disable-line some-rule"
eslint-disable-line yoda
eslint-disable-next-line no-alert
eslint-enable babel/no-await-in-loop
eslint-enable camelcase
eslint-enable consistent-this
eslint-enable dot-notation
eslint-enable fb-www/sprintf-like-args
eslint-enable fb-www/sprintf-like-args-uniqueness
eslint-enable jsx-no-undef-with-namespace
eslint-enable max-len
eslint-enable no-alert
eslint-enable no-cond-assign
eslint-enable no-console
eslint-enable no-constant-condition
eslint-enable no-eval
eslint-enable no-extend-native
eslint-enable no-func-assign
eslint-enable no-new-func
eslint-enable no-path-concat
eslint-enable no-proto
eslint-enable no-self-compare
eslint-enable no-sequences
eslint-enable no-shadow
eslint-enable no-undef
eslint-enable no-undefined
eslint-enable no-unused-expressions
eslint-enable no-unused-vars
eslint-enable no-useless-concat
eslint-enable nuclide-internal/command-menu-items
eslint-enable prefer-const
eslint-enable space-after-keywords
eslint-env ,, node  , no-browser ,,
eslint-env browser, foo
eslint-env mocha,node
espree adds a "comments" array on Program nodes rather than leadingComments/trailingComments.
even if is nested, reports correctly.
even with a comment",
event `didyo` should be fired after the full propagation cycle of the `yo` event.
events from the backend
eventually delete old debug info
every interval print what is on the screen
every time we dive into a deeper node_modules folder, the "family" list that gets passed along uses the previous "family" list as its __proto__.
everything *between* made and path.dirname(self._path) needs to be set up.
everything is optional.
evict unreferenced nodes
evicting the record calls onNext
ew headerBlock emitting")
exact match, not exception
exception rule matches (NB: false, not undefined)
exceptions - line comments
excess is a negative index
exclude anything that might be a URL, path, or private module Those things will always have a slash in them somewhere
executable sub-commands
execute `gyp` from the current target nodedir
execute a command and return the output as a string
execute code only when the state's not being updated by switching tab this avoids re-displaying the error, which comes after a certain delay
execute is-my-json-valid
executes the given code and handles the result
exists can't check for broken symlinks, just absorb the error for cleanup
exit if a hold was acquired since the last execution
exitCode number The exit code returned by the process.
exp file found, stop looking
expand with the valid values of various config values.
expando properties) 6.
expect 1 call because one-time bindings do not generate a directive.
expect 1 call because terminal should return early and let the directive handle the rest.
expect correct context
expect data with any error codes
expect error TODO: need a test that ensures useful error message t.similar(data.error, /must be lower-case/)
expect the supplied cb function to be called "n" times for each thing in the array.
expiryDate() replaces the "expiry-time" parts of S5.3 step 3 (setCookie() elsewhere), except it returns a Date
expiryTime() replaces the "expiry-time" parts of S5.3 step 3 (setCookie() elsewhere)
explicit desired position of translate0 after zooming
explicit global variables don't have definitions.
explicit js-only transition
explicit list of values
export for use in jest
export ourselves (for unit tests _only_)
exported async module functions //// nextTick implementation with browser-compatible fallback ////
exported async module functions //// nextTick implementation with browser-compatible fallback //// capture the global reference to guard against fakeTimer mocks
exported toaster, poster
exported variables should work
expose both base data and convenience names
expose internal transition API
expose linked directives
expose the command aliases for the bin file to use.
expose the module cache
expose the modules object (__webpack_modules__)
exposed for testing purposes only.
exposed only for testing purposes
express and others respect the NODE_ENV value.
expression with no data variables
expressions with inline object literals
extend jQuery itself if only one argument is passed
extended headers that apply to the next entry
extended headers that apply to the rest of the tarball
extended registration should not pollute global
extendedHeader only applies to one entry, so once we start an entry, it's over.
extensionServer is a closure variable defined by the glue below -- make sure we fail if it's not there.
extra options in 1.0.0 this is used by vue-router only
extract and flatten keys
extract container attributes to pass them down to compiler, because they need to be compiled in parent scope.
extract inline template as a DocumentFragment
extract some randomness from Math.random()
extsprintf.js: extended POSIX-style sprintf
f.) Sort the results by the score
fails on bash4 and bsdglob.
fake definition so we still return something at least
fakeiphone positioning hotfix
fallback for something weird
fallback to the default content type if `value` is not simple value
fallthrough all other fields are numeric or text
falsy, infinity and 0
faster spring for faster test
fastest implementation
faulty exceptions option
feedback is updated, but the edge is not added
fetch cookie in the Specified host
fetch the data and make sure it exists.
fetch the data modify to remove the version in question If no versions remaining, then DELETE else, PUT the modified data delete the tarball
fetch to tmp/random/package.tgz 2.
fetch url, clear lock, call cbs cache folders: 1.
fetching a tarball from `api.github.com` returns a 415 error if json is not accepted
fetching the record calls onNext
field must end with cr
fields also currently exist here, but they are deprecated in favor of `loc`.
figure out what we should check out.
figure out where in that last word the point is.
figure out who we're supposed to be, if we're not pretending to be a specific user.
figure out wth body is
file is not newline-terminated
file protocol always yields status code 0, assume 200
file: has the file or directory name, stats: has the stats of the file/dir, isSymbolicLink: true if the entry is a symlink to another filesystem location.
filePath is already an absolute path.
filePaths: Array of absolute file paths (NuclideUri) to clear messages for.
files should *always* get into tarballs in a user-writable state, even if they're being installed from some wackey vm-mounted read-only filesystem.
fill the cache with the children of treeElement
filled by since server callback
filter all the versions that match
filter can be used to remove entries from the stack.
filter out all challenges that have isBeta flag set except in development or beta site
filter out anything obvious
filter out brownie points given by giver
filter out challenges coming soon
filter out empty contexts (value types are context-less)
filter out everything that didn't compile properly.
filter out non objects
filterout timestamps older then an hour
finalSegments should include returnedSegments and thrownSegments.
finally replace original
finally, you may enter.
find a last separator after which we're inserting it
find all previous disabled locations if they was started as list of rules
find either /section.n or /npm-section.n The glob is used in the glob.
find the closest block, return or loop
find the closest pair of clusters
find the correct type
find the header that declares the module pointer, so we can include it in internal_functions.c
find the index of the block this challenge resides in
find the last item in the block
find the max satisfying version.
find unmet deps by walking up the tree object.
find where our challenge lies in the block
firebase binding https://github.com/vuejs/vuefire
first bobble is the selector
first byte MUST be either 80 or FF 80 for positive, FF for 2's comp
first check dynamic version
first check if its even installed
first check to see if this arg is a set of single-char shorthands
first create the dir for the node dev files
first difference found
first filter, end of expression
first get the values from the normal header.
first list is a perfect match
first make it locked, so that everyone has to wait
first time, return a 408
first we need to walk backwards to ensure that our match isn't part of a string or part of a comment
first, build as much as possible that doesn't have a pattern
first, get a list of remote packages this user owns.
first, make sure that the hardlinks are actually hardlinks, or this won't work.
first, match against /foo/bar
five is placed into a JS object with a key that is joined to the component key attribute.
fix a common issue with Sortable: if prevEl doesn't have nextSibling, this means it's been dragged after the end anchor.
fix render order error in safari IE8 will throw error when index out of list size.
fixture for valid input, update the expected output
flags.binary will be set if a binary data is received.
flags.masked will be set if the data was masked.
flatten the version Array into a String
flatten version into String
flow doesn't like this :(
flow pragma is optional...
flow seems a bit confused here.
flowtype requires the ternary
flush is taking an unexpected amount of time
fnDone, fnFail, fnProgress
fnparam means that this identifier is being defined as a function argument (see identifier()) prop means that this identifier is that of an object property
fnparam means that this identifier is being defined as a function argument prop means that this identifier is that of an object property
follow all symlinked directories forever just proceed as if this is a non-globstar situation
followUserLocation defaults to true if showUserLocation is set
followed by / or end)
foo-* does not exist yet
foo.txt is the previous visible descendant to dir2
foo: bar Content-Type: application/x-git-upload-pack-advertisement 1234: 5678
foo: barbaz Content-Type: application/x-git-upload-pack-advertisement 1234: 5678
foobar does not exist yet
for AIX we need to set up the path to the exp file which contains the symbols needed for linking.
for async error stacks parse expression for getter/setter
for components, container and replacer need to be compiled separately and linked in different scopes.
for debug builds, lib may have _debug appended, we want that first
for devtool inspection
for drop-down select, ensure first is selected
for expressions containing literal numbers and booleans, there's no need to setup a prop binding, so we can optimize them as a one-time set.
for flow: types are lost in closures
for handle the case where we left a class open.
for inserting document
for master branch don't throw and error
for non-scalar fields, the recordID is the parent
for now we've either finished the set, and the suffix is pattern.substr(i), or we have *not* closed the set, and need to escape the leading brace
for now, not yet implemented.
for now, work with hex strings because they're easier in JS
for simple password-based authentication
for some mutations, deletions don't always occur so if there's no field in the payload, carry on
for some reason window.getComputedStyle cannot be spied on in phantomjs after the refactor...
for speeding up hashing/fingerprint operations
for tar.gz or alternative paths
for template tags, what we want is its content as a documentFragment (for fragment instances)
for the purposes of validation, if the node version is a prerelease, strip that.
for the search endpoint, the 'error' property can be an object
for two-way binding on alias
for unmocking Relay internals) and custom Jasmine matchers.
for versions before node v0.8 when there weren't `fs.existsSync`
for virtual (non-string, non-buffer) streams, "length" is somewhat arbitrary, and perhaps not very meaningful.
for windows only nt file system tunneling feature will make file creation time not updated
forRect is used by rectangular selections, and tries to estimate a character position even for coordinates beyond the right of the text.
force WebView to show loadingView on first load
force a default depth:
force a layout here so the transition can be triggered
force back to text/plain
force boolean to compare with last value
force browsers to behave consistently when non-matching value is set
force lazy recomputation
force the 'make' target for non-Windows
force-tracking should track the original nodes again
forms of the word to be pluralized.
fragment doesn't exist.
fragment is the original node, unchanged and not deferred
fragment with children
fragment without children
fragment: if this instance is compiled inside a Fragment, it needs to reigster itself as a child of that fragment for attach/detach to work properly.
friends.edges.node rewriting the same payload by default does not track anything
from CodeMirror distribution
from is expected to vary
from node's lib/path.js
from node_modules/eslint-config-a
from node_modules/eslint-config-a/node_modules/eslint-config-b
from node_modules/eslint-config-a/node_modules/eslint-config-b/node_modules/eslint-config-c
from read-package-json
from: https://github.com/kaielvin/jsbn-ec-point-compression
fromString with logging callback
fs.access always works on non-Windows OSes
fs.access first introduced in node 0.12 / io.js
fun stuff: MS deprecated ANSI stdio and similar functions disable annoying warnings.
function (message, scheme, attributes)
function body indent should be indent + indent size
function.name is not available in IE
functions are converted to booleans as markers that the associated events should be sent from native.
functions which are using unmodified variables are OK.
future transitions not interrupted
gap is capped at 10 characters
gather scope data that may be needed by the rules
gather tests back into an array
generally good behavior which we must not allow to keep the rule simple
generate a .res file containing version information
generate a new agent for this setting if none yet exists
generate a unique filename
generate identifier and require if it hasn't been already
generate to releases/XX when branch name indicates that it is some sort of release
generate to root folder when commit is tagged as latest, i.e. stable and needs to be shown at the root of repo
get auth, if possible
get bd object ready for insert
get content length and fire away
get entry file complete path (`entryFile` is relative to roots)
get in order of most recently used
get remainder save remainder for next loop
get rid of any ../../ shenanigans
get the 'arch', 'buildType', and 'nodeDir' vars from the config
get the batch of data that matches so far.
get the character that was split
get the data about this package
get the descriptor for this file with the metadata and the flag that determines if the file has changed
get the extension ("ext" or ".ext" or full path)
get the last error message by checking validate.error the following will print "data.hello is required"
get the list of entries.
get the list of packages by user
get the list of the packages that are specified in bower.json in that order its nice to maintain that order for users
get the number as a base-256 tuple
get the ones we tacked on, then the system-specific requirements
get the partial line and partial word, if the point isn't at the end.
get the root location
get the user-specified version to remove
getComponentForItem Optional function that returns a React Element.
getDefaultComputedStyle might be reliably used only on attached element
getPath is nice for debugging tests
getService() returns typed RPC services via the service framework.
gets hook for the prefixed version followed by the unprefixed version
getters and setters are ignored
getters and setters are ok
getting cross-talk from another executor (probably Chrome)
git must be called after npm.load because it uses config
git responds to env vars in some weird ways in post-receive hooks so don't carry those along.
github-style sub-commands with no sub-command
give it a weird buffer size to try to break in odd places
give this a kick just in case it needs it.
given point in the program is loosely based on sweet.js' approach.
gives Cookie header format
gives Set-Cookie header format
gives the correct node when dealing with nesting
glob using simple filename wildcards returns an array of matches that are found in the filesystem
global MutationObserver
global Vue, todoStorage
global __fbBatchedBridge, self, importScripts, postMessage, onmessage: true
global a b:true c:false
global cat, cd, cp, echo, exec, exit, find, ls, mkdir, pwd, rm, target, test
global document, React
global foobar, foo, bar
global hasOwnProperty:true
global header should be skipped regardless, since it has no content.
global importScripts, application
global on the server, window in the browser
global return at beginning of script
global setImmediate: false, setTimeout: false, console: false
global stats, valueToPoint
global window, global
global window, require, define
globalconfig and globalignorefile defaults need to respond to the 'prefix' setting up to this point.
globals GLOBAL: true, window: true
globals __REACT_DEVTOOLS_GLOBAL_HOOK__
globals can change throughout the course of a file parse operation.
globals expect: false
globals included because of `npm link` -- as far as the package requesting the link is concerned, the linked package is always installed globally
globals require: true
gnutar puts a LOT of nulls at the end.
go ahead and spin up the registry client.
go through the array every three bytes, we'll deal with trailing stuff later
go-to-definition with Hyperclick
goes to zero at both edges
going to readdir(cwd), but not include the prefix in matches.
gorilla Changing `defaultValue` should do nothing.
gorilla Changing the `value` prop should change the selected options.
gorilla When making it multiple, giraffe and gorilla should be selected
gorilla When removing multiple, defaultValue is applied again, being omitted means that "monkey" will be selected
got an "options" object
goto folder(2) adding a namespaced package: 1.
grab next challenge in this block
grab the url up to the query destroy any hash symbols still clinging to life
grab user associated with identity
grabs the content from the first script tag in the code
graceful-fs helps on getting an error when we run out of file descriptors.
gzipped files all start with 1f8b08
hack for check below, not included into result
hack to fix a circular dependency issue when used with browserify
hack to work around Android ScrollView a) not supporting zoom, and b) not supporting vertical scrolling when nested inside another vertical ScrollView (which it is, when displayed inside UIExplorer)
half pixel because offset values are not rounded but ceiled
half the angular distance from south pole Spherical excess E for a spherical triangle with vertices: south pole, previous point, current point.
handle cases where value is null/undef or number
handle composition events.
handle errors, and cache the information
handle interpolation bindings
handle interpolations with one-time tokens
handle invalid prop values using a warning at first.
handle most common string cases
handle multi-node frag
handle objects in params (useful for Wordpress REST API)
handle queue: false promises
handle single-char shorthands glommed together, like npm ls -glp, but only if there is one dash, and only if all of the chars are single-char shorthands, and it's not a match to some other abbrev.
handle the Array.prototype.extra style case
handle the case where we change protocol from https to http or vice versa
handle the case where we had a +( thing at the *end* of the pattern.
handle the case where we left a class open.
handle the file separately
handle trailing things that only matter at the very end.
handleObj is passed to all event handlers
handles func(callback(err, value))
handles func(callback(value, err))
handles func(error, success)
handles func(success, error), func(success)
has a positive integer length property
has no method 'render'
has some rando property
hasBooleanValue: Whether the property should be removed when set to a falsey value.
hasNumericValue: Whether the property must be numeric or parse as a numeric and should be removed when set to a falsey value.
hasOverloadedBooleanValue: Whether the property can be used as a flag as well as with a value.
hasPositiveNumericValue: Whether the property must be positive numeric or parse as a positive numeric and should be removed when set to a falsey value.
hasSelection will be the case when there is a lot of text in the textarea, in which case reading its value would be expensive.
hasSideEffects: Whether or not setting a value causes side effects such as triggering resources to be loaded or text selection changes.
have the package, get the fields.
have to call it here.
having the same number of owned properties (keys incorporates hasOwnProperty)
header is padded to 512 bytes.
height/width overflow pass
help recognize paste/cut edits in readInput
here we known the file or directory doesn't exist, so we will try to infer if its a directory if it looks like a directory for the current operating system.
here, we build a map of all require strings (relative and absolute) to the canonical ID of the module they reference
here, we intercept npm validating the remote origin url on one of the clones we've done previously and return the original url that was requested
hidden class micro-optimization
hidden from traversal
hide folders if only 1 level would be shown, or if no results were found
hide this from Flow since we can't define these properties outside of __DEV__ without actually implementing them (setting them to undefined isn't allowed by ReactClass)
hierarchy is abstract, so test a subclass
highlighting overlays, as added by addOverlay
hint is null, leave the selection alone as much as possible
holes in arrays indentation
hooks do not get broadcasted so no need to do bookkeeping for them
hooks should not incurr the bookkeeping cost
horizontal subdivision
host nuclide server is running on
host nuclide server is running on.
how false gets here is the CLI's problem (it's gross)
however, also support --bool true or --bool false
however, directories have to be re-tested against rules with a "/" appended, because "a/b/" will only match if "a/b" is a dir, and not otherwise.
however, don't suppress the throwing behavior for this.
however, if it's optional, then that's fine, so just delete it.
however, if we've ended, then there's no point, and if we're already reading, then it's unnecessary.
however, in this implementation, it's easier just to do the intuitive thing, and let brace-expansion actually come before parsing any extglob patterns, like the documentation seems to say.
however, it will not swallow /.x, unless options.dot is set.
however, might be stale
href starts with "//" which is a full URL with the protocol dropped (use the baseURL protocol).
hrtime readings come from Node's process.hrtime().
http://atmospherejs.com/d3js/d3
http://blindsignals.com/index.php/2009/07/jquery-delay/
http://blog.evanyou.me/2014/01/03/composition-event/ skip this for Android because it handles composition events quite differently.
http://closure-library.googlecode.com/svn/trunk/closure/goog /string/string_test.html
http://closure-library.googlecode.com/svn/trunk/closure/goog/ string/string_test.html
http://code.google.com/p/figue/
http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi
http://docs.amazonwebservices.com/general/latest/gr/signature-version-4.html
http://docs.aws.amazon.com/general/latest/gr/rande.html
http://exploringdata.net/den_trac.htm
http://h3manth.com/new/blog/2015/custom-elements-with-es6/
http://jsperf.com/copy-array-inline
http://jsperf.com/emptying-a-node
http://jsperf.com/hashing-strings
http://marijnhaverbeke.nl/git/acorn https://github.com/marijnh/acorn.git
http://mathworld.wolfram.com/Circle-LineIntersection.html
http://norbertlindenberg.com/2012/05/ecmascript-supplementary-characters/ and: https://github.com/mathiasbynens/String.fromCodePoint/blob/master /fromcodepoint.js
http://stackoverflow.com/q/1480971/3191, but see below for Windows.
http://stackoverflow.com/questions/3561493 /is-there-a-regexp-escape-function-in-javascript
http://stackoverflow.com/questions/596467/how-do-i-convert-a-number-to-an-integer-in-javascript this rounds towards zero
http://underscorejs.org (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.
http://vuejs.org/guide/custom-directive.html
http://webkit.org/b/41637 Web Inspector: Give Semantics to "Refresh" and "Delete" Buttons in ApplicationCache DataGrid
http://wiki.commonjs.org/wiki/Unit_Testing/1.0
http://www.apache.org/licenses/LICENSE-2.0
http://www.nonblocking.io/2011/06/windownexttick.html Safari 6.0.5 (at least) intermittently fails to create message ports on a page's first load.
https if specified, fallback to http in any other case
https://atom.io/docs/api/latest/Config
https://developer.mozilla.org/en-US/docs/Mozilla_event_reference/wheel
https://developer.mozilla.org/en-US/docs/Web/CSS/flex
https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction
https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values
https://gist.github.com/WebReflection/5593554
https://github.com/atom/atom/blob/v1.6.2/src/babel.js
https://github.com/atom/atom/releases/tag/v1.0.8  Note on periods: Using the extension "cats" will match the files "file.cats" and "cats".
https://github.com/atom/electron/blob/master/docs/api/web-view-tag.md
https://github.com/atom/markdown-preview/pull/335 drew my attention to it.
https://github.com/eslint/eslint/issues/1338
https://github.com/eslint/eslint/issues/2253
https://github.com/eslint/eslint/issues/2380
https://github.com/eslint/eslint/issues/2747
https://github.com/eslint/eslint/issues/2967
https://github.com/eslint/eslint/issues/3254
https://github.com/eslint/eslint/issues/3262
https://github.com/eslint/eslint/issues/3287
https://github.com/eslint/eslint/issues/3507
https://github.com/eslint/eslint/issues/3575
https://github.com/eslint/eslint/issues/3617
https://github.com/eslint/eslint/issues/3627
https://github.com/eslint/eslint/issues/3653
https://github.com/eslint/eslint/issues/3658 Empty cases.
https://github.com/eslint/eslint/issues/3714
https://github.com/eslint/eslint/issues/3721
https://github.com/eslint/eslint/issues/3769
https://github.com/eslint/eslint/issues/3794
https://github.com/eslint/eslint/issues/3819
https://github.com/eslint/eslint/issues/3856
https://github.com/eslint/eslint/issues/4047
https://github.com/eslint/eslint/issues/4229
https://github.com/eslint/eslint/issues/4438
https://github.com/eslint/eslint/issues/4608
https://github.com/eslint/eslint/issues/4763
https://github.com/eslint/eslint/issues/4779
https://github.com/eslint/eslint/issues/4792
https://github.com/eslint/eslint/issues/5130
https://github.com/eslint/eslint/issues/5261
https://github.com/eslint/eslint/issues/5305
https://github.com/eslint/eslint/issues/5319
https://github.com/eslint/eslint/issues/5394
https://github.com/eslint/eslint/issues/5547
https://github.com/eslint/eslint/issues/5644
https://github.com/eslint/eslint/issues/5724
https://github.com/eslint/eslint/issues/5789
https://github.com/eslint/eslint/issues/5894
https://github.com/felixge/node-form-data/issues/38
https://github.com/floodyberry/poly1305-donna
https://github.com/form-data/form-data/issues/40
https://github.com/isaacs/minimatch/issues/5
https://github.com/isaacs/node-glob/issues/205
https://github.com/isaacs/node-graceful-fs/issues/4 Chown should not fail on einval or eperm if non-root.
https://github.com/isaacs/readable-stream/issues/16
https://github.com/joyent/node/blob/master/lib/util.js
https://github.com/joyent/node/issues/7819
https://github.com/kriskowal/q/issues/396 Timers are implemented universally.
https://github.com/mscdex/node-ncurses/blob/master/deps/ncurses/progs/clear.c
https://github.com/npm/nopt/issues/24
https://github.com/npm/nopt/issues/31
https://github.com/npm/nopt/issues/48
https://github.com/paulmillr/es6-shim/blob/master/test/string.js
https://github.com/rackt/react-redux/blob/master/src/utils/shallowEqual.js MIT license
https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js
https://github.com/tj/node-blocked/blob/master/index.js  The blocked module checks and reports every event loop block time over a given threshold.
https://github.com/websockets/ws/blob/master/doc/ws.md
i is zero-indexed, line numbers are one-indexed
i.e., DocumentFragment
iOS Alert does that in native.
iOS default is 30px from the left edge
iOS-Specific style to "tint" an image.
id selector can be cached too
identifies if a challenge is completed
identity already exists find user and log them in
ie_uptoN means Internet Explorer version N or lower
if "args" option is "after-used", skip all but the last parameter
if "args" option is "none", skip any parameter
if "type" variable is undefined, then "GET" method will be used
if 'this' inside a non-constructor function is valid.
if (this.bundled) return true
if --target was given, then determine a target version to compile for
if ANY of the sets match ALL of its comparators, then pass
if CouchDB globals should be predefined
if Dojo Toolkit globals should be predefined
if ES3 syntax should be allowed
if ES5 syntax should be allowed (is now set per default)
if ExpressionStatement should be allowed as Programs
if JSHint should be compatible with Google Closure Linter
if MooTools globals should be predefined
if PhantomJS symbols should be allowed
if Prototype and Scriptaculous globals should be predefined
if ShellJS globals should be predefined
if Web Worker script symbols should be allowed
if `el` option is passed, start compilation.
if a CSS transition leaves immediately after enter, the transitionend event never fires.
if a file contains errors or warnings we don't want to store the file in the cache so we can guarantee that next execution will also operate on this file
if a line has a search term, then skip it and the next line.
if a sub-query was split, then we must track the entire field, which will be a superset of the `trackedNode` from traversing any metadata fields.
if advanced usage of assignments should be allowed
if all are spaces, then indent is space this can fail with mixed indent (4, 2 would display 3)
if all forms of subscript notation are tolerated
if already at maxWidth don't bother testing
if an error exists for this mutation ID, remove the error on the previous client ID and 'move' the error on the new client ID
if an error happens while we don't use the socket anyway, meh, throw the socket away
if any errors were found, then complain and exit status 1
if anyone needs a drain, then we have to wait for that.
if arguments.caller and arguments.callee should be disallowed
if automatic semicolon insertion should be tolerated
if before/after value is `false`, there should be no space.
if before/after value is `true`, there should be space(s).
if bitwise operators should not be allowed
if code is running in a branch in CI, commit changes to gh-pages branch
if constructor names must be capitalized
if curCSS returns percentage, fallback to offset
if curly braces around all blocks should be required
if current commit is tagged "latest" we do a release to gh-pages root
if current expression is a let expression
if current node introduces a scope, add it to the list
if debugger statements should be allowed
if decimal places are present, currency is required
if devtools is already started
if empty blocks should be disallowed
if es.next specific syntax should be allowed
if espree failed to parse the file, there's no sense in setting up rules
if eval should be allowed
if every destination was unpiped, either before entering this function, or in the while loop, then stop flowing.
if file is not a package dir, then don't do it.
if first is tab, then indent is tab
if first tag on this commit is non -rc then we are making a stable release '0.33.0'
if flushing, and not using null-padding, then need to emit the last chunk(s) sitting in the queue.
if for in statements must filter
if functions should be allowed to be defined within loops
if has initial value, set afterBind
if i have a filter, the child should inherit it.
if identifiers should be required in camel case
if ignored, skip _processing
if ignored, skip processing
if immediate invocations must be wrapped in parens
if increment/decrement should not be allowed
if it can be installed, it can be packed.
if it didn't throw, but original parser did, this is an error in this library and should be reported
if it extends another schema, it must pass that schema as well
if it fails, whatever.
if it has, change its undef state
if it is there, then we'll need to change whatever differs
if it was the only version, then delete the whole package.
if it's a folder, a random not-installed thing, or not a scoped package, then link or install it first
if it's a folder, then read the package.json, tar it to the proper place, and add the cache tar
if it's a local folder, then run the prepublish there, first.
if it's a negative number, or greater than will fit, then use write256.
if it's a type change, then we need to clobber or error.
if it's an abbr for a shorthand, then use that
if it's an arg abbrev, and not a literal shorthand, then prefer the arg
if it's an exact known option, then don't go any further
if it's an exact known shortopt, same deal
if it's an unknown value, then parse false/true/null/numbers/dates
if it's got / chars in it, then assume that it's local.
if it's not a type change, then let the impl take care of it.
if it's not an array, it should be just a severity
if it's not the expected size, then abort here.
if it's not there, great.
if it's past the high water mark, we can push in some more.
if it's the root, then there's no need to add its entries, or data, since they'll be added directly.
if its a template tag and the browser supports it, its content is already a document fragment.
if jQuery globals should be predefined
if lchmod/lchown do not exist, then make them no-ops
if line breaks should not be checked
if line breaks should not be checked around commas
if lock can't be acquired, then fail 4.
if logging globals should be predefined (console, alert, etc.)
if modifying native object prototypes should be disallowed
if mozilla specific syntax should be allowed
if names should be checked
if need cookie and cookie is not empty
if no --nodedir specified, ensure node dependencies are installed
if no --target was specified then use the current host node version
if no child has registered for this event, then there's no need to broadcast.
if no globals are restricted we don't need to check
if no imports are restricted we don"t need to check
if no inline-template, then the compiled linker can be cached for better performance.
if no json, then just trash it, but no scripts or whatever.
if no modules are restricted we don't need to check the CallExpressions
if no next hike currentHike will equal '' which is falsy
if no port provided use default one
if non-breaking spaces should be disallowed
if non-standard (but widely adopted) globals should be predefined
if none anywhere, then use cwd.
if not specified where, then delete from the whole chain, scorched earth style
if not suppled column names, automatically determine columns from data keys
if not ustar, then everything after that is just padding.
if not we warn about it
if not, then this is rather simple
if not, use the default
if npm is called as "npmg" or "npm_g", then run in global mode.
if one case switch statements should be allowed
if only function scope should be used for scope tests
if only one result, then just show that help section.
if only one var statement per function should be allowed
if our last write ended with an incomplete multibyte character
if our parent is a CallExpression, make sure we're the first argument
if our parent is a return we know we're ok
if possible, verify that Map also behaves the same way
if post fails, will retry once
if processAnswers crashes, we need to be sure to restore cwd
if queued, only overwrite shallow with non-shallow, but not the other way around.
if r is a valid choice, then use that.
if react-router does not find a route send down the chain
if read() returns EAGAIN, then just try it again.
if result is Promise object
if rowFrame missing, no following ones will exist so quit early
if script-targeted URLs should be tolerated
if semicolons may be ommitted for the trailing statements inside of a one-line blocks.
if should report typos in typeof comparisons
if smarttabs should be tolerated (http://www.emacswiki.org/emacs/SmartTabs)
if so, add it to that, and mark this one for deletion
if someone really wants to see them, they can listen to the "socket" events.
if source or dest is primitive, just replace
if static, build right now.
if strict whitespace rules apply
if sub-queries are split then this *entire* field will be tracked, therefore we don't need to merge the `trackedNode` from each item
if that's what we already have, or if it's not on the args list, then dive into it.
if the 'project' config is not a filename, and we're not in global mode, then that means that it collided with either the default or effective userland config
if the COMP_* isn't in the env, then just dump the script.
if the Node.js environment globals should be predefined
if the Rhino environment globals should be predefined
if the Windows Scripting Host environment globals should be predefined
if the `__iterator__` property should be allowed
if the `__proto__` property should be allowed
if the body is not empty, we can just return immediately
if the callback is the last thing in a block that might be ok
if the class has no extends or `extends null`, just ignore.
if the current node matches the filter do nothing
if the dest has an error, then stop piping into it.
if the entry is a directory, then it will match with a trailing slash.
if the error is something other than ENOENT, then it's not.
if the field is an argument-less root call, determine the corresponding root record ID
if the file can be opened in readonly mode, then it's there.
if the file dependencies have change we need to invalidate the dependencies caches because the list of files we need to send to the client may have changed
if the filter doesn't pass, then just skip over this one.
if the identifier is from a let, adds it only to the current blockscope
if the inserted slot has v-if inject fallback content as the v-else
if the last character passed is a path separator we assume is a directory
if the length is currently zero, then we *need* a readable event.
if the link already exists and matches what we would do, we don't need to do anything
if the new tracker is a group, make sure any subtrackers get mixed in too
if the next line has a search term, then skip all 3 otherwise, set the line to null.
if the noProxy is a wildcard then return null
if the noProxy is not empty and the uri is found return null
if the object has a "prefix", then that's actually an extension of the path field.
if the object is in fact mutated, it should still trigger.
if the path of the editor is not null AND is part of the currently selected root that would be removed AND is not part of any other open root, then close the file.
if the pkg and ver are in the cache, then just do a readJson and return.
if the queue gets too big, then pluck off whatever we can.
if the range has gotten bigger but has cursor info, we don't replace it
if the range has gotten bigger, we replace it
if the re is not "" at this point, then we need to make sure it doesn't match against an empty path part.
if the reader is waiting for a drain event from this specific writer, then it would cause it to never start flowing again.
if the repo is empty, remove it.
if the scan should stop on first error
if the selection does not find anything up go down
if the standard browser globals should be predefined
if the stat fails, then that's super weird.
if the tab has already been shown once, always continue to show it so we preserve state between tab transitions
if the tagged version satisfies, then use that.
if the target.path was what we found in some version of parent, remove using that parent as the base
if the template is already a document fragment, do nothing
if the unlink fails, oh well.
if the vm is being manipulated by a parent directive during the parent's compilation phase, skip the animation.
if the watcher is watching the added value, it should still trigger properly
if there are any ignore files in the list, then pause and add them.
if there are intersections, we always rejoin the first and last segments.
if there are no more bytes in this buffer, just emit our char
if there are placeholders, only get up to the last complete 4 chars
if there is a .gitignore, then we're going to rename it to .npmignore in the output.
if there is a syntax error, Flow returns the JSON on stderr while still returning a 0 exit code (t8018595)
if there is no expire time set or if expireCacheAt is smaller than now, set new expire time in MS and create new subscription to source
if there is no folder in common, then it will be much longer, and using a relative link is dumb.
if there were data event listeners added, then switch to old mode.
if there're new dependencies compare the full list of dependencies we used to have with the one we now have
if there's a "strip" argument, then strip off that many path components.
if there's a .npmignore, then we do *not* want to read the .gitignore.
if there's a fix specified, get it
if there's a package.json in the current folder, then read the package name and version out of that.
if there's a slash, then it's a file
if there's a specific owner uid/gid that we want, then set that
if there's an error, it's fine, as long as we got a node
if there's an underscore, it might be A_CONSTANT, which is okay
if there's more than one match, we just ignore this kind of loop otherwise I'm going to be writing a full JavaScript lexer...and god knows I've got better things to be doing.
if there's no getuid, or if getuid() is something other than 0, and the error is EINVAL or EPERM, then just ignore it.
if there's no node_modules folder, then walk up until we hopefully find one.
if there's nothing in the write buffer, then that means that nothing more will ever be provided
if there's something in the buffer waiting, then process it
if these methods are polyfilled, apply will be present
if they specified a common name for the package that contains the library, tag some useful defaults on to the end of the path to be searched
if they're not, then fetch them from the registry.
if this closes the actual set, then we're done
if this entry has already been bundled, and is a symlink, and it is the *same* symlink as this one, then exclude it.
if this fails, then it means we can't update this thing.
if this is a transcluded component, context will be the common parent vm of this instance and its host.
if this is inside an inline v-for, the scope will be the intermediate scope created for this repeat fragment.
if this is the last remaining pattern bit, then no need for an additional stat *unless* the user has specified mark or stat explicitly.
if this succeeds, then we're in business.
if this the module has no parents then the change cannot be hot loaded
if this tree location requested the same module then we KNOW it isn't compatible because if it were findRequirement would have found that version.
if trailing whitespace rules apply
if true, a maybeReadMore has been scheduled
if true, add the dir part of the header_name to the include path
if truncating required, only include first line + add truncation char
if type found, replace current type
if typed array globals should be predefined
if unescaped first/last dash (-) inside brackets should be tolerated
if user signed in with github refresh their info
if using `new` for side-effects should be disallowed
if variable shadowing should be tolerated
if variables should be declared before used
if we allow half-open state, or if the writable side ended, then we're ok.
if we are at h3, we want h2.
if we are at the end of the pattern, we should match files too
if we are going to the end, we want to run all the tweens otherwise we skip this part
if we are not in document, no need to check for transitions
if we arrive here, ucs is not a combining or C0/C1 control character
if we can't wait, then just call it a failure
if we currently have less than the highWaterMark, then also read some
if we didn't call the onwrite immediately, then it means that we need to wait until it does.
if we don't have a registry connection, try to see if there's a cached copy that will be ok.
if we don't have the data for this static call already, return empty arrays with the corresponding diffCalls
if we don't know what it is, try json and fall back to ini if we know what it is, then it must be that.
if we get an error talking to the registry, but we have it from the cache, then just pretend we got it.
if we got a prefix, then prepend it to the path.
if we got an error we'll try to put back the original module back, succeed or fail though we want the original error that caused this
if we have 1 byte left, pad 2 bytes
if we have a canonical ID for the module imported here, we use it, so that require() is always called with the same id for every module.
if we have the shasum already, just add it
if we haven't asked to stat everything, then just assume that everything in there exists, so we can avoid having to stat it a second time.
if we include width, step value is 1 to do all cssExpand values, if we don't include width, step value is 2 to skip over Left and Right
if we inspect a stateless component we can't use the getPublicInstance method therefore we use the internal _instance property directly.
if we need a readable event, then we need to do some reading.
if we opened more than we closed, find the one we closed
if we request more results but get the same number, we replace (in case there were deleted items, different items, or reordering)
if we want the data now, just emit it.
if we"re not a callback we can return
if we're "never" and concise we should warn now
if we're a non-curlies loop, then convert to curlies to get our code inserted
if we're already running
if we're already writing something, then just put this in the queue, and wait our turn.
if we're doing read(0) to trigger a readable event, but we already have a bunch of data in the buffer, then just trigger the 'readable' event and move on.
if we're here then some package(s) doesn't have all its deps satisified so lets just jam those names on the end
if we're in a list comprehension, variables are declared locally and used before being defined.
if we're in either LOADING or ERROR states, don't show the webView
if we're not in unsafe-perm mode, then figure out who to run stuff as.
if we're not piping anywhere, then do nothing.
if we're not waiting on anything, resolve the master
if we're really exiting, then let it exit on its own, so that in-process stuff can finish or clean up first.
if we've ended and we have some data left, then emit 'readable' now to make sure it gets picked up.
if we've ended, and we're now clear, then finish it up.
if with statements should be allowed
if you .end() or .flush(), it'll emit whatever it's got, padded with nulls to 512 bytes.
if you just call .pipe() without a destination, then it'll re-play the events.
iframes only gets contentWindow when inserted into the document
ignore ATTRIBUTE, ENTITY_REFERENCE, ENTITY, DOCUMENT, DOCUMENT_TYPE, DOCUMENT_FRAGMENT, NOTATION
ignore EACCES because that just means we aren't allowed to run it
ignore any potential response body.
ignore event listeners generated by monitorEvent
ignore everything again
ignore everything except what's in the files array.
ignore files beginning with a dot, but not files in a parent or ancestor directory (which in relative format will begin with `../`).
ignore for -W..., unignore for +W...
ignore invalid points
ignore object shorthand
ignore patterns are always in dot:true mode.
ignore props with fragments (instead resolved values are compared)
ignore queued records because not all range fields may be present there
ignore the possible error (e.g. the file doesn't exist)
ignore top of the file and bottom of the file
ignore unnecessary end() calls.
ignore-scripts/package.json has scripts that always exit with non-zero error codes.
ignoreComments is disabled
ignorePattern is disabled
ignoreUrls is disabled
ignores `super()` on unreachable paths.
ignores computed property.
ignores incomplete things.
ignores non constant.
ignores non variadic.
ignores non-trivial expressions
ignores non-workspace commands
ignores out of constructors.
ignoring if Reload JS button can't be located
imagesPerRow: Number of images to be shown in each row.
implementation adapted from the no-trailing-spaces rule.
implementation from standard node.js 'util' module
implicit desired position of translate0 after zooming
important for assert.deepEqual checks
important for shrinkwrap
important to make sure devDependencies don't get stripped
important when wrapping filters and duplexes.
important: defer the child watcher creation until the created hook (after data observation)
important: props need to be observed on the v-for scope if present
important: we want to resolve root + dir to ensure the requested path doesn't traverse beyond root
in IE11 the "compositionend" event fires AFTER the "input" event, so the input handler is blocked at the end...
in a Vue.extend merge, both should be functions
in a node_modules folder, resolve symbolic links to bundled dependencies when creating the package.
in a node_modules folder, we only include bundled dependencies also, prevent packages in node_modules from being affected by rules set in the containing package, so that bundles don't get busted.
in case the file exists we need to verify if the provided path is a directory or a file.
in debug + async mode, when a watcher callbacks throws, we also throw the saved before-push error so the full cross-tick stack trace is available.
in dev build, check and stop circular updates.
in dev environment, we reread the manifest on every call this means we do not need to restart server on every change to client code
in examples, but undocumented
in loose mode, throw out any that are not valid comparators
in order to honor the cacheFile option if specified this option should not have a default value otherwise it will always be used
in production we take use the initially loaded manifest since this should not change in production
in some rare cases (e.g. working with nerf darts), there are segmented "private" (underscore-prefixed) config names -- don't export
in strict mode, this may be null / undefined
include all the ".gypi" files that were found
include computed fields
include full path of parser if present
include relative path in filename
include this transform and it's dependencies on the bundle on dev mode
includeCommandLineAPI
included because a child was included
inclusive upper bound
increase loopback database ODM max listeners this is a EventEmitter method
increase user accessToken ttl to 900 days
incremented each time a cookie is created
index is given such that source.slice(0, index) is the precise  string that occurs before the cursor, and source.slice(index) is the string that occurs after the cursor.
index of last insertion
index: /jobs list jobs show: /jobs/:id show one job create /jobs/new create a new job
inherit from ArrayIndex
inherit from `ArrayIndex`
inherit from non constructors.
inherit node position from first neighbor with defined position or if no such neighbors, initialize node position randomly initialize neighbors lazily to avoid overhead when not needed
inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates the flags outside of the parser.
init + deferred require times
init modal keybindings on open
init() contains all the code to setup the request object.
initial challenge run to populate tests
initial fetched commits
initial population of the store
initialize absent prop
initialize column defaults (each column inherits from options.config)
initialize data as empty object.
initialize data observation and scope inheritance.
initialize the remotes cache with the correct perms
inject foobar DOM property
inline comments (should not ever warn)
inline string with newline
inline-process-browser and unreachable-branch-transform make sure this is removed in browserify builds
inlined Object.is polyfill to avoid requiring consumers ship their own https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
inner child should be running
innerHTML behaves as it should.
input before composition unlock should not call set
insert a callback that will only occur once per the matched route.
insert new key, that's tricky
insert the reset above the originalLineNum OR if this loop used a label, we have to insert the reset *above* the label
insert with updated stagger index.
insert() is O(lg K) getTopScores() is O(K lg K)  Therefore, finding the top K scores from a collection of N elements should be O(N lg K).
insert/show element 5.
inserted elements should be observed
inside the last blank lines
inst is an internal instance (but could be a composite)
install can complete to a folder with a package.json, or any package.
install instance APIs
install specific libraries
instruments always fail with 255 because it expects more arguments, but we want it to only launch the simulator
int duration: The duration of the toast.
intentional extra space
intentional lint warning to make sure that the bot is working :)
intercept call to traverse() and add the fallback key to the visitor
intermediate phone object has no changes
interpolate non-matching numbers
interpolate string "shapes"
interpolates color strings
intervals get rescheduled when executed, so there's never more than a single scheduled function with a given timeoutKey
into the data so that the next time we load from this cached data, we have all the same info.
invalid dir: no matching
invalid glob pattern.
invalid handles are ignored
invariant: No messages for closed files, no destroyed markers.
invariant: no empty sets (should be removed from the map)
invert the fields between outer/inner fragments
invoke the ArrayIndex internal `set` operator to ensure that there's getters/setters defined for the determined length so far...
invoke the element factory if this is instance merge
invoked after the tarball has finished being extracted
io.js v3.x.x shipped with "ia32" but should have been "x86" Captures all the logic required to determine download URLs, local directory and  file names.
ipc is used by webviews to communicate with the parent view.
irl, you should never have several hundred contenders for a single lock, so this situation is somewhat pathological.
is a directory or is a file, but the original file the user provided looks like a directory but `path.resolve` removed the `last path.sep` so we need to still treat this like a directory
is file so just use that file
is it escaped, check backslash count
is on undefined custom element should be preserved in case it is a native custom element usage
is-my-json-valid does not provide meaningful error messages for external schemas this is a workaround
isLevelEnabled() is required to reduce the amount of logging to log4js which greatly improves performance.
isMergeArrays defaults to true
isValid's strategy (with containsNode) does not work because render trees may be nested and we don't want a false positive in that case.
isVisible is false, so oldDisplay is non-null
isexe will check to make sure it's found in the pathExt set.
isfunc     - true if block is a function body isfatarrow - true if its a body of a fat arrow function iscase      - true if block is a switch case block
isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not effect the current flags.
istanbul ignore else : this will be caught by options validation
istanbul ignore else: correctly returns null
istanbul ignore else: foolproof (syntax error)
istanbul ignore next : unreachable
istanbul ignore next: foolproof (syntax error)
istanbul ignore next: hard to test fs function
istanbul ignore next: no need to test inquirer
istanbul ignore next: syntax error
istanbul ignore next: unreachable
it cannot possibly be useful to us at this point.
it driver.on('command') will log the screen contents
it is a syntax error to have a regular argument after a default argument
it will be filled up in _initData().
it'd be nice to asyncMap these, but actually, doing them in parallel generally munges up the output from node-waf
it's a non-match (-1) or prefix (0)
it's a scoped package package name is "eslint-config", or just a username
it's hard to force `read-package-json` to break w/o ENOENT, but this will do it
it's not already defined as a prop 2.
it's not possible for the same frag to be removed twice, so if we have a pending stagger callback, it means this frag is queued for enter but removed before its transition started.
it's probably a thing that isn't published.
it's provided via a instantiation option AND there are no template prop present
it's quite possible we're in the middle of a multiline comment, so we'll cycle up looking for an opening comment, and if there's one (and not a closing `*/`), then we'll ignore this line as a comment
it's the first thing after all the configs.
itemID and itemRef are for Microdata support as well but only specified in the WHATWG spec document.
itemID and itemRef are for Microdata support as well but only specified in the the WHATWG spec document.
itemProp, itemScope, itemType are for Microdata support.
iterate over comments until we find one past the current line
iterate through the noProxyList until it finds a match.
iteration-based reduce implementation
jQuery Mobile React Example  Main application script.
jQuery Mobile button component.
jQuery Mobile footer component.
jQuery Mobile header component.
jQuery Mobile page component.
jQuery Mobile page content component.
jQuery's "parseHTML" function was introduced in jQuery 1.8.0 and is a documented public API.
jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.support is not used in Core but other projects attach their properties to it so it needs to exist.
jasmine-node does this same trick, but neglects to respect the exit code, so we beat it the to the punch.
jasmine-node test runner with Atom test globals and babel transpiling support.
javascript mode does bad things with jsx indents
jest environment doesn't have cancelAnimationFrame :(
jest for some bad reasons runs the polyfill code multiple times.
jitter internal nodes that are coincident
join arguments after '--' and pass them to script, handle special characters such as ', ", ' '.
jsc doesn't play so well with tracebacks that go into eval'd code, so the stack trace here will stop at the `eval()` call.
jscs:ignore requireDotNotation
jsdom has spotty event support
jshint bitwise: false
jshint ignore:line affect the compiled line
jshint ignore:line cycle forward until we find the close brace, after which should be our while statement to ignore
jshint onevar: false, indent:4
jshint quotmark:double
jshint scripturl: true
jshint validthis: true
jshint validthis:true
jslint sloppy:true node:true rhino:true
jslint sloppy:true plusplus:true node:true rhino:true
junctions on windows must be absolute
just ONE of the pattern sets in this.set needs to match in order for it to be valid.
just a normal string, do the split/map thing
just a response for some request
just bind it as an attr directive for value.
just check the file itself, and that's it.
just clear the statechar *now*, rather than even diving into the patternList stuff.
just emit a fake exit event.
just get the partial words, minus the last path part
just get the path and basic details.
just give the write the old college try.
just ignore missing files.
just list all users who aren't me.
just one destination.
just pretend it's a normal old file, not magic at all.
just return the abs value in that case.
just set and move along
just set the global for non-node platforms.
just take a part of the first list item.
just take the first js file we find there, or nada
keep args in sync with with defineModuleCode in packager/react-packager/src/Resolver/index.js
keep asset requests from traversing files up from the root (e.g. ../../../etc/hosts)
keep client.groupName.operation from stomping client.operation
keep independent versioning PECL-specific for now
keep refreshing the lock, so we keep it forever
keep track if any fixes were ever applied - important for return value
keep track of the last added cluster
keep track of the number of "newlines" that get encountered
keeps webpack from bundling modules
key for https connection.
key-value pair argument is global extended header props.
keyboard shortcuts: open main chat
keyboard shortcuts: open map
keyowrd + keyword literal
keywords that don't make sense inside expressions
kinda weird if a pkg depends on itself, but after the first iteration of this loop, it indicates a dep cycle.
kludge for server adminery.
known bad examples that we know we are ignoring
ko.selectExtensions provides a way for SELECTs/OPTIONs to have values that are arbitrary objects.
ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element 2.
lacked in some code path.
lacks that functionality.
lalala I'm a normal comment
lang value must be a valid identifier
last item can be surrounded by parentheses for object and array literals
last item in the list is the current one
later on, we have to set the mode and owner for these
lazily computed properties
lazy load YAML to improve performance when not used
lchmod, broken prior to 0.6.2 back-port the fix here.
leave as prototype default
leave first char untouched, even if it is a '_' - convert all other to '-'
leave only releases and blog folder
leave transition triggered.
legacy android transform properties
legacy support for decimal strings
legacy: obj, showHidden, depth, colors
length mods (ignored)
length of items in the list
less than the length of the path).
let goToNextQuestion hit reducers first
let parent function deal with newline
let the original error be the failure reason.
let's assume it's a baseUrl then
let's assume we're inside a comment
let's see what versions are already published.
level one of log, info, warn, error, mustfix
lib/install needs to have some way of sharing _limited_ state with the things it calls.
lib/jsprim.js: utilities for primitive JavaScript types
libclang doesn't seem to be able to return multiple ranges to define the location of a symbol, which is necessary for Obj-C selectors.
libuuid - string form
license files should never be ignored.
license is NOT optional
like 5, but with data, which should be skipped
line crosses antimeridian handle degeneracies
lineIsHidden depends on the presence of the spans, so needs a second pass
lines are stored 0-based in SourceMap spec version 3
link context scope dirs
link function for the childNodes
link function for the node itself.
link is always effectively 'long', since it doesn't help much to just* print the target folder.
link our test module into the global folder
link with package arg: symlink the global to the local
linked from the above in diskCache only
linked nodes use a minimal path from the nearest refetchable node
linker can be cached, but only for components
linking the modules into the npm.root, resolving dependencies, etc.
links pan to gestureState  (step1: uncomment)
list of comments to ignore
list of items in order of use recency
list with all the dependencies' filenames the bundle entry has
listen for the queryPosition report on stdin
listen until offscreen
literal args after --
load in additional rules
load this before clubbing the platform name.
load up environments and rules
loc.column is zero-indexed
local-address must be listed as an IP for a local network interface must be IPv4 due to node bug
localStorage compatible interface
localtimeOffsetMsec:   optional local clock time offset express in a number of milliseconds (positive or negative).
location of textRangeInSample1 + 1 colon
location of textRangeInSample2 + 1 colon
location of textRangeInSample3 + 1 colon
location of textRangeInSample4 + 1 colon
locations may have detached due to rotation
log (require ('util') .
log is just a thin wrapper to console.log that prepends a timestamp
log.error('System', os.type() + ' ' + os.release()) log.error('command', process.argv.map(JSON.stringify).join(' ')) log.error('node -v', process.version) log.error('npm -v', npm.version)
logging won't work unless we pretend that it's ready
look for a space between the callee and the open paren
look for any active animations, and finish them
look for any animations in the old queue and finish them
look in the include path
look up the most recent version.
looking up envs is a bit costly.
looks like a comment, go back one to confirm or not
lookup for the assignment (esnext only) if it has semicolons, it is a block, so go parse it as a block or it's not a block, but there are assignments, check for undeclared variables
loop through the rest of the opts and add the unknown ones as variables.
lowercase keys must be valid, otherwise prefix with "NODETAR."
lruList is a yallist where the head is the youngest item, and the tail is the oldest.
lstat failed, doesn't exist
lstat wouldn't return an error on these, so we don't either.
lutimes implementation, or no-op
made it to the end of the loop, maybe
magic bitshift guarantees we return an unsigned int
mainScriptFile is null when running in the REPL mode
maintain gesture velocity
maintain two arrays for circular references, where corresponding parents and children have the same index
make a clone from the mirrored cache so we have a temporary directory in which we can check out the resolved treeish
make a complete bare mirror of the remote repo NOTE: npm uses a blank template directory to prevent weird inconsistencies https://github.com/npm/npm/issues/5867
make a new segment if there is a gap
make bundle deps predictable
make css-case commands callable via camelCase as well
make it an array, if it's a list of words
make it so that the folder in the tarball is named "package"
make me a reusable prototype that I can `new`, or implicitly `new` with a constructor call
make sure 'getter' was called
make sure 'setter' was called
make sure JS-style comments don't throw an error
make sure YAML files work correctly
make sure checkSetter works: should add setter if a cache hit doesn't have hit function.
make sure it cleared the cache
make sure it installs locally
make sure it's valid.
make sure only to validate JSDoc comments
make sure our parent is marked
make sure python uses files that came with this particular node package
make sure that no data gets corrupted, and basic sanity
make sure that one of the atomic streams won.
make sure that re-using the options doesn't screw things around
make sure that the _header and such is emitted, and clear out the _currentEntry link on the parent.
make sure that the input is valid.
make sure that the mans are unique.
make sure that the requests come back from the server out of order.
make sure the default rejection handler is installed
make sure the file was modified is part of the bundle
make sure the path separators are normalized for the environment/os keeping the trailing path separator if present
make sure this is an actual loop command by searching backwards to ensure it's not a string, comment or object property
make sure to add the child with correct parent if this is a transcluded component, its parent should be the transclusion host.
make sure to convert string selectors into element now
make the set of regexps etc.
making the same file again should have no effect.
manually setting default prop here to keep support for the deprecated 'animated' prop
map from module name to path
map from module name to the modules' dependencies the bundle entry has
map from module to generated identifier
map gesture to leader
map that indicates the shallow dependency each file included on the bundle has
mapToRegistry will complain if package is undefined, but it's not needed for ls-packages
maps node IDs to the IDs of the connections that contain them
margin is only for outerHeight, outerWidth
mark adjacent text nodes as skipped, because we are using node.wholeText to compile all adjacent text nodes together.
mark all exported variables as such
mark and cache dir-ness
mark challenge completed
mark that we need a transform, so that any data that comes in will get processed, now that we've asked for it.
marked - a markdown parser Copyright (c) 2011-2013, Christopher Jeffrey.
marked - a markdown parser Copyright (c) 2011-2014, Christopher Jeffrey.
markers - block comments
markers - line comments
markupList is either a list of markup or just a list of elements
match on either path separator
matching `GitRepositoryAsync` implementation.
maxChars (including ellipsis)
max_depth sets the depth that the debugger engine respects when returning hierarchical data.
may be null if no value was defined for this route.
maybe not readable, or something.
means it *does* exist.
means that the current buffer couldn't be completely output update this._offset to reflect how much WAS written
meant to be used with a filter method on an array or observable stream true if challenge should be passed through false if should filter challenge out of array or stream
memoize the directories created by this step
merge all whitespace chars
merge in any additional parser options
merge in environment parserOptions
merge lines into rows conceive output
merge non-newline whitespace chars
merge rules with default
merges offset into value and resets
message "already built" should not be error
metadata should be compressed
method definitions don't have a semicolon.
method to force update DOM using latest value.
methods guaranteed to produce a unique set when starting from a unique set
methods that exist on SourceCode object
methods that implement data logic.
midpoint close to an end
might have slightly different bytes, since the standard isn't very strict, but should have the same semantics checkSum will be different, but cksumValid will be true
might pause() before calling _getEntries, and then resume, and try to get them a second time.
mildly evil, but it's for a test.
mimic as if alwaysAuth had been set
minimal distance between grid lines.
missing configuration
mixin the public methods from log into the tracker (except: conflicts and one's we handle specially)
mkdir -p build/react-core/lib
mobile emulators are really slow
mock server reference
modified from https://github.com/es-shims/es5-shim
module.exports is for Node.js
module.paths is an array of paths to search for resolving things relative to this file.
modules cannot return on global.
modulus then public exponent
moment breaks the pattern
most of the time we don't want to auth
mount, update, unmount
move childTwo: Only negotiates to `parent`.
move the builtin into the conf stack now.
move to the next file
move to the next line
move warning location to operator
moves the temp file into its final destination b.
msTransform is correct already and shouldn't warn
multi-children template
multi-inheritance-ish
multiGet invokes callback with an array of key-value pair arrays that matches the input format of multiSet.
multiSet and multiMerge take arrays of key-value array pairs that match the output of multiGet, e.g. Returns a `Promise` object.
multiline comments (* *)
multiline expressions
multiple arrays of keys
multiple pipe destinations.
multiple try catch both fail
multiple try catch with one success
must be a Directory type
must be an even number of digits
must be either an integer or an octal string.
must convert file: uri's to just a path for atom.
must do this initialization *before* other requires in order to work
must export plain object
must match JSHint's error message
must match entire pattern ending in a * or ** will make it less strict.
must not start with a dot, as that won't go into the apk
mustUseAttribute: Whether the property must be accessed and mutated using `*Attribute()`.
mustUseProperty: Whether the property must be accessed and mutated as an object property.
my .end() is coming later.
my kingdom for a filtered catch
name and fullname are omitted when we get data back from the `eval` command.
name of calling method/function/symbol
name of the subcommand, link `pm-install`
namespace_registry.get('name') 3.
native event - ignore      (step1: uncomment)
nativeEvent is represented as a plain object here to ease testing, because KeyboardEvent's 'charCode' event key cannot be deleted to simulate a missing charCode key.
nb: prefix field may in fact be 130 bytes of prefix, a null char, 12 bytes for atime, 12 bytes for ctime.
necessary for round-tripping gists
necessary to replace, because of progress bar
need 2 ending null blocks.
need an extended header if negative or too big.
need to also dive through kids, always.
need to check that eslint.verify() works with SourceCode
need to do this so fstream doesn't explode when files are removed from under it
need to download node.lib
need to find a slash somewhere in the middle so that path and prefix both fit in their respective fields
need to have inverseDependencies to bubble up accept
need to invoke the `length` getter to ensure that the indexed getters/setters are set up at this point
need to require WebSocket inside of `enable` function because this module is defined as a `polyfillGlobal`.
need to simulate a missing package.json
need to store ref to self here because these getter/setters might be called by child scopes via prototype inheritance.
needs to be a different hostname to verify tokens (not) being sent correctly
negation means inclusion
negation nestled within a pattern
nested execution scope.
never -  arraysInArrays
never -  objectsInArrays
never - arraysInArrays
never - arraysInArrays, objectsInArrays
never - arraysInArrays, singleValue
never - arraysInObjects
never - destructuring
never - destructuring assignment
never - import / export
never - object literals
never - objectLiteralComputedProperties
never - objectsInArrays
never - objectsInObjects
never - unrelated cases
never create things that are user-unreadable, or dirs that are user-un-listable.
never include the .bin.
never match anything that doesn't start with ., even when options.dot is set.
never propagate `nodeID` past the first linked field
never rm the root, prefix, or bin dirs
never upgrade index.*.js files
never-objectsInObjects
new BigInteger(int,RNG)
new BigInteger(int,int,RNG)
new instance, or still in stagger.
new lines preserved outside of tags
new modules don't need to be accepted
new style, based on process.release so we have a lot of the data we need
new users can *not* use auth, because they don't *have* auth yet
new.target: https://github.com/eslint/eslint/issues/5420
newline, comment or other unrecognized codestyle
newly selected should track the selector
next 5 opens will fail.
next, the global header for this file.
nfcall may return multiple callback arguments as an array
no DOM node should be considered an array-like a 'select' element has 'length' and 'item' properties on IE8
no `id` value is present, so the root ID is autogenerated
no async tasks required
no break: need to execute b()
no conclict in ignore patterns
no default, return undefined
no duplicate data key
no entries means not a dir, so it can never have matches foo.txt/** doesn't match foo.txt
no error on this line
no exception then we're good
no harm if there's no bundle
no hosts (local file or something)
no id supplied, load first challenge
no more data can be written.
no need for interpolation            (step2d: uncomment)
no need for mans or contributors if they're in the files
no need for the readme now.
no need to bother with the length
no need to check if parentVal is a function here because it has to be a function to pass previous merges.
no need to expand pre, since it is guaranteed to be free of brace-sets
no need to reiterate its edges
no nested deferred part
no nested nested deferreds
no nulls allowed in path or linkpath
no outer variable, default is used
no point saving empty chunks
no progress bars unless asked
no range behavior specified for this combination of filter calls
no refers to variables that declared on upper scope.
no remainder to process.
no results means this is the first brownie point given by giver so return -1 to indicate receiver should receive point
no runBeforeMainModule for hmr bundles `require` calls in the require polyfill itself are not extracted and replaced with numeric module IDs, but the require polyfill needs Systrace.
no transition scheduled
no underscore equal since it has no concept of Buffers
no viable version found
no-op: The default connection profile can't be deleted.
node are automatically associated with the range
node has arguments and first argument is string
node is null for DataGrid root nodes.
node v0.11.14 bug see https://github.com/facebook/react-native/issues/218
node-uuid - string form
node-uuid - v1 string form
node.js internal scripts have no path, just a filename regular scripts have always a full path (i.e their name contains at least one path separator)
node.value always returns undefined
node/connection link is cleared when the node is deleted
node::ParseEncoding() requires lower case.
nodes referenced by the fragment should not be evicted
non related "allow" option has no effect.
non v8 browsers so we can have a stacktrace
non-Chrome browsers, to check whether a string is in a set, a predicate containing a big ugly `switch` statement is faster than a regular expression, and on Chrome the two are about on par.
non-ascii fields need extended headers long fields get truncated
non-component, just compile as a normal element.
non-npm registries can and will return unnormalized data, plus even the npm registry may have package data normalized with older normalization rules.
non-optimistic updates check for the existence of a generated client ID (from the above `if` clause) and link the client ID to the actual server ID.
non-xml :nth-child(...) stores cache data on `parent`
nonceFunc:             optional nonce validation function.
nopt configuration definitions
nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
normal node, clone it to avoid mutating the original
normal string template
normalize GitHub syntax to org/repo (for now)
normalize float css property
normalize hosted-git-info clone URLs back into regular URLs this will only work on URLs that hosted-git-info recognizes https://github.com/npm/npm/issues/7961
normalize into an array for easier handling
normalize registry URL
normalize registry URL so resolution doesn't drop a piece of registry URL
not a direct alias for IE10 compatibility
not a valid native prop
not a valid semver string, nothing we can do
not an actual buffer we keep track of, but a measurement of how much we're waiting to get pushed to some underlying socket or file.
not blocked by task 1
not collected while hold is active
not conflict with `array-bracket-spacing`
not conflict with `arrow-spacing`
not conflict with `block-spacing`
not conflict with `comma-spacing`
not conflict with `computed-property-spacing`
not conflict with `generator-star-spacing`
not conflict with `jsx-curly-spacing`
not conflict with `key-spacing`
not conflict with `no-spaced-func`
not conflict with `semi-spacing`
not conflict with `space-before-function-paren` not conflict with `space-in-parens`
not conflict with `space-in-parens`
not conflict with `space-infix-ops`
not conflict with `space-unary-ops`
not conflict with `template-curly-spacing`
not doing anything special.
not having an environment is ok
not in big (deletion)
not in small (addition)
not intended for public consumption - generates a queueHooks object, or returns the current one
not listening for removeListener, no need to emit
not quite an LRU, but still space-limited.
not really a tarball, but doesn't matter
not some old 0.x style bundle
not supported in IE 10
not supported in Open Source yet
not supported in android
not sure at this point what kind of writer this is.
not sure what happened, but we'll let the caller deal with it
not when debugging in chrome
note IE8 is being counted as 'modern' because it has the hashchange event
note that raising N higher will mean that the overhead increases, because we're creating more and more watchers.
note that the first line in the comment is not a valid exception block pattern because of the minus sign at the end of the line: `//*********************-`
note that this will only do the normal ustar header, not any kind of extended posix header file.
note the missing 'v' on the arg, it should normalise when checking whether we're on the default or not
note there's no DOM manipulation here at all.
note: ignores next directive
note: repeating space
note: this test simulates an `id`-less root call
nothing changed, so cancel
nothing has changed noop
nothing in the list, definitely empty.
now actually fire up npm and run the command.
now all the children.
now attach the suffixes.
now check if it is a core module
now check if we can move from running to break...
now corrupt it, to find leaks.
now data is the list of data that we want to show.
now download the node tarball
now either drained or ended debug("either draining, or ended", this._bufferLength, this._ended) means that we've flushed out all that we can so far.
now figure out what it would be if the cksum was "        "
now get a minimatch object for each one of these.
now get down to business.
now get what we should have, based on the dep.
now go the other way to make sure we got them all.
now go through and verify that everything in there is a dir.
now go through the list of typeDefs, validate against each one.
now lets find the block it belongs to
now make it start, just in case it hadn't already.
now n is the index of the first one that is *not* a string.
now obj has all the installed things, where they're installed figure out the inheritance links, now that the object is built.
now remove anything that was declared
now remove the max restriction, and try again.
now run the next command in the queue
now see how many args were found at all.
now squish any string of nulls into a single null
now test all matched entries as stand-ins for that part of the pattern.
now try to calculate any deltas
now un-hook, and re-emit the chunk
now update the doc on the registry
now we are left with modules that have dependencies on other modules
now we filter false values and wait for the first true
now we need the extension name out of this thing
now write out the config.gypi file to the build/ dir
now write something to each stream.
npa makes the default spec "latest", but for deprecation "*" is the appropriate default.
npa threw an exception then it ain't git so whatev
npat asks for tap output
npm config set key value npm config get key npm config list
npm help foo bar baz: search topics
npm install-test Runs `npm install` and then runs `npm test`
npm will log a "verbose" message about this when it happens, but it is a rare enough edge case that we don't have to be super concerned about it.
nt.line returns to the current line
nth-* requires argument
null cause (for backwards compatibility with older versions)
null equalityComparer means to always notify
null fragment could be caused by an `if`/`unless` call + a GK
null means "all paths"
null means known to not be present.
null means the proxy has been disposed.
null parent for roots
null/undefined/bool are all omitted
number interpolators Coerce inputs to strings.
number of items in the list
number of pending user-supplied write callbacks this must be 0 before 'finish' can be emitted
number should be a color processed by `normalizeColor` alpha should be number between 0 and 1
numberify any prerelease numeric ids
numeric values, etc, will have already been parsed.
numeric x and y parameters for Expr.filter.CHILD remember that false/true cast respectively to 0/1
object literal computed methods
object literal computed properties
object property options
object start comments
object stream flag to indicate whether or not this stream contains buffers or objects.
object, number, boolean null
object/array default value initializers should be called with the correct `this` context
objects shorter than 30 characters are always inlined objects longer than 60 characters are always splitted to multiple lines anything in the middle depends on indentation level
objects that copy over the new stuffs
occasionally there are duplicates that's an acceptable edge-case.
octal strings supported
of the DirWriter will pause until a "drain" event occurs.
of visible cells per row
off by default the method - as this could be aliased to something else
offscreen, so stop listening
offset 1 for the first removed line.
offset 1 for the new added line.
offset 2 for the 2 lines added.
offset 2 for the 2 lines removed.
offset for the last added line.
offset from onLayout (step1: uncomment)
ok, handle this one, then.
ok, here is the part when JSON is wrong section 7.3, table 3
ok, let's see if we can swallow whatever we can.
ok, try to find out which package it was, then
old bug where we used the wrong regex
old data is an array XOR new data is an array, replace as well
old school shim for old browsers
old vm is already removed, this is the new vm
oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.
oldValue (null for read)
on JSC we need to inject from native for sourcemaps to work (Safari doesn't support `sourceMappingURL` nor any variant when evaluating code) but on Chrome we can simply use eval
on Windows, A/V software can lock the directory, causing this to fail with an EACCES or EPERM if the directory contains newly created files.
on ios, there is a delay after touch event and synthetic mouse events, so that user can perform double tap solution: ignore mouse events following touchevent within small timeframe
on some parent dirs that were created previously.
on/off also work on DOM nodes, registering native DOM handlers.
onClick comes after dragStart and dragEnd events.
onCompleted: Only called if the build completes successfully.
onCompleted: Only called if the install completes successfully.
onDidStopChanging would be another option - any cost is deferred, but with far less fidelity.
onError: If the build fails, calls the Observer with the string output from stderr.
onError: If the install fails, calls the Observer with the string output from stderr.
onExit will only be called if the process completes successfully, i.e. with exit code 0.
onSessionEnd is optional, and is called when all the managed observables complete.
once for each property accessed
once we have a user account, then don't complete anything.
once we have located the function frame we need to strip out everything before it (and its line)
one call for instance, and one for partial
one code unit per symbol
one line and multiline comments
one-shot build optimizes build by asking compiler to build several objects at once, reducing overhead of starting new compiler processes.
only .h header files and the gyp files get extracted
only allow binding on native attributes
only allow new collections to be scheduled once the current one is complete
only assign if different to avoid unneeded rendering.
only available for token-based auth for now
only basejumps require github links
only bump the index if remaining in current directory
only call onreadystatechange if there is something to abort, below logic is per spec
only checks immediate subtrees of the argument
only checks on top-level statements or window.*
only computed methods can fail the following checks
only decrease the index if remaining in current directory
only do a few of these.
only do the magic bundling stuff for the node_modules folder that lives right next to a package.json file.
only do this for text
only exposed for test
only fail if non-interactive.
only flow one buffer at a time
only follow symbolic links directly in the node_modules folder.
only handle real files for now
only handle real files for now.
only include it at this point if it's a bundleDependency
only make non-readable dirs if explicitly requested.
only necessary if parent is not being destroyed as well.
only need to apply the nodot start if the re starts with something that could conceivably capture a dot
only need to compile other attributes for non-fragment instances
only need to handle leaveDone if 1.
only process the first entry
only proxy data events of normal files.
only run if editor present
only show defaults if --long
only skip creation if it's exactly the same link
only strings are valid formatters
only test in Node.js, not browser
only the output of `hg status --ignored`
only the output of `hg status`
only until we can't do better
only works on node 0.6+ Set an additional timeout on the socket, via the `setsockopt` syscall.
open 10 write streams to the same file.
open a subshell to the package folder.
openEditor/closeEditor converts entries to/from editor/uri locations.
opening quotation mark
optimist default API requires you to write the command name three time This is a small wrapper to accept an object instead
optimistic updates need to record the generated client ID for a to-be-created node
optimistically try to PUT all in one single atomic thing.
optimization for moving a single item.
optimized literal, cast it and just set once
optimized super simple getter
option val if it takes an arg
optional deps are folded in.
optional trailling comma
optional user-supplied columns to include
optionalArrayOf checks
options (only warns with the correct callback name)
options configuration is an object
options-argument form
options: options to pass to fs.writeFile
options: options to pass to fs.writeFile  TODO: move to nuclide-commons and rename to writeFileAtomic
or guess it from the filename
or if it's http-reponse
or just emit the charStr
or request stream http://github.com/mikeal/request
or the last identifier in an ObjectPattern destructuring
or throws exception with message.
or try `path` from fs-, request- streams
or we're told to ignore it.
ordinary   - true for everything but function bodies and try blocks.
ordinary - true for everything but function bodies and try blocks.
organize params for patch, post, put, head, del
original is an object
original source github.com/strongloop/loopback-component-passport
originally written by Charlie Robbins, https://github.com/indexzero
other animations are blocked until willEnterCb is called
other types prohibit arguments
otherwise compare fake data
otherwise flow complains
otherwise go to next directory...
otherwise parse json value
otherwise pick last -rc tag alphabetically 0.33.0-rc2
otherwise we warn about it
otherwise, do nothing
otherwise, go to the previous directory...
otherwise, if there are dupes, it'll fail with EEXIST
otherwise, infer local prefix from cwd.
otherwise, just handle in the app-specific way this creates a fs.WriteStream, or mkdir's, or whatever
otherwise, this simple logic will do in most common cases.
otherwise, use KO's own parsing logic.
our loop keyword was actually either in a string or a property, so let's exit and ignore this line
outer scope's and inner scope's.
outer variable overrides inner default
output no more than 70 characters before the wrong ones
output no more than 78 characters on the string
output should be missing the id fields
output the entire current chunk.
over and underflow not realistically a concern: V8's getTime() seems to store something larger than a 32-bit time_t (even with 32-bit node)
overridden in Extract class, since it needs to wait for its DirWriter part to finish before emitting "end"
overrides the .editing margin rule
oversized objects fall out of cache automatically.
overwrite only the `get` operator of the ".length" property
overwrite row c1 with respect to the linkage type
p always starts with a 1 bit, so count the zeros to get its real size.
package config is picked up from env
package.json files can never be ignored.
package.json main file should never be ignored.
packager can't handle absolute paths
packager is running from node_modules of another project
packages to be loaded have been passed in from the command line or shell.
pad the end with zeros, but make sure to not forget the extra bytes
pad x so am has enough room later
pageVisibility API is supported in IE10+, same as CSS transitions.
pagesize is always the debuggee pagesize which currently defaults to 32.
panX is linked to the gesture
params also has properties: ownProperties generatePreview
parens are required around yield
parens/computed properties
parentInfo should always be present except for the top-level component when server rendering
parentheses are a pain
parse a component of the expanded set.
parse as a standard JSON mode
parse global comments and modify config
parse out any deps from the file
parse provided url if it's string or treat it as options object
parse(stringify(x)) should be equal x with JSON functions it is not 'cause of undefined so we're fixing it
parse(text, options) or parse(text, reviver)  where: text - string options - object reviver - function
parsing just a piece of a larger pattern.
part does not ignore bad value
pass along options.knownLength
pass along which branch contains latest version so that gh-pages root could mark it as latest
pass cli arguments after -- to script.
pass env + BOWER_PID so callees can identify a preinstall+postinstall from the same bower instance
pass in any extended headers These ones consumers are typically most interested in.
pass in the owner fragment of this component.
pass the rename timeout.
pass, will use default getters.
passed in from compiler directly
passed in one, but it's not the right one.
passing an empty string as a 3rd parameter to .css will automatically attempt a parseFloat and fallback to a string if the parse fails so, simple values such as "10px" are parsed to Float.
passing destroying: true to avoid searching and splicing the directives
path.relative() does something similar, but it requires a baseDir (`from` argument).
path: the path to the file to read options: options to pass to fs.readFile.
pathFromSubscriptionRootToSubscriptionPath
paths between 100 and 255 should use the prefix field.
paths less than 100 chars don't need a prefix and paths longer than 255 need an extended header and will fail on old implementations no matter what we do here.
pattern *starts* with some non-trivial item.
pattern has some string bits in the front.
pause() and resume() are remnants of the legacy readable stream API If the user uses them, then switch into old mode.
paused mid-emission")
payload:               optional payload for validation.
peer dev deps should both be not extraneous.
pending state has been applied
pending state queue is processed
pending state queue is processed before-setState-receiveProps never called, due to replaceState.
perform real require() by invoking the module's registered function
performance testing id, unique for each component mount cycle
performs a server update).
perpendicular projected distance
persist the cache to disk
persist the error (user dismissable)
persist this event because we need to store it
physical touch during bounce ...
physical touch starts ...
pipe() normally pauses the writer when the reader errors (closes).
pipedArgs array of strings as arguments.
pipedCommand string a command to pipe the output of command through.
piping to a multi-compatible, and we've got directory entries.
plain-English description of the following regexp: 0.
pluck off the close-brace
plural fields must be refetched through the parent get linked records to verify the client id
plural items must be refetched through the parent plural field get field to verify the client id is correct
point compression not supported yet
poll for some ms for the lock to clear
populate the store and record the original tracked queries
position verlet integration
possibly an error object.
post-transition state
preassign only if we have a default
predef is deprecated and being replaced by globals
prefer current node interpreter in child scripts
prefer explicit URLs to pushing everything through shortcuts
prefer to return the chmod error, if one occurs, but still try to close, and report closing errors if they occur.
prefix is special, since it might signal the xstar header
premajor and prepatch work the same way.
preminor will bump the version up to the next minor release, and immediately down to pre-release.
prepare cache to reduce chances of possible red screen "Can't fibd variable __fbBatchedBridge..."
prepend shouldn't affect 'last' call
preprocess textareas.
preprocessNode might have removed all the nodes, in which case there's nothing left to do
presence of .git file implies folder was not overwritten
preserve output symmetry by adding a whitespace-only line at the end if there's one at the beginning
preserve reference to _data so that proxy accessors still work.
pretending to be another platform is too hacky, since it breaks how the underlying system looks up module paths and runs child processes, and all that stuff is cached.
prettify and print it, and then provide the raw data to the cb.
prevInput is a hack to work with IME.
prevent a newline from being immediately inserted
prevent duplicate events Updates locations of any touches in locations0.
prevent final callback from calling itself if it errors
prevent from getting extra .
prevent highlight of division
prevent maybe-sync zalgo release
prevent messing with the input when user is typing, and force update on blur.
prevent repeated calls to `global.nativeRequire` to overwrite modules that are already loaded
prevent serialized null/undefined from breaking things
prevent trailing / from being stripped during typing
prevent transition skipping
previous cafile no longer exists, so just continue on gracefully
previous centroid of now actively moving touches.
previous token isn't a separator, so need to insert one
previousItemToken will refer to the last token not belonging to the current item, which could be a comma or an opening square bracket.
print `id` but filter from output
print directly to stdout to not unnecessarily add blank lines
prior to -headers.tar.gz
private utility functions
prng4.js - uses Arcfour as a PRNG
probably don't have subsecond resolution.
process each pattern in the minimatch set
process initial config to make it safe to extend
process the mapped args into "command" objects ("name" and "args" props)
process the queue regardless of a transition
process user's style guide of choice and return an appropriate config object.
project conf not found, probably working with packed npm
promote the case of making the whole match in the filename
properly set maxSockets on new agents
property is also supported for OpenGraph in meta tags.
property_value returns the outer property, we want the children ...
props could contain dashes, which will be interpreted as minus calculations by the parser so we need to camelize the path here
props is the desired state.
props is the props of the thing we need to write an extended header for.
props is what we want to set.
props must be linked in proper scope if inside v-for
protects even the worker scope from being accessed
protocol missing last slash
provider to id to messages.
proxy all the other methods.
proxy certain important events.
proxy data on instance
proxy keys not already proxied, and trigger change for changed values
proxy up some events.
pseudo-private values.
publish can complete to a folder with a package.json or a tarball, or a tarball url.
pull off the device/UNC bit from a windows path.
purposely shutdown server pm2 should restart this in production
push content below nav bar
push on the followers
push self into parent / transclusion host
push watcher into appropriate queue
put more stuff on here to customize.
put that good code in getHeaders to some use
put the random bytes there
queries and mutations
question released under threshold
queued records are updated: edge/node added
quick and dirty detection for cyclical structures
quoted string have a maximal length of 2k under vc.
ran out of file, but still had pattern left.
ran out of pattern and filename at the same time.
ran out of pattern, still have file left.
range updated because an edge had a change
ranges of * ALWAYS count as a match, because when downloading we allow prereleases to match * if there are ONLY prereleases
rawAsap provides everything we need except exception management.
re-export built-in assertions
re-export standard assert
re-read and increment/decrement GC ref counts
re-renders are obvious
react-native-cli is installed globally on people's computers.
react-packager logs debug messages using the 'debug' npm package, and uses the following prefix throughout.
reactMountReady is the our only stateful wrapper
read all directives recognizes a simple form of asi, but always warns, if it is used
read data and increment GC ref counts
read data and set up subscriptions
read it all, truncate the array.
read it as a missing dep
read just some of it.
read the file, and then call addIgnoreRules if there's an error, then tell the cb about it.
readJson filters out empty descriptions, but init-package-json traditionally leaves them alone
readJson.extras(file, data, cb)
readable (asyncFunction) return a stream that calls an async function while the stream is not paused.
readdir() the node-gyp dir
readdir, then do the file stuff on ENOTDIR
reading a tar is a lot like reading a directory However, we're actually not going to run the ctor, since it does a stat and various other stuff.
readme files should never be ignored.
reads should return undefined
really don't want to have this lying around in the file
really long trailing comment",
really-long-package-names-------------------------------such--length-----many---wow the thisisareallyreallylongpackagenameitshouldpublishdowenowhavealimittothelengthofpackagenames-poch.
reassign to preserve type information in below closure
rebuild if: not a .folder, like .bin or .hooks
recalculate column widths from truncated output/lines
recognize in local context.
recognize in other context.
recompile the line with the reset **just** before the actual loop so that we insert in to the correct location (instead of possibly outside the logic
record before-push error stack in debug mode
record the create/update only if something changed
recurse this function so we don't reset allParents and allChildren
recursively find a file...
redboxes early, e.g. for 'arraybuffer' on ios 7
reduce only has a series version, as doing reduce in parallel won't work in many situations.
ref holder for the scope
reflow if no explicit js callback is provided 6.
refuse to run actions for failed packages
regLineChange (below) registers single-line changes.
regardless of type, store the un-filtered raw value.
register composite unlink function to be called during instance destruction
registry-frontdoor cares about the access level, which is only configurable for scoped packages
registry.get(name) 2.
registry.get(name/version) 2.
regression, see https://github.com/substack/node-optimist/issues/71
regular property assignment
relative error within epsilon
relativePath is undefined if watchRoot is the same as directoryPath.
release, package will be installed by default
remote resolver tests
remove all if no version specified
remove any bins/etc, and then delete the folder.
remove by identity, in array
remove by identity, not in array
remove bytes belonging to the current character from the buffer
remove color swatch and the like
remove config so doesn't appear on every column.
remove from the cache first
remove modal keybinds on close
remove old files from the site
remove optional dependencies from dependencies during --save.
remove parser from config if it is the default parser
remove query string if any
remove readme unless we asked for it
remove ref, same as above
remove reference from data ob frozen object may not have observer.
remove self from parent.
remove self from vm's watcher list this is a somewhat expensive operation so we skip it if the vm is being destroyed or is performing a v-for re-render (the watcher list is then filtered by v-for).
remove shebang comments
remove the '.' for directory naming purposes
remove the autogenerated `id` field
remove the banner, we just care about the last line
remove the callbacks, maintaining the invariant that there should be no empty maps or sets in this._callbacks
remove the entire substack, to avoid duplicate reports
remove the entry from the cache
remove the old listener, if any (with copy-on-write)
remove the root `id` field
remove the single quotes before calling JSON.parse
remove this package from the global space, if it's installed there
remove trailing comma in multiline if asked to
removing comma in arrays and objects
removing something, so going backward
render to observable stream
replace and initialize factory
replace dash with space
replace old value with a new one (or deleting something)
replace the pipe method with a new version that will unlock the buffered stuff.
replace the placeholder with proper anchor
replace with repeat in future
replacement for python's dict.get function -- need easy default values
replacer and space are optional
repoPath The path/uri to the repository (.hg folder).
report the unpublish error if this was a retry and unpublish failed
request times out in 2 seconds
request to take 5 seconds to load
request will not pay attention to the NOPROXY environment variable if a config value named proxy is passed in, even if it's set to null.
require BackAndroid so it sets the default handler that exits the app if no listeners respond
require all test files
require calls are extracted with a regular expression.
require.resolve it so we fail fast if it ever goes missing.
required for devtools to be able to edit react native styles
required to pass through certain key events
requires AccessToken.belongsTo(User)
reserved key should not be deleted
reset async asyncQueue
reset because shorthand default was used correctly
reset directives before every capture in production mode, so that when unlinking we don't need to splice them out (which turns out to be a perf hit).
reset end anchor position in case the position was messed up by an external drag-n-drop library.
reset our regexp each time.
reset the cursor styles
reset the style to their default state
resize the cache when the lengthCalculator changes.
resize the cache when the max changes.
resolve deps by returning the dep in the nearest "deps" directory
resolve filename based on options.cwd (for reporting, ignoredPaths also resolves)
resolve just like Node.js
resolve slot distribution
resolve stack traces to a plain string.
resolve when we played the last frame otherwise, reject
resolve with a different location
resolved data did not change
resolves chains of symlinks of unlimited depth, returning a list of paths it's seen in the process when it hits either a symlink cycle or a non-symlink
response.resume should be defined, but check anyway before calling.
restore console.log()
restoring the record calls onNext
restricted name of A-Z / a-z
results are written to `queuedRecords`
results are written to `records`
results is for internal usage only
results show looking glass icon and recent searches on input search fields in WebKit/Blink
retry forever, only keep last error
return -1, 0, +1 when a is less than, equal, or greater than b
return a css property mapped to a potentially vendor prefixed property
return an array of property AST nodes
return bigint initialized to value
return first challenge if no id is given
return mine that they're not already on.
return new, unset BigInteger
return null, unless we've ended.
return number of 1 bits in x
return previously selected bobble to rest position
return the current listener, if any
return the first of path, where target (or anything it symlinks to) isInside the path (or anything it symlinks to)
return the intersection
return the unlink function that tearsdown context container directives.
return true for shouldComponentUpdate
return true if it's a proper object throw otherwise
return whatever was printed
returnedSegments and thrownSegments push elements into finalSegments also.
returning +inf or -inf
returning value is a substitute of 'super()'.
returns - a promise fulfilled when the expand operation is finished
returns an observable
returns bit length of the integer x
returns user document, n users per loop where n is the batchsize.
reuse a cached remote when possible, but nuke it if it's in an inconsistent state
reuse the previously hashed config if the config hasn't changed
reverse apply because it's sorted low to high
reverse so lead on top
reverse so leader is on top
rewind because we don't know first char
rewrite all paths pad 1 space here becaue the regex matches 1 extra char
rgba requires that the r,g,b are integers....
rightHandSide is a vector, or point in 3d space relative to the origin.
rightHandSide is the right hand side of the equation.
rimraf.sync chokes here for some reason
rm tmp/random Adding a url: 1.
roll-back the install if anything went wrong
room is always in PascalCase
root children fetcher
root is always compiled per-instance, because container attrs and props can be different every time.
root was expanded, selection shouldn't change
round up the staleness indicator.
round up to the nearest block size
route `b` and `c` are no longer in the stack.
rowData is an array of images
rs_signFunc-based RequestSigners have to build up their entire signing string within the rs_lines array and give it to rs_signFunc as a single concat'd blob.
rs_signer-based RequestSigners can add a line at a time to their signing state by using rs_signer.update(), thus only needing to buffer the hash function state and one line at a time.
rulesConfig support removed in 2.0.0, so this should have no effect
run checks for unsafe code
run package lifecycle scripts in the package root, or the nearest parent.
run promise callbacks
runAllTimers doesn't actually run all timers with nested timer functions inside Promises, so we have to call it extra times.
running from within assets, no offline path to use
safeguard against resetting a previously defined array by accidentally forgetting the brackets
same as dependencies but for dev deps
same canonical ID, but the data, call(s), route, and/or variables have changed
same commit hash on purpose
same data as previous test, just using nested constructors
same id, route, variables, and data
sanitize column settings
save a reference to these nodes so we can remove later
save config so rules can access as necessary
save creating a proxy, by stat'ing the thing now.
save existing configs, but yank off for this PUT
save selector to cache
save strings and object literal keys
save the callback name for future use
save the number of maintainers before mutation so that we can figure out if maintainers were added or removed
save the number of the first of the last blank lines
save user does nothing if user does not exist
saves to localStorage
scalar values are converted to strings
scale when we started touching
scan index for next number in b
scope.object.description shows on RHS
scope: if this is inside an inline v-for, the scope will be the intermediate scope created for this repeat fragment.
scoped packages get special treatment
scriptURL is falsy, we have nothing to go on here
scripts is not an object, so it should be deleted
scripts is true for back-compat Intentionally let the error be thrown if parseHTML is not present
scrollTop is in Pixels
search and apply "eslint-env *".
search for the latest package
searchInContent should call back later.
see also react-native.js
see if any new things have been added.
see if it's a shorthand if so, splice and back up to re-parse it.
see if it's in the doc.
see if the parent section is also an object.
see if there's already a package specified.
see if there's anything else
see if this one itself matches
self and source are DEV only properties.
semi-private api, used by sshpk-agent
send authorization 3.
send errors to the client instead of killing packager server
send the query position request code to stdout
send welcome email to new camper
sendServerMessageToChromeUi takes a string and sends it to the chrome debugger UI.
sends notification email is user has all three certs if not it noop
sentinel value for end-of-file
sentinel value for end-of-line
separate modules we need to preload from the ones we don't
serialize body and append serialized refs to response
seriously, unlink throws when the file doesn't exist :(
server/client version mismatch -- this kills the server
set by the CookieJar:
set date fields to be a proper date
set dirname and process if not passed in this facilitates regression tests
set email varified false on user email signup should not be set with oauth signin methods
set existing key, should be a plain set and not trigger own ob's notify
set gid on extraction
set here so sendCertifiedEmail works properly not used otherwise
set initial value if present
set new value, return old value
set on the swapped object
set order of some sections explicitly
set persisted text anchors to empty
set restricted deletion flag on dirs on extraction
set returns old value
set salt factor for passwords
set some convenience properties as well.
set the child initial value.
set the cookie if it's domain in the href's domain.
set the default_configuration prop
set the env variables, then run scripts as a child process.
set the globalconfig in the userconfig
set the ignores just for this test
set the node development directory
set the target_arch variable
set the type so that we know what kind of file to create
set the userconfig in the env unset anything else that npm might be trying to foist on us
set this flag so that event handlers don't inadvertently get multiple _read() calls running.
set this to prevent trying to _read() again in the stat time.
set to true if you only want to report errors
set to true if you want to force buggy CSP in Safari 5
set to true if you want to set all headers
set uid on extraction
set unlimited listeners (see https://github.com/eslint/eslint/issues/524)
set up data events if they are asked for Ensure readable listeners eventually get something
set up the build dir and DLL name
set user.rand to random number
setFavoriteColor('blue')
setHtml will unwrap the value if needed
setState()'s only enqueue pending states.
setting out of bound index
setup directive params
setup event system and option events.
setup in componentDidMount
setup primitive classes to be JSON Schema types
setup two-way binding
setup web socket TODO: Assign random port rather than using fixed port.
severity is first element, option is second
share object handler with v-bind:class
shared config for all unit tests
shared with ssh format
shebangs and directives are optional
shell-escape does not wrap ancestorExpression in quotes without this toString conversion.
shell-quote returns objects for things like pipes.
shift arguments if data argument was omitted
shift arguments to left by one
shift generates too much garbage.
shim for using process in browser
short names for common things
short-circuit in the case of busted things.
shortcut -- cur is exactly long enough, and no offset.
shortcut for names that are not vendor prefixed
shortcut key for hyperclick:confirm-cursor
shortcut: comments match nothing.
shorthand for specifying details directly in addResult().
shorthands never take args.
shoud not change the value
should allow a comment directly between `var` statements
should allow a comment on the next line in "never" mode
should allow another `var` statement to follow without blank line
should allow comments on the next line followed by a blank in "always" mode
should allow comments on the next line followed by no blank in "never" mode
should allow inline comments after the `var`
should allow no blank line at end of block
should allow no blank line in "never" mode
should allow no line break in "never" mode
should allow one blank line in "always" mode
should allow trailing whitespace after the `var`
should allow two or more blank lines in "always" mode
should already be established as a Directory type
should already be established as a File type
should already be established as a File type XXX Todo: preserve hardlinks by tracking dev+inode+nlink, with a HardLinkReader class.
should already be established as a Link type
should be a multiple of the no.
should be able to read
should be array-like.
should be deep watch on object mode
should be impossible.
should be no space after arrow
should be no space before arrow
should be set before gitter script loads
should be space(s) after arrow
should be space(s) before arrow
should be the same reference
should be unreachable.
should call underlying setter
should disallow a comment on the next line that's not in turn followed by a blank in "always" mode
should disallow blank lines in "never" mode
should disallow no blank line in "always" mode
should disallow no line break in "always" mode
should fall out immediately
should get no more entries after end
should handle ES6 `const` block binding
should handle ES6 `let` block binding
should handle a mix of `var` or `let` inside for variations
should handle a mix of `var`, `let`, or `const`
should handle export specifiers
should handle one/no blank before case.
should handle single `var` statement with multi-line declaration
should handle single `var` statement with multiple declarations
should have correct order
should have no update calls
should have observed data
should ignore a `var` with no following token
should ignore deleting non-existing key
should make a copy of original array
should mutate the DOM in-place
should never get here
should not be allowed in regexp literals
should not be converted
should not be evaluated again
should not have ended nicely, since we returned an error
should not have parens so it can be treated as a simple path by the expression parser
should not inherit default object properties
should not propagate by default
should not switch to this
should only contain argv
should only fire parent detach
should return existing ob on already observed objects
should return false for max exceeded
should return the first dir created.
should skip rule entirely
should stop transform from looking at fields/fragments
should stringify numbers
should switch without the need to emit because of keep-alive
should sync inline-checked value to a
should trigger an immediate resize
should trigger on self, but not propagate to root
should trigger only once callback, because it was in the same event loop.
should work on Object.create(null)
should work on arguments
should work on non-observed objects
should've walked children
shouldComponentUpdate shouldn't be called since we're forcing
show any hidden elements after setting opacity to 0
show the sample datatip for every type of file
show this datatip for every type of file
show user that no viable version can be found
showSearchPanel gets called when changing providers even if it's already shown.
show_hidden allows the client to request data from private class members.
shutdown mock npm server.
shutdown mock registry.
signalLater looks whether there are any handlers, and schedules them to be executed when the last operation ends, or, if no operation is active, when a timeout fires.
similar to --strip or --strip-components
similar to chmodr except it add permissions rather than overwriting them adapted from https://github.com/isaacs/chmodr/blob/master/chmodr.js
simple options configuration with just a string
simple, complete or average
simulate a Flow crash
simulate a server response with different data
simulate a slow write operation
simulated annealing, basically
since it's *not* a symbolic link, if we're *already* in a bundle, then we should include everything.
since some of them *might* be directories, we have to run the match in dir-mode as well, so that we'll pick up partials of files that will be included later.
since the file passed we store the result here TODO: check this as we might not need to store the successful runs as it will always should be 0 errors and 0 warnings.
since the value of the parameters are  unknown during parsing time we set the value to `undefined`.
since there is no setter, you shouldn't be able to write to it PhantomJS throws when a property with no setter is set but other real browsers don't
since this isn't an install these won't get auto-built unless they're not dependencies.
since we are in immediate mode, only call the param change callbacks if this is not the first update.
single component: custom element
single nested component
single quoted strings
singleValue: false, objectsInArrays: true, arraysInArrays
singletons in here (setTimeout blah blah).
size ignored because no variables are passed into the fragment
size is special, since it signals when the file needs to end.
size of symbol in square pixels
skip CSS transitions if page is not visible - this solves the issue of transitionend events not firing until the page is visible again.
skip _not_ specified properties
skip a variable of class itself name in the class scope
skip any setter argument
skip check of empty switch because there is no easy way to extract comments inside it now
skip flattening to check fragment structure
skip function expression names and variables marked with markVariableAsUsed()
skip if already deleted
skip if method doesn't match.
skip if no har property defined
skip if no matches at all
skip if the builder already exists
skip if there are no js hooks and CSS transition is not supported
skip if there is nothing to wrap
skip ignored parameters
skip ignored variables
skip implicit "arguments" variable
skip marked text nodes
skip next character inside string
skip over any that are escaped.
skip over symbolic links
skip over the next line
skip over the next line, and the line after it.
skip the boolean and the target
skip the global header if we're not doing that.
skip the regexp for non-magical patterns unescape anything in it, though, so that it'll be an exact match against a file etc.
skip transitions for initial compile
skip v-else (when used with v-show)
skip v-else block, but only if following v-if
skipZeros: Don't use empty key latency values in aggregates.
slice is based on length no wcwidth
slice is the same for buffers and strings.
slice off each field.
slice out the piece of cur that we need.
slice, just return a full concat
slight hack: change the presented index for a moment in order to transitionTo correctly
small helper function to determine whether to mark something as new
small range is extended by default
sn2 not created since the value is unknown in the cache
so JSON.stringify() works
so it doesn't try to install into npm's own node_modules
so let's not break that.
so the "fail" one would still pass.
so we can override Date.now in tests, and use deepEqual
so we can use deepEqual in tests
so we have to lstat here and make sure it's not a dir.
so we only need to check the difference between alias types and non-return types.
so we want to round them, but we *dont* want to round the opacity (4th column).
sockets not supported
solution is to crack them and let the compiler concat them implicitly
some files are *never* allowed under any circumstances (VCS folders, native build cruft, npm cruft, regular cruft)
some invalid regexp stuff in the set.
some kind of semver range.
some methods have options object arguments.
some people escape those, so I'd copy this to be safe
some really cheesy monkeypatching
some time elapses ...
someday use eslint-disable-line here",
somehow casper.sendKey() option reset:true doesn't work
someone's got this one.
something other than "currently locked" maybe eperm or something.
something other than ** non-magic patterns just have to match exactly patterns with magic have been turned into regexps.
something with the data.
sort ascending by x-coord first, y-coord second
sort by line and column
sort in reverse order of occurrence
sort on a copy to avoid mutating original array
sort results by number of results found, then by number of hits then by number of matching lines
sort the array numerically ascending
sort them lexicographically, so that they're next to their nearest kin
sort two keys with order
sorting of S5.4 part 2
space between path segments
space in bracket identifiers
special attribute: transition
special binding prefixes
special case for `do` loops, as they're end with `while`
special case for leading zero: 0.123456
special case when inside a connection traversal
special case: end of file
special case: end of line special case: quotes
special case: last token before EOF
special for hardlinks from tarballs
special handling for ProxyReaders
special little thing for handling hardlinks.
special, done below, after all the others
special, this is an extension of the "path" field.
specify a custom cache file
specifying cache true the cache will be created
spies for various AST node types
spit out variable definitions
split (honors line-ending)
split author on whitespace or ,
split diff nodes into root queries
split into array of characters for easier manipulation
split keywords on whitespace or ,
split long words so they can break onto multiple lines
split missing `edges` fields into a `connection.find(id)` query if `find` is supported, otherwise warn
split missing `node` fields into a `node(id)` root query
spring each bobble to its spot
spring to start after decay finishes
spy_fileA experiences no change.
spy_fileA, spy_project, and spy_allMessages are called with data from the initial state and updateA2.
spy_fileB is called from updateB.
spy_fileB is called with data from the initial state.
spy_project and spy_allMessages are called from data from the initial state and from updateB.
src could be a string, so check for array
ssh port of host nuclide server is running on
stablize the subscriber list first
stale: boolean When `forceFetch` is enabled, a request is always made to fetch updated data.
start from the root object and mark as non-extraneous all modules that haven't been previously flagged as extraneous then propagate to all their dependencies
start out asking for a readable event once data is transformed.
start the ball rolling.
start the flow if it hasn't been started already.
start the next in the queue if the last step wasn't forced timers currently will call their complete callbacks, which will dequeue but only if they were gotoEnd
start unzipping and untaring
start walking the dir, and emit an "entry" event for each one.
start where sticker animated to
start with HAR, then override with additional options
start() is called once we are ready to send the outgoing HTTP request.
start/end are column indices.
startIndex represents the index of the first element in the range.
starting from a root object, call findUnmet on each layer of children
startup, ok to do this synchronously
stat the thing to see what the proxy should be.
state for avoiding false triggers for deep and Array watchers during vm._digest()
state variable to know if it is a lone identifier, or a destructuring statement.
state.overlay.combineTokens always takes precedence over combine, unless set to null
stderr is automatically piped from the gradle process, so the user should see the error already, there is no need to do `console.log(e.stderr)`
stderr string The contents of the process's error stream.
stdin string The contents to write to stdin.
stdout and stderr are emitted when DBGP sends the corresponding message packets.
stdout and stderr are split by newlines.
stdout should be empty, because we only have one, optional, dep and if it fails we shouldn't try installing anything
stdout should hopefully be set to line-buffering, in which case the string would come on one line.
steal them back, don't break the lists
step 1: figure out negation, etc.
step 2: expand braces
step 3: now we have a set, so turn each one into a series of path-portion matching patterns.
step before reporting initial status to get to the first instruction.
still have to emit end so that dir-walking can move on.
still need to fetch file size from fs
still no transition scheduled
still the same group",
still valid subscriptions
stmt       - true if block can be a single statement (e.g. in if/for/while).
stop climbing as soon as we hit
stop existing session.
stop here and allow anything the bundled pkg allows
stop subsequent errors hitting callback multiple times
stopKeyClock is fast so attaching it to onDidChange here is OK.
stopWatching() should be a noop here but we call it just in case we missed a blur event somehow.
store className if set
store directives on node in dev mode
store lines that appear empty but really aren't
store resolved props info
store state if its toggle - enables .stop().toggle() to "reverse"
store the `process.env` object as a non-enumerable `_env`
store the ready callback for view-a
stores highlight worker timeout
stores maps added by addKeyMap
storing the index from the file_list
storyCount: storyCount * batchSize
stretch - The image will be stretched to fill the entire frame of the view without clipping.
string constants and placeholders
string or integer basically
string preceding current number in b, if any
string rather than NuclideUri because this module will always execute at the location of the file, so it will always be a real path and cannot be prefixed with nuclide://
string with escaped quotes
stringify(value, options) or stringify(value, replacer, space)  where: value - anything options - object replacer - function or array space - boolean or number or string
strip nonalphanumarics chars except whitespace
stub out Config to use stub config file
stub out config file to use stubbed plugins
style values shouldn't contain a semicolon
styles moved to the top of the file so getDefaultProps can refer to it
subsequent reconnections can still succeed.
suffix exists, make sure someone didn't purposely put the suffix there by checking against the actual text associated with the node
sunos lets the root user unlink directories, which is...
support "item in/of items" syntax
support for inheriting config env variables from npm
support legacy functions
support legacy syntax
support nested comments
support varags, but simply cast to string in case there's only one arg
suppress 'create' output generated by yeoman
suppress error printing
suppress log printing A process that lasts ten seconds.
suppress warnings about using a prerelease version of node
swallow any state char that wasn't consumed
swap the params array with a fresh object.
swappable if display is none or starts with table except "table", "table-cell", or "table-caption" see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
switch into hardlink mode.
switch to 1-base instead of 0-base
swizzle in our custom cache invalidation logic
symbolic links are not allowed in packages.
synchronous callback, no zalgo
syntactic elements, and recursively calling those, each function advancing the input stream and returning an AST node.
t.equal("",msg) // uncomment to have some kind of logging of warnings
t15 left as is first car
t6913624 tracks cleanup of this.
t7114196: Given the current implementation of HgRepositoryClient, each root directory will always correspond to a unique instance of HgRepositoryClient.
t7542202: fix this test and re-enable it
table format: - table_length: uint_32 length of all table entries in bytes + the table length itself - entries: entry...
table no leading pipe (gfm)
take a header chunk, start the right kind of entry.
take a little shortcut and use npm's arg parsing logic.
taken from https://github.com/cemerick/jsdifflib
taken from https://github.com/isaacs/chmodr/blob/master/chmodr.js
takes in an array of links, which are strings for each key value, push the corresponding link from the MDNlinks object into a new array
takes precedence over expires for TTL
tar archives have 7573746172 at position
tar into tmp/random/package.tgz 2.
tar tmp/random/contents/package to cache/n/v/package.tgz 4.
target is a window object
teardown all directives.
tell gyp to write the Makefile/Solution files into output_dir
tell make to write its output into the same dir
tell request let body be Buffer instance
tell the dest that it's being piped to
temp double validation
test array with objects
test changing the max, verify that the LRU items get dropped.
test for 8-bit control characters
test for singularity of upper 3x3 part of the perspective matrix
test getters without being "set"
test if name starts with hike/waypoint/basejump/zipline fix for bug that saved different challenges with incorrect challenge types
test immediate invoke
test indentation only if statement is in new line
test invoke the wrapped fn
test number soft equal
test off something that's already off
test partial parsing in the presence of comment/negation chars
test setters, followed by getters
test swapping the array
test that log objects proxy through.
test various flag settings.
test without the globstar, and with every child both below and replacing the globstar.
testerDefaultConfig must not be modified as it allows to reset the tester to the initial default configuration
text only, return a single text node.
text/html ignores the first character in these tags if it's a newline Prefer to break application/xml over text/html (for now) by adding a newline specifically to get eaten by the parser.
text: this._request.content // TODO: pull out into a boolean flag, as content can be huge (and needs to be requested with an async call)
textarea treats its text content as the initial value.
the /path/to/node_modules/..
the URL comes in exactly as it was passed on the command line, or as normalized by normalize-package-data / read-package-json / read-installed, so figure out what to do with it using hosted-git-info
the `id` here is a non-requisite id field
the actual outgoing request is not started until start() is called this function is called from both the constructor and on redirect.
the address record has no id but should reuse the previously generated client id
the amount that is being written when _write is called.
the bad thing will happen
the bearer token is enough, don't confuse things
the best row score so far
the better to repl you with
the bigger the slower, but safer
the builder function to wrap with builders.ExpressionStatement
the builtin config is "sticky".
the callback that the user supplies to write(chunk,encoding,cb)
the callback that's passed to _write(chunk,cb)
the checking condition is set as last parameter, and the trigger function is called in a stored callback.
the column number in the original source.
the connection or an intermediary fragment
the count of uncompleted subordinates
the current line number
the current row score
the current target watcher being evaluated.
the current word has a dash.
the debug module is configured globally, we need to enable debugging before* requiring any packages that use `debug` for logging
the delay here is to give code within the iframe control to run
the desired order isn't necessarily a correct dependency specific order so we ensure that below
the directory where the dev files will be installed
the else block should be compiled in child scope
the email of the requested user
the extended header from omega tar.
the false_name-test-package has the name property 'test-package' set in the package.json and a dependency named 'test-package' is also a defined dependency of 'test-package-with-one-dep'.
the files that we expect to not see
the filter regex check might give false positive for pipes inside strings, so it's possible that we don't get any filters here
the first block of text before the first heading that isn't the first line heading
the first directory entry is ok
the first line was removed.
the first script tag here is to proxy jQuery We use the same jQuery on the main window but we change the context to that of the iframe.
the following have npm defaults, and need to be explicitly overridden
the fragment may be null when `if` or `unless` conditions are not met.
the function passed is called after the animation is complete
the global header and root fixtures/ dir are going to get a different date each time, so omit that bit.
the handler that waits for readable events after all the data gets sucked out in flow.
the index of the last comment that was checked
the item was created without expiration in a non aged cache
the list contains the Hit objects as the entries.
the lru should drop it after 100 entries
the module exists as a dependent, but the version doesn't match, so a new copy will have to be installed above here
the name is "Symbol(something)"
the name is definitely scoped, so escape now
the name is in a block scope
the name is in a block scope.
the name itself takes precedence
the no-half-open enforcer
the noGlobStar pattern exits the inGlobStar state
the number of writers that are awaiting a drain event in .pipe()s
the only files we expect to see
the order in which the RFC has them:
the output of `hg status --all`
the package before this one.
the parent connection
the parent connection or an intermediary fragment
the parser may not call write if _abort is true.
the pieces of data we've previously queried for and have therefore written to the store).
the point at which it stops calling _read() to fill the buffer Note: 0 is a valid value, means "don't call _read preemptively ever"
the point at which write() starts returning false Note: 0 is a valid value, means that we always return false if the entire buffer is not flushed immediately on write()
the polygon does not (cumulatively) wind around it, but has a negative (counter-clockwise) area.
the previous configuration used
the range no longer returns this edge
the range still contains this edge
the raw data can be circular
the reconnection fails on startup 3.
the reference is expanded with overridden query variables
the root element that will be compiled
the root is dir2's parent
the root is the topmost node
the same set of keys (although not necessarily the same order),
the second line is newly added.
the sequence continues until the end.
the sole purpose of `deferCleanup` is so that we can "deactivate" the vm right now and perform DOM removal later.
the standard loops - note that recursive is not supported
the symlink file is excluded from git, because it makes windows freak the hell out.
the temp access token to allow password reset
the text-directive should've been removed.
the times will almost *certainly* have changed.
the top level is a bit special.
the transition is already done (synchronously called by the user, which causes this.op set to null) 2.
the value is an array, it should produce a URI like /Table/(4,5,8) and store.get() should handle that as an array of values
the various stateChar values for the "extglob" stuff.
the view being send will have a short timeout and a redirect
the winding number counter
the year-value is less than 1601
then `buffering` is true, then `write()` calls are buffered in memory until `flush()` is invoked
then add to the end any remaining packages that werent in bower.json
then its descendants, where applicable
then remove the nulls.
then should be retrieved only once
then write to each of them, and to the target and verify at the end that each of them does their thing
then, blame someone else
then, filter the list based on our ignoreRules
then, slam the door in their face
then, we'll expand the suffix.
there are invalid spaces in columns 15 and 16
there are many cases where the instance must become a fragment instance: basically anything that can create more than 1 root nodes.
there are more fields to deal with.
there are plenty of other tests to verify that publish itself functions normally.
there are some very rare and pathological edge-cases where a cycle can cause npm to try to install a never-ending tree of stuff.
there are two scenarios where we can proxy a data key: 1.
there could be an invalid regular expression string
there is a next code unit
there is no global scope at all
there is no safe way to do a one-step clone to a treeish that isn't guaranteed to be a branch, so explicitly check out the treeish once it's cloned
there is no state when getInitialState() is called
there is the current segment in progress.
there may be a saved scope and no --registry (for login)
there was some kind of error, reinstate previous auth/token/etc.
there's a lot of state associated with an "install" operation, including packages that are already installed, parent packages, current shrinkwrap, and so on.
there's always a chance the permissions could have been frobbed, so fix
there's no directive negation, so always set to true
there's no explicit js callback
there's no input, just exit here
there's no readme data in this particular object
therefore we detect such cases and end the leave immediately.
these are actually numbers
these are contained in menus
these are filenames in .
these are mostly the same in regexp and glob
these are optional, and will be nulled out if not present.
these attributes expect enumrated values of "true" or "false" but are not boolean attributes
these attributes should also set their corresponding properties because they only affect the initial state of the element
these attributes should set a hidden property for binding v-model to object values
these both default to true, so you have to explicitly make them false
these contain full paths so we can't do an exact match with them
these fragments have different types and cannot be flattened
these have a getter/setter for warnings
these have served their purpose, and are now just noisy clutter
these re-assigns the values of pageX, pageY from touches
these should not throw
these things aren't particularly big, but walking down the string and turning it into a regexp can get pretty costly.
these throw because there's no __get__ and __set__ function defined
these two cases enter the inGlobStar state
these two functions are needed by React Devtools
they are kept in development mode because they are useful for Vue's own tests.
they can't be piped around properly, so there's really no sense even acknowledging them.
they should still be ordered properly in the resulting config object set.
they're a bit rare to find in the wild
thing when the cwd is where package.json is, and when the package.json is one level up.
things defined as both dev dependencies and regular dependencies are treated as the former
third node is not deleted
this *is* the module, but it doesn't match the version, so a new copy will have to be installed
this allows for module-specific configure flags like:
this also tearsdown all directive-owned watchers.
this call should always throw
this can be used to pause execution asynchronously.
this candidate was not found or not readable, do nothing
this case reports `no-redeclare`, not shadowing.
this catch is used to skip all those internal calls
this causes some errors to get logged, but I don't think it's a big deal and I don't know how to mock a module
this checks what's there already, and then calls self._create() to call the impl-specific creation stuff.
this data should never trigger a render pass, so don't put in state
this exclusion is at the point where we know the list of entries in the dir, but don't know what they are.
this file is used by lib/cache.js
this function is an express/connect middleware that accepts uploads in application/json5 format
this function is used to determine wether a squarebracket or a curlybracket expression is a comprehension array, destructuring assignment or a json value.
this function monkey-patches JSON.parse, so it will return an exact position of error in case of parse failure
this function registers json5 extension, so you can do `require("./config.json5")` kind of thing
this gets filled from getAllCookies:
this hackery is required for IE8/9, where the `console.log` function doesn't have 'apply'
this happens for overswiping when there is no scene at toIndex
this has a getter/setter for warnings
this is a 2d rotation on the z-axis
this is a generator function in the python lib, which of course is not supported in javascript the reimplementation builds up the grouped opcodes into a list in their entirety and returns that.
this is a long non-removed inline comment
this is accessed by the eval'd backend code
this is an example of using npm.commands.search programmatically to fetch data that has been filtered by a set of arguments.
this is because it might return a prompt() call in the cb.
this is called by the enter hook
this is globally unique because there could be only one watcher being evaluated at any time.
this is how to use npm programmatically:
this is just to encourage consistency
this is necessary because if we set it on props, even when empty, it'll trigger the default pull-to-refresh behavior on native.
this is necessary in cases e.g. the child mutates a prop array, then replaces it.
this is necessary so that the fragment can keep track of its contained components in order to call attach/detach hooks for them.
this is not an octal literal
this is not directive
this is ok if we're doing the match as part of a glob fs traversal.
this is only acceptable if we're on the very last empty segment of a file with a trailing slash.
this is removed during compilation, but because compilation is cached, when the component is used elsewhere this attribute will remain at link time.
this is success if it's a negative pattern, failure otherwise.
this is the frag that we should be after
this is to avoid replacing the top of the stack
this is to test that compnents that are not in the if block should not fire attach/detach when v-if toggles
this is used as the "main" field in package.json and used by bundlers like Webpack and Browserify.
this is used for linking props and container directives.
this is usually called on the first write(), end() or on nextTick()
this is where server starts booting up
this leads to a conflict during installation and the fix is covered by this test
this log is meanto to be overridden
this logic ported from the old `gyp_addon` python file
this looks simpler, and is strictly *faster*, but will tie up the JavaScript thread and fail on excessively deep directory trees.
this one has to use the /g flag
this one is too noisy, only assert if it'll be relevant
this one won't happen if graceful-fs is used.
this passes command line arguments down to the composed generators
this should be fairly rare.
this should be replaced with the npm conf object
this should ideally be null.
this time, going to defer something inside the ref
this was resolved during component transclusion
this will listen to traffic on port 1337 The purpose is to redirect any user who is direct to https instead of http by mistake.
this will stat the thing, and then call self._read() to start reading whatever it is.
this would read 1055790163 from cache if not aborted
this writer will only write directories
this._fetch() that calls: 2.
this._handleProcessExit() will emit this.
this._id value is injected at construction time.
this._lastSuggestionAtMouse will only be set if hyperclick returned a promise that resolved to a non-null value.
this._onFetchError() or this._onFetchSuccess() that calls: 3.
this._parseDependencies() that calls for all dependencies: 4.
this._totalSizeDIP is available below since we successfully applied constraints.
this.props is actually a ReactElement
this.props.onScrollResponderKeyboardDismissed  Standard Keyboard Hide Sequence:  this.props.onKeyboardWillHide this.props.onKeyboardDidHide
those are the same as `no-undef`.
those are valid if we don't define the constructor.
those classes cannot call `super()`.
throw in some pathological pause()/resume() behavior just for extra fun.
throw on invalid json
throw out any that are not relevant for whatever reason
throw some gets in there, too.
time of last touchstart (to detect double-tap)
timerIndex of -1 means that no timer with that ID exists.
timestampSkewSec:      optional number of seconds of permitted clock skew for incoming timestamps.
timezone of signed-in account to show all date related components using signed-in account's timezone not of the profile she is viewing
to an AST representing an object literal:
to be overridden in specific implementation classes.
to be, or not to be, that is the question.
to do something with all expressions.
to include directly in the repo for various reasons.
to make sure blur and focus event listeners are only attached once
to support a trailing comma.
to validate the data object at the end as a worthwhile package and assign default values for things.
todo: complete with valid values, if possible.
todo: fix readability
todo: update with test-package-with-one-dep once the new npm-registry-mock is published
toggle if and switch view at the same time
toggle if when already instantiated
toggle if with lazy instantiation
toggle individual class names
tokExprAllowed stays unchanged
tokenizer releases input.
tokenizer takes over input.
tokenizer when in html mode
tokenizer when in scripting mode
total character offset
touches can be empty on touchend
transition has started
transition related state
transition was cleared
transition was interrupted
transition0 has started
transition0 was interrupted
transition1 was not interrupted
translate when we started zooming (to avoid drift)
translation is simple
treat the test path as a set of pathparts.
tricky escapes to get stderr redirection to work
trigger the load event if nothing was already going to do so.
trigger transition by removing enter class now
trim restricted module names
truncate once it's been written.
truncated text storage
try a cache hit first
try again, with the same exact callback as this one.
try git:, then git+ssh:, then git+https: before failing
try mounting on something already in dom
try to engage the lock.
try to find the npm command.
try to find the right one.
try to get another lock.
try to get the platform from the url
try to guess at a good node_modules location.
try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS) if we guessed wrong, and it's not a directory, then raise the original error.
try to strip useless frames
try with the leading / trimmed off the test eg: foo/bar instead of /foo/bar
try/catch here because in case of any error, Atom stops dispatching events to the rest of the listeners, which can stop the remote editing from being functional.
trying to confuse eslint
trying to confuse eslint-directive-detection
tst.inherit.js: test that inheriting from VError and WError work as expected.
tst.verror.js: tests basic functionality of the VError class.
tst.werror.js: tests basic functionality of the WError class.
turn array into stream of object
turn block group stream into an array
turn off all instance listeners.
turn off finishing flag
turn the objects into somewhat more humane strings.
turns out nearly every character is allowed in fs paths
two code units per symbol
two-way sync for v-for alias
type can be an array or single thing.
typeof regex is object
types typically used in legacy docblock
uid as a cache identifier
undefined means unknown.
underscore is already in the package.json, but --save will trigger a rewrite with sort
undo uncommenting javadoc setting
unicode char or a unicode sequence
unicode/character escape sequence
unless the prefix was simply a non existent directory.
unless we give it those.
unlink it, then do the dir stuff on EPERM or EISDIR 2.
unlocking an already-unlocked lock is a noop
unmountComponent() state is available within `componentWillUnmount()`
unproxy keys not present in new data
unproxy old key that's no longer present
unregister ref (remove: true)
unset jQuery to bypass jQuery check for normal test cases
unset value from styles.circle
unspy is a ported utility from Atom's `spec-helper.coffee` that restores the jasmine spied function on an object to its original value.
unstack loop blockscope
unsupported prop cast possible numbers/booleans into strings
untar cache/n/v/package.tgz into cache/n/v/package 5.
untar into tmp/random/contents/package, stripping one dir piece 3.
unwrap argument into individual BufferLists
update config takes affect global to all existing and future loggers.
update dmin and replace ones that previous pointed to c2 to point to c1
update final size based on the range options
update first and last call values to be numbers
update ref for kept-alive component
update subscriptions whenever results change
update the buffer info.
update the last read from original cache
update to use the fixed output instead of the original text
update v-model if present
updateClock defaults to true
updateComponent will update this property on subsequent renders
updateCookie() may avoid updating cookies that are identical.
updateDisplay_W2 will use these properties to do the actual resizing
updated locally, not on repo
updated locally, scoped, not on repo
updated locally, updated and greater version on repo
updated locally, updated but lesser version on repo
updating the opts array should force the v-model to update
updating this._data and check for errors
uri is either a file: uri, or a nuclide: uri.
urlmon.lib ole32.lib oleaut32.lib uuid.lib gdi32.lib winspool.lib comdlg32.lib
usage: Like asyncMap, but only can take a single cb, and guarantees the order of the results.
use ForeverAgent in node 0.10- only
use `clone()` if call values do not change
use `node.call(force.drag)` to make nodes draggable
use a warning instead of an invariant so components don't show up in prod but not in __DEV__
use a warning instead of an invariant so components don't show up in prod but only in __DEV__
use am to combine the multiply-shift-add into one call
use an unsafe downcast to alias to nullable elements, so we can delete and then compact.
use bright blue on Windows as the normal blue color is illegible
use custom content-type above all
use fn.toString() if you want to see the generated source
use native Set when available.
use object event to indicate non-source emit on children
use object event to indicate non-source emit on parents
use step hook for back compat - use cssHook if its there - use .style if its available and use plain properties where available
use symbols if possible, otherwise just _props
use that for the dev files
use the active box-sizing model to add/subtract irrelevant styles
use the cache and update in the background if it's not too old
use the class method CookieJar.deserialize instead of calling this directly
use the default subcommand
use the initial installation method (repo, tar, git) for updating
use with shrinkwrap install)
used as "import typeof"
used for animated nodes
used for started animations
used in the loop detection
used to break creation ties in cookieCompare():
used to disable editing during key handlers when in readOnly mode
used to hit the server
used to override scope matching for tokens as well as legacy auth
used w/ getLengthSync(), when length is known.
used when updating preview without running tests
useful for skipping data from some files quickly.
user called done synchronously.
user set 'fromBase: true' indicating tar root should be directory itself
user watchers triggered more internal watchers
username should be unique
username should not be in blacklist
username to authenticate as
using This-Bind operator
using es6 argument destructing
using the cache locally to speed up linting process
usually these are package objects.
utility methods for all parts of the schema
uuid-js - string form
uuid-js - v1 string form
v-if, component, v-text
v-model with inital inline value need to sync back to model instead of update to DOM on init.
v3 onward, has process.release
v8 has an optimization for storing 31-bit signed numbers.
v8 likes predictible objects
v8 provided a way to customize Error stacktrace generation by overwriting Error.prepareStackTrace (https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi).
validate a value against a property definition
validate a value against a type definition
validate an object against a schema
validate response data
validate that the url we just downloaded matches the expected shasum.
validate the configuration before continuing
value           The number to check for validity  max             The maximum value
value has changed, update it.
value in ms to print out screen contents, set this value in CI to debug if tests are failing
value overwrite via v-bind:value
values determined by configure.js
values for the mode field
values inside elements
values separated by an element
values with same variable name inside strings
van Wijk Modified to support a target aspect ratio by Jeff Heer
variables return their values
verify permissions on git hooks
verify that files changed, we just do a git diff and check how many times version is added across files
verify that the optimistic update takes precedence over the server update
verify that they're not null-padded
verify that this is a Git URL before continuing
verify that y.toArray() returns an array and if we create a new Yallist from that array, we get a list matching
verify the object being added to is a native prototype
verror.js: richer JavaScript errors
version from package.json
versions where -headers.tar.gz started shipping
versions.html is located in root of website and updated with every release
very conservative rule (eg: only one space between the start of the comment and the first character) to relax the maxlen option
very restrictive condition for now
video challenge submit
video checklist binding
view to show if there's an error
viewer has a client id and must be refetched by the original root call
viewport may contain top, height, and ensure (see op.scrollToPos) properties.
visibility of first point
visibility of previous point
visit closest cell first
wait a bit to allow packager to startup
wait a sec for those writes to go out.
wait before hitting enter so v-model unlocks
wait for all the timeout checks to finish, then end the test
wait for either done or js callback, then call afterEnter hook.
wait for either done or js callback, then call afterLeave hook.
wait for sidecar to load
wait for the rename event to emit.
wait for the watchman to settle on the created directory and file.
wait till response come back
wait until transition.justEntered flag is off
walk through each, seeing how much it has in common with the next and previous
walked up too high or something.
warn about invalid bits.
warn about invalid configs at every level.
warn against mixing mustaches with v-bind
warn against setting unexisting
warn container directives for fragment instances
warn if variables are unused.
warn missing required
warn required two-way
warnings about the ignored files
was already empty anyway
watch changes to name for dynamic partials
watch todos change for localStorage persistence
watchman fails, and then 2.
we already have the package info, so just move into place
we already showed the warning
we also allow literal strings and concatenated literal strings
we also unshift the bundled node-gyp-bin folder so that the bundled one will be used for installing things.
we always consider deps provided by a shrinkwrap as "correct" or else we'll subvert them if they're intentionally "invalid"
we are in termination case (3) or (2) and return the appropriate thing.
we are mutating the options object here assuming the same object will be used for compile right after this.
we are seeing a request in a state that should not generate that request.
we assume here that runWith is called in every spec -- otherwise these will not be spies
we check whether current variable has been declared
we didn't reach the full extent of the pattern
we don't care about invariant's own frame
we don't care if the file didn't exist, since our intention was to remove the file
we don't replace empty ranges
we don't want empty directories to show up in package tarballs.
we don't want to define LIB, as that will override the default library path that is set in that env var
we expect this to throw with a more informative message
we filter entries before we know what they are.
we fire _end internally *after* end, so that we don't move on until any "end" listeners have had their chance to do stuff.
we first need to remove the manifest from require cache
we flip bottommost points across y axis so we can use the upper hull routine on both
we fork here depending on the platform: while android is pretty good at loading individual assets, ios has a large overhead when reading hundreds pf assets from disk
we got cached data, so let's see if we have a tarball.
we had some state-tracking character that wasn't consumed by this pass.
we have char in the buffer, so count for it
we have enough to cover it, but it spans past the first buffer.
we have implemented the _read method, and done the other things that Readable wants before the first _read call, so unset the sync guard flag.
we have to clone because merge uses the first argument for recipient
we have to create another flow service here since we've mocked modules we depend on since the outer beforeEach ran.
we have to do this here, because couchdb will only ever say "bad password" with a 401 when you try to PUT a _users record that the validate_doc_update rejects for *any* reason.
we ignore all inline comments
we ignore errors here, because they can legitimately happen, for instance, bundled modules will be in both node_modules folders
we iterate over comments in parallel with the lines
we just do this repeatedly until there are no more orphaned packages which isn't as effecient as it could be on a REALLY big tree but we'll face that if it proves to be an issue
we just want the base registry URL in this case
we make sure to override the last value in the subject to false here.
we matched the implicit, or default arg
we matched the non-default arg
we may have a component switch when a previous component is still being transitioned out.
we may still need to set the mode/etc.
we must ensure that previous needDrain will not be reset to false.
we need the check for style in case a browser which returns unreliable values for getComputedStyle silently falls back to the reliable elem.style
we orphan last pledge since a user only has one pledge at a time
we replace children with a new array object instead of mutating it because mutating it results in weird failure states.
we require this at runtime due to load-order issues, because recursive requires fail if you replace the exports object, and we do, not in deps, but in a dep of it.
we should find the directory based on the directory the script is running in and it should match the layout in a build tree where npm is installed in ....
we should find the directory based on the directory the script is running in and it should match the layout in an installed tree where npm is installed in ....
we should find the directory based on the execPath for node and match because it was in the Debug directory
we should find the directory based on the execPath for node and match because it was in the Release directory
we should find the directory based on the execPath for node and match because it was in the bin directory
we should not find it as it will not match based on the execPath nor the directory from which the script is running
we should recurse and do more matches
we slice to make sure that the points we 'popped' from hull don't stay behind
we try to at least catch the key combo
we wait to actually hide in order to avoid flicker
we want asyncExecute to throw the first time, to mimic Flow not runinng.
we want msvcrt in the PHP DLL
we want the ONE thing that was installed into the global dir
we want to guarantee directive updates to be called before user watchers so that when user watchers are triggered, the DOM would have already been in updated state.
we want to skip warning if this is a child of another module that we're removing
we want to trigger only one lastest insertion cb when the existing transition finishes.
we were waiting for this.
we're actually testing for the dependency re-calculation here
we're done for the initial render.
we're done with this property
we're just mocking to avoid having to call `npm.load`
we're using a stored agent.
we've already covered this key in the previous pass
we've found a comment, so let's exit and ignore this line
webpack attempts to inject a shim for setImmediate if it is used as a global, so we have to work around that to avoid bundling unnecessary code.
well-known name that JSON.stringify calls
whatever it starts with, whether that's 'absolute' like /foo/bar, or 'relative' like '../baz'
when 'enabled' is false then all the functions are no-ops except for write()
when 'finish' is emitted
when --no-* we make sure default is true
when children is empty, logs won't be passed in at all (asyncMap is weird) so shortcircuit before arg validation
when end specified no need to calculate range inclusive, starts with 0
when end() has been called, and returned
when it's passed assign the value and conditionally invoke the callback
when piping, we only care about 'readable' events that happen after read()ing all the bytes and not getting any pushback.
when running scripts explicitly, assume that they're trusted.
when setting this immediately, Atom will unset the focus...
when symbolink is relative path
when the dest drains, it reduces the awaitDrain counter on the source.
when the search field is manually selected
when the username was not changed, empty response means "use the old value"
when the writable side finishes, then flush out anything remaining.
when true all writes will be buffered until .uncork() call
when used in node, this will actually load the util module we depend on versus loading the builtin util module as happens otherwise this is a bug in node module loading as far as I am concerned
when we try to consume some more bytes, simply unpause the underlying stream.
whenever we return null, then we set a flag to say that we're awaiting a 'readable' event emission.
where the bundle is being run from
whether bin file is a js script with explicit `.js` extension
whether to clamp the x-extent to the range
whether to clamp the y-extent to the range
while for Promises we track the length of time it takes to resolve or reject.
while this implementation does not require async calling, doing so gives this a consistent interface with loadDeps et al
wildcards in the pattern will not match a / in the pathname.
will be unpaused when config is loaded.
will supply our db object
window.setTimeout/setInterval
windows calls it's path 'Path' usually, but this is not guaranteed.
windows does not use lifecycle signals, abort
windows fix for locked files
windows: running 'npm blah' in this folder will invoke WSH, not node.
windowsVirtualKeyCode
with a pathExt of '', any filename is fine.
with a single exception that CoverInitializedName when used directly in an Expression, generates an early error.
with addEdgesAfterCursor
with offsets, note offsets are 0 bound (as expected)
with really long trailing comment",
with the leading "*" and the trailing space.
within the file, not at the end
work out where to put the reset
workaround for the problem with front-end's setVariableValue implementation not preserving null type
workingDirectory A Directory (or RemoteDirectory) object that represents the repository's working directory.
workingDirectoryLocalPath The local path to the workingDirectory of the repository (i.e. if it's a remote directory, the URI minus the hostname).
wrap all declared CAN_BE_SYNC methods in the sync wrapper
wrap an old-style stream as the async data source.
wrap in a div to fully contain CodeMirror
wrapped updater for context
wrapper in case we're in module_context mode windows: running "npm blah" in this folder will invoke WSH, not node.
write a range with first(1) edge
write an additional node and verify only the new edge and node are tracked
write an optimistic update with the same values as the store
write decodes the given buffer and returns it as JS string that is guaranteed to not contain any partial multi-byte characters.
write some more stuff.
write some stuff to start with
write something else to the target.
write starting values for a query
write the "installVersion" file
write the results for only the current field, for every instance of that field in any subfield/fragment in the query.
write the string, and null-pad
write to queued store
write to the base store
write to the queued store
writes should call the set function
x and y are undefined
x is empty, y is empty
x is empty, y is non-empty
x is empty, y is undefined
x is non-empty, y is empty
x is non-empty, y is non-empty
x is non-empty, y is undefined
x is shorthand but its value is an assignment expression.
x is undefined, y is empty
x is undefined, y is non-empty
x-extent in data space
x-platform log/assert shims
xdebugAttachPort is the port to listen for dbgp connections on.
xml2js has a rather ...
y-distance gauss-seidel relaxation for links
y-extent in data space
yeoman-generator/node_modules/ download/node_modules/ caw/node_modules/ get-proxy/node_modules/ rc/index.js
yes, twice on purpose
you can keep writing these things forever.
you can override either this method, or the async _read(n) below.
you can put blocks of nulls between entries anywhere, so appending one tarball to another is technically valid.
zero and null are equivalent
zero length strings have no dbgpProperty._ property
zero-width non-breaking space These characters contribute nothing to indentation.
